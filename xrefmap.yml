### YamlMime:XRefMap
sorted: true
references:
- uid: APIPatcher
  name: APIPatcher
  href: api/APIPatcher.html
  commentId: N:APIPatcher
  fullName: APIPatcher
  nameWithType: APIPatcher
- uid: APIPatcher.InscryptionAPIPatcher
  name: InscryptionAPIPatcher
  href: api/APIPatcher.InscryptionAPIPatcher.html
  commentId: T:APIPatcher.InscryptionAPIPatcher
  fullName: APIPatcher.InscryptionAPIPatcher
  nameWithType: InscryptionAPIPatcher
- uid: APIPatcher.InscryptionAPIPatcher.Patch(Mono.Cecil.AssemblyDefinition)
  name: Patch(AssemblyDefinition)
  href: api/APIPatcher.InscryptionAPIPatcher.html#APIPatcher_InscryptionAPIPatcher_Patch_Mono_Cecil_AssemblyDefinition_
  commentId: M:APIPatcher.InscryptionAPIPatcher.Patch(Mono.Cecil.AssemblyDefinition)
  fullName: APIPatcher.InscryptionAPIPatcher.Patch(Mono.Cecil.AssemblyDefinition)
  nameWithType: InscryptionAPIPatcher.Patch(AssemblyDefinition)
- uid: APIPatcher.InscryptionAPIPatcher.Patch*
  name: Patch
  href: api/APIPatcher.InscryptionAPIPatcher.html#APIPatcher_InscryptionAPIPatcher_Patch_
  commentId: Overload:APIPatcher.InscryptionAPIPatcher.Patch
  isSpec: "True"
  fullName: APIPatcher.InscryptionAPIPatcher.Patch
  nameWithType: InscryptionAPIPatcher.Patch
- uid: APIPatcher.InscryptionAPIPatcher.TargetDLLs
  name: TargetDLLs
  href: api/APIPatcher.InscryptionAPIPatcher.html#APIPatcher_InscryptionAPIPatcher_TargetDLLs
  commentId: P:APIPatcher.InscryptionAPIPatcher.TargetDLLs
  fullName: APIPatcher.InscryptionAPIPatcher.TargetDLLs
  nameWithType: InscryptionAPIPatcher.TargetDLLs
- uid: APIPatcher.InscryptionAPIPatcher.TargetDLLs*
  name: TargetDLLs
  href: api/APIPatcher.InscryptionAPIPatcher.html#APIPatcher_InscryptionAPIPatcher_TargetDLLs_
  commentId: Overload:APIPatcher.InscryptionAPIPatcher.TargetDLLs
  isSpec: "True"
  fullName: APIPatcher.InscryptionAPIPatcher.TargetDLLs
  nameWithType: InscryptionAPIPatcher.TargetDLLs
- uid: APIPlugin
  name: APIPlugin
  href: api/APIPlugin.html
  commentId: N:APIPlugin
  fullName: APIPlugin
  nameWithType: APIPlugin
- uid: APIPlugin.AbilityIdentifier
  name: AbilityIdentifier
  href: api/APIPlugin.AbilityIdentifier.html
  commentId: T:APIPlugin.AbilityIdentifier
  fullName: APIPlugin.AbilityIdentifier
  nameWithType: AbilityIdentifier
- uid: APIPlugin.AbilityIdentifier.GetAbilityIdentifier(System.String,System.String)
  name: GetAbilityIdentifier(String, String)
  href: api/APIPlugin.AbilityIdentifier.html#APIPlugin_AbilityIdentifier_GetAbilityIdentifier_System_String_System_String_
  commentId: M:APIPlugin.AbilityIdentifier.GetAbilityIdentifier(System.String,System.String)
  fullName: APIPlugin.AbilityIdentifier.GetAbilityIdentifier(System.String, System.String)
  nameWithType: AbilityIdentifier.GetAbilityIdentifier(String, String)
- uid: APIPlugin.AbilityIdentifier.GetAbilityIdentifier*
  name: GetAbilityIdentifier
  href: api/APIPlugin.AbilityIdentifier.html#APIPlugin_AbilityIdentifier_GetAbilityIdentifier_
  commentId: Overload:APIPlugin.AbilityIdentifier.GetAbilityIdentifier
  isSpec: "True"
  fullName: APIPlugin.AbilityIdentifier.GetAbilityIdentifier
  nameWithType: AbilityIdentifier.GetAbilityIdentifier
- uid: APIPlugin.AbilityIdentifier.GetID(System.String,System.String)
  name: GetID(String, String)
  href: api/APIPlugin.AbilityIdentifier.html#APIPlugin_AbilityIdentifier_GetID_System_String_System_String_
  commentId: M:APIPlugin.AbilityIdentifier.GetID(System.String,System.String)
  fullName: APIPlugin.AbilityIdentifier.GetID(System.String, System.String)
  nameWithType: AbilityIdentifier.GetID(String, String)
- uid: APIPlugin.AbilityIdentifier.GetID*
  name: GetID
  href: api/APIPlugin.AbilityIdentifier.html#APIPlugin_AbilityIdentifier_GetID_
  commentId: Overload:APIPlugin.AbilityIdentifier.GetID
  isSpec: "True"
  fullName: APIPlugin.AbilityIdentifier.GetID
  nameWithType: AbilityIdentifier.GetID
- uid: APIPlugin.AbilityIdentifier.id
  name: id
  href: api/APIPlugin.AbilityIdentifier.html#APIPlugin_AbilityIdentifier_id
  commentId: F:APIPlugin.AbilityIdentifier.id
  fullName: APIPlugin.AbilityIdentifier.id
  nameWithType: AbilityIdentifier.id
- uid: APIPlugin.AbilityIdentifier.ToString
  name: ToString()
  href: api/APIPlugin.AbilityIdentifier.html#APIPlugin_AbilityIdentifier_ToString
  commentId: M:APIPlugin.AbilityIdentifier.ToString
  fullName: APIPlugin.AbilityIdentifier.ToString()
  nameWithType: AbilityIdentifier.ToString()
- uid: APIPlugin.AbilityIdentifier.ToString*
  name: ToString
  href: api/APIPlugin.AbilityIdentifier.html#APIPlugin_AbilityIdentifier_ToString_
  commentId: Overload:APIPlugin.AbilityIdentifier.ToString
  isSpec: "True"
  fullName: APIPlugin.AbilityIdentifier.ToString
  nameWithType: AbilityIdentifier.ToString
- uid: APIPlugin.AbilityInfoUtils
  name: AbilityInfoUtils
  href: api/APIPlugin.AbilityInfoUtils.html
  commentId: T:APIPlugin.AbilityInfoUtils
  fullName: APIPlugin.AbilityInfoUtils
  nameWithType: AbilityInfoUtils
- uid: APIPlugin.AbilityInfoUtils.CreateInfoWithDefaultSettings(System.String,System.String)
  name: CreateInfoWithDefaultSettings(String, String)
  href: api/APIPlugin.AbilityInfoUtils.html#APIPlugin_AbilityInfoUtils_CreateInfoWithDefaultSettings_System_String_System_String_
  commentId: M:APIPlugin.AbilityInfoUtils.CreateInfoWithDefaultSettings(System.String,System.String)
  fullName: APIPlugin.AbilityInfoUtils.CreateInfoWithDefaultSettings(System.String, System.String)
  nameWithType: AbilityInfoUtils.CreateInfoWithDefaultSettings(String, String)
- uid: APIPlugin.AbilityInfoUtils.CreateInfoWithDefaultSettings*
  name: CreateInfoWithDefaultSettings
  href: api/APIPlugin.AbilityInfoUtils.html#APIPlugin_AbilityInfoUtils_CreateInfoWithDefaultSettings_
  commentId: Overload:APIPlugin.AbilityInfoUtils.CreateInfoWithDefaultSettings
  isSpec: "True"
  fullName: APIPlugin.AbilityInfoUtils.CreateInfoWithDefaultSettings
  nameWithType: AbilityInfoUtils.CreateInfoWithDefaultSettings
- uid: APIPlugin.CardUtils
  name: CardUtils
  href: api/APIPlugin.CardUtils.html
  commentId: T:APIPlugin.CardUtils
  fullName: APIPlugin.CardUtils
  nameWithType: CardUtils
- uid: APIPlugin.CardUtils.DefaultCardArtRect
  name: DefaultCardArtRect
  href: api/APIPlugin.CardUtils.html#APIPlugin_CardUtils_DefaultCardArtRect
  commentId: F:APIPlugin.CardUtils.DefaultCardArtRect
  fullName: APIPlugin.CardUtils.DefaultCardArtRect
  nameWithType: CardUtils.DefaultCardArtRect
- uid: APIPlugin.CardUtils.DefaultCardPixelArtRect
  name: DefaultCardPixelArtRect
  href: api/APIPlugin.CardUtils.html#APIPlugin_CardUtils_DefaultCardPixelArtRect
  commentId: F:APIPlugin.CardUtils.DefaultCardPixelArtRect
  fullName: APIPlugin.CardUtils.DefaultCardPixelArtRect
  nameWithType: CardUtils.DefaultCardPixelArtRect
- uid: APIPlugin.CardUtils.DefaultVector2
  name: DefaultVector2
  href: api/APIPlugin.CardUtils.html#APIPlugin_CardUtils_DefaultVector2
  commentId: F:APIPlugin.CardUtils.DefaultVector2
  fullName: APIPlugin.CardUtils.DefaultVector2
  nameWithType: CardUtils.DefaultVector2
- uid: APIPlugin.CardUtils.getAllActsCardMetadata
  name: getAllActsCardMetadata
  href: api/APIPlugin.CardUtils.html#APIPlugin_CardUtils_getAllActsCardMetadata
  commentId: F:APIPlugin.CardUtils.getAllActsCardMetadata
  fullName: APIPlugin.CardUtils.getAllActsCardMetadata
  nameWithType: CardUtils.getAllActsCardMetadata
- uid: APIPlugin.CardUtils.getAndloadImageAsTexture(System.String)
  name: getAndloadImageAsTexture(String)
  href: api/APIPlugin.CardUtils.html#APIPlugin_CardUtils_getAndloadImageAsTexture_System_String_
  commentId: M:APIPlugin.CardUtils.getAndloadImageAsTexture(System.String)
  fullName: APIPlugin.CardUtils.getAndloadImageAsTexture(System.String)
  nameWithType: CardUtils.getAndloadImageAsTexture(String)
- uid: APIPlugin.CardUtils.getAndloadImageAsTexture*
  name: getAndloadImageAsTexture
  href: api/APIPlugin.CardUtils.html#APIPlugin_CardUtils_getAndloadImageAsTexture_
  commentId: Overload:APIPlugin.CardUtils.getAndloadImageAsTexture
  isSpec: "True"
  fullName: APIPlugin.CardUtils.getAndloadImageAsTexture
  nameWithType: CardUtils.getAndloadImageAsTexture
- uid: APIPlugin.CardUtils.getAnimatedAppearance
  name: getAnimatedAppearance
  href: api/APIPlugin.CardUtils.html#APIPlugin_CardUtils_getAnimatedAppearance
  commentId: F:APIPlugin.CardUtils.getAnimatedAppearance
  fullName: APIPlugin.CardUtils.getAnimatedAppearance
  nameWithType: CardUtils.getAnimatedAppearance
- uid: APIPlugin.CardUtils.getBloodDecalAppearance
  name: getBloodDecalAppearance
  href: api/APIPlugin.CardUtils.html#APIPlugin_CardUtils_getBloodDecalAppearance
  commentId: F:APIPlugin.CardUtils.getBloodDecalAppearance
  fullName: APIPlugin.CardUtils.getBloodDecalAppearance
  nameWithType: CardUtils.getBloodDecalAppearance
- uid: APIPlugin.CardUtils.getDynamicAppearance
  name: getDynamicAppearance
  href: api/APIPlugin.CardUtils.html#APIPlugin_CardUtils_getDynamicAppearance
  commentId: F:APIPlugin.CardUtils.getDynamicAppearance
  fullName: APIPlugin.CardUtils.getDynamicAppearance
  nameWithType: CardUtils.getDynamicAppearance
- uid: APIPlugin.CardUtils.getGBCCardMetadata
  name: getGBCCardMetadata
  href: api/APIPlugin.CardUtils.html#APIPlugin_CardUtils_getGBCCardMetadata
  commentId: F:APIPlugin.CardUtils.getGBCCardMetadata
  fullName: APIPlugin.CardUtils.getGBCCardMetadata
  nameWithType: CardUtils.getGBCCardMetadata
- uid: APIPlugin.CardUtils.getGBCRareCardMetadata
  name: getGBCRareCardMetadata
  href: api/APIPlugin.CardUtils.html#APIPlugin_CardUtils_getGBCRareCardMetadata
  commentId: F:APIPlugin.CardUtils.getGBCRareCardMetadata
  fullName: APIPlugin.CardUtils.getGBCRareCardMetadata
  nameWithType: CardUtils.getGBCRareCardMetadata
- uid: APIPlugin.CardUtils.getGoldAppearance
  name: getGoldAppearance
  href: api/APIPlugin.CardUtils.html#APIPlugin_CardUtils_getGoldAppearance
  commentId: F:APIPlugin.CardUtils.getGoldAppearance
  fullName: APIPlugin.CardUtils.getGoldAppearance
  nameWithType: CardUtils.getGoldAppearance
- uid: APIPlugin.CardUtils.getHologramAppearance
  name: getHologramAppearance
  href: api/APIPlugin.CardUtils.html#APIPlugin_CardUtils_getHologramAppearance
  commentId: F:APIPlugin.CardUtils.getHologramAppearance
  fullName: APIPlugin.CardUtils.getHologramAppearance
  nameWithType: CardUtils.getHologramAppearance
- uid: APIPlugin.CardUtils.getNormalCardMetadata
  name: getNormalCardMetadata
  href: api/APIPlugin.CardUtils.html#APIPlugin_CardUtils_getNormalCardMetadata
  commentId: F:APIPlugin.CardUtils.getNormalCardMetadata
  fullName: APIPlugin.CardUtils.getNormalCardMetadata
  nameWithType: CardUtils.getNormalCardMetadata
- uid: APIPlugin.CardUtils.getRareAppearance
  name: getRareAppearance
  href: api/APIPlugin.CardUtils.html#APIPlugin_CardUtils_getRareAppearance
  commentId: F:APIPlugin.CardUtils.getRareAppearance
  fullName: APIPlugin.CardUtils.getRareAppearance
  nameWithType: CardUtils.getRareAppearance
- uid: APIPlugin.CardUtils.getRareCardMetadata
  name: getRareCardMetadata
  href: api/APIPlugin.CardUtils.html#APIPlugin_CardUtils_getRareCardMetadata
  commentId: F:APIPlugin.CardUtils.getRareCardMetadata
  fullName: APIPlugin.CardUtils.getRareCardMetadata
  nameWithType: CardUtils.getRareCardMetadata
- uid: APIPlugin.CardUtils.getTerrainAppearance
  name: getTerrainAppearance
  href: api/APIPlugin.CardUtils.html#APIPlugin_CardUtils_getTerrainAppearance
  commentId: F:APIPlugin.CardUtils.getTerrainAppearance
  fullName: APIPlugin.CardUtils.getTerrainAppearance
  nameWithType: CardUtils.getTerrainAppearance
- uid: APIPlugin.CardUtils.getTerrainBackgroundAppearance
  name: getTerrainBackgroundAppearance
  href: api/APIPlugin.CardUtils.html#APIPlugin_CardUtils_getTerrainBackgroundAppearance
  commentId: F:APIPlugin.CardUtils.getTerrainBackgroundAppearance
  fullName: APIPlugin.CardUtils.getTerrainBackgroundAppearance
  nameWithType: CardUtils.getTerrainBackgroundAppearance
- uid: APIPlugin.CardUtils.getTerrainLayoutAppearance
  name: getTerrainLayoutAppearance
  href: api/APIPlugin.CardUtils.html#APIPlugin_CardUtils_getTerrainLayoutAppearance
  commentId: F:APIPlugin.CardUtils.getTerrainLayoutAppearance
  fullName: APIPlugin.CardUtils.getTerrainLayoutAppearance
  nameWithType: CardUtils.getTerrainLayoutAppearance
- uid: APIPlugin.CardUtils.IsNonLivingCard
  name: IsNonLivingCard
  href: api/APIPlugin.CardUtils.html#APIPlugin_CardUtils_IsNonLivingCard
  commentId: F:APIPlugin.CardUtils.IsNonLivingCard
  fullName: APIPlugin.CardUtils.IsNonLivingCard
  nameWithType: CardUtils.IsNonLivingCard
- uid: APIPlugin.CardUtils.ReadArtworkFileAsBytes(System.String)
  name: ReadArtworkFileAsBytes(String)
  href: api/APIPlugin.CardUtils.html#APIPlugin_CardUtils_ReadArtworkFileAsBytes_System_String_
  commentId: M:APIPlugin.CardUtils.ReadArtworkFileAsBytes(System.String)
  fullName: APIPlugin.CardUtils.ReadArtworkFileAsBytes(System.String)
  nameWithType: CardUtils.ReadArtworkFileAsBytes(String)
- uid: APIPlugin.CardUtils.ReadArtworkFileAsBytes*
  name: ReadArtworkFileAsBytes
  href: api/APIPlugin.CardUtils.html#APIPlugin_CardUtils_ReadArtworkFileAsBytes_
  commentId: Overload:APIPlugin.CardUtils.ReadArtworkFileAsBytes
  isSpec: "True"
  fullName: APIPlugin.CardUtils.ReadArtworkFileAsBytes
  nameWithType: CardUtils.ReadArtworkFileAsBytes
- uid: APIPlugin.CustomCard
  name: CustomCard
  href: api/APIPlugin.CustomCard.html
  commentId: T:APIPlugin.CustomCard
  fullName: APIPlugin.CustomCard
  nameWithType: CustomCard
- uid: APIPlugin.CustomCard.#ctor(System.String,List{APIPlugin.AbilityIdentifier},List{APIPlugin.SpecialAbilityIdentifier},APIPlugin.EvolveIdentifier,APIPlugin.IceCubeIdentifier,APIPlugin.TailIdentifier)
  name: CustomCard(String, List<AbilityIdentifier>, List<SpecialAbilityIdentifier>, EvolveIdentifier, IceCubeIdentifier, TailIdentifier)
  href: api/APIPlugin.CustomCard.html#APIPlugin_CustomCard__ctor_System_String_List_APIPlugin_AbilityIdentifier__List_APIPlugin_SpecialAbilityIdentifier__APIPlugin_EvolveIdentifier_APIPlugin_IceCubeIdentifier_APIPlugin_TailIdentifier_
  commentId: M:APIPlugin.CustomCard.#ctor(System.String,List{APIPlugin.AbilityIdentifier},List{APIPlugin.SpecialAbilityIdentifier},APIPlugin.EvolveIdentifier,APIPlugin.IceCubeIdentifier,APIPlugin.TailIdentifier)
  name.vb: CustomCard(String, List(Of AbilityIdentifier), List(Of SpecialAbilityIdentifier), EvolveIdentifier, IceCubeIdentifier, TailIdentifier)
  fullName: APIPlugin.CustomCard.CustomCard(System.String, List<APIPlugin.AbilityIdentifier>, List<APIPlugin.SpecialAbilityIdentifier>, APIPlugin.EvolveIdentifier, APIPlugin.IceCubeIdentifier, APIPlugin.TailIdentifier)
  fullName.vb: APIPlugin.CustomCard.CustomCard(System.String, List(Of APIPlugin.AbilityIdentifier), List(Of APIPlugin.SpecialAbilityIdentifier), APIPlugin.EvolveIdentifier, APIPlugin.IceCubeIdentifier, APIPlugin.TailIdentifier)
  nameWithType: CustomCard.CustomCard(String, List<AbilityIdentifier>, List<SpecialAbilityIdentifier>, EvolveIdentifier, IceCubeIdentifier, TailIdentifier)
  nameWithType.vb: CustomCard.CustomCard(String, List(Of AbilityIdentifier), List(Of SpecialAbilityIdentifier), EvolveIdentifier, IceCubeIdentifier, TailIdentifier)
- uid: APIPlugin.CustomCard.#ctor*
  name: CustomCard
  href: api/APIPlugin.CustomCard.html#APIPlugin_CustomCard__ctor_
  commentId: Overload:APIPlugin.CustomCard.#ctor
  isSpec: "True"
  fullName: APIPlugin.CustomCard.CustomCard
  nameWithType: CustomCard.CustomCard
- uid: APIPlugin.CustomCard.abilities
  name: abilities
  href: api/APIPlugin.CustomCard.html#APIPlugin_CustomCard_abilities
  commentId: F:APIPlugin.CustomCard.abilities
  fullName: APIPlugin.CustomCard.abilities
  nameWithType: CustomCard.abilities
- uid: APIPlugin.CustomCard.abilityIds
  name: abilityIds
  href: api/APIPlugin.CustomCard.html#APIPlugin_CustomCard_abilityIds
  commentId: F:APIPlugin.CustomCard.abilityIds
  fullName: APIPlugin.CustomCard.abilityIds
  nameWithType: CustomCard.abilityIds
- uid: APIPlugin.CustomCard.AdjustCard(DiskCardGame.CardInfo,List{DiskCardGame.CardInfo})
  name: AdjustCard(CardInfo, List<CardInfo>)
  href: api/APIPlugin.CustomCard.html#APIPlugin_CustomCard_AdjustCard_DiskCardGame_CardInfo_List_DiskCardGame_CardInfo__
  commentId: M:APIPlugin.CustomCard.AdjustCard(DiskCardGame.CardInfo,List{DiskCardGame.CardInfo})
  name.vb: AdjustCard(CardInfo, List(Of CardInfo))
  fullName: APIPlugin.CustomCard.AdjustCard(DiskCardGame.CardInfo, List<DiskCardGame.CardInfo>)
  fullName.vb: APIPlugin.CustomCard.AdjustCard(DiskCardGame.CardInfo, List(Of DiskCardGame.CardInfo))
  nameWithType: CustomCard.AdjustCard(CardInfo, List<CardInfo>)
  nameWithType.vb: CustomCard.AdjustCard(CardInfo, List(Of CardInfo))
- uid: APIPlugin.CustomCard.AdjustCard*
  name: AdjustCard
  href: api/APIPlugin.CustomCard.html#APIPlugin_CustomCard_AdjustCard_
  commentId: Overload:APIPlugin.CustomCard.AdjustCard
  isSpec: "True"
  fullName: APIPlugin.CustomCard.AdjustCard
  nameWithType: CustomCard.AdjustCard
- uid: APIPlugin.CustomCard.altTex
  name: altTex
  href: api/APIPlugin.CustomCard.html#APIPlugin_CustomCard_altTex
  commentId: F:APIPlugin.CustomCard.altTex
  fullName: APIPlugin.CustomCard.altTex
  nameWithType: CustomCard.altTex
- uid: APIPlugin.CustomCard.animatedPortrait
  name: animatedPortrait
  href: api/APIPlugin.CustomCard.html#APIPlugin_CustomCard_animatedPortrait
  commentId: F:APIPlugin.CustomCard.animatedPortrait
  fullName: APIPlugin.CustomCard.animatedPortrait
  nameWithType: CustomCard.animatedPortrait
- uid: APIPlugin.CustomCard.appearanceBehaviour
  name: appearanceBehaviour
  href: api/APIPlugin.CustomCard.html#APIPlugin_CustomCard_appearanceBehaviour
  commentId: F:APIPlugin.CustomCard.appearanceBehaviour
  fullName: APIPlugin.CustomCard.appearanceBehaviour
  nameWithType: CustomCard.appearanceBehaviour
- uid: APIPlugin.CustomCard.baseAttack
  name: baseAttack
  href: api/APIPlugin.CustomCard.html#APIPlugin_CustomCard_baseAttack
  commentId: F:APIPlugin.CustomCard.baseAttack
  fullName: APIPlugin.CustomCard.baseAttack
  nameWithType: CustomCard.baseAttack
- uid: APIPlugin.CustomCard.baseHealth
  name: baseHealth
  href: api/APIPlugin.CustomCard.html#APIPlugin_CustomCard_baseHealth
  commentId: F:APIPlugin.CustomCard.baseHealth
  fullName: APIPlugin.CustomCard.baseHealth
  nameWithType: CustomCard.baseHealth
- uid: APIPlugin.CustomCard.bonesCost
  name: bonesCost
  href: api/APIPlugin.CustomCard.html#APIPlugin_CustomCard_bonesCost
  commentId: F:APIPlugin.CustomCard.bonesCost
  fullName: APIPlugin.CustomCard.bonesCost
  nameWithType: CustomCard.bonesCost
- uid: APIPlugin.CustomCard.cardComplexity
  name: cardComplexity
  href: api/APIPlugin.CustomCard.html#APIPlugin_CustomCard_cardComplexity
  commentId: F:APIPlugin.CustomCard.cardComplexity
  fullName: APIPlugin.CustomCard.cardComplexity
  nameWithType: CustomCard.cardComplexity
- uid: APIPlugin.CustomCard.cards
  name: cards
  href: api/APIPlugin.CustomCard.html#APIPlugin_CustomCard_cards
  commentId: F:APIPlugin.CustomCard.cards
  fullName: APIPlugin.CustomCard.cards
  nameWithType: CustomCard.cards
- uid: APIPlugin.CustomCard.cost
  name: cost
  href: api/APIPlugin.CustomCard.html#APIPlugin_CustomCard_cost
  commentId: F:APIPlugin.CustomCard.cost
  fullName: APIPlugin.CustomCard.cost
  nameWithType: CustomCard.cost
- uid: APIPlugin.CustomCard.decals
  name: decals
  href: api/APIPlugin.CustomCard.html#APIPlugin_CustomCard_decals
  commentId: F:APIPlugin.CustomCard.decals
  fullName: APIPlugin.CustomCard.decals
  nameWithType: CustomCard.decals
- uid: APIPlugin.CustomCard.defaultEvolutionName
  name: defaultEvolutionName
  href: api/APIPlugin.CustomCard.html#APIPlugin_CustomCard_defaultEvolutionName
  commentId: F:APIPlugin.CustomCard.defaultEvolutionName
  fullName: APIPlugin.CustomCard.defaultEvolutionName
  nameWithType: CustomCard.defaultEvolutionName
- uid: APIPlugin.CustomCard.description
  name: description
  href: api/APIPlugin.CustomCard.html#APIPlugin_CustomCard_description
  commentId: F:APIPlugin.CustomCard.description
  fullName: APIPlugin.CustomCard.description
  nameWithType: CustomCard.description
- uid: APIPlugin.CustomCard.displayedName
  name: displayedName
  href: api/APIPlugin.CustomCard.html#APIPlugin_CustomCard_displayedName
  commentId: F:APIPlugin.CustomCard.displayedName
  fullName: APIPlugin.CustomCard.displayedName
  nameWithType: CustomCard.displayedName
- uid: APIPlugin.CustomCard.emissions
  name: emissions
  href: api/APIPlugin.CustomCard.html#APIPlugin_CustomCard_emissions
  commentId: F:APIPlugin.CustomCard.emissions
  fullName: APIPlugin.CustomCard.emissions
  nameWithType: CustomCard.emissions
- uid: APIPlugin.CustomCard.emissionTex
  name: emissionTex
  href: api/APIPlugin.CustomCard.html#APIPlugin_CustomCard_emissionTex
  commentId: F:APIPlugin.CustomCard.emissionTex
  fullName: APIPlugin.CustomCard.emissionTex
  nameWithType: CustomCard.emissionTex
- uid: APIPlugin.CustomCard.energyCost
  name: energyCost
  href: api/APIPlugin.CustomCard.html#APIPlugin_CustomCard_energyCost
  commentId: F:APIPlugin.CustomCard.energyCost
  fullName: APIPlugin.CustomCard.energyCost
  nameWithType: CustomCard.energyCost
- uid: APIPlugin.CustomCard.evolveIds
  name: evolveIds
  href: api/APIPlugin.CustomCard.html#APIPlugin_CustomCard_evolveIds
  commentId: F:APIPlugin.CustomCard.evolveIds
  fullName: APIPlugin.CustomCard.evolveIds
  nameWithType: CustomCard.evolveIds
- uid: APIPlugin.CustomCard.evolveParams
  name: evolveParams
  href: api/APIPlugin.CustomCard.html#APIPlugin_CustomCard_evolveParams
  commentId: F:APIPlugin.CustomCard.evolveParams
  fullName: APIPlugin.CustomCard.evolveParams
  nameWithType: CustomCard.evolveParams
- uid: APIPlugin.CustomCard.flipPortraitForStrafe
  name: flipPortraitForStrafe
  href: api/APIPlugin.CustomCard.html#APIPlugin_CustomCard_flipPortraitForStrafe
  commentId: F:APIPlugin.CustomCard.flipPortraitForStrafe
  fullName: APIPlugin.CustomCard.flipPortraitForStrafe
  nameWithType: CustomCard.flipPortraitForStrafe
- uid: APIPlugin.CustomCard.gemsCost
  name: gemsCost
  href: api/APIPlugin.CustomCard.html#APIPlugin_CustomCard_gemsCost
  commentId: F:APIPlugin.CustomCard.gemsCost
  fullName: APIPlugin.CustomCard.gemsCost
  nameWithType: CustomCard.gemsCost
- uid: APIPlugin.CustomCard.hideAttackAndHealth
  name: hideAttackAndHealth
  href: api/APIPlugin.CustomCard.html#APIPlugin_CustomCard_hideAttackAndHealth
  commentId: F:APIPlugin.CustomCard.hideAttackAndHealth
  fullName: APIPlugin.CustomCard.hideAttackAndHealth
  nameWithType: CustomCard.hideAttackAndHealth
- uid: APIPlugin.CustomCard.iceCubeIds
  name: iceCubeIds
  href: api/APIPlugin.CustomCard.html#APIPlugin_CustomCard_iceCubeIds
  commentId: F:APIPlugin.CustomCard.iceCubeIds
  fullName: APIPlugin.CustomCard.iceCubeIds
  nameWithType: CustomCard.iceCubeIds
- uid: APIPlugin.CustomCard.iceCubeParams
  name: iceCubeParams
  href: api/APIPlugin.CustomCard.html#APIPlugin_CustomCard_iceCubeParams
  commentId: F:APIPlugin.CustomCard.iceCubeParams
  fullName: APIPlugin.CustomCard.iceCubeParams
  nameWithType: CustomCard.iceCubeParams
- uid: APIPlugin.CustomCard.metaCategories
  name: metaCategories
  href: api/APIPlugin.CustomCard.html#APIPlugin_CustomCard_metaCategories
  commentId: F:APIPlugin.CustomCard.metaCategories
  fullName: APIPlugin.CustomCard.metaCategories
  nameWithType: CustomCard.metaCategories
- uid: APIPlugin.CustomCard.name
  name: name
  href: api/APIPlugin.CustomCard.html#APIPlugin_CustomCard_name
  commentId: F:APIPlugin.CustomCard.name
  fullName: APIPlugin.CustomCard.name
  nameWithType: CustomCard.name
- uid: APIPlugin.CustomCard.onePerDeck
  name: onePerDeck
  href: api/APIPlugin.CustomCard.html#APIPlugin_CustomCard_onePerDeck
  commentId: F:APIPlugin.CustomCard.onePerDeck
  fullName: APIPlugin.CustomCard.onePerDeck
  nameWithType: CustomCard.onePerDeck
- uid: APIPlugin.CustomCard.pixelTex
  name: pixelTex
  href: api/APIPlugin.CustomCard.html#APIPlugin_CustomCard_pixelTex
  commentId: F:APIPlugin.CustomCard.pixelTex
  fullName: APIPlugin.CustomCard.pixelTex
  nameWithType: CustomCard.pixelTex
- uid: APIPlugin.CustomCard.specialAbilities
  name: specialAbilities
  href: api/APIPlugin.CustomCard.html#APIPlugin_CustomCard_specialAbilities
  commentId: F:APIPlugin.CustomCard.specialAbilities
  fullName: APIPlugin.CustomCard.specialAbilities
  nameWithType: CustomCard.specialAbilities
- uid: APIPlugin.CustomCard.specialAbilityIds
  name: specialAbilityIds
  href: api/APIPlugin.CustomCard.html#APIPlugin_CustomCard_specialAbilityIds
  commentId: F:APIPlugin.CustomCard.specialAbilityIds
  fullName: APIPlugin.CustomCard.specialAbilityIds
  nameWithType: CustomCard.specialAbilityIds
- uid: APIPlugin.CustomCard.specialStatIcon
  name: specialStatIcon
  href: api/APIPlugin.CustomCard.html#APIPlugin_CustomCard_specialStatIcon
  commentId: F:APIPlugin.CustomCard.specialStatIcon
  fullName: APIPlugin.CustomCard.specialStatIcon
  nameWithType: CustomCard.specialStatIcon
- uid: APIPlugin.CustomCard.tailIds
  name: tailIds
  href: api/APIPlugin.CustomCard.html#APIPlugin_CustomCard_tailIds
  commentId: F:APIPlugin.CustomCard.tailIds
  fullName: APIPlugin.CustomCard.tailIds
  nameWithType: CustomCard.tailIds
- uid: APIPlugin.CustomCard.tailParams
  name: tailParams
  href: api/APIPlugin.CustomCard.html#APIPlugin_CustomCard_tailParams
  commentId: F:APIPlugin.CustomCard.tailParams
  fullName: APIPlugin.CustomCard.tailParams
  nameWithType: CustomCard.tailParams
- uid: APIPlugin.CustomCard.temple
  name: temple
  href: api/APIPlugin.CustomCard.html#APIPlugin_CustomCard_temple
  commentId: F:APIPlugin.CustomCard.temple
  fullName: APIPlugin.CustomCard.temple
  nameWithType: CustomCard.temple
- uid: APIPlugin.CustomCard.tex
  name: tex
  href: api/APIPlugin.CustomCard.html#APIPlugin_CustomCard_tex
  commentId: F:APIPlugin.CustomCard.tex
  fullName: APIPlugin.CustomCard.tex
  nameWithType: CustomCard.tex
- uid: APIPlugin.CustomCard.titleGraphic
  name: titleGraphic
  href: api/APIPlugin.CustomCard.html#APIPlugin_CustomCard_titleGraphic
  commentId: F:APIPlugin.CustomCard.titleGraphic
  fullName: APIPlugin.CustomCard.titleGraphic
  nameWithType: CustomCard.titleGraphic
- uid: APIPlugin.CustomCard.traits
  name: traits
  href: api/APIPlugin.CustomCard.html#APIPlugin_CustomCard_traits
  commentId: F:APIPlugin.CustomCard.traits
  fullName: APIPlugin.CustomCard.traits
  nameWithType: CustomCard.traits
- uid: APIPlugin.CustomCard.tribes
  name: tribes
  href: api/APIPlugin.CustomCard.html#APIPlugin_CustomCard_tribes
  commentId: F:APIPlugin.CustomCard.tribes
  fullName: APIPlugin.CustomCard.tribes
  nameWithType: CustomCard.tribes
- uid: APIPlugin.CustomRegion
  name: CustomRegion
  href: api/APIPlugin.CustomRegion.html
  commentId: T:APIPlugin.CustomRegion
  fullName: APIPlugin.CustomRegion
  nameWithType: CustomRegion
- uid: APIPlugin.CustomRegion.#ctor(System.String)
  name: CustomRegion(String)
  href: api/APIPlugin.CustomRegion.html#APIPlugin_CustomRegion__ctor_System_String_
  commentId: M:APIPlugin.CustomRegion.#ctor(System.String)
  fullName: APIPlugin.CustomRegion.CustomRegion(System.String)
  nameWithType: CustomRegion.CustomRegion(String)
- uid: APIPlugin.CustomRegion.#ctor*
  name: CustomRegion
  href: api/APIPlugin.CustomRegion.html#APIPlugin_CustomRegion__ctor_
  commentId: Overload:APIPlugin.CustomRegion.#ctor
  isSpec: "True"
  fullName: APIPlugin.CustomRegion.CustomRegion
  nameWithType: CustomRegion.CustomRegion
- uid: APIPlugin.CustomRegion.AdjustRegion(DiskCardGame.RegionData)
  name: AdjustRegion(RegionData)
  href: api/APIPlugin.CustomRegion.html#APIPlugin_CustomRegion_AdjustRegion_DiskCardGame_RegionData_
  commentId: M:APIPlugin.CustomRegion.AdjustRegion(DiskCardGame.RegionData)
  fullName: APIPlugin.CustomRegion.AdjustRegion(DiskCardGame.RegionData)
  nameWithType: CustomRegion.AdjustRegion(RegionData)
- uid: APIPlugin.CustomRegion.AdjustRegion*
  name: AdjustRegion
  href: api/APIPlugin.CustomRegion.html#APIPlugin_CustomRegion_AdjustRegion_
  commentId: Overload:APIPlugin.CustomRegion.AdjustRegion
  isSpec: "True"
  fullName: APIPlugin.CustomRegion.AdjustRegion
  nameWithType: CustomRegion.AdjustRegion
- uid: APIPlugin.CustomRegion.ambientLoopId
  name: ambientLoopId
  href: api/APIPlugin.CustomRegion.html#APIPlugin_CustomRegion_ambientLoopId
  commentId: F:APIPlugin.CustomRegion.ambientLoopId
  fullName: APIPlugin.CustomRegion.ambientLoopId
  nameWithType: CustomRegion.ambientLoopId
- uid: APIPlugin.CustomRegion.boardLightColor
  name: boardLightColor
  href: api/APIPlugin.CustomRegion.html#APIPlugin_CustomRegion_boardLightColor
  commentId: F:APIPlugin.CustomRegion.boardLightColor
  fullName: APIPlugin.CustomRegion.boardLightColor
  nameWithType: CustomRegion.boardLightColor
- uid: APIPlugin.CustomRegion.bosses
  name: bosses
  href: api/APIPlugin.CustomRegion.html#APIPlugin_CustomRegion_bosses
  commentId: F:APIPlugin.CustomRegion.bosses
  fullName: APIPlugin.CustomRegion.bosses
  nameWithType: CustomRegion.bosses
- uid: APIPlugin.CustomRegion.bossPrepCondition
  name: bossPrepCondition
  href: api/APIPlugin.CustomRegion.html#APIPlugin_CustomRegion_bossPrepCondition
  commentId: F:APIPlugin.CustomRegion.bossPrepCondition
  fullName: APIPlugin.CustomRegion.bossPrepCondition
  nameWithType: CustomRegion.bossPrepCondition
- uid: APIPlugin.CustomRegion.bossPrepEncounter
  name: bossPrepEncounter
  href: api/APIPlugin.CustomRegion.html#APIPlugin_CustomRegion_bossPrepEncounter
  commentId: F:APIPlugin.CustomRegion.bossPrepEncounter
  fullName: APIPlugin.CustomRegion.bossPrepEncounter
  nameWithType: CustomRegion.bossPrepEncounter
- uid: APIPlugin.CustomRegion.cardsLightColor
  name: cardsLightColor
  href: api/APIPlugin.CustomRegion.html#APIPlugin_CustomRegion_cardsLightColor
  commentId: F:APIPlugin.CustomRegion.cardsLightColor
  fullName: APIPlugin.CustomRegion.cardsLightColor
  nameWithType: CustomRegion.cardsLightColor
- uid: APIPlugin.CustomRegion.consumableItems
  name: consumableItems
  href: api/APIPlugin.CustomRegion.html#APIPlugin_CustomRegion_consumableItems
  commentId: F:APIPlugin.CustomRegion.consumableItems
  fullName: APIPlugin.CustomRegion.consumableItems
  nameWithType: CustomRegion.consumableItems
- uid: APIPlugin.CustomRegion.dominantTribes
  name: dominantTribes
  href: api/APIPlugin.CustomRegion.html#APIPlugin_CustomRegion_dominantTribes
  commentId: F:APIPlugin.CustomRegion.dominantTribes
  fullName: APIPlugin.CustomRegion.dominantTribes
  nameWithType: CustomRegion.dominantTribes
- uid: APIPlugin.CustomRegion.dustParticlesDisabled
  name: dustParticlesDisabled
  href: api/APIPlugin.CustomRegion.html#APIPlugin_CustomRegion_dustParticlesDisabled
  commentId: F:APIPlugin.CustomRegion.dustParticlesDisabled
  fullName: APIPlugin.CustomRegion.dustParticlesDisabled
  nameWithType: CustomRegion.dustParticlesDisabled
- uid: APIPlugin.CustomRegion.encounters
  name: encounters
  href: api/APIPlugin.CustomRegion.html#APIPlugin_CustomRegion_encounters
  commentId: F:APIPlugin.CustomRegion.encounters
  fullName: APIPlugin.CustomRegion.encounters
  nameWithType: CustomRegion.encounters
- uid: APIPlugin.CustomRegion.fillerScenery
  name: fillerScenery
  href: api/APIPlugin.CustomRegion.html#APIPlugin_CustomRegion_fillerScenery
  commentId: F:APIPlugin.CustomRegion.fillerScenery
  fullName: APIPlugin.CustomRegion.fillerScenery
  nameWithType: CustomRegion.fillerScenery
- uid: APIPlugin.CustomRegion.fogAlpha
  name: fogAlpha
  href: api/APIPlugin.CustomRegion.html#APIPlugin_CustomRegion_fogAlpha
  commentId: F:APIPlugin.CustomRegion.fogAlpha
  fullName: APIPlugin.CustomRegion.fogAlpha
  nameWithType: CustomRegion.fogAlpha
- uid: APIPlugin.CustomRegion.fogEnabled
  name: fogEnabled
  href: api/APIPlugin.CustomRegion.html#APIPlugin_CustomRegion_fogEnabled
  commentId: F:APIPlugin.CustomRegion.fogEnabled
  fullName: APIPlugin.CustomRegion.fogEnabled
  nameWithType: CustomRegion.fogEnabled
- uid: APIPlugin.CustomRegion.fogProfile
  name: fogProfile
  href: api/APIPlugin.CustomRegion.html#APIPlugin_CustomRegion_fogProfile
  commentId: F:APIPlugin.CustomRegion.fogProfile
  fullName: APIPlugin.CustomRegion.fogProfile
  nameWithType: CustomRegion.fogProfile
- uid: APIPlugin.CustomRegion.likelyCards
  name: likelyCards
  href: api/APIPlugin.CustomRegion.html#APIPlugin_CustomRegion_likelyCards
  commentId: F:APIPlugin.CustomRegion.likelyCards
  fullName: APIPlugin.CustomRegion.likelyCards
  nameWithType: CustomRegion.likelyCards
- uid: APIPlugin.CustomRegion.mapAlbedo
  name: mapAlbedo
  href: api/APIPlugin.CustomRegion.html#APIPlugin_CustomRegion_mapAlbedo
  commentId: F:APIPlugin.CustomRegion.mapAlbedo
  fullName: APIPlugin.CustomRegion.mapAlbedo
  nameWithType: CustomRegion.mapAlbedo
- uid: APIPlugin.CustomRegion.mapEmission
  name: mapEmission
  href: api/APIPlugin.CustomRegion.html#APIPlugin_CustomRegion_mapEmission
  commentId: F:APIPlugin.CustomRegion.mapEmission
  fullName: APIPlugin.CustomRegion.mapEmission
  nameWithType: CustomRegion.mapEmission
- uid: APIPlugin.CustomRegion.mapEmissionColor
  name: mapEmissionColor
  href: api/APIPlugin.CustomRegion.html#APIPlugin_CustomRegion_mapEmissionColor
  commentId: F:APIPlugin.CustomRegion.mapEmissionColor
  fullName: APIPlugin.CustomRegion.mapEmissionColor
  nameWithType: CustomRegion.mapEmissionColor
- uid: APIPlugin.CustomRegion.mapParticlesPrefabs
  name: mapParticlesPrefabs
  href: api/APIPlugin.CustomRegion.html#APIPlugin_CustomRegion_mapParticlesPrefabs
  commentId: F:APIPlugin.CustomRegion.mapParticlesPrefabs
  fullName: APIPlugin.CustomRegion.mapParticlesPrefabs
  nameWithType: CustomRegion.mapParticlesPrefabs
- uid: APIPlugin.CustomRegion.ModifyRegions(List{DiskCardGame.RegionData})
  name: ModifyRegions(List<RegionData>)
  href: api/APIPlugin.CustomRegion.html#APIPlugin_CustomRegion_ModifyRegions_List_DiskCardGame_RegionData__
  commentId: M:APIPlugin.CustomRegion.ModifyRegions(List{DiskCardGame.RegionData})
  name.vb: ModifyRegions(List(Of RegionData))
  fullName: APIPlugin.CustomRegion.ModifyRegions(List<DiskCardGame.RegionData>)
  fullName.vb: APIPlugin.CustomRegion.ModifyRegions(List(Of DiskCardGame.RegionData))
  nameWithType: CustomRegion.ModifyRegions(List<RegionData>)
  nameWithType.vb: CustomRegion.ModifyRegions(List(Of RegionData))
- uid: APIPlugin.CustomRegion.ModifyRegions*
  name: ModifyRegions
  href: api/APIPlugin.CustomRegion.html#APIPlugin_CustomRegion_ModifyRegions_
  commentId: Overload:APIPlugin.CustomRegion.ModifyRegions
  isSpec: "True"
  fullName: APIPlugin.CustomRegion.ModifyRegions
  nameWithType: CustomRegion.ModifyRegions
- uid: APIPlugin.CustomRegion.name
  name: name
  href: api/APIPlugin.CustomRegion.html#APIPlugin_CustomRegion_name
  commentId: F:APIPlugin.CustomRegion.name
  fullName: APIPlugin.CustomRegion.name
  nameWithType: CustomRegion.name
- uid: APIPlugin.CustomRegion.predefinedNodes
  name: predefinedNodes
  href: api/APIPlugin.CustomRegion.html#APIPlugin_CustomRegion_predefinedNodes
  commentId: F:APIPlugin.CustomRegion.predefinedNodes
  fullName: APIPlugin.CustomRegion.predefinedNodes
  nameWithType: CustomRegion.predefinedNodes
- uid: APIPlugin.CustomRegion.predefinedScenery
  name: predefinedScenery
  href: api/APIPlugin.CustomRegion.html#APIPlugin_CustomRegion_predefinedScenery
  commentId: F:APIPlugin.CustomRegion.predefinedScenery
  fullName: APIPlugin.CustomRegion.predefinedScenery
  nameWithType: CustomRegion.predefinedScenery
- uid: APIPlugin.CustomRegion.scarceScenery
  name: scarceScenery
  href: api/APIPlugin.CustomRegion.html#APIPlugin_CustomRegion_scarceScenery
  commentId: F:APIPlugin.CustomRegion.scarceScenery
  fullName: APIPlugin.CustomRegion.scarceScenery
  nameWithType: CustomRegion.scarceScenery
- uid: APIPlugin.CustomRegion.silenceCabinAmbience
  name: silenceCabinAmbience
  href: api/APIPlugin.CustomRegion.html#APIPlugin_CustomRegion_silenceCabinAmbience
  commentId: F:APIPlugin.CustomRegion.silenceCabinAmbience
  fullName: APIPlugin.CustomRegion.silenceCabinAmbience
  nameWithType: CustomRegion.silenceCabinAmbience
- uid: APIPlugin.CustomRegion.terrainCards
  name: terrainCards
  href: api/APIPlugin.CustomRegion.html#APIPlugin_CustomRegion_terrainCards
  commentId: F:APIPlugin.CustomRegion.terrainCards
  fullName: APIPlugin.CustomRegion.terrainCards
  nameWithType: CustomRegion.terrainCards
- uid: APIPlugin.CustomRegion.tier
  name: tier
  href: api/APIPlugin.CustomRegion.html#APIPlugin_CustomRegion_tier
  commentId: F:APIPlugin.CustomRegion.tier
  fullName: APIPlugin.CustomRegion.tier
  nameWithType: CustomRegion.tier
- uid: APIPlugin.EvolveIdentifier
  name: EvolveIdentifier
  href: api/APIPlugin.EvolveIdentifier.html
  commentId: T:APIPlugin.EvolveIdentifier
  fullName: APIPlugin.EvolveIdentifier
  nameWithType: EvolveIdentifier
- uid: APIPlugin.EvolveIdentifier.#ctor(System.String,System.Int32,DiskCardGame.CardModificationInfo)
  name: EvolveIdentifier(String, Int32, CardModificationInfo)
  href: api/APIPlugin.EvolveIdentifier.html#APIPlugin_EvolveIdentifier__ctor_System_String_System_Int32_DiskCardGame_CardModificationInfo_
  commentId: M:APIPlugin.EvolveIdentifier.#ctor(System.String,System.Int32,DiskCardGame.CardModificationInfo)
  fullName: APIPlugin.EvolveIdentifier.EvolveIdentifier(System.String, System.Int32, DiskCardGame.CardModificationInfo)
  nameWithType: EvolveIdentifier.EvolveIdentifier(String, Int32, CardModificationInfo)
- uid: APIPlugin.EvolveIdentifier.#ctor*
  name: EvolveIdentifier
  href: api/APIPlugin.EvolveIdentifier.html#APIPlugin_EvolveIdentifier__ctor_
  commentId: Overload:APIPlugin.EvolveIdentifier.#ctor
  isSpec: "True"
  fullName: APIPlugin.EvolveIdentifier.EvolveIdentifier
  nameWithType: EvolveIdentifier.EvolveIdentifier
- uid: APIPlugin.EvolveIdentifier.Evolution
  name: Evolution
  href: api/APIPlugin.EvolveIdentifier.html#APIPlugin_EvolveIdentifier_Evolution
  commentId: P:APIPlugin.EvolveIdentifier.Evolution
  fullName: APIPlugin.EvolveIdentifier.Evolution
  nameWithType: EvolveIdentifier.Evolution
- uid: APIPlugin.EvolveIdentifier.Evolution*
  name: Evolution
  href: api/APIPlugin.EvolveIdentifier.html#APIPlugin_EvolveIdentifier_Evolution_
  commentId: Overload:APIPlugin.EvolveIdentifier.Evolution
  isSpec: "True"
  fullName: APIPlugin.EvolveIdentifier.Evolution
  nameWithType: EvolveIdentifier.Evolution
- uid: APIPlugin.EvolveIdentifier.ToString
  name: ToString()
  href: api/APIPlugin.EvolveIdentifier.html#APIPlugin_EvolveIdentifier_ToString
  commentId: M:APIPlugin.EvolveIdentifier.ToString
  fullName: APIPlugin.EvolveIdentifier.ToString()
  nameWithType: EvolveIdentifier.ToString()
- uid: APIPlugin.EvolveIdentifier.ToString*
  name: ToString
  href: api/APIPlugin.EvolveIdentifier.html#APIPlugin_EvolveIdentifier_ToString_
  commentId: Overload:APIPlugin.EvolveIdentifier.ToString
  isSpec: "True"
  fullName: APIPlugin.EvolveIdentifier.ToString
  nameWithType: EvolveIdentifier.ToString
- uid: APIPlugin.IceCubeIdentifier
  name: IceCubeIdentifier
  href: api/APIPlugin.IceCubeIdentifier.html
  commentId: T:APIPlugin.IceCubeIdentifier
  fullName: APIPlugin.IceCubeIdentifier
  nameWithType: IceCubeIdentifier
- uid: APIPlugin.IceCubeIdentifier.#ctor(System.String,DiskCardGame.CardModificationInfo)
  name: IceCubeIdentifier(String, CardModificationInfo)
  href: api/APIPlugin.IceCubeIdentifier.html#APIPlugin_IceCubeIdentifier__ctor_System_String_DiskCardGame_CardModificationInfo_
  commentId: M:APIPlugin.IceCubeIdentifier.#ctor(System.String,DiskCardGame.CardModificationInfo)
  fullName: APIPlugin.IceCubeIdentifier.IceCubeIdentifier(System.String, DiskCardGame.CardModificationInfo)
  nameWithType: IceCubeIdentifier.IceCubeIdentifier(String, CardModificationInfo)
- uid: APIPlugin.IceCubeIdentifier.#ctor*
  name: IceCubeIdentifier
  href: api/APIPlugin.IceCubeIdentifier.html#APIPlugin_IceCubeIdentifier__ctor_
  commentId: Overload:APIPlugin.IceCubeIdentifier.#ctor
  isSpec: "True"
  fullName: APIPlugin.IceCubeIdentifier.IceCubeIdentifier
  nameWithType: IceCubeIdentifier.IceCubeIdentifier
- uid: APIPlugin.IceCubeIdentifier.IceCube
  name: IceCube
  href: api/APIPlugin.IceCubeIdentifier.html#APIPlugin_IceCubeIdentifier_IceCube
  commentId: P:APIPlugin.IceCubeIdentifier.IceCube
  fullName: APIPlugin.IceCubeIdentifier.IceCube
  nameWithType: IceCubeIdentifier.IceCube
- uid: APIPlugin.IceCubeIdentifier.IceCube*
  name: IceCube
  href: api/APIPlugin.IceCubeIdentifier.html#APIPlugin_IceCubeIdentifier_IceCube_
  commentId: Overload:APIPlugin.IceCubeIdentifier.IceCube
  isSpec: "True"
  fullName: APIPlugin.IceCubeIdentifier.IceCube
  nameWithType: IceCubeIdentifier.IceCube
- uid: APIPlugin.IceCubeIdentifier.ToString
  name: ToString()
  href: api/APIPlugin.IceCubeIdentifier.html#APIPlugin_IceCubeIdentifier_ToString
  commentId: M:APIPlugin.IceCubeIdentifier.ToString
  fullName: APIPlugin.IceCubeIdentifier.ToString()
  nameWithType: IceCubeIdentifier.ToString()
- uid: APIPlugin.IceCubeIdentifier.ToString*
  name: ToString
  href: api/APIPlugin.IceCubeIdentifier.html#APIPlugin_IceCubeIdentifier_ToString_
  commentId: Overload:APIPlugin.IceCubeIdentifier.ToString
  isSpec: "True"
  fullName: APIPlugin.IceCubeIdentifier.ToString
  nameWithType: IceCubeIdentifier.ToString
- uid: APIPlugin.IgnoreMappingAttribute
  name: IgnoreMappingAttribute
  href: api/APIPlugin.IgnoreMappingAttribute.html
  commentId: T:APIPlugin.IgnoreMappingAttribute
  fullName: APIPlugin.IgnoreMappingAttribute
  nameWithType: IgnoreMappingAttribute
- uid: APIPlugin.NewAbility
  name: NewAbility
  href: api/APIPlugin.NewAbility.html
  commentId: T:APIPlugin.NewAbility
  fullName: APIPlugin.NewAbility
  nameWithType: NewAbility
- uid: APIPlugin.NewAbility.#ctor(DiskCardGame.AbilityInfo,Type,UnityEngine.Texture,APIPlugin.AbilityIdentifier)
  name: NewAbility(AbilityInfo, Type, Texture, AbilityIdentifier)
  href: api/APIPlugin.NewAbility.html#APIPlugin_NewAbility__ctor_DiskCardGame_AbilityInfo_Type_UnityEngine_Texture_APIPlugin_AbilityIdentifier_
  commentId: M:APIPlugin.NewAbility.#ctor(DiskCardGame.AbilityInfo,Type,UnityEngine.Texture,APIPlugin.AbilityIdentifier)
  fullName: APIPlugin.NewAbility.NewAbility(DiskCardGame.AbilityInfo, Type, UnityEngine.Texture, APIPlugin.AbilityIdentifier)
  nameWithType: NewAbility.NewAbility(AbilityInfo, Type, Texture, AbilityIdentifier)
- uid: APIPlugin.NewAbility.#ctor*
  name: NewAbility
  href: api/APIPlugin.NewAbility.html#APIPlugin_NewAbility__ctor_
  commentId: Overload:APIPlugin.NewAbility.#ctor
  isSpec: "True"
  fullName: APIPlugin.NewAbility.NewAbility
  nameWithType: NewAbility.NewAbility
- uid: APIPlugin.NewAbility.ability
  name: ability
  href: api/APIPlugin.NewAbility.html#APIPlugin_NewAbility_ability
  commentId: F:APIPlugin.NewAbility.ability
  fullName: APIPlugin.NewAbility.ability
  nameWithType: NewAbility.ability
- uid: APIPlugin.NewAbility.abilityBehaviour
  name: abilityBehaviour
  href: api/APIPlugin.NewAbility.html#APIPlugin_NewAbility_abilityBehaviour
  commentId: F:APIPlugin.NewAbility.abilityBehaviour
  fullName: APIPlugin.NewAbility.abilityBehaviour
  nameWithType: NewAbility.abilityBehaviour
- uid: APIPlugin.NewAbility.id
  name: id
  href: api/APIPlugin.NewAbility.html#APIPlugin_NewAbility_id
  commentId: F:APIPlugin.NewAbility.id
  fullName: APIPlugin.NewAbility.id
  nameWithType: NewAbility.id
- uid: APIPlugin.NewAbility.info
  name: info
  href: api/APIPlugin.NewAbility.html#APIPlugin_NewAbility_info
  commentId: F:APIPlugin.NewAbility.info
  fullName: APIPlugin.NewAbility.info
  nameWithType: NewAbility.info
- uid: APIPlugin.NewAbility.tex
  name: tex
  href: api/APIPlugin.NewAbility.html#APIPlugin_NewAbility_tex
  commentId: F:APIPlugin.NewAbility.tex
  fullName: APIPlugin.NewAbility.tex
  nameWithType: NewAbility.tex
- uid: APIPlugin.NewCard
  name: NewCard
  href: api/APIPlugin.NewCard.html
  commentId: T:APIPlugin.NewCard
  fullName: APIPlugin.NewCard
  nameWithType: NewCard
- uid: APIPlugin.NewCard.abilityIds
  name: abilityIds
  href: api/APIPlugin.NewCard.html#APIPlugin_NewCard_abilityIds
  commentId: F:APIPlugin.NewCard.abilityIds
  fullName: APIPlugin.NewCard.abilityIds
  nameWithType: NewCard.abilityIds
- uid: APIPlugin.NewCard.Add(DiskCardGame.CardInfo,List{APIPlugin.AbilityIdentifier},List{APIPlugin.SpecialAbilityIdentifier},APIPlugin.EvolveIdentifier,APIPlugin.IceCubeIdentifier,APIPlugin.TailIdentifier)
  name: Add(CardInfo, List<AbilityIdentifier>, List<SpecialAbilityIdentifier>, EvolveIdentifier, IceCubeIdentifier, TailIdentifier)
  href: api/APIPlugin.NewCard.html#APIPlugin_NewCard_Add_DiskCardGame_CardInfo_List_APIPlugin_AbilityIdentifier__List_APIPlugin_SpecialAbilityIdentifier__APIPlugin_EvolveIdentifier_APIPlugin_IceCubeIdentifier_APIPlugin_TailIdentifier_
  commentId: M:APIPlugin.NewCard.Add(DiskCardGame.CardInfo,List{APIPlugin.AbilityIdentifier},List{APIPlugin.SpecialAbilityIdentifier},APIPlugin.EvolveIdentifier,APIPlugin.IceCubeIdentifier,APIPlugin.TailIdentifier)
  name.vb: Add(CardInfo, List(Of AbilityIdentifier), List(Of SpecialAbilityIdentifier), EvolveIdentifier, IceCubeIdentifier, TailIdentifier)
  fullName: APIPlugin.NewCard.Add(DiskCardGame.CardInfo, List<APIPlugin.AbilityIdentifier>, List<APIPlugin.SpecialAbilityIdentifier>, APIPlugin.EvolveIdentifier, APIPlugin.IceCubeIdentifier, APIPlugin.TailIdentifier)
  fullName.vb: APIPlugin.NewCard.Add(DiskCardGame.CardInfo, List(Of APIPlugin.AbilityIdentifier), List(Of APIPlugin.SpecialAbilityIdentifier), APIPlugin.EvolveIdentifier, APIPlugin.IceCubeIdentifier, APIPlugin.TailIdentifier)
  nameWithType: NewCard.Add(CardInfo, List<AbilityIdentifier>, List<SpecialAbilityIdentifier>, EvolveIdentifier, IceCubeIdentifier, TailIdentifier)
  nameWithType.vb: NewCard.Add(CardInfo, List(Of AbilityIdentifier), List(Of SpecialAbilityIdentifier), EvolveIdentifier, IceCubeIdentifier, TailIdentifier)
- uid: APIPlugin.NewCard.Add(System.String,System.String,System.Int32,System.Int32,List{DiskCardGame.CardMetaCategory},DiskCardGame.CardComplexity,CardTemple,System.String,System.Boolean,System.Int32,System.Int32,System.Int32,List{DiskCardGame.GemType},DiskCardGame.SpecialStatIcon,List{DiskCardGame.Tribe},List{DiskCardGame.Trait},List{DiskCardGame.SpecialTriggeredAbility},List{DiskCardGame.Ability},List{APIPlugin.AbilityIdentifier},List{APIPlugin.SpecialAbilityIdentifier},DiskCardGame.EvolveParams,System.String,DiskCardGame.TailParams,DiskCardGame.IceCubeParams,System.Boolean,System.Boolean,List{DiskCardGame.CardAppearanceBehaviour.Appearance},UnityEngine.Texture2D,UnityEngine.Texture2D,UnityEngine.Texture,UnityEngine.Texture2D,UnityEngine.Texture2D,UnityEngine.GameObject,List{UnityEngine.Texture},APIPlugin.EvolveIdentifier,APIPlugin.IceCubeIdentifier,APIPlugin.TailIdentifier)
  name: Add(String, String, Int32, Int32, List<CardMetaCategory>, CardComplexity, CardTemple, String, Boolean, Int32, Int32, Int32, List<GemType>, SpecialStatIcon, List<Tribe>, List<Trait>, List<SpecialTriggeredAbility>, List<Ability>, List<AbilityIdentifier>, List<SpecialAbilityIdentifier>, EvolveParams, String, TailParams, IceCubeParams, Boolean, Boolean, List<CardAppearanceBehaviour.Appearance>, Texture2D, Texture2D, Texture, Texture2D, Texture2D, GameObject, List<Texture>, EvolveIdentifier, IceCubeIdentifier, TailIdentifier)
  href: api/APIPlugin.NewCard.html#APIPlugin_NewCard_Add_System_String_System_String_System_Int32_System_Int32_List_DiskCardGame_CardMetaCategory__DiskCardGame_CardComplexity_CardTemple_System_String_System_Boolean_System_Int32_System_Int32_System_Int32_List_DiskCardGame_GemType__DiskCardGame_SpecialStatIcon_List_DiskCardGame_Tribe__List_DiskCardGame_Trait__List_DiskCardGame_SpecialTriggeredAbility__List_DiskCardGame_Ability__List_APIPlugin_AbilityIdentifier__List_APIPlugin_SpecialAbilityIdentifier__DiskCardGame_EvolveParams_System_String_DiskCardGame_TailParams_DiskCardGame_IceCubeParams_System_Boolean_System_Boolean_List_DiskCardGame_CardAppearanceBehaviour_Appearance__UnityEngine_Texture2D_UnityEngine_Texture2D_UnityEngine_Texture_UnityEngine_Texture2D_UnityEngine_Texture2D_UnityEngine_GameObject_List_UnityEngine_Texture__APIPlugin_EvolveIdentifier_APIPlugin_IceCubeIdentifier_APIPlugin_TailIdentifier_
  commentId: M:APIPlugin.NewCard.Add(System.String,System.String,System.Int32,System.Int32,List{DiskCardGame.CardMetaCategory},DiskCardGame.CardComplexity,CardTemple,System.String,System.Boolean,System.Int32,System.Int32,System.Int32,List{DiskCardGame.GemType},DiskCardGame.SpecialStatIcon,List{DiskCardGame.Tribe},List{DiskCardGame.Trait},List{DiskCardGame.SpecialTriggeredAbility},List{DiskCardGame.Ability},List{APIPlugin.AbilityIdentifier},List{APIPlugin.SpecialAbilityIdentifier},DiskCardGame.EvolveParams,System.String,DiskCardGame.TailParams,DiskCardGame.IceCubeParams,System.Boolean,System.Boolean,List{DiskCardGame.CardAppearanceBehaviour.Appearance},UnityEngine.Texture2D,UnityEngine.Texture2D,UnityEngine.Texture,UnityEngine.Texture2D,UnityEngine.Texture2D,UnityEngine.GameObject,List{UnityEngine.Texture},APIPlugin.EvolveIdentifier,APIPlugin.IceCubeIdentifier,APIPlugin.TailIdentifier)
  name.vb: Add(String, String, Int32, Int32, List(Of CardMetaCategory), CardComplexity, CardTemple, String, Boolean, Int32, Int32, Int32, List(Of GemType), SpecialStatIcon, List(Of Tribe), List(Of Trait), List(Of SpecialTriggeredAbility), List(Of Ability), List(Of AbilityIdentifier), List(Of SpecialAbilityIdentifier), EvolveParams, String, TailParams, IceCubeParams, Boolean, Boolean, List(Of CardAppearanceBehaviour.Appearance), Texture2D, Texture2D, Texture, Texture2D, Texture2D, GameObject, List(Of Texture), EvolveIdentifier, IceCubeIdentifier, TailIdentifier)
  fullName: APIPlugin.NewCard.Add(System.String, System.String, System.Int32, System.Int32, List<DiskCardGame.CardMetaCategory>, DiskCardGame.CardComplexity, CardTemple, System.String, System.Boolean, System.Int32, System.Int32, System.Int32, List<DiskCardGame.GemType>, DiskCardGame.SpecialStatIcon, List<DiskCardGame.Tribe>, List<DiskCardGame.Trait>, List<DiskCardGame.SpecialTriggeredAbility>, List<DiskCardGame.Ability>, List<APIPlugin.AbilityIdentifier>, List<APIPlugin.SpecialAbilityIdentifier>, DiskCardGame.EvolveParams, System.String, DiskCardGame.TailParams, DiskCardGame.IceCubeParams, System.Boolean, System.Boolean, List<DiskCardGame.CardAppearanceBehaviour.Appearance>, UnityEngine.Texture2D, UnityEngine.Texture2D, UnityEngine.Texture, UnityEngine.Texture2D, UnityEngine.Texture2D, UnityEngine.GameObject, List<UnityEngine.Texture>, APIPlugin.EvolveIdentifier, APIPlugin.IceCubeIdentifier, APIPlugin.TailIdentifier)
  fullName.vb: APIPlugin.NewCard.Add(System.String, System.String, System.Int32, System.Int32, List(Of DiskCardGame.CardMetaCategory), DiskCardGame.CardComplexity, CardTemple, System.String, System.Boolean, System.Int32, System.Int32, System.Int32, List(Of DiskCardGame.GemType), DiskCardGame.SpecialStatIcon, List(Of DiskCardGame.Tribe), List(Of DiskCardGame.Trait), List(Of DiskCardGame.SpecialTriggeredAbility), List(Of DiskCardGame.Ability), List(Of APIPlugin.AbilityIdentifier), List(Of APIPlugin.SpecialAbilityIdentifier), DiskCardGame.EvolveParams, System.String, DiskCardGame.TailParams, DiskCardGame.IceCubeParams, System.Boolean, System.Boolean, List(Of DiskCardGame.CardAppearanceBehaviour.Appearance), UnityEngine.Texture2D, UnityEngine.Texture2D, UnityEngine.Texture, UnityEngine.Texture2D, UnityEngine.Texture2D, UnityEngine.GameObject, List(Of UnityEngine.Texture), APIPlugin.EvolveIdentifier, APIPlugin.IceCubeIdentifier, APIPlugin.TailIdentifier)
  nameWithType: NewCard.Add(String, String, Int32, Int32, List<CardMetaCategory>, CardComplexity, CardTemple, String, Boolean, Int32, Int32, Int32, List<GemType>, SpecialStatIcon, List<Tribe>, List<Trait>, List<SpecialTriggeredAbility>, List<Ability>, List<AbilityIdentifier>, List<SpecialAbilityIdentifier>, EvolveParams, String, TailParams, IceCubeParams, Boolean, Boolean, List<CardAppearanceBehaviour.Appearance>, Texture2D, Texture2D, Texture, Texture2D, Texture2D, GameObject, List<Texture>, EvolveIdentifier, IceCubeIdentifier, TailIdentifier)
  nameWithType.vb: NewCard.Add(String, String, Int32, Int32, List(Of CardMetaCategory), CardComplexity, CardTemple, String, Boolean, Int32, Int32, Int32, List(Of GemType), SpecialStatIcon, List(Of Tribe), List(Of Trait), List(Of SpecialTriggeredAbility), List(Of Ability), List(Of AbilityIdentifier), List(Of SpecialAbilityIdentifier), EvolveParams, String, TailParams, IceCubeParams, Boolean, Boolean, List(Of CardAppearanceBehaviour.Appearance), Texture2D, Texture2D, Texture, Texture2D, Texture2D, GameObject, List(Of Texture), EvolveIdentifier, IceCubeIdentifier, TailIdentifier)
- uid: APIPlugin.NewCard.Add*
  name: Add
  href: api/APIPlugin.NewCard.html#APIPlugin_NewCard_Add_
  commentId: Overload:APIPlugin.NewCard.Add
  isSpec: "True"
  fullName: APIPlugin.NewCard.Add
  nameWithType: NewCard.Add
- uid: APIPlugin.NewCard.cards
  name: cards
  href: api/APIPlugin.NewCard.html#APIPlugin_NewCard_cards
  commentId: F:APIPlugin.NewCard.cards
  fullName: APIPlugin.NewCard.cards
  nameWithType: NewCard.cards
- uid: APIPlugin.NewCard.emissions
  name: emissions
  href: api/APIPlugin.NewCard.html#APIPlugin_NewCard_emissions
  commentId: F:APIPlugin.NewCard.emissions
  fullName: APIPlugin.NewCard.emissions
  nameWithType: NewCard.emissions
- uid: APIPlugin.NewCard.evolveIds
  name: evolveIds
  href: api/APIPlugin.NewCard.html#APIPlugin_NewCard_evolveIds
  commentId: F:APIPlugin.NewCard.evolveIds
  fullName: APIPlugin.NewCard.evolveIds
  nameWithType: NewCard.evolveIds
- uid: APIPlugin.NewCard.iceCubeIds
  name: iceCubeIds
  href: api/APIPlugin.NewCard.html#APIPlugin_NewCard_iceCubeIds
  commentId: F:APIPlugin.NewCard.iceCubeIds
  fullName: APIPlugin.NewCard.iceCubeIds
  nameWithType: NewCard.iceCubeIds
- uid: APIPlugin.NewCard.specialAbilityIds
  name: specialAbilityIds
  href: api/APIPlugin.NewCard.html#APIPlugin_NewCard_specialAbilityIds
  commentId: F:APIPlugin.NewCard.specialAbilityIds
  fullName: APIPlugin.NewCard.specialAbilityIds
  nameWithType: NewCard.specialAbilityIds
- uid: APIPlugin.NewCard.tailIds
  name: tailIds
  href: api/APIPlugin.NewCard.html#APIPlugin_NewCard_tailIds
  commentId: F:APIPlugin.NewCard.tailIds
  fullName: APIPlugin.NewCard.tailIds
  nameWithType: NewCard.tailIds
- uid: APIPlugin.NewCardAppearanceBehaviour
  name: NewCardAppearanceBehaviour
  href: api/APIPlugin.NewCardAppearanceBehaviour.html
  commentId: T:APIPlugin.NewCardAppearanceBehaviour
  fullName: APIPlugin.NewCardAppearanceBehaviour
  nameWithType: NewCardAppearanceBehaviour
- uid: APIPlugin.NewCardAppearanceBehaviour.AddNewBackground(Type,System.String)
  name: AddNewBackground(Type, String)
  href: api/APIPlugin.NewCardAppearanceBehaviour.html#APIPlugin_NewCardAppearanceBehaviour_AddNewBackground_Type_System_String_
  commentId: M:APIPlugin.NewCardAppearanceBehaviour.AddNewBackground(Type,System.String)
  fullName: APIPlugin.NewCardAppearanceBehaviour.AddNewBackground(Type, System.String)
  nameWithType: NewCardAppearanceBehaviour.AddNewBackground(Type, String)
- uid: APIPlugin.NewCardAppearanceBehaviour.AddNewBackground*
  name: AddNewBackground
  href: api/APIPlugin.NewCardAppearanceBehaviour.html#APIPlugin_NewCardAppearanceBehaviour_AddNewBackground_
  commentId: Overload:APIPlugin.NewCardAppearanceBehaviour.AddNewBackground
  isSpec: "True"
  fullName: APIPlugin.NewCardAppearanceBehaviour.AddNewBackground
  nameWithType: NewCardAppearanceBehaviour.AddNewBackground
- uid: APIPlugin.NewCardAppearanceBehaviour.allBehaviours
  name: allBehaviours
  href: api/APIPlugin.NewCardAppearanceBehaviour.html#APIPlugin_NewCardAppearanceBehaviour_allBehaviours
  commentId: F:APIPlugin.NewCardAppearanceBehaviour.allBehaviours
  fullName: APIPlugin.NewCardAppearanceBehaviour.allBehaviours
  nameWithType: NewCardAppearanceBehaviour.allBehaviours
- uid: APIPlugin.NewCardAppearanceBehaviour.Appearance
  name: Appearance
  href: api/APIPlugin.NewCardAppearanceBehaviour.html#APIPlugin_NewCardAppearanceBehaviour_Appearance
  commentId: F:APIPlugin.NewCardAppearanceBehaviour.Appearance
  fullName: APIPlugin.NewCardAppearanceBehaviour.Appearance
  nameWithType: NewCardAppearanceBehaviour.Appearance
- uid: APIPlugin.NewCardAppearanceBehaviour.Behaviour
  name: Behaviour
  href: api/APIPlugin.NewCardAppearanceBehaviour.html#APIPlugin_NewCardAppearanceBehaviour_Behaviour
  commentId: F:APIPlugin.NewCardAppearanceBehaviour.Behaviour
  fullName: APIPlugin.NewCardAppearanceBehaviour.Behaviour
  nameWithType: NewCardAppearanceBehaviour.Behaviour
- uid: APIPlugin.NewCardAppearanceBehaviour.behaviours
  name: behaviours
  href: api/APIPlugin.NewCardAppearanceBehaviour.html#APIPlugin_NewCardAppearanceBehaviour_behaviours
  commentId: F:APIPlugin.NewCardAppearanceBehaviour.behaviours
  fullName: APIPlugin.NewCardAppearanceBehaviour.behaviours
  nameWithType: NewCardAppearanceBehaviour.behaviours
- uid: APIPlugin.NewCardAppearanceBehaviour.Name
  name: Name
  href: api/APIPlugin.NewCardAppearanceBehaviour.html#APIPlugin_NewCardAppearanceBehaviour_Name
  commentId: F:APIPlugin.NewCardAppearanceBehaviour.Name
  fullName: APIPlugin.NewCardAppearanceBehaviour.Name
  nameWithType: NewCardAppearanceBehaviour.Name
- uid: APIPlugin.NewEncounter
  name: NewEncounter
  href: api/APIPlugin.NewEncounter.html
  commentId: T:APIPlugin.NewEncounter
  fullName: APIPlugin.NewEncounter
  nameWithType: NewEncounter
- uid: APIPlugin.NewEncounter.#ctor(System.String,DiskCardGame.EncounterBlueprintData,System.String,System.Boolean,System.Boolean)
  name: NewEncounter(String, EncounterBlueprintData, String, Boolean, Boolean)
  href: api/APIPlugin.NewEncounter.html#APIPlugin_NewEncounter__ctor_System_String_DiskCardGame_EncounterBlueprintData_System_String_System_Boolean_System_Boolean_
  commentId: M:APIPlugin.NewEncounter.#ctor(System.String,DiskCardGame.EncounterBlueprintData,System.String,System.Boolean,System.Boolean)
  fullName: APIPlugin.NewEncounter.NewEncounter(System.String, DiskCardGame.EncounterBlueprintData, System.String, System.Boolean, System.Boolean)
  nameWithType: NewEncounter.NewEncounter(String, EncounterBlueprintData, String, Boolean, Boolean)
- uid: APIPlugin.NewEncounter.#ctor*
  name: NewEncounter
  href: api/APIPlugin.NewEncounter.html#APIPlugin_NewEncounter__ctor_
  commentId: Overload:APIPlugin.NewEncounter.#ctor
  isSpec: "True"
  fullName: APIPlugin.NewEncounter.NewEncounter
  nameWithType: NewEncounter.NewEncounter
- uid: APIPlugin.NewEncounter.Add(System.String,System.String,List{DiskCardGame.EncounterBlueprintData.TurnModBlueprint},List{DiskCardGame.Tribe},List{DiskCardGame.Ability},List{DiskCardGame.CardInfo},System.Boolean,System.Int32,System.Int32,List{DiskCardGame.CardInfo},List{List{DiskCardGame.EncounterBlueprintData.CardBlueprint}},System.Boolean,System.Boolean,System.Int32)
  name: Add(String, String, List<EncounterBlueprintData.TurnModBlueprint>, List<Tribe>, List<Ability>, List<CardInfo>, Boolean, Int32, Int32, List<CardInfo>, List<List<EncounterBlueprintData.CardBlueprint>>, Boolean, Boolean, Int32)
  href: api/APIPlugin.NewEncounter.html#APIPlugin_NewEncounter_Add_System_String_System_String_List_DiskCardGame_EncounterBlueprintData_TurnModBlueprint__List_DiskCardGame_Tribe__List_DiskCardGame_Ability__List_DiskCardGame_CardInfo__System_Boolean_System_Int32_System_Int32_List_DiskCardGame_CardInfo__List_List_DiskCardGame_EncounterBlueprintData_CardBlueprint___System_Boolean_System_Boolean_System_Int32_
  commentId: M:APIPlugin.NewEncounter.Add(System.String,System.String,List{DiskCardGame.EncounterBlueprintData.TurnModBlueprint},List{DiskCardGame.Tribe},List{DiskCardGame.Ability},List{DiskCardGame.CardInfo},System.Boolean,System.Int32,System.Int32,List{DiskCardGame.CardInfo},List{List{DiskCardGame.EncounterBlueprintData.CardBlueprint}},System.Boolean,System.Boolean,System.Int32)
  name.vb: Add(String, String, List(Of EncounterBlueprintData.TurnModBlueprint), List(Of Tribe), List(Of Ability), List(Of CardInfo), Boolean, Int32, Int32, List(Of CardInfo), List(Of List(Of EncounterBlueprintData.CardBlueprint)), Boolean, Boolean, Int32)
  fullName: APIPlugin.NewEncounter.Add(System.String, System.String, List<DiskCardGame.EncounterBlueprintData.TurnModBlueprint>, List<DiskCardGame.Tribe>, List<DiskCardGame.Ability>, List<DiskCardGame.CardInfo>, System.Boolean, System.Int32, System.Int32, List<DiskCardGame.CardInfo>, List<List<DiskCardGame.EncounterBlueprintData.CardBlueprint>>, System.Boolean, System.Boolean, System.Int32)
  fullName.vb: APIPlugin.NewEncounter.Add(System.String, System.String, List(Of DiskCardGame.EncounterBlueprintData.TurnModBlueprint), List(Of DiskCardGame.Tribe), List(Of DiskCardGame.Ability), List(Of DiskCardGame.CardInfo), System.Boolean, System.Int32, System.Int32, List(Of DiskCardGame.CardInfo), List(Of List(Of DiskCardGame.EncounterBlueprintData.CardBlueprint)), System.Boolean, System.Boolean, System.Int32)
  nameWithType: NewEncounter.Add(String, String, List<EncounterBlueprintData.TurnModBlueprint>, List<Tribe>, List<Ability>, List<CardInfo>, Boolean, Int32, Int32, List<CardInfo>, List<List<EncounterBlueprintData.CardBlueprint>>, Boolean, Boolean, Int32)
  nameWithType.vb: NewEncounter.Add(String, String, List(Of EncounterBlueprintData.TurnModBlueprint), List(Of Tribe), List(Of Ability), List(Of CardInfo), Boolean, Int32, Int32, List(Of CardInfo), List(Of List(Of EncounterBlueprintData.CardBlueprint)), Boolean, Boolean, Int32)
- uid: APIPlugin.NewEncounter.Add*
  name: Add
  href: api/APIPlugin.NewEncounter.html#APIPlugin_NewEncounter_Add_
  commentId: Overload:APIPlugin.NewEncounter.Add
  isSpec: "True"
  fullName: APIPlugin.NewEncounter.Add
  nameWithType: NewEncounter.Add
- uid: APIPlugin.NewEncounter.bossPrep
  name: bossPrep
  href: api/APIPlugin.NewEncounter.html#APIPlugin_NewEncounter_bossPrep
  commentId: F:APIPlugin.NewEncounter.bossPrep
  fullName: APIPlugin.NewEncounter.bossPrep
  nameWithType: NewEncounter.bossPrep
- uid: APIPlugin.NewEncounter.encounterBlueprintData
  name: encounterBlueprintData
  href: api/APIPlugin.NewEncounter.html#APIPlugin_NewEncounter_encounterBlueprintData
  commentId: F:APIPlugin.NewEncounter.encounterBlueprintData
  fullName: APIPlugin.NewEncounter.encounterBlueprintData
  nameWithType: NewEncounter.encounterBlueprintData
- uid: APIPlugin.NewEncounter.encounters
  name: encounters
  href: api/APIPlugin.NewEncounter.html#APIPlugin_NewEncounter_encounters
  commentId: F:APIPlugin.NewEncounter.encounters
  fullName: APIPlugin.NewEncounter.encounters
  nameWithType: NewEncounter.encounters
- uid: APIPlugin.NewEncounter.name
  name: name
  href: api/APIPlugin.NewEncounter.html#APIPlugin_NewEncounter_name
  commentId: F:APIPlugin.NewEncounter.name
  fullName: APIPlugin.NewEncounter.name
  nameWithType: NewEncounter.name
- uid: APIPlugin.NewEncounter.regionName
  name: regionName
  href: api/APIPlugin.NewEncounter.html#APIPlugin_NewEncounter_regionName
  commentId: F:APIPlugin.NewEncounter.regionName
  fullName: APIPlugin.NewEncounter.regionName
  nameWithType: NewEncounter.regionName
- uid: APIPlugin.NewEncounter.regular
  name: regular
  href: api/APIPlugin.NewEncounter.html#APIPlugin_NewEncounter_regular
  commentId: F:APIPlugin.NewEncounter.regular
  fullName: APIPlugin.NewEncounter.regular
  nameWithType: NewEncounter.regular
- uid: APIPlugin.NewRegion
  name: NewRegion
  href: api/APIPlugin.NewRegion.html
  commentId: T:APIPlugin.NewRegion
  fullName: APIPlugin.NewRegion
  nameWithType: NewRegion
- uid: APIPlugin.NewRegion.#ctor(DiskCardGame.RegionData,System.Int32)
  name: NewRegion(RegionData, Int32)
  href: api/APIPlugin.NewRegion.html#APIPlugin_NewRegion__ctor_DiskCardGame_RegionData_System_Int32_
  commentId: M:APIPlugin.NewRegion.#ctor(DiskCardGame.RegionData,System.Int32)
  fullName: APIPlugin.NewRegion.NewRegion(DiskCardGame.RegionData, System.Int32)
  nameWithType: NewRegion.NewRegion(RegionData, Int32)
- uid: APIPlugin.NewRegion.#ctor*
  name: NewRegion
  href: api/APIPlugin.NewRegion.html#APIPlugin_NewRegion__ctor_
  commentId: Overload:APIPlugin.NewRegion.#ctor
  isSpec: "True"
  fullName: APIPlugin.NewRegion.NewRegion
  nameWithType: NewRegion.NewRegion
- uid: APIPlugin.NewSpecialAbility
  name: NewSpecialAbility
  href: api/APIPlugin.NewSpecialAbility.html
  commentId: T:APIPlugin.NewSpecialAbility
  fullName: APIPlugin.NewSpecialAbility
  nameWithType: NewSpecialAbility
- uid: APIPlugin.NewSpecialAbility.#ctor(Type,APIPlugin.SpecialAbilityIdentifier,DiskCardGame.StatIconInfo)
  name: NewSpecialAbility(Type, SpecialAbilityIdentifier, StatIconInfo)
  href: api/APIPlugin.NewSpecialAbility.html#APIPlugin_NewSpecialAbility__ctor_Type_APIPlugin_SpecialAbilityIdentifier_DiskCardGame_StatIconInfo_
  commentId: M:APIPlugin.NewSpecialAbility.#ctor(Type,APIPlugin.SpecialAbilityIdentifier,DiskCardGame.StatIconInfo)
  fullName: APIPlugin.NewSpecialAbility.NewSpecialAbility(Type, APIPlugin.SpecialAbilityIdentifier, DiskCardGame.StatIconInfo)
  nameWithType: NewSpecialAbility.NewSpecialAbility(Type, SpecialAbilityIdentifier, StatIconInfo)
- uid: APIPlugin.NewSpecialAbility.#ctor*
  name: NewSpecialAbility
  href: api/APIPlugin.NewSpecialAbility.html#APIPlugin_NewSpecialAbility__ctor_
  commentId: Overload:APIPlugin.NewSpecialAbility.#ctor
  isSpec: "True"
  fullName: APIPlugin.NewSpecialAbility.NewSpecialAbility
  nameWithType: NewSpecialAbility.NewSpecialAbility
- uid: APIPlugin.NewSpecialAbility.abilityBehaviour
  name: abilityBehaviour
  href: api/APIPlugin.NewSpecialAbility.html#APIPlugin_NewSpecialAbility_abilityBehaviour
  commentId: F:APIPlugin.NewSpecialAbility.abilityBehaviour
  fullName: APIPlugin.NewSpecialAbility.abilityBehaviour
  nameWithType: NewSpecialAbility.abilityBehaviour
- uid: APIPlugin.NewSpecialAbility.id
  name: id
  href: api/APIPlugin.NewSpecialAbility.html#APIPlugin_NewSpecialAbility_id
  commentId: F:APIPlugin.NewSpecialAbility.id
  fullName: APIPlugin.NewSpecialAbility.id
  nameWithType: NewSpecialAbility.id
- uid: APIPlugin.NewSpecialAbility.specialAbilities
  name: specialAbilities
  href: api/APIPlugin.NewSpecialAbility.html#APIPlugin_NewSpecialAbility_specialAbilities
  commentId: F:APIPlugin.NewSpecialAbility.specialAbilities
  fullName: APIPlugin.NewSpecialAbility.specialAbilities
  nameWithType: NewSpecialAbility.specialAbilities
- uid: APIPlugin.NewSpecialAbility.specialTriggeredAbility
  name: specialTriggeredAbility
  href: api/APIPlugin.NewSpecialAbility.html#APIPlugin_NewSpecialAbility_specialTriggeredAbility
  commentId: F:APIPlugin.NewSpecialAbility.specialTriggeredAbility
  fullName: APIPlugin.NewSpecialAbility.specialTriggeredAbility
  nameWithType: NewSpecialAbility.specialTriggeredAbility
- uid: APIPlugin.NewSpecialAbility.statIconInfo
  name: statIconInfo
  href: api/APIPlugin.NewSpecialAbility.html#APIPlugin_NewSpecialAbility_statIconInfo
  commentId: F:APIPlugin.NewSpecialAbility.statIconInfo
  fullName: APIPlugin.NewSpecialAbility.statIconInfo
  nameWithType: NewSpecialAbility.statIconInfo
- uid: APIPlugin.SpecialAbilityIdentifier
  name: SpecialAbilityIdentifier
  href: api/APIPlugin.SpecialAbilityIdentifier.html
  commentId: T:APIPlugin.SpecialAbilityIdentifier
  fullName: APIPlugin.SpecialAbilityIdentifier
  nameWithType: SpecialAbilityIdentifier
- uid: APIPlugin.SpecialAbilityIdentifier.GetID(System.String,System.String)
  name: GetID(String, String)
  href: api/APIPlugin.SpecialAbilityIdentifier.html#APIPlugin_SpecialAbilityIdentifier_GetID_System_String_System_String_
  commentId: M:APIPlugin.SpecialAbilityIdentifier.GetID(System.String,System.String)
  fullName: APIPlugin.SpecialAbilityIdentifier.GetID(System.String, System.String)
  nameWithType: SpecialAbilityIdentifier.GetID(String, String)
- uid: APIPlugin.SpecialAbilityIdentifier.GetID*
  name: GetID
  href: api/APIPlugin.SpecialAbilityIdentifier.html#APIPlugin_SpecialAbilityIdentifier_GetID_
  commentId: Overload:APIPlugin.SpecialAbilityIdentifier.GetID
  isSpec: "True"
  fullName: APIPlugin.SpecialAbilityIdentifier.GetID
  nameWithType: SpecialAbilityIdentifier.GetID
- uid: APIPlugin.SpecialAbilityIdentifier.id
  name: id
  href: api/APIPlugin.SpecialAbilityIdentifier.html#APIPlugin_SpecialAbilityIdentifier_id
  commentId: F:APIPlugin.SpecialAbilityIdentifier.id
  fullName: APIPlugin.SpecialAbilityIdentifier.id
  nameWithType: SpecialAbilityIdentifier.id
- uid: APIPlugin.SpecialAbilityIdentifier.ToString
  name: ToString()
  href: api/APIPlugin.SpecialAbilityIdentifier.html#APIPlugin_SpecialAbilityIdentifier_ToString
  commentId: M:APIPlugin.SpecialAbilityIdentifier.ToString
  fullName: APIPlugin.SpecialAbilityIdentifier.ToString()
  nameWithType: SpecialAbilityIdentifier.ToString()
- uid: APIPlugin.SpecialAbilityIdentifier.ToString*
  name: ToString
  href: api/APIPlugin.SpecialAbilityIdentifier.html#APIPlugin_SpecialAbilityIdentifier_ToString_
  commentId: Overload:APIPlugin.SpecialAbilityIdentifier.ToString
  isSpec: "True"
  fullName: APIPlugin.SpecialAbilityIdentifier.ToString
  nameWithType: SpecialAbilityIdentifier.ToString
- uid: APIPlugin.TailIdentifier
  name: TailIdentifier
  href: api/APIPlugin.TailIdentifier.html
  commentId: T:APIPlugin.TailIdentifier
  fullName: APIPlugin.TailIdentifier
  nameWithType: TailIdentifier
- uid: APIPlugin.TailIdentifier.#ctor(System.String,UnityEngine.Texture2D,DiskCardGame.CardModificationInfo)
  name: TailIdentifier(String, Texture2D, CardModificationInfo)
  href: api/APIPlugin.TailIdentifier.html#APIPlugin_TailIdentifier__ctor_System_String_UnityEngine_Texture2D_DiskCardGame_CardModificationInfo_
  commentId: M:APIPlugin.TailIdentifier.#ctor(System.String,UnityEngine.Texture2D,DiskCardGame.CardModificationInfo)
  fullName: APIPlugin.TailIdentifier.TailIdentifier(System.String, UnityEngine.Texture2D, DiskCardGame.CardModificationInfo)
  nameWithType: TailIdentifier.TailIdentifier(String, Texture2D, CardModificationInfo)
- uid: APIPlugin.TailIdentifier.#ctor*
  name: TailIdentifier
  href: api/APIPlugin.TailIdentifier.html#APIPlugin_TailIdentifier__ctor_
  commentId: Overload:APIPlugin.TailIdentifier.#ctor
  isSpec: "True"
  fullName: APIPlugin.TailIdentifier.TailIdentifier
  nameWithType: TailIdentifier.TailIdentifier
- uid: APIPlugin.TailIdentifier.Tail
  name: Tail
  href: api/APIPlugin.TailIdentifier.html#APIPlugin_TailIdentifier_Tail
  commentId: P:APIPlugin.TailIdentifier.Tail
  fullName: APIPlugin.TailIdentifier.Tail
  nameWithType: TailIdentifier.Tail
- uid: APIPlugin.TailIdentifier.Tail*
  name: Tail
  href: api/APIPlugin.TailIdentifier.html#APIPlugin_TailIdentifier_Tail_
  commentId: Overload:APIPlugin.TailIdentifier.Tail
  isSpec: "True"
  fullName: APIPlugin.TailIdentifier.Tail
  nameWithType: TailIdentifier.Tail
- uid: APIPlugin.TailIdentifier.ToString
  name: ToString()
  href: api/APIPlugin.TailIdentifier.html#APIPlugin_TailIdentifier_ToString
  commentId: M:APIPlugin.TailIdentifier.ToString
  fullName: APIPlugin.TailIdentifier.ToString()
  nameWithType: TailIdentifier.ToString()
- uid: APIPlugin.TailIdentifier.ToString*
  name: ToString
  href: api/APIPlugin.TailIdentifier.html#APIPlugin_TailIdentifier_ToString_
  commentId: Overload:APIPlugin.TailIdentifier.ToString
  isSpec: "True"
  fullName: APIPlugin.TailIdentifier.ToString
  nameWithType: TailIdentifier.ToString
- uid: APIPlugin.TypeMapper`2
  name: TypeMapper<S, D>
  href: api/APIPlugin.TypeMapper-2.html
  commentId: T:APIPlugin.TypeMapper`2
  name.vb: TypeMapper(Of S, D)
  fullName: APIPlugin.TypeMapper<S, D>
  fullName.vb: APIPlugin.TypeMapper(Of S, D)
  nameWithType: TypeMapper<S, D>
  nameWithType.vb: TypeMapper(Of S, D)
- uid: APIPlugin.TypeMapper`2.Convert(`0,`1)
  name: Convert(S, D)
  href: api/APIPlugin.TypeMapper-2.html#APIPlugin_TypeMapper_2_Convert__0__1_
  commentId: M:APIPlugin.TypeMapper`2.Convert(`0,`1)
  fullName: APIPlugin.TypeMapper<S, D>.Convert(S, D)
  fullName.vb: APIPlugin.TypeMapper(Of S, D).Convert(S, D)
  nameWithType: TypeMapper<S, D>.Convert(S, D)
  nameWithType.vb: TypeMapper(Of S, D).Convert(S, D)
- uid: APIPlugin.TypeMapper`2.Convert*
  name: Convert
  href: api/APIPlugin.TypeMapper-2.html#APIPlugin_TypeMapper_2_Convert_
  commentId: Overload:APIPlugin.TypeMapper`2.Convert
  isSpec: "True"
  fullName: APIPlugin.TypeMapper<S, D>.Convert
  fullName.vb: APIPlugin.TypeMapper(Of S, D).Convert
  nameWithType: TypeMapper<S, D>.Convert
  nameWithType.vb: TypeMapper(Of S, D).Convert
- uid: InscryptionAPI
  name: InscryptionAPI
  href: api/InscryptionAPI.html
  commentId: N:InscryptionAPI
  fullName: InscryptionAPI
  nameWithType: InscryptionAPI
- uid: InscryptionAPI.Ascension
  name: InscryptionAPI.Ascension
  href: api/InscryptionAPI.Ascension.html
  commentId: N:InscryptionAPI.Ascension
  fullName: InscryptionAPI.Ascension
  nameWithType: InscryptionAPI.Ascension
- uid: InscryptionAPI.Ascension.AscensionChallengePaginator
  name: AscensionChallengePaginator
  href: api/InscryptionAPI.Ascension.AscensionChallengePaginator.html
  commentId: T:InscryptionAPI.Ascension.AscensionChallengePaginator
  fullName: InscryptionAPI.Ascension.AscensionChallengePaginator
  nameWithType: AscensionChallengePaginator
- uid: InscryptionAPI.Ascension.AscensionChallengePaginator.bottomRow
  name: bottomRow
  href: api/InscryptionAPI.Ascension.AscensionChallengePaginator.html#InscryptionAPI_Ascension_AscensionChallengePaginator_bottomRow
  commentId: F:InscryptionAPI.Ascension.AscensionChallengePaginator.bottomRow
  fullName: InscryptionAPI.Ascension.AscensionChallengePaginator.bottomRow
  nameWithType: AscensionChallengePaginator.bottomRow
- uid: InscryptionAPI.Ascension.AscensionChallengePaginator.challengePageIndex
  name: challengePageIndex
  href: api/InscryptionAPI.Ascension.AscensionChallengePaginator.html#InscryptionAPI_Ascension_AscensionChallengePaginator_challengePageIndex
  commentId: F:InscryptionAPI.Ascension.AscensionChallengePaginator.challengePageIndex
  fullName: InscryptionAPI.Ascension.AscensionChallengePaginator.challengePageIndex
  nameWithType: AscensionChallengePaginator.challengePageIndex
- uid: InscryptionAPI.Ascension.AscensionChallengePaginator.ChallengePageLeft(DiskCardGame.MainInputInteractable)
  name: ChallengePageLeft(MainInputInteractable)
  href: api/InscryptionAPI.Ascension.AscensionChallengePaginator.html#InscryptionAPI_Ascension_AscensionChallengePaginator_ChallengePageLeft_DiskCardGame_MainInputInteractable_
  commentId: M:InscryptionAPI.Ascension.AscensionChallengePaginator.ChallengePageLeft(DiskCardGame.MainInputInteractable)
  fullName: InscryptionAPI.Ascension.AscensionChallengePaginator.ChallengePageLeft(DiskCardGame.MainInputInteractable)
  nameWithType: AscensionChallengePaginator.ChallengePageLeft(MainInputInteractable)
- uid: InscryptionAPI.Ascension.AscensionChallengePaginator.ChallengePageLeft*
  name: ChallengePageLeft
  href: api/InscryptionAPI.Ascension.AscensionChallengePaginator.html#InscryptionAPI_Ascension_AscensionChallengePaginator_ChallengePageLeft_
  commentId: Overload:InscryptionAPI.Ascension.AscensionChallengePaginator.ChallengePageLeft
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionChallengePaginator.ChallengePageLeft
  nameWithType: AscensionChallengePaginator.ChallengePageLeft
- uid: InscryptionAPI.Ascension.AscensionChallengePaginator.ChallengePageRight(DiskCardGame.MainInputInteractable)
  name: ChallengePageRight(MainInputInteractable)
  href: api/InscryptionAPI.Ascension.AscensionChallengePaginator.html#InscryptionAPI_Ascension_AscensionChallengePaginator_ChallengePageRight_DiskCardGame_MainInputInteractable_
  commentId: M:InscryptionAPI.Ascension.AscensionChallengePaginator.ChallengePageRight(DiskCardGame.MainInputInteractable)
  fullName: InscryptionAPI.Ascension.AscensionChallengePaginator.ChallengePageRight(DiskCardGame.MainInputInteractable)
  nameWithType: AscensionChallengePaginator.ChallengePageRight(MainInputInteractable)
- uid: InscryptionAPI.Ascension.AscensionChallengePaginator.ChallengePageRight*
  name: ChallengePageRight
  href: api/InscryptionAPI.Ascension.AscensionChallengePaginator.html#InscryptionAPI_Ascension_AscensionChallengePaginator_ChallengePageRight_
  commentId: Overload:InscryptionAPI.Ascension.AscensionChallengePaginator.ChallengePageRight
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionChallengePaginator.ChallengePageRight
  nameWithType: AscensionChallengePaginator.ChallengePageRight
- uid: InscryptionAPI.Ascension.AscensionChallengePaginator.CHALLENGES_PER_ROW
  name: CHALLENGES_PER_ROW
  href: api/InscryptionAPI.Ascension.AscensionChallengePaginator.html#InscryptionAPI_Ascension_AscensionChallengePaginator_CHALLENGES_PER_ROW
  commentId: F:InscryptionAPI.Ascension.AscensionChallengePaginator.CHALLENGES_PER_ROW
  fullName: InscryptionAPI.Ascension.AscensionChallengePaginator.CHALLENGES_PER_ROW
  nameWithType: AscensionChallengePaginator.CHALLENGES_PER_ROW
- uid: InscryptionAPI.Ascension.AscensionChallengePaginator.extraIcon
  name: extraIcon
  href: api/InscryptionAPI.Ascension.AscensionChallengePaginator.html#InscryptionAPI_Ascension_AscensionChallengePaginator_extraIcon
  commentId: F:InscryptionAPI.Ascension.AscensionChallengePaginator.extraIcon
  fullName: InscryptionAPI.Ascension.AscensionChallengePaginator.extraIcon
  nameWithType: AscensionChallengePaginator.extraIcon
- uid: InscryptionAPI.Ascension.AscensionChallengePaginator.GeneratePages
  name: GeneratePages()
  href: api/InscryptionAPI.Ascension.AscensionChallengePaginator.html#InscryptionAPI_Ascension_AscensionChallengePaginator_GeneratePages
  commentId: M:InscryptionAPI.Ascension.AscensionChallengePaginator.GeneratePages
  fullName: InscryptionAPI.Ascension.AscensionChallengePaginator.GeneratePages()
  nameWithType: AscensionChallengePaginator.GeneratePages()
- uid: InscryptionAPI.Ascension.AscensionChallengePaginator.GeneratePages*
  name: GeneratePages
  href: api/InscryptionAPI.Ascension.AscensionChallengePaginator.html#InscryptionAPI_Ascension_AscensionChallengePaginator_GeneratePages_
  commentId: Overload:InscryptionAPI.Ascension.AscensionChallengePaginator.GeneratePages
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionChallengePaginator.GeneratePages
  nameWithType: AscensionChallengePaginator.GeneratePages
- uid: InscryptionAPI.Ascension.AscensionChallengePaginator.OnEnable
  name: OnEnable()
  href: api/InscryptionAPI.Ascension.AscensionChallengePaginator.html#InscryptionAPI_Ascension_AscensionChallengePaginator_OnEnable
  commentId: M:InscryptionAPI.Ascension.AscensionChallengePaginator.OnEnable
  fullName: InscryptionAPI.Ascension.AscensionChallengePaginator.OnEnable()
  nameWithType: AscensionChallengePaginator.OnEnable()
- uid: InscryptionAPI.Ascension.AscensionChallengePaginator.OnEnable*
  name: OnEnable
  href: api/InscryptionAPI.Ascension.AscensionChallengePaginator.html#InscryptionAPI_Ascension_AscensionChallengePaginator_OnEnable_
  commentId: Overload:InscryptionAPI.Ascension.AscensionChallengePaginator.OnEnable
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionChallengePaginator.OnEnable
  nameWithType: AscensionChallengePaginator.OnEnable
- uid: InscryptionAPI.Ascension.AscensionChallengePaginator.pages
  name: pages
  href: api/InscryptionAPI.Ascension.AscensionChallengePaginator.html#InscryptionAPI_Ascension_AscensionChallengePaginator_pages
  commentId: F:InscryptionAPI.Ascension.AscensionChallengePaginator.pages
  fullName: InscryptionAPI.Ascension.AscensionChallengePaginator.pages
  nameWithType: AscensionChallengePaginator.pages
- uid: InscryptionAPI.Ascension.AscensionChallengePaginator.showExtraIcon
  name: showExtraIcon
  href: api/InscryptionAPI.Ascension.AscensionChallengePaginator.html#InscryptionAPI_Ascension_AscensionChallengePaginator_showExtraIcon
  commentId: F:InscryptionAPI.Ascension.AscensionChallengePaginator.showExtraIcon
  fullName: InscryptionAPI.Ascension.AscensionChallengePaginator.showExtraIcon
  nameWithType: AscensionChallengePaginator.showExtraIcon
- uid: InscryptionAPI.Ascension.AscensionChallengePaginator.ShowVisibleChallenges
  name: ShowVisibleChallenges()
  href: api/InscryptionAPI.Ascension.AscensionChallengePaginator.html#InscryptionAPI_Ascension_AscensionChallengePaginator_ShowVisibleChallenges
  commentId: M:InscryptionAPI.Ascension.AscensionChallengePaginator.ShowVisibleChallenges
  fullName: InscryptionAPI.Ascension.AscensionChallengePaginator.ShowVisibleChallenges()
  nameWithType: AscensionChallengePaginator.ShowVisibleChallenges()
- uid: InscryptionAPI.Ascension.AscensionChallengePaginator.ShowVisibleChallenges*
  name: ShowVisibleChallenges
  href: api/InscryptionAPI.Ascension.AscensionChallengePaginator.html#InscryptionAPI_Ascension_AscensionChallengePaginator_ShowVisibleChallenges_
  commentId: Overload:InscryptionAPI.Ascension.AscensionChallengePaginator.ShowVisibleChallenges
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionChallengePaginator.ShowVisibleChallenges
  nameWithType: AscensionChallengePaginator.ShowVisibleChallenges
- uid: InscryptionAPI.Ascension.AscensionChallengePaginator.topRow
  name: topRow
  href: api/InscryptionAPI.Ascension.AscensionChallengePaginator.html#InscryptionAPI_Ascension_AscensionChallengePaginator_topRow
  commentId: F:InscryptionAPI.Ascension.AscensionChallengePaginator.topRow
  fullName: InscryptionAPI.Ascension.AscensionChallengePaginator.topRow
  nameWithType: AscensionChallengePaginator.topRow
- uid: InscryptionAPI.Ascension.AscensionChallengeScreenPatches
  name: AscensionChallengeScreenPatches
  href: api/InscryptionAPI.Ascension.AscensionChallengeScreenPatches.html
  commentId: T:InscryptionAPI.Ascension.AscensionChallengeScreenPatches
  fullName: InscryptionAPI.Ascension.AscensionChallengeScreenPatches
  nameWithType: AscensionChallengeScreenPatches
- uid: InscryptionAPI.Ascension.AscensionChallengeScreenPatches.AddPaginationToChallengeScreen
  name: AddPaginationToChallengeScreen()
  href: api/InscryptionAPI.Ascension.AscensionChallengeScreenPatches.html#InscryptionAPI_Ascension_AscensionChallengeScreenPatches_AddPaginationToChallengeScreen
  commentId: M:InscryptionAPI.Ascension.AscensionChallengeScreenPatches.AddPaginationToChallengeScreen
  fullName: InscryptionAPI.Ascension.AscensionChallengeScreenPatches.AddPaginationToChallengeScreen()
  nameWithType: AscensionChallengeScreenPatches.AddPaginationToChallengeScreen()
- uid: InscryptionAPI.Ascension.AscensionChallengeScreenPatches.AddPaginationToChallengeScreen*
  name: AddPaginationToChallengeScreen
  href: api/InscryptionAPI.Ascension.AscensionChallengeScreenPatches.html#InscryptionAPI_Ascension_AscensionChallengeScreenPatches_AddPaginationToChallengeScreen_
  commentId: Overload:InscryptionAPI.Ascension.AscensionChallengeScreenPatches.AddPaginationToChallengeScreen
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionChallengeScreenPatches.AddPaginationToChallengeScreen
  nameWithType: AscensionChallengeScreenPatches.AddPaginationToChallengeScreen
- uid: InscryptionAPI.Ascension.AscensionChallengeScreenPatches.ReassignableIconFixes(DiskCardGame.AscensionIconInteractable@,DiskCardGame.AscensionChallengeInfo)
  name: ReassignableIconFixes(ref AscensionIconInteractable, AscensionChallengeInfo)
  href: api/InscryptionAPI.Ascension.AscensionChallengeScreenPatches.html#InscryptionAPI_Ascension_AscensionChallengeScreenPatches_ReassignableIconFixes_DiskCardGame_AscensionIconInteractable__DiskCardGame_AscensionChallengeInfo_
  commentId: M:InscryptionAPI.Ascension.AscensionChallengeScreenPatches.ReassignableIconFixes(DiskCardGame.AscensionIconInteractable@,DiskCardGame.AscensionChallengeInfo)
  name.vb: ReassignableIconFixes(ByRef AscensionIconInteractable, AscensionChallengeInfo)
  fullName: InscryptionAPI.Ascension.AscensionChallengeScreenPatches.ReassignableIconFixes(ref DiskCardGame.AscensionIconInteractable, DiskCardGame.AscensionChallengeInfo)
  fullName.vb: InscryptionAPI.Ascension.AscensionChallengeScreenPatches.ReassignableIconFixes(ByRef DiskCardGame.AscensionIconInteractable, DiskCardGame.AscensionChallengeInfo)
  nameWithType: AscensionChallengeScreenPatches.ReassignableIconFixes(ref AscensionIconInteractable, AscensionChallengeInfo)
  nameWithType.vb: AscensionChallengeScreenPatches.ReassignableIconFixes(ByRef AscensionIconInteractable, AscensionChallengeInfo)
- uid: InscryptionAPI.Ascension.AscensionChallengeScreenPatches.ReassignableIconFixes*
  name: ReassignableIconFixes
  href: api/InscryptionAPI.Ascension.AscensionChallengeScreenPatches.html#InscryptionAPI_Ascension_AscensionChallengeScreenPatches_ReassignableIconFixes_
  commentId: Overload:InscryptionAPI.Ascension.AscensionChallengeScreenPatches.ReassignableIconFixes
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionChallengeScreenPatches.ReassignableIconFixes
  nameWithType: AscensionChallengeScreenPatches.ReassignableIconFixes
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase
  name: AscensionRunSetupScreenBase
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html
  commentId: T:InscryptionAPI.Ascension.AscensionRunSetupScreenBase
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase
  nameWithType: AscensionRunSetupScreenBase
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.backButton
  name: backButton
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_backButton
  commentId: F:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.backButton
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.backButton
  nameWithType: AscensionRunSetupScreenBase.backButton
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.BuildPaginators(UnityEngine.Transform,System.Boolean)
  name: BuildPaginators(Transform, Boolean)
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_BuildPaginators_UnityEngine_Transform_System_Boolean_
  commentId: M:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.BuildPaginators(UnityEngine.Transform,System.Boolean)
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.BuildPaginators(UnityEngine.Transform, System.Boolean)
  nameWithType: AscensionRunSetupScreenBase.BuildPaginators(Transform, Boolean)
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.BuildPaginators*
  name: BuildPaginators
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_BuildPaginators_
  commentId: Overload:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.BuildPaginators
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.BuildPaginators
  nameWithType: AscensionRunSetupScreenBase.BuildPaginators
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.BuildScreen(Type,DiskCardGame.AscensionMenuScreens.Screen,DiskCardGame.AscensionMenuScreens.Screen)
  name: BuildScreen(Type, AscensionMenuScreens.Screen, AscensionMenuScreens.Screen)
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_BuildScreen_Type_DiskCardGame_AscensionMenuScreens_Screen_DiskCardGame_AscensionMenuScreens_Screen_
  commentId: M:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.BuildScreen(Type,DiskCardGame.AscensionMenuScreens.Screen,DiskCardGame.AscensionMenuScreens.Screen)
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.BuildScreen(Type, DiskCardGame.AscensionMenuScreens.Screen, DiskCardGame.AscensionMenuScreens.Screen)
  nameWithType: AscensionRunSetupScreenBase.BuildScreen(Type, AscensionMenuScreens.Screen, AscensionMenuScreens.Screen)
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.BuildScreen*
  name: BuildScreen
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_BuildScreen_
  commentId: Overload:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.BuildScreen
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.BuildScreen
  nameWithType: AscensionRunSetupScreenBase.BuildScreen
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.CardClicked(GBC.PixelSelectableCard)
  name: CardClicked(PixelSelectableCard)
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_CardClicked_GBC_PixelSelectableCard_
  commentId: M:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.CardClicked(GBC.PixelSelectableCard)
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.CardClicked(GBC.PixelSelectableCard)
  nameWithType: AscensionRunSetupScreenBase.CardClicked(PixelSelectableCard)
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.CardClicked*
  name: CardClicked
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_CardClicked_
  commentId: Overload:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.CardClicked
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.CardClicked
  nameWithType: AscensionRunSetupScreenBase.CardClicked
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.CardCursorEntered(GBC.PixelSelectableCard)
  name: CardCursorEntered(PixelSelectableCard)
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_CardCursorEntered_GBC_PixelSelectableCard_
  commentId: M:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.CardCursorEntered(GBC.PixelSelectableCard)
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.CardCursorEntered(GBC.PixelSelectableCard)
  nameWithType: AscensionRunSetupScreenBase.CardCursorEntered(PixelSelectableCard)
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.CardCursorEntered*
  name: CardCursorEntered
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_CardCursorEntered_
  commentId: Overload:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.CardCursorEntered
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.CardCursorEntered
  nameWithType: AscensionRunSetupScreenBase.CardCursorEntered
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.cardInfoLines
  name: cardInfoLines
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_cardInfoLines
  commentId: F:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.cardInfoLines
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.cardInfoLines
  nameWithType: AscensionRunSetupScreenBase.cardInfoLines
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.cardPanel
  name: cardPanel
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_cardPanel
  commentId: F:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.cardPanel
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.cardPanel
  nameWithType: AscensionRunSetupScreenBase.cardPanel
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.cards
  name: cards
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_cards
  commentId: F:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.cards
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.cards
  nameWithType: AscensionRunSetupScreenBase.cards
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.CENTER_DASHES
  name: CENTER_DASHES
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_CENTER_DASHES
  commentId: F:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.CENTER_DASHES
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.CENTER_DASHES
  nameWithType: AscensionRunSetupScreenBase.CENTER_DASHES
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.challengeFooterLines
  name: challengeFooterLines
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_challengeFooterLines
  commentId: F:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.challengeFooterLines
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.challengeFooterLines
  nameWithType: AscensionRunSetupScreenBase.challengeFooterLines
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.challengeHeaderDisplay
  name: challengeHeaderDisplay
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_challengeHeaderDisplay
  commentId: F:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.challengeHeaderDisplay
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.challengeHeaderDisplay
  nameWithType: AscensionRunSetupScreenBase.challengeHeaderDisplay
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.ClearCardInfo(System.Boolean)
  name: ClearCardInfo(Boolean)
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_ClearCardInfo_System_Boolean_
  commentId: M:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.ClearCardInfo(System.Boolean)
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.ClearCardInfo(System.Boolean)
  nameWithType: AscensionRunSetupScreenBase.ClearCardInfo(Boolean)
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.ClearCardInfo*
  name: ClearCardInfo
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_ClearCardInfo_
  commentId: Overload:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.ClearCardInfo
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.ClearCardInfo
  nameWithType: AscensionRunSetupScreenBase.ClearCardInfo
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.ClearMessage
  name: ClearMessage()
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_ClearMessage
  commentId: M:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.ClearMessage
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.ClearMessage()
  nameWithType: AscensionRunSetupScreenBase.ClearMessage()
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.ClearMessage*
  name: ClearMessage
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_ClearMessage_
  commentId: Overload:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.ClearMessage
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.ClearMessage
  nameWithType: AscensionRunSetupScreenBase.ClearMessage
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.continueButton
  name: continueButton
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_continueButton
  commentId: F:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.continueButton
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.continueButton
  nameWithType: AscensionRunSetupScreenBase.continueButton
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.DisplayCardInfo(DiskCardGame.CardInfo,System.String,System.String,System.Boolean)
  name: DisplayCardInfo(CardInfo, String, String, Boolean)
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_DisplayCardInfo_DiskCardGame_CardInfo_System_String_System_String_System_Boolean_
  commentId: M:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.DisplayCardInfo(DiskCardGame.CardInfo,System.String,System.String,System.Boolean)
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.DisplayCardInfo(DiskCardGame.CardInfo, System.String, System.String, System.Boolean)
  nameWithType: AscensionRunSetupScreenBase.DisplayCardInfo(CardInfo, String, String, Boolean)
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.DisplayCardInfo*
  name: DisplayCardInfo
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_DisplayCardInfo_
  commentId: Overload:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.DisplayCardInfo
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.DisplayCardInfo
  nameWithType: AscensionRunSetupScreenBase.DisplayCardInfo
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.DisplayChallengeInfo(DiskCardGame.AscensionChallenge,System.Boolean)
  name: DisplayChallengeInfo(AscensionChallenge, Boolean)
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_DisplayChallengeInfo_DiskCardGame_AscensionChallenge_System_Boolean_
  commentId: M:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.DisplayChallengeInfo(DiskCardGame.AscensionChallenge,System.Boolean)
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.DisplayChallengeInfo(DiskCardGame.AscensionChallenge, System.Boolean)
  nameWithType: AscensionRunSetupScreenBase.DisplayChallengeInfo(AscensionChallenge, Boolean)
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.DisplayChallengeInfo(System.String,System.Int32,System.Boolean)
  name: DisplayChallengeInfo(String, Int32, Boolean)
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_DisplayChallengeInfo_System_String_System_Int32_System_Boolean_
  commentId: M:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.DisplayChallengeInfo(System.String,System.Int32,System.Boolean)
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.DisplayChallengeInfo(System.String, System.Int32, System.Boolean)
  nameWithType: AscensionRunSetupScreenBase.DisplayChallengeInfo(String, Int32, Boolean)
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.DisplayChallengeInfo*
  name: DisplayChallengeInfo
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_DisplayChallengeInfo_
  commentId: Overload:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.DisplayChallengeInfo
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.DisplayChallengeInfo
  nameWithType: AscensionRunSetupScreenBase.DisplayChallengeInfo
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.DisplayMessage(System.String)
  name: DisplayMessage(String)
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_DisplayMessage_System_String_
  commentId: M:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.DisplayMessage(System.String)
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.DisplayMessage(System.String)
  nameWithType: AscensionRunSetupScreenBase.DisplayMessage(String)
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.DisplayMessage*
  name: DisplayMessage
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_DisplayMessage_
  commentId: Overload:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.DisplayMessage
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.DisplayMessage
  nameWithType: AscensionRunSetupScreenBase.DisplayMessage
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.FULL_DASHES
  name: FULL_DASHES
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_FULL_DASHES
  commentId: F:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.FULL_DASHES
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.FULL_DASHES
  nameWithType: AscensionRunSetupScreenBase.FULL_DASHES
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.headerText
  name: headerText
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_headerText
  commentId: P:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.headerText
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.headerText
  nameWithType: AscensionRunSetupScreenBase.headerText
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.headerText*
  name: headerText
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_headerText_
  commentId: Overload:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.headerText
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.headerText
  nameWithType: AscensionRunSetupScreenBase.headerText
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.InitializeScreen(UnityEngine.GameObject)
  name: InitializeScreen(GameObject)
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_InitializeScreen_UnityEngine_GameObject_
  commentId: M:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.InitializeScreen(UnityEngine.GameObject)
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.InitializeScreen(UnityEngine.GameObject)
  nameWithType: AscensionRunSetupScreenBase.InitializeScreen(GameObject)
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.InitializeScreen*
  name: InitializeScreen
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_InitializeScreen_
  commentId: Overload:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.InitializeScreen
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.InitializeScreen
  nameWithType: AscensionRunSetupScreenBase.InitializeScreen
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.leftButton
  name: leftButton
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_leftButton
  commentId: F:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.leftButton
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.leftButton
  nameWithType: AscensionRunSetupScreenBase.leftButton
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.LeftButtonClicked(DiskCardGame.MainInputInteractable)
  name: LeftButtonClicked(MainInputInteractable)
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_LeftButtonClicked_DiskCardGame_MainInputInteractable_
  commentId: M:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.LeftButtonClicked(DiskCardGame.MainInputInteractable)
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.LeftButtonClicked(DiskCardGame.MainInputInteractable)
  nameWithType: AscensionRunSetupScreenBase.LeftButtonClicked(MainInputInteractable)
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.LeftButtonClicked*
  name: LeftButtonClicked
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_LeftButtonClicked_
  commentId: Overload:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.LeftButtonClicked
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.LeftButtonClicked
  nameWithType: AscensionRunSetupScreenBase.LeftButtonClicked
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.OnEnable
  name: OnEnable()
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_OnEnable
  commentId: M:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.OnEnable
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.OnEnable()
  nameWithType: AscensionRunSetupScreenBase.OnEnable()
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.OnEnable*
  name: OnEnable
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_OnEnable_
  commentId: Overload:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.OnEnable
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.OnEnable
  nameWithType: AscensionRunSetupScreenBase.OnEnable
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.rightButton
  name: rightButton
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_rightButton
  commentId: F:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.rightButton
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.rightButton
  nameWithType: AscensionRunSetupScreenBase.rightButton
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.RightButtonClicked(DiskCardGame.MainInputInteractable)
  name: RightButtonClicked(MainInputInteractable)
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_RightButtonClicked_DiskCardGame_MainInputInteractable_
  commentId: M:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.RightButtonClicked(DiskCardGame.MainInputInteractable)
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.RightButtonClicked(DiskCardGame.MainInputInteractable)
  nameWithType: AscensionRunSetupScreenBase.RightButtonClicked(MainInputInteractable)
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.RightButtonClicked*
  name: RightButtonClicked
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_RightButtonClicked_
  commentId: Overload:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.RightButtonClicked
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.RightButtonClicked
  nameWithType: AscensionRunSetupScreenBase.RightButtonClicked
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.screenTitle
  name: screenTitle
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_screenTitle
  commentId: F:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.screenTitle
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.screenTitle
  nameWithType: AscensionRunSetupScreenBase.screenTitle
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.secondaryInfoDisplayer
  name: secondaryInfoDisplayer
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_secondaryInfoDisplayer
  commentId: F:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.secondaryInfoDisplayer
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.secondaryInfoDisplayer
  nameWithType: AscensionRunSetupScreenBase.secondaryInfoDisplayer
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.showCardDisplayer
  name: showCardDisplayer
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_showCardDisplayer
  commentId: P:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.showCardDisplayer
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.showCardDisplayer
  nameWithType: AscensionRunSetupScreenBase.showCardDisplayer
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.showCardDisplayer*
  name: showCardDisplayer
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_showCardDisplayer_
  commentId: Overload:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.showCardDisplayer
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.showCardDisplayer
  nameWithType: AscensionRunSetupScreenBase.showCardDisplayer
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.showCardPanel
  name: showCardPanel
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_showCardPanel
  commentId: P:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.showCardPanel
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.showCardPanel
  nameWithType: AscensionRunSetupScreenBase.showCardPanel
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.showCardPanel*
  name: showCardPanel
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_showCardPanel_
  commentId: Overload:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.showCardPanel
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.showCardPanel
  nameWithType: AscensionRunSetupScreenBase.showCardPanel
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.ShowCards(List{DiskCardGame.CardInfo})
  name: ShowCards(List<CardInfo>)
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_ShowCards_List_DiskCardGame_CardInfo__
  commentId: M:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.ShowCards(List{DiskCardGame.CardInfo})
  name.vb: ShowCards(List(Of CardInfo))
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.ShowCards(List<DiskCardGame.CardInfo>)
  fullName.vb: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.ShowCards(List(Of DiskCardGame.CardInfo))
  nameWithType: AscensionRunSetupScreenBase.ShowCards(List<CardInfo>)
  nameWithType.vb: AscensionRunSetupScreenBase.ShowCards(List(Of CardInfo))
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.ShowCards*
  name: ShowCards
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_ShowCards_
  commentId: Overload:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.ShowCards
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.ShowCards
  nameWithType: AscensionRunSetupScreenBase.ShowCards
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.transitionController
  name: transitionController
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_transitionController
  commentId: F:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.transitionController
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.transitionController
  nameWithType: AscensionRunSetupScreenBase.transitionController
- uid: InscryptionAPI.Ascension.AscensionScreenManager
  name: AscensionScreenManager
  href: api/InscryptionAPI.Ascension.AscensionScreenManager.html
  commentId: T:InscryptionAPI.Ascension.AscensionScreenManager
  fullName: InscryptionAPI.Ascension.AscensionScreenManager
  nameWithType: AscensionScreenManager
- uid: InscryptionAPI.Ascension.AscensionScreenManager.DeactivateAllCustomScreens
  name: DeactivateAllCustomScreens()
  href: api/InscryptionAPI.Ascension.AscensionScreenManager.html#InscryptionAPI_Ascension_AscensionScreenManager_DeactivateAllCustomScreens
  commentId: M:InscryptionAPI.Ascension.AscensionScreenManager.DeactivateAllCustomScreens
  fullName: InscryptionAPI.Ascension.AscensionScreenManager.DeactivateAllCustomScreens()
  nameWithType: AscensionScreenManager.DeactivateAllCustomScreens()
- uid: InscryptionAPI.Ascension.AscensionScreenManager.DeactivateAllCustomScreens*
  name: DeactivateAllCustomScreens
  href: api/InscryptionAPI.Ascension.AscensionScreenManager.html#InscryptionAPI_Ascension_AscensionScreenManager_DeactivateAllCustomScreens_
  commentId: Overload:InscryptionAPI.Ascension.AscensionScreenManager.DeactivateAllCustomScreens
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionScreenManager.DeactivateAllCustomScreens
  nameWithType: AscensionScreenManager.DeactivateAllCustomScreens
- uid: InscryptionAPI.Ascension.AscensionScreenManager.HoverTextFirstCustomScreen(DiskCardGame.AscensionChallengeScreen@)
  name: HoverTextFirstCustomScreen(ref AscensionChallengeScreen)
  href: api/InscryptionAPI.Ascension.AscensionScreenManager.html#InscryptionAPI_Ascension_AscensionScreenManager_HoverTextFirstCustomScreen_DiskCardGame_AscensionChallengeScreen__
  commentId: M:InscryptionAPI.Ascension.AscensionScreenManager.HoverTextFirstCustomScreen(DiskCardGame.AscensionChallengeScreen@)
  name.vb: HoverTextFirstCustomScreen(ByRef AscensionChallengeScreen)
  fullName: InscryptionAPI.Ascension.AscensionScreenManager.HoverTextFirstCustomScreen(ref DiskCardGame.AscensionChallengeScreen)
  fullName.vb: InscryptionAPI.Ascension.AscensionScreenManager.HoverTextFirstCustomScreen(ByRef DiskCardGame.AscensionChallengeScreen)
  nameWithType: AscensionScreenManager.HoverTextFirstCustomScreen(ref AscensionChallengeScreen)
  nameWithType.vb: AscensionScreenManager.HoverTextFirstCustomScreen(ByRef AscensionChallengeScreen)
- uid: InscryptionAPI.Ascension.AscensionScreenManager.HoverTextFirstCustomScreen*
  name: HoverTextFirstCustomScreen
  href: api/InscryptionAPI.Ascension.AscensionScreenManager.html#InscryptionAPI_Ascension_AscensionScreenManager_HoverTextFirstCustomScreen_
  commentId: Overload:InscryptionAPI.Ascension.AscensionScreenManager.HoverTextFirstCustomScreen
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionScreenManager.HoverTextFirstCustomScreen
  nameWithType: AscensionScreenManager.HoverTextFirstCustomScreen
- uid: InscryptionAPI.Ascension.AscensionScreenManager.InitializeAllScreens
  name: InitializeAllScreens()
  href: api/InscryptionAPI.Ascension.AscensionScreenManager.html#InscryptionAPI_Ascension_AscensionScreenManager_InitializeAllScreens
  commentId: M:InscryptionAPI.Ascension.AscensionScreenManager.InitializeAllScreens
  fullName: InscryptionAPI.Ascension.AscensionScreenManager.InitializeAllScreens()
  nameWithType: AscensionScreenManager.InitializeAllScreens()
- uid: InscryptionAPI.Ascension.AscensionScreenManager.InitializeAllScreens*
  name: InitializeAllScreens
  href: api/InscryptionAPI.Ascension.AscensionScreenManager.html#InscryptionAPI_Ascension_AscensionScreenManager_InitializeAllScreens_
  commentId: Overload:InscryptionAPI.Ascension.AscensionScreenManager.InitializeAllScreens
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionScreenManager.InitializeAllScreens
  nameWithType: AscensionScreenManager.InitializeAllScreens
- uid: InscryptionAPI.Ascension.AscensionScreenManager.InitializeScreensOnStart
  name: InitializeScreensOnStart()
  href: api/InscryptionAPI.Ascension.AscensionScreenManager.html#InscryptionAPI_Ascension_AscensionScreenManager_InitializeScreensOnStart
  commentId: M:InscryptionAPI.Ascension.AscensionScreenManager.InitializeScreensOnStart
  fullName: InscryptionAPI.Ascension.AscensionScreenManager.InitializeScreensOnStart()
  nameWithType: AscensionScreenManager.InitializeScreensOnStart()
- uid: InscryptionAPI.Ascension.AscensionScreenManager.InitializeScreensOnStart*
  name: InitializeScreensOnStart
  href: api/InscryptionAPI.Ascension.AscensionScreenManager.html#InscryptionAPI_Ascension_AscensionScreenManager_InitializeScreensOnStart_
  commentId: Overload:InscryptionAPI.Ascension.AscensionScreenManager.InitializeScreensOnStart
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionScreenManager.InitializeScreensOnStart
  nameWithType: AscensionScreenManager.InitializeScreensOnStart
- uid: InscryptionAPI.Ascension.AscensionScreenManager.RegisterScreen*
  name: RegisterScreen
  href: api/InscryptionAPI.Ascension.AscensionScreenManager.html#InscryptionAPI_Ascension_AscensionScreenManager_RegisterScreen_
  commentId: Overload:InscryptionAPI.Ascension.AscensionScreenManager.RegisterScreen
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionScreenManager.RegisterScreen
  nameWithType: AscensionScreenManager.RegisterScreen
- uid: InscryptionAPI.Ascension.AscensionScreenManager.RegisterScreen``1
  name: RegisterScreen<T>()
  href: api/InscryptionAPI.Ascension.AscensionScreenManager.html#InscryptionAPI_Ascension_AscensionScreenManager_RegisterScreen__1
  commentId: M:InscryptionAPI.Ascension.AscensionScreenManager.RegisterScreen``1
  name.vb: RegisterScreen(Of T)()
  fullName: InscryptionAPI.Ascension.AscensionScreenManager.RegisterScreen<T>()
  fullName.vb: InscryptionAPI.Ascension.AscensionScreenManager.RegisterScreen(Of T)()
  nameWithType: AscensionScreenManager.RegisterScreen<T>()
  nameWithType.vb: AscensionScreenManager.RegisterScreen(Of T)()
- uid: InscryptionAPI.Ascension.AscensionScreenManager.SwitchToScreen(System.Collections.IEnumerator,DiskCardGame.AscensionMenuScreens.Screen)
  name: SwitchToScreen(IEnumerator, AscensionMenuScreens.Screen)
  href: api/InscryptionAPI.Ascension.AscensionScreenManager.html#InscryptionAPI_Ascension_AscensionScreenManager_SwitchToScreen_System_Collections_IEnumerator_DiskCardGame_AscensionMenuScreens_Screen_
  commentId: M:InscryptionAPI.Ascension.AscensionScreenManager.SwitchToScreen(System.Collections.IEnumerator,DiskCardGame.AscensionMenuScreens.Screen)
  fullName: InscryptionAPI.Ascension.AscensionScreenManager.SwitchToScreen(System.Collections.IEnumerator, DiskCardGame.AscensionMenuScreens.Screen)
  nameWithType: AscensionScreenManager.SwitchToScreen(IEnumerator, AscensionMenuScreens.Screen)
- uid: InscryptionAPI.Ascension.AscensionScreenManager.SwitchToScreen*
  name: SwitchToScreen
  href: api/InscryptionAPI.Ascension.AscensionScreenManager.html#InscryptionAPI_Ascension_AscensionScreenManager_SwitchToScreen_
  commentId: Overload:InscryptionAPI.Ascension.AscensionScreenManager.SwitchToScreen
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionScreenManager.SwitchToScreen
  nameWithType: AscensionScreenManager.SwitchToScreen
- uid: InscryptionAPI.Ascension.AscensionScreenManager.TransitionToSideDeckScreen(DiskCardGame.AscensionChallengeScreen@)
  name: TransitionToSideDeckScreen(ref AscensionChallengeScreen)
  href: api/InscryptionAPI.Ascension.AscensionScreenManager.html#InscryptionAPI_Ascension_AscensionScreenManager_TransitionToSideDeckScreen_DiskCardGame_AscensionChallengeScreen__
  commentId: M:InscryptionAPI.Ascension.AscensionScreenManager.TransitionToSideDeckScreen(DiskCardGame.AscensionChallengeScreen@)
  name.vb: TransitionToSideDeckScreen(ByRef AscensionChallengeScreen)
  fullName: InscryptionAPI.Ascension.AscensionScreenManager.TransitionToSideDeckScreen(ref DiskCardGame.AscensionChallengeScreen)
  fullName.vb: InscryptionAPI.Ascension.AscensionScreenManager.TransitionToSideDeckScreen(ByRef DiskCardGame.AscensionChallengeScreen)
  nameWithType: AscensionScreenManager.TransitionToSideDeckScreen(ref AscensionChallengeScreen)
  nameWithType.vb: AscensionScreenManager.TransitionToSideDeckScreen(ByRef AscensionChallengeScreen)
- uid: InscryptionAPI.Ascension.AscensionScreenManager.TransitionToSideDeckScreen*
  name: TransitionToSideDeckScreen
  href: api/InscryptionAPI.Ascension.AscensionScreenManager.html#InscryptionAPI_Ascension_AscensionScreenManager_TransitionToSideDeckScreen_
  commentId: Overload:InscryptionAPI.Ascension.AscensionScreenManager.TransitionToSideDeckScreen
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionScreenManager.TransitionToSideDeckScreen
  nameWithType: AscensionScreenManager.TransitionToSideDeckScreen
- uid: InscryptionAPI.Ascension.AscensionScreenSort
  name: AscensionScreenSort
  href: api/InscryptionAPI.Ascension.AscensionScreenSort.html
  commentId: T:InscryptionAPI.Ascension.AscensionScreenSort
  fullName: InscryptionAPI.Ascension.AscensionScreenSort
  nameWithType: AscensionScreenSort
- uid: InscryptionAPI.Ascension.AscensionScreenSort.#ctor(InscryptionAPI.Ascension.AscensionScreenSort.Direction)
  name: AscensionScreenSort(AscensionScreenSort.Direction)
  href: api/InscryptionAPI.Ascension.AscensionScreenSort.html#InscryptionAPI_Ascension_AscensionScreenSort__ctor_InscryptionAPI_Ascension_AscensionScreenSort_Direction_
  commentId: M:InscryptionAPI.Ascension.AscensionScreenSort.#ctor(InscryptionAPI.Ascension.AscensionScreenSort.Direction)
  fullName: InscryptionAPI.Ascension.AscensionScreenSort.AscensionScreenSort(InscryptionAPI.Ascension.AscensionScreenSort.Direction)
  nameWithType: AscensionScreenSort.AscensionScreenSort(AscensionScreenSort.Direction)
- uid: InscryptionAPI.Ascension.AscensionScreenSort.#ctor*
  name: AscensionScreenSort
  href: api/InscryptionAPI.Ascension.AscensionScreenSort.html#InscryptionAPI_Ascension_AscensionScreenSort__ctor_
  commentId: Overload:InscryptionAPI.Ascension.AscensionScreenSort.#ctor
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionScreenSort.AscensionScreenSort
  nameWithType: AscensionScreenSort.AscensionScreenSort
- uid: InscryptionAPI.Ascension.AscensionScreenSort.Direction
  name: AscensionScreenSort.Direction
  href: api/InscryptionAPI.Ascension.AscensionScreenSort.Direction.html
  commentId: T:InscryptionAPI.Ascension.AscensionScreenSort.Direction
  fullName: InscryptionAPI.Ascension.AscensionScreenSort.Direction
  nameWithType: AscensionScreenSort.Direction
- uid: InscryptionAPI.Ascension.AscensionScreenSort.Direction.NoPreference
  name: NoPreference
  href: api/InscryptionAPI.Ascension.AscensionScreenSort.Direction.html#InscryptionAPI_Ascension_AscensionScreenSort_Direction_NoPreference
  commentId: F:InscryptionAPI.Ascension.AscensionScreenSort.Direction.NoPreference
  fullName: InscryptionAPI.Ascension.AscensionScreenSort.Direction.NoPreference
  nameWithType: AscensionScreenSort.Direction.NoPreference
- uid: InscryptionAPI.Ascension.AscensionScreenSort.Direction.PrefersEnd
  name: PrefersEnd
  href: api/InscryptionAPI.Ascension.AscensionScreenSort.Direction.html#InscryptionAPI_Ascension_AscensionScreenSort_Direction_PrefersEnd
  commentId: F:InscryptionAPI.Ascension.AscensionScreenSort.Direction.PrefersEnd
  fullName: InscryptionAPI.Ascension.AscensionScreenSort.Direction.PrefersEnd
  nameWithType: AscensionScreenSort.Direction.PrefersEnd
- uid: InscryptionAPI.Ascension.AscensionScreenSort.Direction.PrefersStart
  name: PrefersStart
  href: api/InscryptionAPI.Ascension.AscensionScreenSort.Direction.html#InscryptionAPI_Ascension_AscensionScreenSort_Direction_PrefersStart
  commentId: F:InscryptionAPI.Ascension.AscensionScreenSort.Direction.PrefersStart
  fullName: InscryptionAPI.Ascension.AscensionScreenSort.Direction.PrefersStart
  nameWithType: AscensionScreenSort.Direction.PrefersStart
- uid: InscryptionAPI.Ascension.AscensionScreenSort.Direction.RequiresEnd
  name: RequiresEnd
  href: api/InscryptionAPI.Ascension.AscensionScreenSort.Direction.html#InscryptionAPI_Ascension_AscensionScreenSort_Direction_RequiresEnd
  commentId: F:InscryptionAPI.Ascension.AscensionScreenSort.Direction.RequiresEnd
  fullName: InscryptionAPI.Ascension.AscensionScreenSort.Direction.RequiresEnd
  nameWithType: AscensionScreenSort.Direction.RequiresEnd
- uid: InscryptionAPI.Ascension.AscensionScreenSort.Direction.RequiresStart
  name: RequiresStart
  href: api/InscryptionAPI.Ascension.AscensionScreenSort.Direction.html#InscryptionAPI_Ascension_AscensionScreenSort_Direction_RequiresStart
  commentId: F:InscryptionAPI.Ascension.AscensionScreenSort.Direction.RequiresStart
  fullName: InscryptionAPI.Ascension.AscensionScreenSort.Direction.RequiresStart
  nameWithType: AscensionScreenSort.Direction.RequiresStart
- uid: InscryptionAPI.Ascension.AscensionScreenSort.preferredDirection
  name: preferredDirection
  href: api/InscryptionAPI.Ascension.AscensionScreenSort.html#InscryptionAPI_Ascension_AscensionScreenSort_preferredDirection
  commentId: F:InscryptionAPI.Ascension.AscensionScreenSort.preferredDirection
  fullName: InscryptionAPI.Ascension.AscensionScreenSort.preferredDirection
  nameWithType: AscensionScreenSort.preferredDirection
- uid: InscryptionAPI.Ascension.ChallengeManager
  name: ChallengeManager
  href: api/InscryptionAPI.Ascension.ChallengeManager.html
  commentId: T:InscryptionAPI.Ascension.ChallengeManager
  fullName: InscryptionAPI.Ascension.ChallengeManager
  nameWithType: ChallengeManager
- uid: InscryptionAPI.Ascension.ChallengeManager.Add(System.String,DiskCardGame.AscensionChallengeInfo,System.Int32,System.Boolean)
  name: Add(String, AscensionChallengeInfo, Int32, Boolean)
  href: api/InscryptionAPI.Ascension.ChallengeManager.html#InscryptionAPI_Ascension_ChallengeManager_Add_System_String_DiskCardGame_AscensionChallengeInfo_System_Int32_System_Boolean_
  commentId: M:InscryptionAPI.Ascension.ChallengeManager.Add(System.String,DiskCardGame.AscensionChallengeInfo,System.Int32,System.Boolean)
  fullName: InscryptionAPI.Ascension.ChallengeManager.Add(System.String, DiskCardGame.AscensionChallengeInfo, System.Int32, System.Boolean)
  nameWithType: ChallengeManager.Add(String, AscensionChallengeInfo, Int32, Boolean)
- uid: InscryptionAPI.Ascension.ChallengeManager.Add(System.String,System.String,System.String,System.Int32,UnityEngine.Texture2D,UnityEngine.Texture2D,System.Int32,System.Boolean)
  name: Add(String, String, String, Int32, Texture2D, Texture2D, Int32, Boolean)
  href: api/InscryptionAPI.Ascension.ChallengeManager.html#InscryptionAPI_Ascension_ChallengeManager_Add_System_String_System_String_System_String_System_Int32_UnityEngine_Texture2D_UnityEngine_Texture2D_System_Int32_System_Boolean_
  commentId: M:InscryptionAPI.Ascension.ChallengeManager.Add(System.String,System.String,System.String,System.Int32,UnityEngine.Texture2D,UnityEngine.Texture2D,System.Int32,System.Boolean)
  fullName: InscryptionAPI.Ascension.ChallengeManager.Add(System.String, System.String, System.String, System.Int32, UnityEngine.Texture2D, UnityEngine.Texture2D, System.Int32, System.Boolean)
  nameWithType: ChallengeManager.Add(String, String, String, Int32, Texture2D, Texture2D, Int32, Boolean)
- uid: InscryptionAPI.Ascension.ChallengeManager.Add*
  name: Add
  href: api/InscryptionAPI.Ascension.ChallengeManager.html#InscryptionAPI_Ascension_ChallengeManager_Add_
  commentId: Overload:InscryptionAPI.Ascension.ChallengeManager.Add
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.ChallengeManager.Add
  nameWithType: ChallengeManager.Add
- uid: InscryptionAPI.Ascension.ChallengeManager.AllInfo
  name: AllInfo
  href: api/InscryptionAPI.Ascension.ChallengeManager.html#InscryptionAPI_Ascension_ChallengeManager_AllInfo
  commentId: F:InscryptionAPI.Ascension.ChallengeManager.AllInfo
  fullName: InscryptionAPI.Ascension.ChallengeManager.AllInfo
  nameWithType: ChallengeManager.AllInfo
- uid: InscryptionAPI.Ascension.ChallengeManager.BaseGameChallenges
  name: BaseGameChallenges
  href: api/InscryptionAPI.Ascension.ChallengeManager.html#InscryptionAPI_Ascension_ChallengeManager_BaseGameChallenges
  commentId: F:InscryptionAPI.Ascension.ChallengeManager.BaseGameChallenges
  fullName: InscryptionAPI.Ascension.ChallengeManager.BaseGameChallenges
  nameWithType: ChallengeManager.BaseGameChallenges
- uid: InscryptionAPI.Ascension.ChallengeManager.GenBaseGameChallengs
  name: GenBaseGameChallengs()
  href: api/InscryptionAPI.Ascension.ChallengeManager.html#InscryptionAPI_Ascension_ChallengeManager_GenBaseGameChallengs
  commentId: M:InscryptionAPI.Ascension.ChallengeManager.GenBaseGameChallengs
  fullName: InscryptionAPI.Ascension.ChallengeManager.GenBaseGameChallengs()
  nameWithType: ChallengeManager.GenBaseGameChallengs()
- uid: InscryptionAPI.Ascension.ChallengeManager.GenBaseGameChallengs*
  name: GenBaseGameChallengs
  href: api/InscryptionAPI.Ascension.ChallengeManager.html#InscryptionAPI_Ascension_ChallengeManager_GenBaseGameChallengs_
  commentId: Overload:InscryptionAPI.Ascension.ChallengeManager.GenBaseGameChallengs
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.ChallengeManager.GenBaseGameChallengs
  nameWithType: ChallengeManager.GenBaseGameChallengs
- uid: InscryptionAPI.Ascension.ChallengeManager.IsCustomChallengeUnlocked(System.Boolean@,System.Int32,DiskCardGame.AscensionChallenge)
  name: IsCustomChallengeUnlocked(ref Boolean, Int32, AscensionChallenge)
  href: api/InscryptionAPI.Ascension.ChallengeManager.html#InscryptionAPI_Ascension_ChallengeManager_IsCustomChallengeUnlocked_System_Boolean__System_Int32_DiskCardGame_AscensionChallenge_
  commentId: M:InscryptionAPI.Ascension.ChallengeManager.IsCustomChallengeUnlocked(System.Boolean@,System.Int32,DiskCardGame.AscensionChallenge)
  name.vb: IsCustomChallengeUnlocked(ByRef Boolean, Int32, AscensionChallenge)
  fullName: InscryptionAPI.Ascension.ChallengeManager.IsCustomChallengeUnlocked(ref System.Boolean, System.Int32, DiskCardGame.AscensionChallenge)
  fullName.vb: InscryptionAPI.Ascension.ChallengeManager.IsCustomChallengeUnlocked(ByRef System.Boolean, System.Int32, DiskCardGame.AscensionChallenge)
  nameWithType: ChallengeManager.IsCustomChallengeUnlocked(ref Boolean, Int32, AscensionChallenge)
  nameWithType.vb: ChallengeManager.IsCustomChallengeUnlocked(ByRef Boolean, Int32, AscensionChallenge)
- uid: InscryptionAPI.Ascension.ChallengeManager.IsCustomChallengeUnlocked*
  name: IsCustomChallengeUnlocked
  href: api/InscryptionAPI.Ascension.ChallengeManager.html#InscryptionAPI_Ascension_ChallengeManager_IsCustomChallengeUnlocked_
  commentId: Overload:InscryptionAPI.Ascension.ChallengeManager.IsCustomChallengeUnlocked
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.ChallengeManager.IsCustomChallengeUnlocked
  nameWithType: ChallengeManager.IsCustomChallengeUnlocked
- uid: InscryptionAPI.Ascension.ChallengeManager.IsStackable(DiskCardGame.AscensionChallenge)
  name: IsStackable(AscensionChallenge)
  href: api/InscryptionAPI.Ascension.ChallengeManager.html#InscryptionAPI_Ascension_ChallengeManager_IsStackable_DiskCardGame_AscensionChallenge_
  commentId: M:InscryptionAPI.Ascension.ChallengeManager.IsStackable(DiskCardGame.AscensionChallenge)
  fullName: InscryptionAPI.Ascension.ChallengeManager.IsStackable(DiskCardGame.AscensionChallenge)
  nameWithType: ChallengeManager.IsStackable(AscensionChallenge)
- uid: InscryptionAPI.Ascension.ChallengeManager.IsStackable*
  name: IsStackable
  href: api/InscryptionAPI.Ascension.ChallengeManager.html#InscryptionAPI_Ascension_ChallengeManager_IsStackable_
  commentId: Overload:InscryptionAPI.Ascension.ChallengeManager.IsStackable
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.ChallengeManager.IsStackable
  nameWithType: ChallengeManager.IsStackable
- uid: InscryptionAPI.Ascension.ChallengeManager.ModifyChallenges
  name: ModifyChallenges
  href: api/InscryptionAPI.Ascension.ChallengeManager.html#InscryptionAPI_Ascension_ChallengeManager_ModifyChallenges
  commentId: E:InscryptionAPI.Ascension.ChallengeManager.ModifyChallenges
  fullName: InscryptionAPI.Ascension.ChallengeManager.ModifyChallenges
  nameWithType: ChallengeManager.ModifyChallenges
- uid: InscryptionAPI.Ascension.ChallengeManager.ResyncWhenTransitioningToGame
  name: ResyncWhenTransitioningToGame()
  href: api/InscryptionAPI.Ascension.ChallengeManager.html#InscryptionAPI_Ascension_ChallengeManager_ResyncWhenTransitioningToGame
  commentId: M:InscryptionAPI.Ascension.ChallengeManager.ResyncWhenTransitioningToGame
  fullName: InscryptionAPI.Ascension.ChallengeManager.ResyncWhenTransitioningToGame()
  nameWithType: ChallengeManager.ResyncWhenTransitioningToGame()
- uid: InscryptionAPI.Ascension.ChallengeManager.ResyncWhenTransitioningToGame*
  name: ResyncWhenTransitioningToGame
  href: api/InscryptionAPI.Ascension.ChallengeManager.html#InscryptionAPI_Ascension_ChallengeManager_ResyncWhenTransitioningToGame_
  commentId: Overload:InscryptionAPI.Ascension.ChallengeManager.ResyncWhenTransitioningToGame
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.ChallengeManager.ResyncWhenTransitioningToGame
  nameWithType: ChallengeManager.ResyncWhenTransitioningToGame
- uid: InscryptionAPI.Ascension.ChallengeManager.SyncChallengeList
  name: SyncChallengeList()
  href: api/InscryptionAPI.Ascension.ChallengeManager.html#InscryptionAPI_Ascension_ChallengeManager_SyncChallengeList
  commentId: M:InscryptionAPI.Ascension.ChallengeManager.SyncChallengeList
  fullName: InscryptionAPI.Ascension.ChallengeManager.SyncChallengeList()
  nameWithType: ChallengeManager.SyncChallengeList()
- uid: InscryptionAPI.Ascension.ChallengeManager.SyncChallengeList*
  name: SyncChallengeList
  href: api/InscryptionAPI.Ascension.ChallengeManager.html#InscryptionAPI_Ascension_ChallengeManager_SyncChallengeList_
  commentId: Overload:InscryptionAPI.Ascension.ChallengeManager.SyncChallengeList
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.ChallengeManager.SyncChallengeList
  nameWithType: ChallengeManager.SyncChallengeList
- uid: InscryptionAPI.Ascension.StarterDeckManager
  name: StarterDeckManager
  href: api/InscryptionAPI.Ascension.StarterDeckManager.html
  commentId: T:InscryptionAPI.Ascension.StarterDeckManager
  fullName: InscryptionAPI.Ascension.StarterDeckManager
  nameWithType: StarterDeckManager
- uid: InscryptionAPI.Ascension.StarterDeckManager.Add(System.String,DiskCardGame.StarterDeckInfo,System.Int32)
  name: Add(String, StarterDeckInfo, Int32)
  href: api/InscryptionAPI.Ascension.StarterDeckManager.html#InscryptionAPI_Ascension_StarterDeckManager_Add_System_String_DiskCardGame_StarterDeckInfo_System_Int32_
  commentId: M:InscryptionAPI.Ascension.StarterDeckManager.Add(System.String,DiskCardGame.StarterDeckInfo,System.Int32)
  fullName: InscryptionAPI.Ascension.StarterDeckManager.Add(System.String, DiskCardGame.StarterDeckInfo, System.Int32)
  nameWithType: StarterDeckManager.Add(String, StarterDeckInfo, Int32)
- uid: InscryptionAPI.Ascension.StarterDeckManager.Add*
  name: Add
  href: api/InscryptionAPI.Ascension.StarterDeckManager.html#InscryptionAPI_Ascension_StarterDeckManager_Add_
  commentId: Overload:InscryptionAPI.Ascension.StarterDeckManager.Add
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.StarterDeckManager.Add
  nameWithType: StarterDeckManager.Add
- uid: InscryptionAPI.Ascension.StarterDeckManager.AllDeckInfos
  name: AllDeckInfos
  href: api/InscryptionAPI.Ascension.StarterDeckManager.html#InscryptionAPI_Ascension_StarterDeckManager_AllDeckInfos
  commentId: F:InscryptionAPI.Ascension.StarterDeckManager.AllDeckInfos
  fullName: InscryptionAPI.Ascension.StarterDeckManager.AllDeckInfos
  nameWithType: StarterDeckManager.AllDeckInfos
- uid: InscryptionAPI.Ascension.StarterDeckManager.AllDecks
  name: AllDecks
  href: api/InscryptionAPI.Ascension.StarterDeckManager.html#InscryptionAPI_Ascension_StarterDeckManager_AllDecks
  commentId: F:InscryptionAPI.Ascension.StarterDeckManager.AllDecks
  fullName: InscryptionAPI.Ascension.StarterDeckManager.AllDecks
  nameWithType: StarterDeckManager.AllDecks
- uid: InscryptionAPI.Ascension.StarterDeckManager.BaseGameDecks
  name: BaseGameDecks
  href: api/InscryptionAPI.Ascension.StarterDeckManager.html#InscryptionAPI_Ascension_StarterDeckManager_BaseGameDecks
  commentId: F:InscryptionAPI.Ascension.StarterDeckManager.BaseGameDecks
  fullName: InscryptionAPI.Ascension.StarterDeckManager.BaseGameDecks
  nameWithType: StarterDeckManager.BaseGameDecks
- uid: InscryptionAPI.Ascension.StarterDeckManager.CustomStarterLevel(System.Boolean@,System.String,System.Int32)
  name: CustomStarterLevel(ref Boolean, String, Int32)
  href: api/InscryptionAPI.Ascension.StarterDeckManager.html#InscryptionAPI_Ascension_StarterDeckManager_CustomStarterLevel_System_Boolean__System_String_System_Int32_
  commentId: M:InscryptionAPI.Ascension.StarterDeckManager.CustomStarterLevel(System.Boolean@,System.String,System.Int32)
  name.vb: CustomStarterLevel(ByRef Boolean, String, Int32)
  fullName: InscryptionAPI.Ascension.StarterDeckManager.CustomStarterLevel(ref System.Boolean, System.String, System.Int32)
  fullName.vb: InscryptionAPI.Ascension.StarterDeckManager.CustomStarterLevel(ByRef System.Boolean, System.String, System.Int32)
  nameWithType: StarterDeckManager.CustomStarterLevel(ref Boolean, String, Int32)
  nameWithType.vb: StarterDeckManager.CustomStarterLevel(ByRef Boolean, String, Int32)
- uid: InscryptionAPI.Ascension.StarterDeckManager.CustomStarterLevel*
  name: CustomStarterLevel
  href: api/InscryptionAPI.Ascension.StarterDeckManager.html#InscryptionAPI_Ascension_StarterDeckManager_CustomStarterLevel_
  commentId: Overload:InscryptionAPI.Ascension.StarterDeckManager.CustomStarterLevel
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.StarterDeckManager.CustomStarterLevel
  nameWithType: StarterDeckManager.CustomStarterLevel
- uid: InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck
  name: StarterDeckManager.FullStarterDeck
  href: api/InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck.html
  commentId: T:InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck
  fullName: InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck
  nameWithType: StarterDeckManager.FullStarterDeck
- uid: InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck.CardNames
  name: CardNames
  href: api/InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck.html#InscryptionAPI_Ascension_StarterDeckManager_FullStarterDeck_CardNames
  commentId: P:InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck.CardNames
  fullName: InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck.CardNames
  nameWithType: StarterDeckManager.FullStarterDeck.CardNames
- uid: InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck.CardNames*
  name: CardNames
  href: api/InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck.html#InscryptionAPI_Ascension_StarterDeckManager_FullStarterDeck_CardNames_
  commentId: Overload:InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck.CardNames
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck.CardNames
  nameWithType: StarterDeckManager.FullStarterDeck.CardNames
- uid: InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck.Info
  name: Info
  href: api/InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck.html#InscryptionAPI_Ascension_StarterDeckManager_FullStarterDeck_Info
  commentId: P:InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck.Info
  fullName: InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck.Info
  nameWithType: StarterDeckManager.FullStarterDeck.Info
- uid: InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck.Info*
  name: Info
  href: api/InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck.html#InscryptionAPI_Ascension_StarterDeckManager_FullStarterDeck_Info_
  commentId: Overload:InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck.Info
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck.Info
  nameWithType: StarterDeckManager.FullStarterDeck.Info
- uid: InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck.UnlockLevel
  name: UnlockLevel
  href: api/InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck.html#InscryptionAPI_Ascension_StarterDeckManager_FullStarterDeck_UnlockLevel
  commentId: P:InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck.UnlockLevel
  fullName: InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck.UnlockLevel
  nameWithType: StarterDeckManager.FullStarterDeck.UnlockLevel
- uid: InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck.UnlockLevel*
  name: UnlockLevel
  href: api/InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck.html#InscryptionAPI_Ascension_StarterDeckManager_FullStarterDeck_UnlockLevel_
  commentId: Overload:InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck.UnlockLevel
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck.UnlockLevel
  nameWithType: StarterDeckManager.FullStarterDeck.UnlockLevel
- uid: InscryptionAPI.Ascension.StarterDeckManager.ModifyDeckList
  name: ModifyDeckList
  href: api/InscryptionAPI.Ascension.StarterDeckManager.html#InscryptionAPI_Ascension_StarterDeckManager_ModifyDeckList
  commentId: E:InscryptionAPI.Ascension.StarterDeckManager.ModifyDeckList
  fullName: InscryptionAPI.Ascension.StarterDeckManager.ModifyDeckList
  nameWithType: StarterDeckManager.ModifyDeckList
- uid: InscryptionAPI.Ascension.StarterDeckManager.New(System.String,System.String,System.String,System.String[],System.Int32)
  name: New(String, String, String, String[], Int32)
  href: api/InscryptionAPI.Ascension.StarterDeckManager.html#InscryptionAPI_Ascension_StarterDeckManager_New_System_String_System_String_System_String_System_String___System_Int32_
  commentId: M:InscryptionAPI.Ascension.StarterDeckManager.New(System.String,System.String,System.String,System.String[],System.Int32)
  name.vb: New(String, String, String, String(), Int32)
  fullName: InscryptionAPI.Ascension.StarterDeckManager.New(System.String, System.String, System.String, System.String[], System.Int32)
  fullName.vb: InscryptionAPI.Ascension.StarterDeckManager.New(System.String, System.String, System.String, System.String(), System.Int32)
  nameWithType: StarterDeckManager.New(String, String, String, String[], Int32)
  nameWithType.vb: StarterDeckManager.New(String, String, String, String(), Int32)
- uid: InscryptionAPI.Ascension.StarterDeckManager.New(System.String,System.String,UnityEngine.Texture2D,System.String[],System.Int32)
  name: New(String, String, Texture2D, String[], Int32)
  href: api/InscryptionAPI.Ascension.StarterDeckManager.html#InscryptionAPI_Ascension_StarterDeckManager_New_System_String_System_String_UnityEngine_Texture2D_System_String___System_Int32_
  commentId: M:InscryptionAPI.Ascension.StarterDeckManager.New(System.String,System.String,UnityEngine.Texture2D,System.String[],System.Int32)
  name.vb: New(String, String, Texture2D, String(), Int32)
  fullName: InscryptionAPI.Ascension.StarterDeckManager.New(System.String, System.String, UnityEngine.Texture2D, System.String[], System.Int32)
  fullName.vb: InscryptionAPI.Ascension.StarterDeckManager.New(System.String, System.String, UnityEngine.Texture2D, System.String(), System.Int32)
  nameWithType: StarterDeckManager.New(String, String, Texture2D, String[], Int32)
  nameWithType.vb: StarterDeckManager.New(String, String, Texture2D, String(), Int32)
- uid: InscryptionAPI.Ascension.StarterDeckManager.New*
  name: New
  href: api/InscryptionAPI.Ascension.StarterDeckManager.html#InscryptionAPI_Ascension_StarterDeckManager_New_
  commentId: Overload:InscryptionAPI.Ascension.StarterDeckManager.New
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.StarterDeckManager.New
  nameWithType: StarterDeckManager.New
- uid: InscryptionAPI.Ascension.StarterDeckManager.SyncDeckList
  name: SyncDeckList()
  href: api/InscryptionAPI.Ascension.StarterDeckManager.html#InscryptionAPI_Ascension_StarterDeckManager_SyncDeckList
  commentId: M:InscryptionAPI.Ascension.StarterDeckManager.SyncDeckList
  fullName: InscryptionAPI.Ascension.StarterDeckManager.SyncDeckList()
  nameWithType: StarterDeckManager.SyncDeckList()
- uid: InscryptionAPI.Ascension.StarterDeckManager.SyncDeckList*
  name: SyncDeckList
  href: api/InscryptionAPI.Ascension.StarterDeckManager.html#InscryptionAPI_Ascension_StarterDeckManager_SyncDeckList_
  commentId: Overload:InscryptionAPI.Ascension.StarterDeckManager.SyncDeckList
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.StarterDeckManager.SyncDeckList
  nameWithType: StarterDeckManager.SyncDeckList
- uid: InscryptionAPI.Ascension.StarterDeckPaginator
  name: StarterDeckPaginator
  href: api/InscryptionAPI.Ascension.StarterDeckPaginator.html
  commentId: T:InscryptionAPI.Ascension.StarterDeckPaginator
  fullName: InscryptionAPI.Ascension.StarterDeckPaginator
  nameWithType: StarterDeckPaginator
- uid: InscryptionAPI.Ascension.StarterDeckPaginator.CHALLENGES_PER_ROW
  name: CHALLENGES_PER_ROW
  href: api/InscryptionAPI.Ascension.StarterDeckPaginator.html#InscryptionAPI_Ascension_StarterDeckPaginator_CHALLENGES_PER_ROW
  commentId: F:InscryptionAPI.Ascension.StarterDeckPaginator.CHALLENGES_PER_ROW
  fullName: InscryptionAPI.Ascension.StarterDeckPaginator.CHALLENGES_PER_ROW
  nameWithType: StarterDeckPaginator.CHALLENGES_PER_ROW
- uid: InscryptionAPI.Ascension.StarterDeckPaginator.GeneratePages
  name: GeneratePages()
  href: api/InscryptionAPI.Ascension.StarterDeckPaginator.html#InscryptionAPI_Ascension_StarterDeckPaginator_GeneratePages
  commentId: M:InscryptionAPI.Ascension.StarterDeckPaginator.GeneratePages
  fullName: InscryptionAPI.Ascension.StarterDeckPaginator.GeneratePages()
  nameWithType: StarterDeckPaginator.GeneratePages()
- uid: InscryptionAPI.Ascension.StarterDeckPaginator.GeneratePages*
  name: GeneratePages
  href: api/InscryptionAPI.Ascension.StarterDeckPaginator.html#InscryptionAPI_Ascension_StarterDeckPaginator_GeneratePages_
  commentId: Overload:InscryptionAPI.Ascension.StarterDeckPaginator.GeneratePages
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.StarterDeckPaginator.GeneratePages
  nameWithType: StarterDeckPaginator.GeneratePages
- uid: InscryptionAPI.Ascension.StarterDeckPaginator.icons
  name: icons
  href: api/InscryptionAPI.Ascension.StarterDeckPaginator.html#InscryptionAPI_Ascension_StarterDeckPaginator_icons
  commentId: F:InscryptionAPI.Ascension.StarterDeckPaginator.icons
  fullName: InscryptionAPI.Ascension.StarterDeckPaginator.icons
  nameWithType: StarterDeckPaginator.icons
- uid: InscryptionAPI.Ascension.StarterDeckPaginator.ICONS_PER_PAGE
  name: ICONS_PER_PAGE
  href: api/InscryptionAPI.Ascension.StarterDeckPaginator.html#InscryptionAPI_Ascension_StarterDeckPaginator_ICONS_PER_PAGE
  commentId: F:InscryptionAPI.Ascension.StarterDeckPaginator.ICONS_PER_PAGE
  fullName: InscryptionAPI.Ascension.StarterDeckPaginator.ICONS_PER_PAGE
  nameWithType: StarterDeckPaginator.ICONS_PER_PAGE
- uid: InscryptionAPI.Ascension.StarterDeckPaginator.OnEnable
  name: OnEnable()
  href: api/InscryptionAPI.Ascension.StarterDeckPaginator.html#InscryptionAPI_Ascension_StarterDeckPaginator_OnEnable
  commentId: M:InscryptionAPI.Ascension.StarterDeckPaginator.OnEnable
  fullName: InscryptionAPI.Ascension.StarterDeckPaginator.OnEnable()
  nameWithType: StarterDeckPaginator.OnEnable()
- uid: InscryptionAPI.Ascension.StarterDeckPaginator.OnEnable*
  name: OnEnable
  href: api/InscryptionAPI.Ascension.StarterDeckPaginator.html#InscryptionAPI_Ascension_StarterDeckPaginator_OnEnable_
  commentId: Overload:InscryptionAPI.Ascension.StarterDeckPaginator.OnEnable
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.StarterDeckPaginator.OnEnable
  nameWithType: StarterDeckPaginator.OnEnable
- uid: InscryptionAPI.Ascension.StarterDeckPaginator.pages
  name: pages
  href: api/InscryptionAPI.Ascension.StarterDeckPaginator.html#InscryptionAPI_Ascension_StarterDeckPaginator_pages
  commentId: F:InscryptionAPI.Ascension.StarterDeckPaginator.pages
  fullName: InscryptionAPI.Ascension.StarterDeckPaginator.pages
  nameWithType: StarterDeckPaginator.pages
- uid: InscryptionAPI.Ascension.StarterDeckPaginator.ShowVisibleStarterDecks
  name: ShowVisibleStarterDecks()
  href: api/InscryptionAPI.Ascension.StarterDeckPaginator.html#InscryptionAPI_Ascension_StarterDeckPaginator_ShowVisibleStarterDecks
  commentId: M:InscryptionAPI.Ascension.StarterDeckPaginator.ShowVisibleStarterDecks
  fullName: InscryptionAPI.Ascension.StarterDeckPaginator.ShowVisibleStarterDecks()
  nameWithType: StarterDeckPaginator.ShowVisibleStarterDecks()
- uid: InscryptionAPI.Ascension.StarterDeckPaginator.ShowVisibleStarterDecks*
  name: ShowVisibleStarterDecks
  href: api/InscryptionAPI.Ascension.StarterDeckPaginator.html#InscryptionAPI_Ascension_StarterDeckPaginator_ShowVisibleStarterDecks_
  commentId: Overload:InscryptionAPI.Ascension.StarterDeckPaginator.ShowVisibleStarterDecks
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.StarterDeckPaginator.ShowVisibleStarterDecks
  nameWithType: StarterDeckPaginator.ShowVisibleStarterDecks
- uid: InscryptionAPI.Ascension.StarterDeckPaginator.starterDeckPageIndex
  name: starterDeckPageIndex
  href: api/InscryptionAPI.Ascension.StarterDeckPaginator.html#InscryptionAPI_Ascension_StarterDeckPaginator_starterDeckPageIndex
  commentId: F:InscryptionAPI.Ascension.StarterDeckPaginator.starterDeckPageIndex
  fullName: InscryptionAPI.Ascension.StarterDeckPaginator.starterDeckPageIndex
  nameWithType: StarterDeckPaginator.starterDeckPageIndex
- uid: InscryptionAPI.Ascension.StarterDeckPaginator.StarterDeckPageLeft(DiskCardGame.MainInputInteractable)
  name: StarterDeckPageLeft(MainInputInteractable)
  href: api/InscryptionAPI.Ascension.StarterDeckPaginator.html#InscryptionAPI_Ascension_StarterDeckPaginator_StarterDeckPageLeft_DiskCardGame_MainInputInteractable_
  commentId: M:InscryptionAPI.Ascension.StarterDeckPaginator.StarterDeckPageLeft(DiskCardGame.MainInputInteractable)
  fullName: InscryptionAPI.Ascension.StarterDeckPaginator.StarterDeckPageLeft(DiskCardGame.MainInputInteractable)
  nameWithType: StarterDeckPaginator.StarterDeckPageLeft(MainInputInteractable)
- uid: InscryptionAPI.Ascension.StarterDeckPaginator.StarterDeckPageLeft*
  name: StarterDeckPageLeft
  href: api/InscryptionAPI.Ascension.StarterDeckPaginator.html#InscryptionAPI_Ascension_StarterDeckPaginator_StarterDeckPageLeft_
  commentId: Overload:InscryptionAPI.Ascension.StarterDeckPaginator.StarterDeckPageLeft
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.StarterDeckPaginator.StarterDeckPageLeft
  nameWithType: StarterDeckPaginator.StarterDeckPageLeft
- uid: InscryptionAPI.Ascension.StarterDeckPaginator.StarterDeckPageRight(DiskCardGame.MainInputInteractable)
  name: StarterDeckPageRight(MainInputInteractable)
  href: api/InscryptionAPI.Ascension.StarterDeckPaginator.html#InscryptionAPI_Ascension_StarterDeckPaginator_StarterDeckPageRight_DiskCardGame_MainInputInteractable_
  commentId: M:InscryptionAPI.Ascension.StarterDeckPaginator.StarterDeckPageRight(DiskCardGame.MainInputInteractable)
  fullName: InscryptionAPI.Ascension.StarterDeckPaginator.StarterDeckPageRight(DiskCardGame.MainInputInteractable)
  nameWithType: StarterDeckPaginator.StarterDeckPageRight(MainInputInteractable)
- uid: InscryptionAPI.Ascension.StarterDeckPaginator.StarterDeckPageRight*
  name: StarterDeckPageRight
  href: api/InscryptionAPI.Ascension.StarterDeckPaginator.html#InscryptionAPI_Ascension_StarterDeckPaginator_StarterDeckPageRight_
  commentId: Overload:InscryptionAPI.Ascension.StarterDeckPaginator.StarterDeckPageRight
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.StarterDeckPaginator.StarterDeckPageRight
  nameWithType: StarterDeckPaginator.StarterDeckPageRight
- uid: InscryptionAPI.Ascension.StarterDeckSelectscreenPatches
  name: StarterDeckSelectscreenPatches
  href: api/InscryptionAPI.Ascension.StarterDeckSelectscreenPatches.html
  commentId: T:InscryptionAPI.Ascension.StarterDeckSelectscreenPatches
  fullName: InscryptionAPI.Ascension.StarterDeckSelectscreenPatches
  nameWithType: StarterDeckSelectscreenPatches
- uid: InscryptionAPI.Ascension.StarterDeckSelectscreenPatches.AddPaginationToStarterDeckScreen
  name: AddPaginationToStarterDeckScreen()
  href: api/InscryptionAPI.Ascension.StarterDeckSelectscreenPatches.html#InscryptionAPI_Ascension_StarterDeckSelectscreenPatches_AddPaginationToStarterDeckScreen
  commentId: M:InscryptionAPI.Ascension.StarterDeckSelectscreenPatches.AddPaginationToStarterDeckScreen
  fullName: InscryptionAPI.Ascension.StarterDeckSelectscreenPatches.AddPaginationToStarterDeckScreen()
  nameWithType: StarterDeckSelectscreenPatches.AddPaginationToStarterDeckScreen()
- uid: InscryptionAPI.Ascension.StarterDeckSelectscreenPatches.AddPaginationToStarterDeckScreen*
  name: AddPaginationToStarterDeckScreen
  href: api/InscryptionAPI.Ascension.StarterDeckSelectscreenPatches.html#InscryptionAPI_Ascension_StarterDeckSelectscreenPatches_AddPaginationToStarterDeckScreen_
  commentId: Overload:InscryptionAPI.Ascension.StarterDeckSelectscreenPatches.AddPaginationToStarterDeckScreen
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.StarterDeckSelectscreenPatches.AddPaginationToStarterDeckScreen
  nameWithType: StarterDeckSelectscreenPatches.AddPaginationToStarterDeckScreen
- uid: InscryptionAPI.Ascension.StarterDeckSelectscreenPatches.ForceAssignInfo(DiskCardGame.AscensionStarterDeckIcon@,DiskCardGame.StarterDeckInfo)
  name: ForceAssignInfo(ref AscensionStarterDeckIcon, StarterDeckInfo)
  href: api/InscryptionAPI.Ascension.StarterDeckSelectscreenPatches.html#InscryptionAPI_Ascension_StarterDeckSelectscreenPatches_ForceAssignInfo_DiskCardGame_AscensionStarterDeckIcon__DiskCardGame_StarterDeckInfo_
  commentId: M:InscryptionAPI.Ascension.StarterDeckSelectscreenPatches.ForceAssignInfo(DiskCardGame.AscensionStarterDeckIcon@,DiskCardGame.StarterDeckInfo)
  name.vb: ForceAssignInfo(ByRef AscensionStarterDeckIcon, StarterDeckInfo)
  fullName: InscryptionAPI.Ascension.StarterDeckSelectscreenPatches.ForceAssignInfo(ref DiskCardGame.AscensionStarterDeckIcon, DiskCardGame.StarterDeckInfo)
  fullName.vb: InscryptionAPI.Ascension.StarterDeckSelectscreenPatches.ForceAssignInfo(ByRef DiskCardGame.AscensionStarterDeckIcon, DiskCardGame.StarterDeckInfo)
  nameWithType: StarterDeckSelectscreenPatches.ForceAssignInfo(ref AscensionStarterDeckIcon, StarterDeckInfo)
  nameWithType.vb: StarterDeckSelectscreenPatches.ForceAssignInfo(ByRef AscensionStarterDeckIcon, StarterDeckInfo)
- uid: InscryptionAPI.Ascension.StarterDeckSelectscreenPatches.ForceAssignInfo*
  name: ForceAssignInfo
  href: api/InscryptionAPI.Ascension.StarterDeckSelectscreenPatches.html#InscryptionAPI_Ascension_StarterDeckSelectscreenPatches_ForceAssignInfo_
  commentId: Overload:InscryptionAPI.Ascension.StarterDeckSelectscreenPatches.ForceAssignInfo
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.StarterDeckSelectscreenPatches.ForceAssignInfo
  nameWithType: StarterDeckSelectscreenPatches.ForceAssignInfo
- uid: InscryptionAPI.Boons
  name: InscryptionAPI.Boons
  href: api/InscryptionAPI.Boons.html
  commentId: N:InscryptionAPI.Boons
  fullName: InscryptionAPI.Boons
  nameWithType: InscryptionAPI.Boons
- uid: InscryptionAPI.Boons.BoonBehaviour
  name: BoonBehaviour
  href: api/InscryptionAPI.Boons.BoonBehaviour.html
  commentId: T:InscryptionAPI.Boons.BoonBehaviour
  fullName: InscryptionAPI.Boons.BoonBehaviour
  nameWithType: BoonBehaviour
- uid: InscryptionAPI.Boons.BoonBehaviour.AnyInstancesOfType(DiskCardGame.BoonData.Type)
  name: AnyInstancesOfType(BoonData.Type)
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_AnyInstancesOfType_DiskCardGame_BoonData_Type_
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.AnyInstancesOfType(DiskCardGame.BoonData.Type)
  fullName: InscryptionAPI.Boons.BoonBehaviour.AnyInstancesOfType(DiskCardGame.BoonData.Type)
  nameWithType: BoonBehaviour.AnyInstancesOfType(BoonData.Type)
- uid: InscryptionAPI.Boons.BoonBehaviour.AnyInstancesOfType*
  name: AnyInstancesOfType
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_AnyInstancesOfType_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.AnyInstancesOfType
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.AnyInstancesOfType
  nameWithType: BoonBehaviour.AnyInstancesOfType
- uid: InscryptionAPI.Boons.BoonBehaviour.boon
  name: boon
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_boon
  commentId: F:InscryptionAPI.Boons.BoonBehaviour.boon
  fullName: InscryptionAPI.Boons.BoonBehaviour.boon
  nameWithType: BoonBehaviour.boon
- uid: InscryptionAPI.Boons.BoonBehaviour.CountInstancesOfType(DiskCardGame.BoonData.Type)
  name: CountInstancesOfType(BoonData.Type)
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_CountInstancesOfType_DiskCardGame_BoonData_Type_
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.CountInstancesOfType(DiskCardGame.BoonData.Type)
  fullName: InscryptionAPI.Boons.BoonBehaviour.CountInstancesOfType(DiskCardGame.BoonData.Type)
  nameWithType: BoonBehaviour.CountInstancesOfType(BoonData.Type)
- uid: InscryptionAPI.Boons.BoonBehaviour.CountInstancesOfType*
  name: CountInstancesOfType
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_CountInstancesOfType_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.CountInstancesOfType
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.CountInstancesOfType
  nameWithType: BoonBehaviour.CountInstancesOfType
- uid: InscryptionAPI.Boons.BoonBehaviour.DestroyAllInstances
  name: DestroyAllInstances()
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_DestroyAllInstances
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.DestroyAllInstances
  fullName: InscryptionAPI.Boons.BoonBehaviour.DestroyAllInstances()
  nameWithType: BoonBehaviour.DestroyAllInstances()
- uid: InscryptionAPI.Boons.BoonBehaviour.DestroyAllInstances*
  name: DestroyAllInstances
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_DestroyAllInstances_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.DestroyAllInstances
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.DestroyAllInstances
  nameWithType: BoonBehaviour.DestroyAllInstances
- uid: InscryptionAPI.Boons.BoonBehaviour.EnsureInstancesLoaded
  name: EnsureInstancesLoaded()
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_EnsureInstancesLoaded
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.EnsureInstancesLoaded
  fullName: InscryptionAPI.Boons.BoonBehaviour.EnsureInstancesLoaded()
  nameWithType: BoonBehaviour.EnsureInstancesLoaded()
- uid: InscryptionAPI.Boons.BoonBehaviour.EnsureInstancesLoaded*
  name: EnsureInstancesLoaded
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_EnsureInstancesLoaded_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.EnsureInstancesLoaded
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.EnsureInstancesLoaded
  nameWithType: BoonBehaviour.EnsureInstancesLoaded
- uid: InscryptionAPI.Boons.BoonBehaviour.FindInstancesOfType(DiskCardGame.BoonData.Type)
  name: FindInstancesOfType(BoonData.Type)
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_FindInstancesOfType_DiskCardGame_BoonData_Type_
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.FindInstancesOfType(DiskCardGame.BoonData.Type)
  fullName: InscryptionAPI.Boons.BoonBehaviour.FindInstancesOfType(DiskCardGame.BoonData.Type)
  nameWithType: BoonBehaviour.FindInstancesOfType(BoonData.Type)
- uid: InscryptionAPI.Boons.BoonBehaviour.FindInstancesOfType*
  name: FindInstancesOfType
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_FindInstancesOfType_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.FindInstancesOfType
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.FindInstancesOfType
  nameWithType: BoonBehaviour.FindInstancesOfType
- uid: InscryptionAPI.Boons.BoonBehaviour.InstanceIndex
  name: InstanceIndex
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_InstanceIndex
  commentId: P:InscryptionAPI.Boons.BoonBehaviour.InstanceIndex
  fullName: InscryptionAPI.Boons.BoonBehaviour.InstanceIndex
  nameWithType: BoonBehaviour.InstanceIndex
- uid: InscryptionAPI.Boons.BoonBehaviour.InstanceIndex*
  name: InstanceIndex
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_InstanceIndex_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.InstanceIndex
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.InstanceIndex
  nameWithType: BoonBehaviour.InstanceIndex
- uid: InscryptionAPI.Boons.BoonBehaviour.instanceNumber
  name: instanceNumber
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_instanceNumber
  commentId: F:InscryptionAPI.Boons.BoonBehaviour.instanceNumber
  fullName: InscryptionAPI.Boons.BoonBehaviour.instanceNumber
  nameWithType: BoonBehaviour.instanceNumber
- uid: InscryptionAPI.Boons.BoonBehaviour.Instances
  name: Instances
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_Instances
  commentId: P:InscryptionAPI.Boons.BoonBehaviour.Instances
  fullName: InscryptionAPI.Boons.BoonBehaviour.Instances
  nameWithType: BoonBehaviour.Instances
- uid: InscryptionAPI.Boons.BoonBehaviour.Instances*
  name: Instances
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_Instances_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.Instances
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.Instances
  nameWithType: BoonBehaviour.Instances
- uid: InscryptionAPI.Boons.BoonBehaviour.OnDestroy
  name: OnDestroy()
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_OnDestroy
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.OnDestroy
  fullName: InscryptionAPI.Boons.BoonBehaviour.OnDestroy()
  nameWithType: BoonBehaviour.OnDestroy()
- uid: InscryptionAPI.Boons.BoonBehaviour.OnDestroy*
  name: OnDestroy
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_OnDestroy_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.OnDestroy
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.OnDestroy
  nameWithType: BoonBehaviour.OnDestroy
- uid: InscryptionAPI.Boons.BoonBehaviour.OnPostBattleCleanup
  name: OnPostBattleCleanup()
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_OnPostBattleCleanup
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.OnPostBattleCleanup
  fullName: InscryptionAPI.Boons.BoonBehaviour.OnPostBattleCleanup()
  nameWithType: BoonBehaviour.OnPostBattleCleanup()
- uid: InscryptionAPI.Boons.BoonBehaviour.OnPostBattleCleanup*
  name: OnPostBattleCleanup
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_OnPostBattleCleanup_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.OnPostBattleCleanup
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.OnPostBattleCleanup
  nameWithType: BoonBehaviour.OnPostBattleCleanup
- uid: InscryptionAPI.Boons.BoonBehaviour.OnPostBoonActivation
  name: OnPostBoonActivation()
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_OnPostBoonActivation
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.OnPostBoonActivation
  fullName: InscryptionAPI.Boons.BoonBehaviour.OnPostBoonActivation()
  nameWithType: BoonBehaviour.OnPostBoonActivation()
- uid: InscryptionAPI.Boons.BoonBehaviour.OnPostBoonActivation*
  name: OnPostBoonActivation
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_OnPostBoonActivation_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.OnPostBoonActivation
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.OnPostBoonActivation
  nameWithType: BoonBehaviour.OnPostBoonActivation
- uid: InscryptionAPI.Boons.BoonBehaviour.OnPreBattleCleanup
  name: OnPreBattleCleanup()
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_OnPreBattleCleanup
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.OnPreBattleCleanup
  fullName: InscryptionAPI.Boons.BoonBehaviour.OnPreBattleCleanup()
  nameWithType: BoonBehaviour.OnPreBattleCleanup()
- uid: InscryptionAPI.Boons.BoonBehaviour.OnPreBattleCleanup*
  name: OnPreBattleCleanup
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_OnPreBattleCleanup_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.OnPreBattleCleanup
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.OnPreBattleCleanup
  nameWithType: BoonBehaviour.OnPreBattleCleanup
- uid: InscryptionAPI.Boons.BoonBehaviour.OnPreBoonActivation
  name: OnPreBoonActivation()
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_OnPreBoonActivation
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.OnPreBoonActivation
  fullName: InscryptionAPI.Boons.BoonBehaviour.OnPreBoonActivation()
  nameWithType: BoonBehaviour.OnPreBoonActivation()
- uid: InscryptionAPI.Boons.BoonBehaviour.OnPreBoonActivation*
  name: OnPreBoonActivation
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_OnPreBoonActivation_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.OnPreBoonActivation
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.OnPreBoonActivation
  nameWithType: BoonBehaviour.OnPreBoonActivation
- uid: InscryptionAPI.Boons.BoonBehaviour.PlayBoonAnimation
  name: PlayBoonAnimation()
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_PlayBoonAnimation
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.PlayBoonAnimation
  fullName: InscryptionAPI.Boons.BoonBehaviour.PlayBoonAnimation()
  nameWithType: BoonBehaviour.PlayBoonAnimation()
- uid: InscryptionAPI.Boons.BoonBehaviour.PlayBoonAnimation*
  name: PlayBoonAnimation
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_PlayBoonAnimation_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.PlayBoonAnimation
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.PlayBoonAnimation
  nameWithType: BoonBehaviour.PlayBoonAnimation
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToActivatedAbility(DiskCardGame.Ability)
  name: RespondsToActivatedAbility(Ability)
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondsToActivatedAbility_DiskCardGame_Ability_
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondsToActivatedAbility(DiskCardGame.Ability)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToActivatedAbility(DiskCardGame.Ability)
  nameWithType: BoonBehaviour.RespondsToActivatedAbility(Ability)
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToActivatedAbility*
  name: RespondsToActivatedAbility
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondsToActivatedAbility_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondsToActivatedAbility
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToActivatedAbility
  nameWithType: BoonBehaviour.RespondsToActivatedAbility
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToAttackEnded
  name: RespondsToAttackEnded()
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondsToAttackEnded
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondsToAttackEnded
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToAttackEnded()
  nameWithType: BoonBehaviour.RespondsToAttackEnded()
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToAttackEnded*
  name: RespondsToAttackEnded
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondsToAttackEnded_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondsToAttackEnded
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToAttackEnded
  nameWithType: BoonBehaviour.RespondsToAttackEnded
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToCardGettingAttacked(DiskCardGame.PlayableCard)
  name: RespondsToCardGettingAttacked(PlayableCard)
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondsToCardGettingAttacked_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondsToCardGettingAttacked(DiskCardGame.PlayableCard)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToCardGettingAttacked(DiskCardGame.PlayableCard)
  nameWithType: BoonBehaviour.RespondsToCardGettingAttacked(PlayableCard)
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToCardGettingAttacked*
  name: RespondsToCardGettingAttacked
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondsToCardGettingAttacked_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondsToCardGettingAttacked
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToCardGettingAttacked
  nameWithType: BoonBehaviour.RespondsToCardGettingAttacked
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToDealDamage(System.Int32,DiskCardGame.PlayableCard)
  name: RespondsToDealDamage(Int32, PlayableCard)
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondsToDealDamage_System_Int32_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondsToDealDamage(System.Int32,DiskCardGame.PlayableCard)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToDealDamage(System.Int32, DiskCardGame.PlayableCard)
  nameWithType: BoonBehaviour.RespondsToDealDamage(Int32, PlayableCard)
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToDealDamage*
  name: RespondsToDealDamage
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondsToDealDamage_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondsToDealDamage
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToDealDamage
  nameWithType: BoonBehaviour.RespondsToDealDamage
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToDealDamageDirectly(System.Int32)
  name: RespondsToDealDamageDirectly(Int32)
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondsToDealDamageDirectly_System_Int32_
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondsToDealDamageDirectly(System.Int32)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToDealDamageDirectly(System.Int32)
  nameWithType: BoonBehaviour.RespondsToDealDamageDirectly(Int32)
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToDealDamageDirectly*
  name: RespondsToDealDamageDirectly
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondsToDealDamageDirectly_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondsToDealDamageDirectly
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToDealDamageDirectly
  nameWithType: BoonBehaviour.RespondsToDealDamageDirectly
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToDie(System.Boolean,DiskCardGame.PlayableCard)
  name: RespondsToDie(Boolean, PlayableCard)
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondsToDie_System_Boolean_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondsToDie(System.Boolean,DiskCardGame.PlayableCard)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToDie(System.Boolean, DiskCardGame.PlayableCard)
  nameWithType: BoonBehaviour.RespondsToDie(Boolean, PlayableCard)
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToDie*
  name: RespondsToDie
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondsToDie_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondsToDie
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToDie
  nameWithType: BoonBehaviour.RespondsToDie
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToDrawn
  name: RespondsToDrawn()
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondsToDrawn
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondsToDrawn
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToDrawn()
  nameWithType: BoonBehaviour.RespondsToDrawn()
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToDrawn*
  name: RespondsToDrawn
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondsToDrawn_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondsToDrawn
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToDrawn
  nameWithType: BoonBehaviour.RespondsToDrawn
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardAssignedToSlot(DiskCardGame.PlayableCard)
  name: RespondsToOtherCardAssignedToSlot(PlayableCard)
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondsToOtherCardAssignedToSlot_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardAssignedToSlot(DiskCardGame.PlayableCard)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardAssignedToSlot(DiskCardGame.PlayableCard)
  nameWithType: BoonBehaviour.RespondsToOtherCardAssignedToSlot(PlayableCard)
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardAssignedToSlot*
  name: RespondsToOtherCardAssignedToSlot
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondsToOtherCardAssignedToSlot_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardAssignedToSlot
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardAssignedToSlot
  nameWithType: BoonBehaviour.RespondsToOtherCardAssignedToSlot
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardDealtDamage(DiskCardGame.PlayableCard,System.Int32,DiskCardGame.PlayableCard)
  name: RespondsToOtherCardDealtDamage(PlayableCard, Int32, PlayableCard)
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondsToOtherCardDealtDamage_DiskCardGame_PlayableCard_System_Int32_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardDealtDamage(DiskCardGame.PlayableCard,System.Int32,DiskCardGame.PlayableCard)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardDealtDamage(DiskCardGame.PlayableCard, System.Int32, DiskCardGame.PlayableCard)
  nameWithType: BoonBehaviour.RespondsToOtherCardDealtDamage(PlayableCard, Int32, PlayableCard)
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardDealtDamage*
  name: RespondsToOtherCardDealtDamage
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondsToOtherCardDealtDamage_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardDealtDamage
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardDealtDamage
  nameWithType: BoonBehaviour.RespondsToOtherCardDealtDamage
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardDie(DiskCardGame.PlayableCard,DiskCardGame.CardSlot,System.Boolean,DiskCardGame.PlayableCard)
  name: RespondsToOtherCardDie(PlayableCard, CardSlot, Boolean, PlayableCard)
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondsToOtherCardDie_DiskCardGame_PlayableCard_DiskCardGame_CardSlot_System_Boolean_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardDie(DiskCardGame.PlayableCard,DiskCardGame.CardSlot,System.Boolean,DiskCardGame.PlayableCard)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardDie(DiskCardGame.PlayableCard, DiskCardGame.CardSlot, System.Boolean, DiskCardGame.PlayableCard)
  nameWithType: BoonBehaviour.RespondsToOtherCardDie(PlayableCard, CardSlot, Boolean, PlayableCard)
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardDie*
  name: RespondsToOtherCardDie
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondsToOtherCardDie_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardDie
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardDie
  nameWithType: BoonBehaviour.RespondsToOtherCardDie
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardDrawn(DiskCardGame.PlayableCard)
  name: RespondsToOtherCardDrawn(PlayableCard)
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondsToOtherCardDrawn_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardDrawn(DiskCardGame.PlayableCard)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardDrawn(DiskCardGame.PlayableCard)
  nameWithType: BoonBehaviour.RespondsToOtherCardDrawn(PlayableCard)
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardDrawn*
  name: RespondsToOtherCardDrawn
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondsToOtherCardDrawn_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardDrawn
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardDrawn
  nameWithType: BoonBehaviour.RespondsToOtherCardDrawn
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardPreDeath(DiskCardGame.CardSlot,System.Boolean,DiskCardGame.PlayableCard)
  name: RespondsToOtherCardPreDeath(CardSlot, Boolean, PlayableCard)
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondsToOtherCardPreDeath_DiskCardGame_CardSlot_System_Boolean_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardPreDeath(DiskCardGame.CardSlot,System.Boolean,DiskCardGame.PlayableCard)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardPreDeath(DiskCardGame.CardSlot, System.Boolean, DiskCardGame.PlayableCard)
  nameWithType: BoonBehaviour.RespondsToOtherCardPreDeath(CardSlot, Boolean, PlayableCard)
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardPreDeath*
  name: RespondsToOtherCardPreDeath
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondsToOtherCardPreDeath_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardPreDeath
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardPreDeath
  nameWithType: BoonBehaviour.RespondsToOtherCardPreDeath
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardResolve(DiskCardGame.PlayableCard)
  name: RespondsToOtherCardResolve(PlayableCard)
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondsToOtherCardResolve_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardResolve(DiskCardGame.PlayableCard)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardResolve(DiskCardGame.PlayableCard)
  nameWithType: BoonBehaviour.RespondsToOtherCardResolve(PlayableCard)
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardResolve*
  name: RespondsToOtherCardResolve
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondsToOtherCardResolve_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardResolve
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardResolve
  nameWithType: BoonBehaviour.RespondsToOtherCardResolve
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToPlayFromHand
  name: RespondsToPlayFromHand()
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondsToPlayFromHand
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondsToPlayFromHand
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToPlayFromHand()
  nameWithType: BoonBehaviour.RespondsToPlayFromHand()
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToPlayFromHand*
  name: RespondsToPlayFromHand
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondsToPlayFromHand_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondsToPlayFromHand
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToPlayFromHand
  nameWithType: BoonBehaviour.RespondsToPlayFromHand
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToPreDeathAnimation(System.Boolean)
  name: RespondsToPreDeathAnimation(Boolean)
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondsToPreDeathAnimation_System_Boolean_
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondsToPreDeathAnimation(System.Boolean)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToPreDeathAnimation(System.Boolean)
  nameWithType: BoonBehaviour.RespondsToPreDeathAnimation(Boolean)
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToPreDeathAnimation*
  name: RespondsToPreDeathAnimation
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondsToPreDeathAnimation_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondsToPreDeathAnimation
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToPreDeathAnimation
  nameWithType: BoonBehaviour.RespondsToPreDeathAnimation
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToResolveOnBoard
  name: RespondsToResolveOnBoard()
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondsToResolveOnBoard
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondsToResolveOnBoard
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToResolveOnBoard()
  nameWithType: BoonBehaviour.RespondsToResolveOnBoard()
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToResolveOnBoard*
  name: RespondsToResolveOnBoard
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondsToResolveOnBoard_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondsToResolveOnBoard
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToResolveOnBoard
  nameWithType: BoonBehaviour.RespondsToResolveOnBoard
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToSacrifice
  name: RespondsToSacrifice()
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondsToSacrifice
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondsToSacrifice
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToSacrifice()
  nameWithType: BoonBehaviour.RespondsToSacrifice()
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToSacrifice*
  name: RespondsToSacrifice
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondsToSacrifice_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondsToSacrifice
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToSacrifice
  nameWithType: BoonBehaviour.RespondsToSacrifice
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToSlotTargetedForAttack(DiskCardGame.CardSlot,DiskCardGame.PlayableCard)
  name: RespondsToSlotTargetedForAttack(CardSlot, PlayableCard)
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondsToSlotTargetedForAttack_DiskCardGame_CardSlot_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondsToSlotTargetedForAttack(DiskCardGame.CardSlot,DiskCardGame.PlayableCard)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToSlotTargetedForAttack(DiskCardGame.CardSlot, DiskCardGame.PlayableCard)
  nameWithType: BoonBehaviour.RespondsToSlotTargetedForAttack(CardSlot, PlayableCard)
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToSlotTargetedForAttack*
  name: RespondsToSlotTargetedForAttack
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondsToSlotTargetedForAttack_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondsToSlotTargetedForAttack
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToSlotTargetedForAttack
  nameWithType: BoonBehaviour.RespondsToSlotTargetedForAttack
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToTakeDamage(DiskCardGame.PlayableCard)
  name: RespondsToTakeDamage(PlayableCard)
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondsToTakeDamage_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondsToTakeDamage(DiskCardGame.PlayableCard)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToTakeDamage(DiskCardGame.PlayableCard)
  nameWithType: BoonBehaviour.RespondsToTakeDamage(PlayableCard)
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToTakeDamage*
  name: RespondsToTakeDamage
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondsToTakeDamage_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondsToTakeDamage
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToTakeDamage
  nameWithType: BoonBehaviour.RespondsToTakeDamage
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToTurnEnd(System.Boolean)
  name: RespondsToTurnEnd(Boolean)
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondsToTurnEnd_System_Boolean_
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondsToTurnEnd(System.Boolean)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToTurnEnd(System.Boolean)
  nameWithType: BoonBehaviour.RespondsToTurnEnd(Boolean)
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToTurnEnd*
  name: RespondsToTurnEnd
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondsToTurnEnd_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondsToTurnEnd
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToTurnEnd
  nameWithType: BoonBehaviour.RespondsToTurnEnd
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToUpkeep(System.Boolean)
  name: RespondsToUpkeep(Boolean)
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondsToUpkeep_System_Boolean_
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondsToUpkeep(System.Boolean)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToUpkeep(System.Boolean)
  nameWithType: BoonBehaviour.RespondsToUpkeep(Boolean)
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToUpkeep*
  name: RespondsToUpkeep
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondsToUpkeep_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondsToUpkeep
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToUpkeep
  nameWithType: BoonBehaviour.RespondsToUpkeep
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToActivatedAbility(DiskCardGame.Ability)
  name: RespondToActivatedAbility(Ability)
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondToActivatedAbility_DiskCardGame_Ability_
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondToActivatedAbility(DiskCardGame.Ability)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToActivatedAbility(DiskCardGame.Ability)
  nameWithType: BoonBehaviour.RespondToActivatedAbility(Ability)
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToActivatedAbility*
  name: RespondToActivatedAbility
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondToActivatedAbility_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondToActivatedAbility
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToActivatedAbility
  nameWithType: BoonBehaviour.RespondToActivatedAbility
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToAttackEnded
  name: RespondToAttackEnded()
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondToAttackEnded
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondToAttackEnded
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToAttackEnded()
  nameWithType: BoonBehaviour.RespondToAttackEnded()
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToAttackEnded*
  name: RespondToAttackEnded
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondToAttackEnded_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondToAttackEnded
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToAttackEnded
  nameWithType: BoonBehaviour.RespondToAttackEnded
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToCardGettingAttacked(DiskCardGame.PlayableCard)
  name: RespondToCardGettingAttacked(PlayableCard)
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondToCardGettingAttacked_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondToCardGettingAttacked(DiskCardGame.PlayableCard)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToCardGettingAttacked(DiskCardGame.PlayableCard)
  nameWithType: BoonBehaviour.RespondToCardGettingAttacked(PlayableCard)
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToCardGettingAttacked*
  name: RespondToCardGettingAttacked
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondToCardGettingAttacked_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondToCardGettingAttacked
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToCardGettingAttacked
  nameWithType: BoonBehaviour.RespondToCardGettingAttacked
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToDealDamage(System.Int32,DiskCardGame.PlayableCard)
  name: RespondToDealDamage(Int32, PlayableCard)
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondToDealDamage_System_Int32_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondToDealDamage(System.Int32,DiskCardGame.PlayableCard)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToDealDamage(System.Int32, DiskCardGame.PlayableCard)
  nameWithType: BoonBehaviour.RespondToDealDamage(Int32, PlayableCard)
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToDealDamage*
  name: RespondToDealDamage
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondToDealDamage_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondToDealDamage
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToDealDamage
  nameWithType: BoonBehaviour.RespondToDealDamage
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToDealDamageDirectly(System.Int32)
  name: RespondToDealDamageDirectly(Int32)
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondToDealDamageDirectly_System_Int32_
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondToDealDamageDirectly(System.Int32)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToDealDamageDirectly(System.Int32)
  nameWithType: BoonBehaviour.RespondToDealDamageDirectly(Int32)
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToDealDamageDirectly*
  name: RespondToDealDamageDirectly
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondToDealDamageDirectly_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondToDealDamageDirectly
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToDealDamageDirectly
  nameWithType: BoonBehaviour.RespondToDealDamageDirectly
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToDie(System.Boolean,DiskCardGame.PlayableCard)
  name: RespondToDie(Boolean, PlayableCard)
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondToDie_System_Boolean_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondToDie(System.Boolean,DiskCardGame.PlayableCard)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToDie(System.Boolean, DiskCardGame.PlayableCard)
  nameWithType: BoonBehaviour.RespondToDie(Boolean, PlayableCard)
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToDie*
  name: RespondToDie
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondToDie_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondToDie
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToDie
  nameWithType: BoonBehaviour.RespondToDie
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToDrawn
  name: RespondToDrawn()
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondToDrawn
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondToDrawn
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToDrawn()
  nameWithType: BoonBehaviour.RespondToDrawn()
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToDrawn*
  name: RespondToDrawn
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondToDrawn_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondToDrawn
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToDrawn
  nameWithType: BoonBehaviour.RespondToDrawn
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardAssignedToSlot(DiskCardGame.PlayableCard)
  name: RespondToOtherCardAssignedToSlot(PlayableCard)
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondToOtherCardAssignedToSlot_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardAssignedToSlot(DiskCardGame.PlayableCard)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardAssignedToSlot(DiskCardGame.PlayableCard)
  nameWithType: BoonBehaviour.RespondToOtherCardAssignedToSlot(PlayableCard)
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardAssignedToSlot*
  name: RespondToOtherCardAssignedToSlot
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondToOtherCardAssignedToSlot_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardAssignedToSlot
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardAssignedToSlot
  nameWithType: BoonBehaviour.RespondToOtherCardAssignedToSlot
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardDealtDamage(DiskCardGame.PlayableCard,System.Int32,DiskCardGame.PlayableCard)
  name: RespondToOtherCardDealtDamage(PlayableCard, Int32, PlayableCard)
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondToOtherCardDealtDamage_DiskCardGame_PlayableCard_System_Int32_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardDealtDamage(DiskCardGame.PlayableCard,System.Int32,DiskCardGame.PlayableCard)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardDealtDamage(DiskCardGame.PlayableCard, System.Int32, DiskCardGame.PlayableCard)
  nameWithType: BoonBehaviour.RespondToOtherCardDealtDamage(PlayableCard, Int32, PlayableCard)
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardDealtDamage*
  name: RespondToOtherCardDealtDamage
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondToOtherCardDealtDamage_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardDealtDamage
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardDealtDamage
  nameWithType: BoonBehaviour.RespondToOtherCardDealtDamage
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardDie(DiskCardGame.PlayableCard,DiskCardGame.CardSlot,System.Boolean,DiskCardGame.PlayableCard)
  name: RespondToOtherCardDie(PlayableCard, CardSlot, Boolean, PlayableCard)
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondToOtherCardDie_DiskCardGame_PlayableCard_DiskCardGame_CardSlot_System_Boolean_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardDie(DiskCardGame.PlayableCard,DiskCardGame.CardSlot,System.Boolean,DiskCardGame.PlayableCard)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardDie(DiskCardGame.PlayableCard, DiskCardGame.CardSlot, System.Boolean, DiskCardGame.PlayableCard)
  nameWithType: BoonBehaviour.RespondToOtherCardDie(PlayableCard, CardSlot, Boolean, PlayableCard)
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardDie*
  name: RespondToOtherCardDie
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondToOtherCardDie_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardDie
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardDie
  nameWithType: BoonBehaviour.RespondToOtherCardDie
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardDrawn(DiskCardGame.PlayableCard)
  name: RespondToOtherCardDrawn(PlayableCard)
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondToOtherCardDrawn_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardDrawn(DiskCardGame.PlayableCard)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardDrawn(DiskCardGame.PlayableCard)
  nameWithType: BoonBehaviour.RespondToOtherCardDrawn(PlayableCard)
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardDrawn*
  name: RespondToOtherCardDrawn
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondToOtherCardDrawn_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardDrawn
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardDrawn
  nameWithType: BoonBehaviour.RespondToOtherCardDrawn
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardPreDeath(DiskCardGame.CardSlot,System.Boolean,DiskCardGame.PlayableCard)
  name: RespondToOtherCardPreDeath(CardSlot, Boolean, PlayableCard)
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondToOtherCardPreDeath_DiskCardGame_CardSlot_System_Boolean_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardPreDeath(DiskCardGame.CardSlot,System.Boolean,DiskCardGame.PlayableCard)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardPreDeath(DiskCardGame.CardSlot, System.Boolean, DiskCardGame.PlayableCard)
  nameWithType: BoonBehaviour.RespondToOtherCardPreDeath(CardSlot, Boolean, PlayableCard)
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardPreDeath*
  name: RespondToOtherCardPreDeath
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondToOtherCardPreDeath_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardPreDeath
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardPreDeath
  nameWithType: BoonBehaviour.RespondToOtherCardPreDeath
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardResolve(DiskCardGame.PlayableCard)
  name: RespondToOtherCardResolve(PlayableCard)
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondToOtherCardResolve_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardResolve(DiskCardGame.PlayableCard)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardResolve(DiskCardGame.PlayableCard)
  nameWithType: BoonBehaviour.RespondToOtherCardResolve(PlayableCard)
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardResolve*
  name: RespondToOtherCardResolve
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondToOtherCardResolve_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardResolve
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardResolve
  nameWithType: BoonBehaviour.RespondToOtherCardResolve
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToPlayFromHand
  name: RespondToPlayFromHand()
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondToPlayFromHand
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondToPlayFromHand
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToPlayFromHand()
  nameWithType: BoonBehaviour.RespondToPlayFromHand()
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToPlayFromHand*
  name: RespondToPlayFromHand
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondToPlayFromHand_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondToPlayFromHand
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToPlayFromHand
  nameWithType: BoonBehaviour.RespondToPlayFromHand
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToPostBattleCleanup
  name: RespondToPostBattleCleanup()
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondToPostBattleCleanup
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondToPostBattleCleanup
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToPostBattleCleanup()
  nameWithType: BoonBehaviour.RespondToPostBattleCleanup()
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToPostBattleCleanup*
  name: RespondToPostBattleCleanup
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondToPostBattleCleanup_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondToPostBattleCleanup
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToPostBattleCleanup
  nameWithType: BoonBehaviour.RespondToPostBattleCleanup
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToPostBoonActivation
  name: RespondToPostBoonActivation()
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondToPostBoonActivation
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondToPostBoonActivation
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToPostBoonActivation()
  nameWithType: BoonBehaviour.RespondToPostBoonActivation()
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToPostBoonActivation*
  name: RespondToPostBoonActivation
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondToPostBoonActivation_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondToPostBoonActivation
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToPostBoonActivation
  nameWithType: BoonBehaviour.RespondToPostBoonActivation
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToPreBattleCleanup
  name: RespondToPreBattleCleanup()
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondToPreBattleCleanup
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondToPreBattleCleanup
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToPreBattleCleanup()
  nameWithType: BoonBehaviour.RespondToPreBattleCleanup()
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToPreBattleCleanup*
  name: RespondToPreBattleCleanup
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondToPreBattleCleanup_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondToPreBattleCleanup
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToPreBattleCleanup
  nameWithType: BoonBehaviour.RespondToPreBattleCleanup
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToPreBoonActivation
  name: RespondToPreBoonActivation()
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondToPreBoonActivation
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondToPreBoonActivation
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToPreBoonActivation()
  nameWithType: BoonBehaviour.RespondToPreBoonActivation()
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToPreBoonActivation*
  name: RespondToPreBoonActivation
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondToPreBoonActivation_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondToPreBoonActivation
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToPreBoonActivation
  nameWithType: BoonBehaviour.RespondToPreBoonActivation
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToPreDeathAnimation(System.Boolean)
  name: RespondToPreDeathAnimation(Boolean)
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondToPreDeathAnimation_System_Boolean_
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondToPreDeathAnimation(System.Boolean)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToPreDeathAnimation(System.Boolean)
  nameWithType: BoonBehaviour.RespondToPreDeathAnimation(Boolean)
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToPreDeathAnimation*
  name: RespondToPreDeathAnimation
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondToPreDeathAnimation_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondToPreDeathAnimation
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToPreDeathAnimation
  nameWithType: BoonBehaviour.RespondToPreDeathAnimation
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToResolveOnBoard
  name: RespondToResolveOnBoard()
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondToResolveOnBoard
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondToResolveOnBoard
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToResolveOnBoard()
  nameWithType: BoonBehaviour.RespondToResolveOnBoard()
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToResolveOnBoard*
  name: RespondToResolveOnBoard
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondToResolveOnBoard_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondToResolveOnBoard
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToResolveOnBoard
  nameWithType: BoonBehaviour.RespondToResolveOnBoard
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToSacrifice
  name: RespondToSacrifice()
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondToSacrifice
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondToSacrifice
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToSacrifice()
  nameWithType: BoonBehaviour.RespondToSacrifice()
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToSacrifice*
  name: RespondToSacrifice
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondToSacrifice_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondToSacrifice
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToSacrifice
  nameWithType: BoonBehaviour.RespondToSacrifice
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToSlotTargetedForAttack(DiskCardGame.CardSlot,DiskCardGame.PlayableCard)
  name: RespondToSlotTargetedForAttack(CardSlot, PlayableCard)
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondToSlotTargetedForAttack_DiskCardGame_CardSlot_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondToSlotTargetedForAttack(DiskCardGame.CardSlot,DiskCardGame.PlayableCard)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToSlotTargetedForAttack(DiskCardGame.CardSlot, DiskCardGame.PlayableCard)
  nameWithType: BoonBehaviour.RespondToSlotTargetedForAttack(CardSlot, PlayableCard)
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToSlotTargetedForAttack*
  name: RespondToSlotTargetedForAttack
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondToSlotTargetedForAttack_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondToSlotTargetedForAttack
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToSlotTargetedForAttack
  nameWithType: BoonBehaviour.RespondToSlotTargetedForAttack
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToTakeDamage(DiskCardGame.PlayableCard)
  name: RespondToTakeDamage(PlayableCard)
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondToTakeDamage_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondToTakeDamage(DiskCardGame.PlayableCard)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToTakeDamage(DiskCardGame.PlayableCard)
  nameWithType: BoonBehaviour.RespondToTakeDamage(PlayableCard)
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToTakeDamage*
  name: RespondToTakeDamage
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondToTakeDamage_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondToTakeDamage
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToTakeDamage
  nameWithType: BoonBehaviour.RespondToTakeDamage
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToTurnEnd(System.Boolean)
  name: RespondToTurnEnd(Boolean)
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondToTurnEnd_System_Boolean_
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondToTurnEnd(System.Boolean)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToTurnEnd(System.Boolean)
  nameWithType: BoonBehaviour.RespondToTurnEnd(Boolean)
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToTurnEnd*
  name: RespondToTurnEnd
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondToTurnEnd_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondToTurnEnd
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToTurnEnd
  nameWithType: BoonBehaviour.RespondToTurnEnd
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToUpkeep(System.Boolean)
  name: RespondToUpkeep(Boolean)
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondToUpkeep_System_Boolean_
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondToUpkeep(System.Boolean)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToUpkeep(System.Boolean)
  nameWithType: BoonBehaviour.RespondToUpkeep(Boolean)
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToUpkeep*
  name: RespondToUpkeep
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondToUpkeep_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondToUpkeep
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToUpkeep
  nameWithType: BoonBehaviour.RespondToUpkeep
- uid: InscryptionAPI.Boons.BoonBehaviour.Start
  name: Start()
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_Start
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.Start
  fullName: InscryptionAPI.Boons.BoonBehaviour.Start()
  nameWithType: BoonBehaviour.Start()
- uid: InscryptionAPI.Boons.BoonBehaviour.Start*
  name: Start
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_Start_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.Start
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.Start
  nameWithType: BoonBehaviour.Start
- uid: InscryptionAPI.Boons.BoonManager
  name: BoonManager
  href: api/InscryptionAPI.Boons.BoonManager.html
  commentId: T:InscryptionAPI.Boons.BoonManager
  fullName: InscryptionAPI.Boons.BoonManager
  nameWithType: BoonManager
- uid: InscryptionAPI.Boons.BoonManager.ActivatePreCombatBoons(System.Collections.IEnumerator,DiskCardGame.BoonsHandler)
  name: ActivatePreCombatBoons(IEnumerator, BoonsHandler)
  href: api/InscryptionAPI.Boons.BoonManager.html#InscryptionAPI_Boons_BoonManager_ActivatePreCombatBoons_System_Collections_IEnumerator_DiskCardGame_BoonsHandler_
  commentId: M:InscryptionAPI.Boons.BoonManager.ActivatePreCombatBoons(System.Collections.IEnumerator,DiskCardGame.BoonsHandler)
  fullName: InscryptionAPI.Boons.BoonManager.ActivatePreCombatBoons(System.Collections.IEnumerator, DiskCardGame.BoonsHandler)
  nameWithType: BoonManager.ActivatePreCombatBoons(IEnumerator, BoonsHandler)
- uid: InscryptionAPI.Boons.BoonManager.ActivatePreCombatBoons*
  name: ActivatePreCombatBoons
  href: api/InscryptionAPI.Boons.BoonManager.html#InscryptionAPI_Boons_BoonManager_ActivatePreCombatBoons_
  commentId: Overload:InscryptionAPI.Boons.BoonManager.ActivatePreCombatBoons
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonManager.ActivatePreCombatBoons
  nameWithType: BoonManager.ActivatePreCombatBoons
- uid: InscryptionAPI.Boons.BoonManager.AddBoon(DiskCardGame.BoonData.Type)
  name: AddBoon(BoonData.Type)
  href: api/InscryptionAPI.Boons.BoonManager.html#InscryptionAPI_Boons_BoonManager_AddBoon_DiskCardGame_BoonData_Type_
  commentId: M:InscryptionAPI.Boons.BoonManager.AddBoon(DiskCardGame.BoonData.Type)
  fullName: InscryptionAPI.Boons.BoonManager.AddBoon(DiskCardGame.BoonData.Type)
  nameWithType: BoonManager.AddBoon(BoonData.Type)
- uid: InscryptionAPI.Boons.BoonManager.AddBoon*
  name: AddBoon
  href: api/InscryptionAPI.Boons.BoonManager.html#InscryptionAPI_Boons_BoonManager_AddBoon_
  commentId: Overload:InscryptionAPI.Boons.BoonManager.AddBoon
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonManager.AddBoon
  nameWithType: BoonManager.AddBoon
- uid: InscryptionAPI.Boons.BoonManager.AllBoonsCopy
  name: AllBoonsCopy
  href: api/InscryptionAPI.Boons.BoonManager.html#InscryptionAPI_Boons_BoonManager_AllBoonsCopy
  commentId: P:InscryptionAPI.Boons.BoonManager.AllBoonsCopy
  fullName: InscryptionAPI.Boons.BoonManager.AllBoonsCopy
  nameWithType: BoonManager.AllBoonsCopy
- uid: InscryptionAPI.Boons.BoonManager.AllBoonsCopy*
  name: AllBoonsCopy
  href: api/InscryptionAPI.Boons.BoonManager.html#InscryptionAPI_Boons_BoonManager_AllBoonsCopy_
  commentId: Overload:InscryptionAPI.Boons.BoonManager.AllBoonsCopy
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonManager.AllBoonsCopy
  nameWithType: BoonManager.AllBoonsCopy
- uid: InscryptionAPI.Boons.BoonManager.BaseGameBoons
  name: BaseGameBoons
  href: api/InscryptionAPI.Boons.BoonManager.html#InscryptionAPI_Boons_BoonManager_BaseGameBoons
  commentId: F:InscryptionAPI.Boons.BoonManager.BaseGameBoons
  fullName: InscryptionAPI.Boons.BoonManager.BaseGameBoons
  nameWithType: BoonManager.BaseGameBoons
- uid: InscryptionAPI.Boons.BoonManager.ClearBoons
  name: ClearBoons()
  href: api/InscryptionAPI.Boons.BoonManager.html#InscryptionAPI_Boons_BoonManager_ClearBoons
  commentId: M:InscryptionAPI.Boons.BoonManager.ClearBoons
  fullName: InscryptionAPI.Boons.BoonManager.ClearBoons()
  nameWithType: BoonManager.ClearBoons()
- uid: InscryptionAPI.Boons.BoonManager.ClearBoons*
  name: ClearBoons
  href: api/InscryptionAPI.Boons.BoonManager.html#InscryptionAPI_Boons_BoonManager_ClearBoons_
  commentId: Overload:InscryptionAPI.Boons.BoonManager.ClearBoons
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonManager.ClearBoons
  nameWithType: BoonManager.ClearBoons
- uid: InscryptionAPI.Boons.BoonManager.ConstructPageData(List{DiskCardGame.RuleBookPageInfo}@,DiskCardGame.RuleBookInfo,DiskCardGame.AbilityMetaCategory)
  name: ConstructPageData(ref List<RuleBookPageInfo>, RuleBookInfo, AbilityMetaCategory)
  href: api/InscryptionAPI.Boons.BoonManager.html#InscryptionAPI_Boons_BoonManager_ConstructPageData_List_DiskCardGame_RuleBookPageInfo___DiskCardGame_RuleBookInfo_DiskCardGame_AbilityMetaCategory_
  commentId: M:InscryptionAPI.Boons.BoonManager.ConstructPageData(List{DiskCardGame.RuleBookPageInfo}@,DiskCardGame.RuleBookInfo,DiskCardGame.AbilityMetaCategory)
  name.vb: ConstructPageData(ByRef List(Of RuleBookPageInfo), RuleBookInfo, AbilityMetaCategory)
  fullName: InscryptionAPI.Boons.BoonManager.ConstructPageData(ref List<DiskCardGame.RuleBookPageInfo>, DiskCardGame.RuleBookInfo, DiskCardGame.AbilityMetaCategory)
  fullName.vb: InscryptionAPI.Boons.BoonManager.ConstructPageData(ByRef List(Of DiskCardGame.RuleBookPageInfo), DiskCardGame.RuleBookInfo, DiskCardGame.AbilityMetaCategory)
  nameWithType: BoonManager.ConstructPageData(ref List<RuleBookPageInfo>, RuleBookInfo, AbilityMetaCategory)
  nameWithType.vb: BoonManager.ConstructPageData(ByRef List(Of RuleBookPageInfo), RuleBookInfo, AbilityMetaCategory)
- uid: InscryptionAPI.Boons.BoonManager.ConstructPageData*
  name: ConstructPageData
  href: api/InscryptionAPI.Boons.BoonManager.html#InscryptionAPI_Boons_BoonManager_ConstructPageData_
  commentId: Overload:InscryptionAPI.Boons.BoonManager.ConstructPageData
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonManager.ConstructPageData
  nameWithType: BoonManager.ConstructPageData
- uid: InscryptionAPI.Boons.BoonManager.FullBoon
  name: BoonManager.FullBoon
  href: api/InscryptionAPI.Boons.BoonManager.FullBoon.html
  commentId: T:InscryptionAPI.Boons.BoonManager.FullBoon
  fullName: InscryptionAPI.Boons.BoonManager.FullBoon
  nameWithType: BoonManager.FullBoon
- uid: InscryptionAPI.Boons.BoonManager.FullBoon.appearInRulebook
  name: appearInRulebook
  href: api/InscryptionAPI.Boons.BoonManager.FullBoon.html#InscryptionAPI_Boons_BoonManager_FullBoon_appearInRulebook
  commentId: F:InscryptionAPI.Boons.BoonManager.FullBoon.appearInRulebook
  fullName: InscryptionAPI.Boons.BoonManager.FullBoon.appearInRulebook
  nameWithType: BoonManager.FullBoon.appearInRulebook
- uid: InscryptionAPI.Boons.BoonManager.FullBoon.boon
  name: boon
  href: api/InscryptionAPI.Boons.BoonManager.FullBoon.html#InscryptionAPI_Boons_BoonManager_FullBoon_boon
  commentId: F:InscryptionAPI.Boons.BoonManager.FullBoon.boon
  fullName: InscryptionAPI.Boons.BoonManager.FullBoon.boon
  nameWithType: BoonManager.FullBoon.boon
- uid: InscryptionAPI.Boons.BoonManager.FullBoon.boonHandlerType
  name: boonHandlerType
  href: api/InscryptionAPI.Boons.BoonManager.FullBoon.html#InscryptionAPI_Boons_BoonManager_FullBoon_boonHandlerType
  commentId: F:InscryptionAPI.Boons.BoonManager.FullBoon.boonHandlerType
  fullName: InscryptionAPI.Boons.BoonManager.FullBoon.boonHandlerType
  nameWithType: BoonManager.FullBoon.boonHandlerType
- uid: InscryptionAPI.Boons.BoonManager.FullBoon.stacks
  name: stacks
  href: api/InscryptionAPI.Boons.BoonManager.FullBoon.html#InscryptionAPI_Boons_BoonManager_FullBoon_stacks
  commentId: F:InscryptionAPI.Boons.BoonManager.FullBoon.stacks
  fullName: InscryptionAPI.Boons.BoonManager.FullBoon.stacks
  nameWithType: BoonManager.FullBoon.stacks
- uid: InscryptionAPI.Boons.BoonManager.get_Boons(List{DiskCardGame.BoonData}@,DiskCardGame.DeckInfo)
  name: get_Boons(ref List<BoonData>, DeckInfo)
  href: api/InscryptionAPI.Boons.BoonManager.html#InscryptionAPI_Boons_BoonManager_get_Boons_List_DiskCardGame_BoonData___DiskCardGame_DeckInfo_
  commentId: M:InscryptionAPI.Boons.BoonManager.get_Boons(List{DiskCardGame.BoonData}@,DiskCardGame.DeckInfo)
  name.vb: get_Boons(ByRef List(Of BoonData), DeckInfo)
  fullName: InscryptionAPI.Boons.BoonManager.get_Boons(ref List<DiskCardGame.BoonData>, DiskCardGame.DeckInfo)
  fullName.vb: InscryptionAPI.Boons.BoonManager.get_Boons(ByRef List(Of DiskCardGame.BoonData), DiskCardGame.DeckInfo)
  nameWithType: BoonManager.get_Boons(ref List<BoonData>, DeckInfo)
  nameWithType.vb: BoonManager.get_Boons(ByRef List(Of BoonData), DeckInfo)
- uid: InscryptionAPI.Boons.BoonManager.get_Boons*
  name: get_Boons
  href: api/InscryptionAPI.Boons.BoonManager.html#InscryptionAPI_Boons_BoonManager_get_Boons_
  commentId: Overload:InscryptionAPI.Boons.BoonManager.get_Boons
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonManager.get_Boons
  nameWithType: BoonManager.get_Boons
- uid: InscryptionAPI.Boons.BoonManager.LoadBoons(DiskCardGame.DeckInfo)
  name: LoadBoons(DeckInfo)
  href: api/InscryptionAPI.Boons.BoonManager.html#InscryptionAPI_Boons_BoonManager_LoadBoons_DiskCardGame_DeckInfo_
  commentId: M:InscryptionAPI.Boons.BoonManager.LoadBoons(DiskCardGame.DeckInfo)
  fullName: InscryptionAPI.Boons.BoonManager.LoadBoons(DiskCardGame.DeckInfo)
  nameWithType: BoonManager.LoadBoons(DeckInfo)
- uid: InscryptionAPI.Boons.BoonManager.LoadBoons*
  name: LoadBoons
  href: api/InscryptionAPI.Boons.BoonManager.html#InscryptionAPI_Boons_BoonManager_LoadBoons_
  commentId: Overload:InscryptionAPI.Boons.BoonManager.LoadBoons
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonManager.LoadBoons
  nameWithType: BoonManager.LoadBoons
- uid: InscryptionAPI.Boons.BoonManager.New(System.String,System.String,Type,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean)
  name: New(String, String, Type, String, String, String, Boolean, Boolean, Boolean)
  href: api/InscryptionAPI.Boons.BoonManager.html#InscryptionAPI_Boons_BoonManager_New_System_String_System_String_Type_System_String_System_String_System_String_System_Boolean_System_Boolean_System_Boolean_
  commentId: M:InscryptionAPI.Boons.BoonManager.New(System.String,System.String,Type,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean)
  fullName: InscryptionAPI.Boons.BoonManager.New(System.String, System.String, Type, System.String, System.String, System.String, System.Boolean, System.Boolean, System.Boolean)
  nameWithType: BoonManager.New(String, String, Type, String, String, String, Boolean, Boolean, Boolean)
- uid: InscryptionAPI.Boons.BoonManager.New(System.String,System.String,Type,System.String,UnityEngine.Texture,UnityEngine.Texture,System.Boolean,System.Boolean,System.Boolean)
  name: New(String, String, Type, String, Texture, Texture, Boolean, Boolean, Boolean)
  href: api/InscryptionAPI.Boons.BoonManager.html#InscryptionAPI_Boons_BoonManager_New_System_String_System_String_Type_System_String_UnityEngine_Texture_UnityEngine_Texture_System_Boolean_System_Boolean_System_Boolean_
  commentId: M:InscryptionAPI.Boons.BoonManager.New(System.String,System.String,Type,System.String,UnityEngine.Texture,UnityEngine.Texture,System.Boolean,System.Boolean,System.Boolean)
  fullName: InscryptionAPI.Boons.BoonManager.New(System.String, System.String, Type, System.String, UnityEngine.Texture, UnityEngine.Texture, System.Boolean, System.Boolean, System.Boolean)
  nameWithType: BoonManager.New(String, String, Type, String, Texture, Texture, Boolean, Boolean, Boolean)
- uid: InscryptionAPI.Boons.BoonManager.New*
  name: New
  href: api/InscryptionAPI.Boons.BoonManager.html#InscryptionAPI_Boons_BoonManager_New_
  commentId: Overload:InscryptionAPI.Boons.BoonManager.New
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonManager.New
  nameWithType: BoonManager.New
- uid: InscryptionAPI.Boons.BoonManager.New``1(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean)
  name: New<T>(String, String, String, String, String, Boolean, Boolean, Boolean)
  href: api/InscryptionAPI.Boons.BoonManager.html#InscryptionAPI_Boons_BoonManager_New__1_System_String_System_String_System_String_System_String_System_String_System_Boolean_System_Boolean_System_Boolean_
  commentId: M:InscryptionAPI.Boons.BoonManager.New``1(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean)
  name.vb: New(Of T)(String, String, String, String, String, Boolean, Boolean, Boolean)
  fullName: InscryptionAPI.Boons.BoonManager.New<T>(System.String, System.String, System.String, System.String, System.String, System.Boolean, System.Boolean, System.Boolean)
  fullName.vb: InscryptionAPI.Boons.BoonManager.New(Of T)(System.String, System.String, System.String, System.String, System.String, System.Boolean, System.Boolean, System.Boolean)
  nameWithType: BoonManager.New<T>(String, String, String, String, String, Boolean, Boolean, Boolean)
  nameWithType.vb: BoonManager.New(Of T)(String, String, String, String, String, Boolean, Boolean, Boolean)
- uid: InscryptionAPI.Boons.BoonManager.New``1(System.String,System.String,System.String,UnityEngine.Texture,UnityEngine.Texture,System.Boolean,System.Boolean,System.Boolean)
  name: New<T>(String, String, String, Texture, Texture, Boolean, Boolean, Boolean)
  href: api/InscryptionAPI.Boons.BoonManager.html#InscryptionAPI_Boons_BoonManager_New__1_System_String_System_String_System_String_UnityEngine_Texture_UnityEngine_Texture_System_Boolean_System_Boolean_System_Boolean_
  commentId: M:InscryptionAPI.Boons.BoonManager.New``1(System.String,System.String,System.String,UnityEngine.Texture,UnityEngine.Texture,System.Boolean,System.Boolean,System.Boolean)
  name.vb: New(Of T)(String, String, String, Texture, Texture, Boolean, Boolean, Boolean)
  fullName: InscryptionAPI.Boons.BoonManager.New<T>(System.String, System.String, System.String, UnityEngine.Texture, UnityEngine.Texture, System.Boolean, System.Boolean, System.Boolean)
  fullName.vb: InscryptionAPI.Boons.BoonManager.New(Of T)(System.String, System.String, System.String, UnityEngine.Texture, UnityEngine.Texture, System.Boolean, System.Boolean, System.Boolean)
  nameWithType: BoonManager.New<T>(String, String, String, Texture, Texture, Boolean, Boolean, Boolean)
  nameWithType.vb: BoonManager.New(Of T)(String, String, String, Texture, Texture, Boolean, Boolean, Boolean)
- uid: InscryptionAPI.Boons.BoonManager.NewBoons
  name: NewBoons
  href: api/InscryptionAPI.Boons.BoonManager.html#InscryptionAPI_Boons_BoonManager_NewBoons
  commentId: F:InscryptionAPI.Boons.BoonManager.NewBoons
  fullName: InscryptionAPI.Boons.BoonManager.NewBoons
  nameWithType: BoonManager.NewBoons
- uid: InscryptionAPI.Boons.BoonManager.Postfix(System.Collections.IEnumerator)
  name: Postfix(IEnumerator)
  href: api/InscryptionAPI.Boons.BoonManager.html#InscryptionAPI_Boons_BoonManager_Postfix_System_Collections_IEnumerator_
  commentId: M:InscryptionAPI.Boons.BoonManager.Postfix(System.Collections.IEnumerator)
  fullName: InscryptionAPI.Boons.BoonManager.Postfix(System.Collections.IEnumerator)
  nameWithType: BoonManager.Postfix(IEnumerator)
- uid: InscryptionAPI.Boons.BoonManager.Postfix*
  name: Postfix
  href: api/InscryptionAPI.Boons.BoonManager.html#InscryptionAPI_Boons_BoonManager_Postfix_
  commentId: Overload:InscryptionAPI.Boons.BoonManager.Postfix
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonManager.Postfix
  nameWithType: BoonManager.Postfix
- uid: InscryptionAPI.Boons.BoonManager.SyncCardList
  name: SyncCardList()
  href: api/InscryptionAPI.Boons.BoonManager.html#InscryptionAPI_Boons_BoonManager_SyncCardList
  commentId: M:InscryptionAPI.Boons.BoonManager.SyncCardList
  fullName: InscryptionAPI.Boons.BoonManager.SyncCardList()
  nameWithType: BoonManager.SyncCardList()
- uid: InscryptionAPI.Boons.BoonManager.SyncCardList*
  name: SyncCardList
  href: api/InscryptionAPI.Boons.BoonManager.html#InscryptionAPI_Boons_BoonManager_SyncCardList_
  commentId: Overload:InscryptionAPI.Boons.BoonManager.SyncCardList
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonManager.SyncCardList
  nameWithType: BoonManager.SyncCardList
- uid: InscryptionAPI.Boons.DeckInfoExtensions
  name: DeckInfoExtensions
  href: api/InscryptionAPI.Boons.DeckInfoExtensions.html
  commentId: T:InscryptionAPI.Boons.DeckInfoExtensions
  fullName: InscryptionAPI.Boons.DeckInfoExtensions
  nameWithType: DeckInfoExtensions
- uid: InscryptionAPI.Boons.DeckInfoExtensions.RemoveAllBoonsOfType(DiskCardGame.DeckInfo,DiskCardGame.BoonData.Type)
  name: RemoveAllBoonsOfType(DeckInfo, BoonData.Type)
  href: api/InscryptionAPI.Boons.DeckInfoExtensions.html#InscryptionAPI_Boons_DeckInfoExtensions_RemoveAllBoonsOfType_DiskCardGame_DeckInfo_DiskCardGame_BoonData_Type_
  commentId: M:InscryptionAPI.Boons.DeckInfoExtensions.RemoveAllBoonsOfType(DiskCardGame.DeckInfo,DiskCardGame.BoonData.Type)
  fullName: InscryptionAPI.Boons.DeckInfoExtensions.RemoveAllBoonsOfType(DiskCardGame.DeckInfo, DiskCardGame.BoonData.Type)
  nameWithType: DeckInfoExtensions.RemoveAllBoonsOfType(DeckInfo, BoonData.Type)
- uid: InscryptionAPI.Boons.DeckInfoExtensions.RemoveAllBoonsOfType*
  name: RemoveAllBoonsOfType
  href: api/InscryptionAPI.Boons.DeckInfoExtensions.html#InscryptionAPI_Boons_DeckInfoExtensions_RemoveAllBoonsOfType_
  commentId: Overload:InscryptionAPI.Boons.DeckInfoExtensions.RemoveAllBoonsOfType
  isSpec: "True"
  fullName: InscryptionAPI.Boons.DeckInfoExtensions.RemoveAllBoonsOfType
  nameWithType: DeckInfoExtensions.RemoveAllBoonsOfType
- uid: InscryptionAPI.Boons.DeckInfoExtensions.RemoveBoon(DiskCardGame.DeckInfo,DiskCardGame.BoonData.Type)
  name: RemoveBoon(DeckInfo, BoonData.Type)
  href: api/InscryptionAPI.Boons.DeckInfoExtensions.html#InscryptionAPI_Boons_DeckInfoExtensions_RemoveBoon_DiskCardGame_DeckInfo_DiskCardGame_BoonData_Type_
  commentId: M:InscryptionAPI.Boons.DeckInfoExtensions.RemoveBoon(DiskCardGame.DeckInfo,DiskCardGame.BoonData.Type)
  fullName: InscryptionAPI.Boons.DeckInfoExtensions.RemoveBoon(DiskCardGame.DeckInfo, DiskCardGame.BoonData.Type)
  nameWithType: DeckInfoExtensions.RemoveBoon(DeckInfo, BoonData.Type)
- uid: InscryptionAPI.Boons.DeckInfoExtensions.RemoveBoon*
  name: RemoveBoon
  href: api/InscryptionAPI.Boons.DeckInfoExtensions.html#InscryptionAPI_Boons_DeckInfoExtensions_RemoveBoon_
  commentId: Overload:InscryptionAPI.Boons.DeckInfoExtensions.RemoveBoon
  isSpec: "True"
  fullName: InscryptionAPI.Boons.DeckInfoExtensions.RemoveBoon
  nameWithType: DeckInfoExtensions.RemoveBoon
- uid: InscryptionAPI.Card
  name: InscryptionAPI.Card
  href: api/InscryptionAPI.Card.html
  commentId: N:InscryptionAPI.Card
  fullName: InscryptionAPI.Card
  nameWithType: InscryptionAPI.Card
- uid: InscryptionAPI.Card.AbilityExtensions
  name: AbilityExtensions
  href: api/InscryptionAPI.Card.AbilityExtensions.html
  commentId: T:InscryptionAPI.Card.AbilityExtensions
  fullName: InscryptionAPI.Card.AbilityExtensions
  nameWithType: AbilityExtensions
- uid: InscryptionAPI.Card.AbilityExtensions.AbilityByID(IEnumerable{DiskCardGame.AbilityInfo},DiskCardGame.Ability)
  name: AbilityByID(IEnumerable<AbilityInfo>, Ability)
  href: api/InscryptionAPI.Card.AbilityExtensions.html#InscryptionAPI_Card_AbilityExtensions_AbilityByID_IEnumerable_DiskCardGame_AbilityInfo__DiskCardGame_Ability_
  commentId: M:InscryptionAPI.Card.AbilityExtensions.AbilityByID(IEnumerable{DiskCardGame.AbilityInfo},DiskCardGame.Ability)
  name.vb: AbilityByID(IEnumerable(Of AbilityInfo), Ability)
  fullName: InscryptionAPI.Card.AbilityExtensions.AbilityByID(IEnumerable<DiskCardGame.AbilityInfo>, DiskCardGame.Ability)
  fullName.vb: InscryptionAPI.Card.AbilityExtensions.AbilityByID(IEnumerable(Of DiskCardGame.AbilityInfo), DiskCardGame.Ability)
  nameWithType: AbilityExtensions.AbilityByID(IEnumerable<AbilityInfo>, Ability)
  nameWithType.vb: AbilityExtensions.AbilityByID(IEnumerable(Of AbilityInfo), Ability)
- uid: InscryptionAPI.Card.AbilityExtensions.AbilityByID(IEnumerable{InscryptionAPI.Card.AbilityManager.FullAbility},DiskCardGame.Ability)
  name: AbilityByID(IEnumerable<AbilityManager.FullAbility>, Ability)
  href: api/InscryptionAPI.Card.AbilityExtensions.html#InscryptionAPI_Card_AbilityExtensions_AbilityByID_IEnumerable_InscryptionAPI_Card_AbilityManager_FullAbility__DiskCardGame_Ability_
  commentId: M:InscryptionAPI.Card.AbilityExtensions.AbilityByID(IEnumerable{InscryptionAPI.Card.AbilityManager.FullAbility},DiskCardGame.Ability)
  name.vb: AbilityByID(IEnumerable(Of AbilityManager.FullAbility), Ability)
  fullName: InscryptionAPI.Card.AbilityExtensions.AbilityByID(IEnumerable<InscryptionAPI.Card.AbilityManager.FullAbility>, DiskCardGame.Ability)
  fullName.vb: InscryptionAPI.Card.AbilityExtensions.AbilityByID(IEnumerable(Of InscryptionAPI.Card.AbilityManager.FullAbility), DiskCardGame.Ability)
  nameWithType: AbilityExtensions.AbilityByID(IEnumerable<AbilityManager.FullAbility>, Ability)
  nameWithType.vb: AbilityExtensions.AbilityByID(IEnumerable(Of AbilityManager.FullAbility), Ability)
- uid: InscryptionAPI.Card.AbilityExtensions.AbilityByID*
  name: AbilityByID
  href: api/InscryptionAPI.Card.AbilityExtensions.html#InscryptionAPI_Card_AbilityExtensions_AbilityByID_
  commentId: Overload:InscryptionAPI.Card.AbilityExtensions.AbilityByID
  isSpec: "True"
  fullName: InscryptionAPI.Card.AbilityExtensions.AbilityByID
  nameWithType: AbilityExtensions.AbilityByID
- uid: InscryptionAPI.Card.AbilityExtensions.AddMetaCategories(DiskCardGame.AbilityInfo,DiskCardGame.AbilityMetaCategory[])
  name: AddMetaCategories(AbilityInfo, AbilityMetaCategory[])
  href: api/InscryptionAPI.Card.AbilityExtensions.html#InscryptionAPI_Card_AbilityExtensions_AddMetaCategories_DiskCardGame_AbilityInfo_DiskCardGame_AbilityMetaCategory___
  commentId: M:InscryptionAPI.Card.AbilityExtensions.AddMetaCategories(DiskCardGame.AbilityInfo,DiskCardGame.AbilityMetaCategory[])
  name.vb: AddMetaCategories(AbilityInfo, AbilityMetaCategory())
  fullName: InscryptionAPI.Card.AbilityExtensions.AddMetaCategories(DiskCardGame.AbilityInfo, DiskCardGame.AbilityMetaCategory[])
  fullName.vb: InscryptionAPI.Card.AbilityExtensions.AddMetaCategories(DiskCardGame.AbilityInfo, DiskCardGame.AbilityMetaCategory())
  nameWithType: AbilityExtensions.AddMetaCategories(AbilityInfo, AbilityMetaCategory[])
  nameWithType.vb: AbilityExtensions.AddMetaCategories(AbilityInfo, AbilityMetaCategory())
- uid: InscryptionAPI.Card.AbilityExtensions.AddMetaCategories(DiskCardGame.StatIconInfo,DiskCardGame.AbilityMetaCategory[])
  name: AddMetaCategories(StatIconInfo, AbilityMetaCategory[])
  href: api/InscryptionAPI.Card.AbilityExtensions.html#InscryptionAPI_Card_AbilityExtensions_AddMetaCategories_DiskCardGame_StatIconInfo_DiskCardGame_AbilityMetaCategory___
  commentId: M:InscryptionAPI.Card.AbilityExtensions.AddMetaCategories(DiskCardGame.StatIconInfo,DiskCardGame.AbilityMetaCategory[])
  name.vb: AddMetaCategories(StatIconInfo, AbilityMetaCategory())
  fullName: InscryptionAPI.Card.AbilityExtensions.AddMetaCategories(DiskCardGame.StatIconInfo, DiskCardGame.AbilityMetaCategory[])
  fullName.vb: InscryptionAPI.Card.AbilityExtensions.AddMetaCategories(DiskCardGame.StatIconInfo, DiskCardGame.AbilityMetaCategory())
  nameWithType: AbilityExtensions.AddMetaCategories(StatIconInfo, AbilityMetaCategory[])
  nameWithType.vb: AbilityExtensions.AddMetaCategories(StatIconInfo, AbilityMetaCategory())
- uid: InscryptionAPI.Card.AbilityExtensions.AddMetaCategories*
  name: AddMetaCategories
  href: api/InscryptionAPI.Card.AbilityExtensions.html#InscryptionAPI_Card_AbilityExtensions_AddMetaCategories_
  commentId: Overload:InscryptionAPI.Card.AbilityExtensions.AddMetaCategories
  isSpec: "True"
  fullName: InscryptionAPI.Card.AbilityExtensions.AddMetaCategories
  nameWithType: AbilityExtensions.AddMetaCategories
- uid: InscryptionAPI.Card.AbilityExtensions.SetCustomFlippedTexture(DiskCardGame.AbilityInfo,UnityEngine.Texture2D)
  name: SetCustomFlippedTexture(AbilityInfo, Texture2D)
  href: api/InscryptionAPI.Card.AbilityExtensions.html#InscryptionAPI_Card_AbilityExtensions_SetCustomFlippedTexture_DiskCardGame_AbilityInfo_UnityEngine_Texture2D_
  commentId: M:InscryptionAPI.Card.AbilityExtensions.SetCustomFlippedTexture(DiskCardGame.AbilityInfo,UnityEngine.Texture2D)
  fullName: InscryptionAPI.Card.AbilityExtensions.SetCustomFlippedTexture(DiskCardGame.AbilityInfo, UnityEngine.Texture2D)
  nameWithType: AbilityExtensions.SetCustomFlippedTexture(AbilityInfo, Texture2D)
- uid: InscryptionAPI.Card.AbilityExtensions.SetCustomFlippedTexture(InscryptionAPI.Card.AbilityManager.FullAbility,UnityEngine.Texture2D)
  name: SetCustomFlippedTexture(AbilityManager.FullAbility, Texture2D)
  href: api/InscryptionAPI.Card.AbilityExtensions.html#InscryptionAPI_Card_AbilityExtensions_SetCustomFlippedTexture_InscryptionAPI_Card_AbilityManager_FullAbility_UnityEngine_Texture2D_
  commentId: M:InscryptionAPI.Card.AbilityExtensions.SetCustomFlippedTexture(InscryptionAPI.Card.AbilityManager.FullAbility,UnityEngine.Texture2D)
  fullName: InscryptionAPI.Card.AbilityExtensions.SetCustomFlippedTexture(InscryptionAPI.Card.AbilityManager.FullAbility, UnityEngine.Texture2D)
  nameWithType: AbilityExtensions.SetCustomFlippedTexture(AbilityManager.FullAbility, Texture2D)
- uid: InscryptionAPI.Card.AbilityExtensions.SetCustomFlippedTexture*
  name: SetCustomFlippedTexture
  href: api/InscryptionAPI.Card.AbilityExtensions.html#InscryptionAPI_Card_AbilityExtensions_SetCustomFlippedTexture_
  commentId: Overload:InscryptionAPI.Card.AbilityExtensions.SetCustomFlippedTexture
  isSpec: "True"
  fullName: InscryptionAPI.Card.AbilityExtensions.SetCustomFlippedTexture
  nameWithType: AbilityExtensions.SetCustomFlippedTexture
- uid: InscryptionAPI.Card.AbilityExtensions.SetDefaultPart1Ability(DiskCardGame.AbilityInfo)
  name: SetDefaultPart1Ability(AbilityInfo)
  href: api/InscryptionAPI.Card.AbilityExtensions.html#InscryptionAPI_Card_AbilityExtensions_SetDefaultPart1Ability_DiskCardGame_AbilityInfo_
  commentId: M:InscryptionAPI.Card.AbilityExtensions.SetDefaultPart1Ability(DiskCardGame.AbilityInfo)
  fullName: InscryptionAPI.Card.AbilityExtensions.SetDefaultPart1Ability(DiskCardGame.AbilityInfo)
  nameWithType: AbilityExtensions.SetDefaultPart1Ability(AbilityInfo)
- uid: InscryptionAPI.Card.AbilityExtensions.SetDefaultPart1Ability(DiskCardGame.StatIconInfo)
  name: SetDefaultPart1Ability(StatIconInfo)
  href: api/InscryptionAPI.Card.AbilityExtensions.html#InscryptionAPI_Card_AbilityExtensions_SetDefaultPart1Ability_DiskCardGame_StatIconInfo_
  commentId: M:InscryptionAPI.Card.AbilityExtensions.SetDefaultPart1Ability(DiskCardGame.StatIconInfo)
  fullName: InscryptionAPI.Card.AbilityExtensions.SetDefaultPart1Ability(DiskCardGame.StatIconInfo)
  nameWithType: AbilityExtensions.SetDefaultPart1Ability(StatIconInfo)
- uid: InscryptionAPI.Card.AbilityExtensions.SetDefaultPart1Ability*
  name: SetDefaultPart1Ability
  href: api/InscryptionAPI.Card.AbilityExtensions.html#InscryptionAPI_Card_AbilityExtensions_SetDefaultPart1Ability_
  commentId: Overload:InscryptionAPI.Card.AbilityExtensions.SetDefaultPart1Ability
  isSpec: "True"
  fullName: InscryptionAPI.Card.AbilityExtensions.SetDefaultPart1Ability
  nameWithType: AbilityExtensions.SetDefaultPart1Ability
- uid: InscryptionAPI.Card.AbilityExtensions.SetDefaultPart3Ability(DiskCardGame.AbilityInfo)
  name: SetDefaultPart3Ability(AbilityInfo)
  href: api/InscryptionAPI.Card.AbilityExtensions.html#InscryptionAPI_Card_AbilityExtensions_SetDefaultPart3Ability_DiskCardGame_AbilityInfo_
  commentId: M:InscryptionAPI.Card.AbilityExtensions.SetDefaultPart3Ability(DiskCardGame.AbilityInfo)
  fullName: InscryptionAPI.Card.AbilityExtensions.SetDefaultPart3Ability(DiskCardGame.AbilityInfo)
  nameWithType: AbilityExtensions.SetDefaultPart3Ability(AbilityInfo)
- uid: InscryptionAPI.Card.AbilityExtensions.SetDefaultPart3Ability(DiskCardGame.StatIconInfo)
  name: SetDefaultPart3Ability(StatIconInfo)
  href: api/InscryptionAPI.Card.AbilityExtensions.html#InscryptionAPI_Card_AbilityExtensions_SetDefaultPart3Ability_DiskCardGame_StatIconInfo_
  commentId: M:InscryptionAPI.Card.AbilityExtensions.SetDefaultPart3Ability(DiskCardGame.StatIconInfo)
  fullName: InscryptionAPI.Card.AbilityExtensions.SetDefaultPart3Ability(DiskCardGame.StatIconInfo)
  nameWithType: AbilityExtensions.SetDefaultPart3Ability(StatIconInfo)
- uid: InscryptionAPI.Card.AbilityExtensions.SetDefaultPart3Ability*
  name: SetDefaultPart3Ability
  href: api/InscryptionAPI.Card.AbilityExtensions.html#InscryptionAPI_Card_AbilityExtensions_SetDefaultPart3Ability_
  commentId: Overload:InscryptionAPI.Card.AbilityExtensions.SetDefaultPart3Ability
  isSpec: "True"
  fullName: InscryptionAPI.Card.AbilityExtensions.SetDefaultPart3Ability
  nameWithType: AbilityExtensions.SetDefaultPart3Ability
- uid: InscryptionAPI.Card.AbilityExtensions.SetIcon(DiskCardGame.AbilityInfo,UnityEngine.Texture2D)
  name: SetIcon(AbilityInfo, Texture2D)
  href: api/InscryptionAPI.Card.AbilityExtensions.html#InscryptionAPI_Card_AbilityExtensions_SetIcon_DiskCardGame_AbilityInfo_UnityEngine_Texture2D_
  commentId: M:InscryptionAPI.Card.AbilityExtensions.SetIcon(DiskCardGame.AbilityInfo,UnityEngine.Texture2D)
  fullName: InscryptionAPI.Card.AbilityExtensions.SetIcon(DiskCardGame.AbilityInfo, UnityEngine.Texture2D)
  nameWithType: AbilityExtensions.SetIcon(AbilityInfo, Texture2D)
- uid: InscryptionAPI.Card.AbilityExtensions.SetIcon(DiskCardGame.StatIconInfo,System.String,System.Nullable{UnityEngine.FilterMode})
  name: SetIcon(StatIconInfo, String, Nullable<FilterMode>)
  href: api/InscryptionAPI.Card.AbilityExtensions.html#InscryptionAPI_Card_AbilityExtensions_SetIcon_DiskCardGame_StatIconInfo_System_String_System_Nullable_UnityEngine_FilterMode__
  commentId: M:InscryptionAPI.Card.AbilityExtensions.SetIcon(DiskCardGame.StatIconInfo,System.String,System.Nullable{UnityEngine.FilterMode})
  name.vb: SetIcon(StatIconInfo, String, Nullable(Of FilterMode))
  fullName: InscryptionAPI.Card.AbilityExtensions.SetIcon(DiskCardGame.StatIconInfo, System.String, System.Nullable<UnityEngine.FilterMode>)
  fullName.vb: InscryptionAPI.Card.AbilityExtensions.SetIcon(DiskCardGame.StatIconInfo, System.String, System.Nullable(Of UnityEngine.FilterMode))
  nameWithType: AbilityExtensions.SetIcon(StatIconInfo, String, Nullable<FilterMode>)
  nameWithType.vb: AbilityExtensions.SetIcon(StatIconInfo, String, Nullable(Of FilterMode))
- uid: InscryptionAPI.Card.AbilityExtensions.SetIcon(DiskCardGame.StatIconInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  name: SetIcon(StatIconInfo, Texture2D, Nullable<FilterMode>)
  href: api/InscryptionAPI.Card.AbilityExtensions.html#InscryptionAPI_Card_AbilityExtensions_SetIcon_DiskCardGame_StatIconInfo_UnityEngine_Texture2D_System_Nullable_UnityEngine_FilterMode__
  commentId: M:InscryptionAPI.Card.AbilityExtensions.SetIcon(DiskCardGame.StatIconInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  name.vb: SetIcon(StatIconInfo, Texture2D, Nullable(Of FilterMode))
  fullName: InscryptionAPI.Card.AbilityExtensions.SetIcon(DiskCardGame.StatIconInfo, UnityEngine.Texture2D, System.Nullable<UnityEngine.FilterMode>)
  fullName.vb: InscryptionAPI.Card.AbilityExtensions.SetIcon(DiskCardGame.StatIconInfo, UnityEngine.Texture2D, System.Nullable(Of UnityEngine.FilterMode))
  nameWithType: AbilityExtensions.SetIcon(StatIconInfo, Texture2D, Nullable<FilterMode>)
  nameWithType.vb: AbilityExtensions.SetIcon(StatIconInfo, Texture2D, Nullable(Of FilterMode))
- uid: InscryptionAPI.Card.AbilityExtensions.SetIcon(InscryptionAPI.Card.AbilityManager.FullAbility,UnityEngine.Texture2D)
  name: SetIcon(AbilityManager.FullAbility, Texture2D)
  href: api/InscryptionAPI.Card.AbilityExtensions.html#InscryptionAPI_Card_AbilityExtensions_SetIcon_InscryptionAPI_Card_AbilityManager_FullAbility_UnityEngine_Texture2D_
  commentId: M:InscryptionAPI.Card.AbilityExtensions.SetIcon(InscryptionAPI.Card.AbilityManager.FullAbility,UnityEngine.Texture2D)
  fullName: InscryptionAPI.Card.AbilityExtensions.SetIcon(InscryptionAPI.Card.AbilityManager.FullAbility, UnityEngine.Texture2D)
  nameWithType: AbilityExtensions.SetIcon(AbilityManager.FullAbility, Texture2D)
- uid: InscryptionAPI.Card.AbilityExtensions.SetIcon*
  name: SetIcon
  href: api/InscryptionAPI.Card.AbilityExtensions.html#InscryptionAPI_Card_AbilityExtensions_SetIcon_
  commentId: Overload:InscryptionAPI.Card.AbilityExtensions.SetIcon
  isSpec: "True"
  fullName: InscryptionAPI.Card.AbilityExtensions.SetIcon
  nameWithType: AbilityExtensions.SetIcon
- uid: InscryptionAPI.Card.AbilityExtensions.SetPixelAbilityIcon(DiskCardGame.AbilityInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  name: SetPixelAbilityIcon(AbilityInfo, Texture2D, Nullable<FilterMode>)
  href: api/InscryptionAPI.Card.AbilityExtensions.html#InscryptionAPI_Card_AbilityExtensions_SetPixelAbilityIcon_DiskCardGame_AbilityInfo_UnityEngine_Texture2D_System_Nullable_UnityEngine_FilterMode__
  commentId: M:InscryptionAPI.Card.AbilityExtensions.SetPixelAbilityIcon(DiskCardGame.AbilityInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  name.vb: SetPixelAbilityIcon(AbilityInfo, Texture2D, Nullable(Of FilterMode))
  fullName: InscryptionAPI.Card.AbilityExtensions.SetPixelAbilityIcon(DiskCardGame.AbilityInfo, UnityEngine.Texture2D, System.Nullable<UnityEngine.FilterMode>)
  fullName.vb: InscryptionAPI.Card.AbilityExtensions.SetPixelAbilityIcon(DiskCardGame.AbilityInfo, UnityEngine.Texture2D, System.Nullable(Of UnityEngine.FilterMode))
  nameWithType: AbilityExtensions.SetPixelAbilityIcon(AbilityInfo, Texture2D, Nullable<FilterMode>)
  nameWithType.vb: AbilityExtensions.SetPixelAbilityIcon(AbilityInfo, Texture2D, Nullable(Of FilterMode))
- uid: InscryptionAPI.Card.AbilityExtensions.SetPixelAbilityIcon*
  name: SetPixelAbilityIcon
  href: api/InscryptionAPI.Card.AbilityExtensions.html#InscryptionAPI_Card_AbilityExtensions_SetPixelAbilityIcon_
  commentId: Overload:InscryptionAPI.Card.AbilityExtensions.SetPixelAbilityIcon
  isSpec: "True"
  fullName: InscryptionAPI.Card.AbilityExtensions.SetPixelAbilityIcon
  nameWithType: AbilityExtensions.SetPixelAbilityIcon
- uid: InscryptionAPI.Card.AbilityExtensions.SetPixelIcon(DiskCardGame.StatIconInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  name: SetPixelIcon(StatIconInfo, Texture2D, Nullable<FilterMode>)
  href: api/InscryptionAPI.Card.AbilityExtensions.html#InscryptionAPI_Card_AbilityExtensions_SetPixelIcon_DiskCardGame_StatIconInfo_UnityEngine_Texture2D_System_Nullable_UnityEngine_FilterMode__
  commentId: M:InscryptionAPI.Card.AbilityExtensions.SetPixelIcon(DiskCardGame.StatIconInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  name.vb: SetPixelIcon(StatIconInfo, Texture2D, Nullable(Of FilterMode))
  fullName: InscryptionAPI.Card.AbilityExtensions.SetPixelIcon(DiskCardGame.StatIconInfo, UnityEngine.Texture2D, System.Nullable<UnityEngine.FilterMode>)
  fullName.vb: InscryptionAPI.Card.AbilityExtensions.SetPixelIcon(DiskCardGame.StatIconInfo, UnityEngine.Texture2D, System.Nullable(Of UnityEngine.FilterMode))
  nameWithType: AbilityExtensions.SetPixelIcon(StatIconInfo, Texture2D, Nullable<FilterMode>)
  nameWithType.vb: AbilityExtensions.SetPixelIcon(StatIconInfo, Texture2D, Nullable(Of FilterMode))
- uid: InscryptionAPI.Card.AbilityExtensions.SetPixelIcon*
  name: SetPixelIcon
  href: api/InscryptionAPI.Card.AbilityExtensions.html#InscryptionAPI_Card_AbilityExtensions_SetPixelIcon_
  commentId: Overload:InscryptionAPI.Card.AbilityExtensions.SetPixelIcon
  isSpec: "True"
  fullName: InscryptionAPI.Card.AbilityExtensions.SetPixelIcon
  nameWithType: AbilityExtensions.SetPixelIcon
- uid: InscryptionAPI.Card.AbilityManager
  name: AbilityManager
  href: api/InscryptionAPI.Card.AbilityManager.html
  commentId: T:InscryptionAPI.Card.AbilityManager
  fullName: InscryptionAPI.Card.AbilityManager
  nameWithType: AbilityManager
- uid: InscryptionAPI.Card.AbilityManager.Add(System.String,DiskCardGame.AbilityInfo,Type,UnityEngine.Texture)
  name: Add(String, AbilityInfo, Type, Texture)
  href: api/InscryptionAPI.Card.AbilityManager.html#InscryptionAPI_Card_AbilityManager_Add_System_String_DiskCardGame_AbilityInfo_Type_UnityEngine_Texture_
  commentId: M:InscryptionAPI.Card.AbilityManager.Add(System.String,DiskCardGame.AbilityInfo,Type,UnityEngine.Texture)
  fullName: InscryptionAPI.Card.AbilityManager.Add(System.String, DiskCardGame.AbilityInfo, Type, UnityEngine.Texture)
  nameWithType: AbilityManager.Add(String, AbilityInfo, Type, Texture)
- uid: InscryptionAPI.Card.AbilityManager.Add*
  name: Add
  href: api/InscryptionAPI.Card.AbilityManager.html#InscryptionAPI_Card_AbilityManager_Add_
  commentId: Overload:InscryptionAPI.Card.AbilityManager.Add
  isSpec: "True"
  fullName: InscryptionAPI.Card.AbilityManager.Add
  nameWithType: AbilityManager.Add
- uid: InscryptionAPI.Card.AbilityManager.AllAbilities
  name: AllAbilities
  href: api/InscryptionAPI.Card.AbilityManager.html#InscryptionAPI_Card_AbilityManager_AllAbilities
  commentId: P:InscryptionAPI.Card.AbilityManager.AllAbilities
  fullName: InscryptionAPI.Card.AbilityManager.AllAbilities
  nameWithType: AbilityManager.AllAbilities
- uid: InscryptionAPI.Card.AbilityManager.AllAbilities*
  name: AllAbilities
  href: api/InscryptionAPI.Card.AbilityManager.html#InscryptionAPI_Card_AbilityManager_AllAbilities_
  commentId: Overload:InscryptionAPI.Card.AbilityManager.AllAbilities
  isSpec: "True"
  fullName: InscryptionAPI.Card.AbilityManager.AllAbilities
  nameWithType: AbilityManager.AllAbilities
- uid: InscryptionAPI.Card.AbilityManager.AllAbilityInfos
  name: AllAbilityInfos
  href: api/InscryptionAPI.Card.AbilityManager.html#InscryptionAPI_Card_AbilityManager_AllAbilityInfos
  commentId: P:InscryptionAPI.Card.AbilityManager.AllAbilityInfos
  fullName: InscryptionAPI.Card.AbilityManager.AllAbilityInfos
  nameWithType: AbilityManager.AllAbilityInfos
- uid: InscryptionAPI.Card.AbilityManager.AllAbilityInfos*
  name: AllAbilityInfos
  href: api/InscryptionAPI.Card.AbilityManager.html#InscryptionAPI_Card_AbilityManager_AllAbilityInfos_
  commentId: Overload:InscryptionAPI.Card.AbilityManager.AllAbilityInfos
  isSpec: "True"
  fullName: InscryptionAPI.Card.AbilityManager.AllAbilityInfos
  nameWithType: AbilityManager.AllAbilityInfos
- uid: InscryptionAPI.Card.AbilityManager.BaseGameAbilities
  name: BaseGameAbilities
  href: api/InscryptionAPI.Card.AbilityManager.html#InscryptionAPI_Card_AbilityManager_BaseGameAbilities
  commentId: F:InscryptionAPI.Card.AbilityManager.BaseGameAbilities
  fullName: InscryptionAPI.Card.AbilityManager.BaseGameAbilities
  nameWithType: AbilityManager.BaseGameAbilities
- uid: InscryptionAPI.Card.AbilityManager.FixRulebook(DiskCardGame.AbilityMetaCategory,DiskCardGame.RuleBookInfo,List{DiskCardGame.RuleBookPageInfo}@)
  name: FixRulebook(AbilityMetaCategory, RuleBookInfo, ref List<RuleBookPageInfo>)
  href: api/InscryptionAPI.Card.AbilityManager.html#InscryptionAPI_Card_AbilityManager_FixRulebook_DiskCardGame_AbilityMetaCategory_DiskCardGame_RuleBookInfo_List_DiskCardGame_RuleBookPageInfo___
  commentId: M:InscryptionAPI.Card.AbilityManager.FixRulebook(DiskCardGame.AbilityMetaCategory,DiskCardGame.RuleBookInfo,List{DiskCardGame.RuleBookPageInfo}@)
  name.vb: FixRulebook(AbilityMetaCategory, RuleBookInfo, ByRef List(Of RuleBookPageInfo))
  fullName: InscryptionAPI.Card.AbilityManager.FixRulebook(DiskCardGame.AbilityMetaCategory, DiskCardGame.RuleBookInfo, ref List<DiskCardGame.RuleBookPageInfo>)
  fullName.vb: InscryptionAPI.Card.AbilityManager.FixRulebook(DiskCardGame.AbilityMetaCategory, DiskCardGame.RuleBookInfo, ByRef List(Of DiskCardGame.RuleBookPageInfo))
  nameWithType: AbilityManager.FixRulebook(AbilityMetaCategory, RuleBookInfo, ref List<RuleBookPageInfo>)
  nameWithType.vb: AbilityManager.FixRulebook(AbilityMetaCategory, RuleBookInfo, ByRef List(Of RuleBookPageInfo))
- uid: InscryptionAPI.Card.AbilityManager.FixRulebook*
  name: FixRulebook
  href: api/InscryptionAPI.Card.AbilityManager.html#InscryptionAPI_Card_AbilityManager_FixRulebook_
  commentId: Overload:InscryptionAPI.Card.AbilityManager.FixRulebook
  isSpec: "True"
  fullName: InscryptionAPI.Card.AbilityManager.FixRulebook
  nameWithType: AbilityManager.FixRulebook
- uid: InscryptionAPI.Card.AbilityManager.FullAbility
  name: AbilityManager.FullAbility
  href: api/InscryptionAPI.Card.AbilityManager.FullAbility.html
  commentId: T:InscryptionAPI.Card.AbilityManager.FullAbility
  fullName: InscryptionAPI.Card.AbilityManager.FullAbility
  nameWithType: AbilityManager.FullAbility
- uid: InscryptionAPI.Card.AbilityManager.FullAbility.#ctor(DiskCardGame.Ability,DiskCardGame.AbilityInfo,Type,UnityEngine.Texture)
  name: FullAbility(Ability, AbilityInfo, Type, Texture)
  href: api/InscryptionAPI.Card.AbilityManager.FullAbility.html#InscryptionAPI_Card_AbilityManager_FullAbility__ctor_DiskCardGame_Ability_DiskCardGame_AbilityInfo_Type_UnityEngine_Texture_
  commentId: M:InscryptionAPI.Card.AbilityManager.FullAbility.#ctor(DiskCardGame.Ability,DiskCardGame.AbilityInfo,Type,UnityEngine.Texture)
  fullName: InscryptionAPI.Card.AbilityManager.FullAbility.FullAbility(DiskCardGame.Ability, DiskCardGame.AbilityInfo, Type, UnityEngine.Texture)
  nameWithType: AbilityManager.FullAbility.FullAbility(Ability, AbilityInfo, Type, Texture)
- uid: InscryptionAPI.Card.AbilityManager.FullAbility.#ctor*
  name: FullAbility
  href: api/InscryptionAPI.Card.AbilityManager.FullAbility.html#InscryptionAPI_Card_AbilityManager_FullAbility__ctor_
  commentId: Overload:InscryptionAPI.Card.AbilityManager.FullAbility.#ctor
  isSpec: "True"
  fullName: InscryptionAPI.Card.AbilityManager.FullAbility.FullAbility
  nameWithType: AbilityManager.FullAbility.FullAbility
- uid: InscryptionAPI.Card.AbilityManager.FullAbility.AbilityBehavior
  name: AbilityBehavior
  href: api/InscryptionAPI.Card.AbilityManager.FullAbility.html#InscryptionAPI_Card_AbilityManager_FullAbility_AbilityBehavior
  commentId: F:InscryptionAPI.Card.AbilityManager.FullAbility.AbilityBehavior
  fullName: InscryptionAPI.Card.AbilityManager.FullAbility.AbilityBehavior
  nameWithType: AbilityManager.FullAbility.AbilityBehavior
- uid: InscryptionAPI.Card.AbilityManager.FullAbility.Clone
  name: Clone()
  href: api/InscryptionAPI.Card.AbilityManager.FullAbility.html#InscryptionAPI_Card_AbilityManager_FullAbility_Clone
  commentId: M:InscryptionAPI.Card.AbilityManager.FullAbility.Clone
  fullName: InscryptionAPI.Card.AbilityManager.FullAbility.Clone()
  nameWithType: AbilityManager.FullAbility.Clone()
- uid: InscryptionAPI.Card.AbilityManager.FullAbility.Clone*
  name: Clone
  href: api/InscryptionAPI.Card.AbilityManager.FullAbility.html#InscryptionAPI_Card_AbilityManager_FullAbility_Clone_
  commentId: Overload:InscryptionAPI.Card.AbilityManager.FullAbility.Clone
  isSpec: "True"
  fullName: InscryptionAPI.Card.AbilityManager.FullAbility.Clone
  nameWithType: AbilityManager.FullAbility.Clone
- uid: InscryptionAPI.Card.AbilityManager.FullAbility.CustomFlippedTexture
  name: CustomFlippedTexture
  href: api/InscryptionAPI.Card.AbilityManager.FullAbility.html#InscryptionAPI_Card_AbilityManager_FullAbility_CustomFlippedTexture
  commentId: P:InscryptionAPI.Card.AbilityManager.FullAbility.CustomFlippedTexture
  fullName: InscryptionAPI.Card.AbilityManager.FullAbility.CustomFlippedTexture
  nameWithType: AbilityManager.FullAbility.CustomFlippedTexture
- uid: InscryptionAPI.Card.AbilityManager.FullAbility.CustomFlippedTexture*
  name: CustomFlippedTexture
  href: api/InscryptionAPI.Card.AbilityManager.FullAbility.html#InscryptionAPI_Card_AbilityManager_FullAbility_CustomFlippedTexture_
  commentId: Overload:InscryptionAPI.Card.AbilityManager.FullAbility.CustomFlippedTexture
  isSpec: "True"
  fullName: InscryptionAPI.Card.AbilityManager.FullAbility.CustomFlippedTexture
  nameWithType: AbilityManager.FullAbility.CustomFlippedTexture
- uid: InscryptionAPI.Card.AbilityManager.FullAbility.Id
  name: Id
  href: api/InscryptionAPI.Card.AbilityManager.FullAbility.html#InscryptionAPI_Card_AbilityManager_FullAbility_Id
  commentId: F:InscryptionAPI.Card.AbilityManager.FullAbility.Id
  fullName: InscryptionAPI.Card.AbilityManager.FullAbility.Id
  nameWithType: AbilityManager.FullAbility.Id
- uid: InscryptionAPI.Card.AbilityManager.FullAbility.Info
  name: Info
  href: api/InscryptionAPI.Card.AbilityManager.FullAbility.html#InscryptionAPI_Card_AbilityManager_FullAbility_Info
  commentId: F:InscryptionAPI.Card.AbilityManager.FullAbility.Info
  fullName: InscryptionAPI.Card.AbilityManager.FullAbility.Info
  nameWithType: AbilityManager.FullAbility.Info
- uid: InscryptionAPI.Card.AbilityManager.FullAbility.Texture
  name: Texture
  href: api/InscryptionAPI.Card.AbilityManager.FullAbility.html#InscryptionAPI_Card_AbilityManager_FullAbility_Texture
  commentId: P:InscryptionAPI.Card.AbilityManager.FullAbility.Texture
  fullName: InscryptionAPI.Card.AbilityManager.FullAbility.Texture
  nameWithType: AbilityManager.FullAbility.Texture
- uid: InscryptionAPI.Card.AbilityManager.FullAbility.Texture*
  name: Texture
  href: api/InscryptionAPI.Card.AbilityManager.FullAbility.html#InscryptionAPI_Card_AbilityManager_FullAbility_Texture_
  commentId: Overload:InscryptionAPI.Card.AbilityManager.FullAbility.Texture
  isSpec: "True"
  fullName: InscryptionAPI.Card.AbilityManager.FullAbility.Texture
  nameWithType: AbilityManager.FullAbility.Texture
- uid: InscryptionAPI.Card.AbilityManager.ModifyAbilityList
  name: ModifyAbilityList
  href: api/InscryptionAPI.Card.AbilityManager.html#InscryptionAPI_Card_AbilityManager_ModifyAbilityList
  commentId: E:InscryptionAPI.Card.AbilityManager.ModifyAbilityList
  fullName: InscryptionAPI.Card.AbilityManager.ModifyAbilityList
  nameWithType: AbilityManager.ModifyAbilityList
- uid: InscryptionAPI.Card.AbilityManager.New(System.String,System.String,System.String,Type,System.String)
  name: New(String, String, String, Type, String)
  href: api/InscryptionAPI.Card.AbilityManager.html#InscryptionAPI_Card_AbilityManager_New_System_String_System_String_System_String_Type_System_String_
  commentId: M:InscryptionAPI.Card.AbilityManager.New(System.String,System.String,System.String,Type,System.String)
  fullName: InscryptionAPI.Card.AbilityManager.New(System.String, System.String, System.String, Type, System.String)
  nameWithType: AbilityManager.New(String, String, String, Type, String)
- uid: InscryptionAPI.Card.AbilityManager.New(System.String,System.String,System.String,Type,UnityEngine.Texture)
  name: New(String, String, String, Type, Texture)
  href: api/InscryptionAPI.Card.AbilityManager.html#InscryptionAPI_Card_AbilityManager_New_System_String_System_String_System_String_Type_UnityEngine_Texture_
  commentId: M:InscryptionAPI.Card.AbilityManager.New(System.String,System.String,System.String,Type,UnityEngine.Texture)
  fullName: InscryptionAPI.Card.AbilityManager.New(System.String, System.String, System.String, Type, UnityEngine.Texture)
  nameWithType: AbilityManager.New(String, String, String, Type, Texture)
- uid: InscryptionAPI.Card.AbilityManager.New*
  name: New
  href: api/InscryptionAPI.Card.AbilityManager.html#InscryptionAPI_Card_AbilityManager_New_
  commentId: Overload:InscryptionAPI.Card.AbilityManager.New
  isSpec: "True"
  fullName: InscryptionAPI.Card.AbilityManager.New
  nameWithType: AbilityManager.New
- uid: InscryptionAPI.Card.AbilityManager.OriginalLoadAbilityIcon(System.String,System.Boolean,System.Boolean)
  name: OriginalLoadAbilityIcon(String, Boolean, Boolean)
  href: api/InscryptionAPI.Card.AbilityManager.html#InscryptionAPI_Card_AbilityManager_OriginalLoadAbilityIcon_System_String_System_Boolean_System_Boolean_
  commentId: M:InscryptionAPI.Card.AbilityManager.OriginalLoadAbilityIcon(System.String,System.Boolean,System.Boolean)
  fullName: InscryptionAPI.Card.AbilityManager.OriginalLoadAbilityIcon(System.String, System.Boolean, System.Boolean)
  nameWithType: AbilityManager.OriginalLoadAbilityIcon(String, Boolean, Boolean)
- uid: InscryptionAPI.Card.AbilityManager.OriginalLoadAbilityIcon*
  name: OriginalLoadAbilityIcon
  href: api/InscryptionAPI.Card.AbilityManager.html#InscryptionAPI_Card_AbilityManager_OriginalLoadAbilityIcon_
  commentId: Overload:InscryptionAPI.Card.AbilityManager.OriginalLoadAbilityIcon
  isSpec: "True"
  fullName: InscryptionAPI.Card.AbilityManager.OriginalLoadAbilityIcon
  nameWithType: AbilityManager.OriginalLoadAbilityIcon
- uid: InscryptionAPI.Card.AbilityManager.Remove(DiskCardGame.Ability)
  name: Remove(Ability)
  href: api/InscryptionAPI.Card.AbilityManager.html#InscryptionAPI_Card_AbilityManager_Remove_DiskCardGame_Ability_
  commentId: M:InscryptionAPI.Card.AbilityManager.Remove(DiskCardGame.Ability)
  fullName: InscryptionAPI.Card.AbilityManager.Remove(DiskCardGame.Ability)
  nameWithType: AbilityManager.Remove(Ability)
- uid: InscryptionAPI.Card.AbilityManager.Remove(InscryptionAPI.Card.AbilityManager.FullAbility)
  name: Remove(AbilityManager.FullAbility)
  href: api/InscryptionAPI.Card.AbilityManager.html#InscryptionAPI_Card_AbilityManager_Remove_InscryptionAPI_Card_AbilityManager_FullAbility_
  commentId: M:InscryptionAPI.Card.AbilityManager.Remove(InscryptionAPI.Card.AbilityManager.FullAbility)
  fullName: InscryptionAPI.Card.AbilityManager.Remove(InscryptionAPI.Card.AbilityManager.FullAbility)
  nameWithType: AbilityManager.Remove(AbilityManager.FullAbility)
- uid: InscryptionAPI.Card.AbilityManager.Remove*
  name: Remove
  href: api/InscryptionAPI.Card.AbilityManager.html#InscryptionAPI_Card_AbilityManager_Remove_
  commentId: Overload:InscryptionAPI.Card.AbilityManager.Remove
  isSpec: "True"
  fullName: InscryptionAPI.Card.AbilityManager.Remove
  nameWithType: AbilityManager.Remove
- uid: InscryptionAPI.Card.AbilityManager.SyncAbilityList
  name: SyncAbilityList()
  href: api/InscryptionAPI.Card.AbilityManager.html#InscryptionAPI_Card_AbilityManager_SyncAbilityList
  commentId: M:InscryptionAPI.Card.AbilityManager.SyncAbilityList
  fullName: InscryptionAPI.Card.AbilityManager.SyncAbilityList()
  nameWithType: AbilityManager.SyncAbilityList()
- uid: InscryptionAPI.Card.AbilityManager.SyncAbilityList*
  name: SyncAbilityList
  href: api/InscryptionAPI.Card.AbilityManager.html#InscryptionAPI_Card_AbilityManager_SyncAbilityList_
  commentId: Overload:InscryptionAPI.Card.AbilityManager.SyncAbilityList
  isSpec: "True"
  fullName: InscryptionAPI.Card.AbilityManager.SyncAbilityList
  nameWithType: AbilityManager.SyncAbilityList
- uid: InscryptionAPI.Card.AbilityManager.WaterborneFix(System.Collections.IEnumerator,DiskCardGame.Trigger,System.Boolean,System.Object[])
  name: WaterborneFix(IEnumerator, Trigger, Boolean, Object[])
  href: api/InscryptionAPI.Card.AbilityManager.html#InscryptionAPI_Card_AbilityManager_WaterborneFix_System_Collections_IEnumerator_DiskCardGame_Trigger_System_Boolean_System_Object___
  commentId: M:InscryptionAPI.Card.AbilityManager.WaterborneFix(System.Collections.IEnumerator,DiskCardGame.Trigger,System.Boolean,System.Object[])
  name.vb: WaterborneFix(IEnumerator, Trigger, Boolean, Object())
  fullName: InscryptionAPI.Card.AbilityManager.WaterborneFix(System.Collections.IEnumerator, DiskCardGame.Trigger, System.Boolean, System.Object[])
  fullName.vb: InscryptionAPI.Card.AbilityManager.WaterborneFix(System.Collections.IEnumerator, DiskCardGame.Trigger, System.Boolean, System.Object())
  nameWithType: AbilityManager.WaterborneFix(IEnumerator, Trigger, Boolean, Object[])
  nameWithType.vb: AbilityManager.WaterborneFix(IEnumerator, Trigger, Boolean, Object())
- uid: InscryptionAPI.Card.AbilityManager.WaterborneFix*
  name: WaterborneFix
  href: api/InscryptionAPI.Card.AbilityManager.html#InscryptionAPI_Card_AbilityManager_WaterborneFix_
  commentId: Overload:InscryptionAPI.Card.AbilityManager.WaterborneFix
  isSpec: "True"
  fullName: InscryptionAPI.Card.AbilityManager.WaterborneFix
  nameWithType: AbilityManager.WaterborneFix
- uid: InscryptionAPI.Card.CardAppearanceBehaviourManager
  name: CardAppearanceBehaviourManager
  href: api/InscryptionAPI.Card.CardAppearanceBehaviourManager.html
  commentId: T:InscryptionAPI.Card.CardAppearanceBehaviourManager
  fullName: InscryptionAPI.Card.CardAppearanceBehaviourManager
  nameWithType: CardAppearanceBehaviourManager
- uid: InscryptionAPI.Card.CardAppearanceBehaviourManager.Add(System.String,System.String,Type)
  name: Add(String, String, Type)
  href: api/InscryptionAPI.Card.CardAppearanceBehaviourManager.html#InscryptionAPI_Card_CardAppearanceBehaviourManager_Add_System_String_System_String_Type_
  commentId: M:InscryptionAPI.Card.CardAppearanceBehaviourManager.Add(System.String,System.String,Type)
  fullName: InscryptionAPI.Card.CardAppearanceBehaviourManager.Add(System.String, System.String, Type)
  nameWithType: CardAppearanceBehaviourManager.Add(String, String, Type)
- uid: InscryptionAPI.Card.CardAppearanceBehaviourManager.Add*
  name: Add
  href: api/InscryptionAPI.Card.CardAppearanceBehaviourManager.html#InscryptionAPI_Card_CardAppearanceBehaviourManager_Add_
  commentId: Overload:InscryptionAPI.Card.CardAppearanceBehaviourManager.Add
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardAppearanceBehaviourManager.Add
  nameWithType: CardAppearanceBehaviourManager.Add
- uid: InscryptionAPI.Card.CardAppearanceBehaviourManager.AllAppearances
  name: AllAppearances
  href: api/InscryptionAPI.Card.CardAppearanceBehaviourManager.html#InscryptionAPI_Card_CardAppearanceBehaviourManager_AllAppearances
  commentId: P:InscryptionAPI.Card.CardAppearanceBehaviourManager.AllAppearances
  fullName: InscryptionAPI.Card.CardAppearanceBehaviourManager.AllAppearances
  nameWithType: CardAppearanceBehaviourManager.AllAppearances
- uid: InscryptionAPI.Card.CardAppearanceBehaviourManager.AllAppearances*
  name: AllAppearances
  href: api/InscryptionAPI.Card.CardAppearanceBehaviourManager.html#InscryptionAPI_Card_CardAppearanceBehaviourManager_AllAppearances_
  commentId: Overload:InscryptionAPI.Card.CardAppearanceBehaviourManager.AllAppearances
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardAppearanceBehaviourManager.AllAppearances
  nameWithType: CardAppearanceBehaviourManager.AllAppearances
- uid: InscryptionAPI.Card.CardAppearanceBehaviourManager.BaseGameAppearances
  name: BaseGameAppearances
  href: api/InscryptionAPI.Card.CardAppearanceBehaviourManager.html#InscryptionAPI_Card_CardAppearanceBehaviourManager_BaseGameAppearances
  commentId: F:InscryptionAPI.Card.CardAppearanceBehaviourManager.BaseGameAppearances
  fullName: InscryptionAPI.Card.CardAppearanceBehaviourManager.BaseGameAppearances
  nameWithType: CardAppearanceBehaviourManager.BaseGameAppearances
- uid: InscryptionAPI.Card.CardAppearanceBehaviourManager.FullCardAppearanceBehaviour
  name: CardAppearanceBehaviourManager.FullCardAppearanceBehaviour
  href: api/InscryptionAPI.Card.CardAppearanceBehaviourManager.FullCardAppearanceBehaviour.html
  commentId: T:InscryptionAPI.Card.CardAppearanceBehaviourManager.FullCardAppearanceBehaviour
  fullName: InscryptionAPI.Card.CardAppearanceBehaviourManager.FullCardAppearanceBehaviour
  nameWithType: CardAppearanceBehaviourManager.FullCardAppearanceBehaviour
- uid: InscryptionAPI.Card.CardAppearanceBehaviourManager.FullCardAppearanceBehaviour.#ctor(DiskCardGame.CardAppearanceBehaviour.Appearance,Type)
  name: FullCardAppearanceBehaviour(CardAppearanceBehaviour.Appearance, Type)
  href: api/InscryptionAPI.Card.CardAppearanceBehaviourManager.FullCardAppearanceBehaviour.html#InscryptionAPI_Card_CardAppearanceBehaviourManager_FullCardAppearanceBehaviour__ctor_DiskCardGame_CardAppearanceBehaviour_Appearance_Type_
  commentId: M:InscryptionAPI.Card.CardAppearanceBehaviourManager.FullCardAppearanceBehaviour.#ctor(DiskCardGame.CardAppearanceBehaviour.Appearance,Type)
  fullName: InscryptionAPI.Card.CardAppearanceBehaviourManager.FullCardAppearanceBehaviour.FullCardAppearanceBehaviour(DiskCardGame.CardAppearanceBehaviour.Appearance, Type)
  nameWithType: CardAppearanceBehaviourManager.FullCardAppearanceBehaviour.FullCardAppearanceBehaviour(CardAppearanceBehaviour.Appearance, Type)
- uid: InscryptionAPI.Card.CardAppearanceBehaviourManager.FullCardAppearanceBehaviour.#ctor*
  name: FullCardAppearanceBehaviour
  href: api/InscryptionAPI.Card.CardAppearanceBehaviourManager.FullCardAppearanceBehaviour.html#InscryptionAPI_Card_CardAppearanceBehaviourManager_FullCardAppearanceBehaviour__ctor_
  commentId: Overload:InscryptionAPI.Card.CardAppearanceBehaviourManager.FullCardAppearanceBehaviour.#ctor
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardAppearanceBehaviourManager.FullCardAppearanceBehaviour.FullCardAppearanceBehaviour
  nameWithType: CardAppearanceBehaviourManager.FullCardAppearanceBehaviour.FullCardAppearanceBehaviour
- uid: InscryptionAPI.Card.CardAppearanceBehaviourManager.FullCardAppearanceBehaviour.AppearanceBehaviour
  name: AppearanceBehaviour
  href: api/InscryptionAPI.Card.CardAppearanceBehaviourManager.FullCardAppearanceBehaviour.html#InscryptionAPI_Card_CardAppearanceBehaviourManager_FullCardAppearanceBehaviour_AppearanceBehaviour
  commentId: F:InscryptionAPI.Card.CardAppearanceBehaviourManager.FullCardAppearanceBehaviour.AppearanceBehaviour
  fullName: InscryptionAPI.Card.CardAppearanceBehaviourManager.FullCardAppearanceBehaviour.AppearanceBehaviour
  nameWithType: CardAppearanceBehaviourManager.FullCardAppearanceBehaviour.AppearanceBehaviour
- uid: InscryptionAPI.Card.CardAppearanceBehaviourManager.FullCardAppearanceBehaviour.Id
  name: Id
  href: api/InscryptionAPI.Card.CardAppearanceBehaviourManager.FullCardAppearanceBehaviour.html#InscryptionAPI_Card_CardAppearanceBehaviourManager_FullCardAppearanceBehaviour_Id
  commentId: F:InscryptionAPI.Card.CardAppearanceBehaviourManager.FullCardAppearanceBehaviour.Id
  fullName: InscryptionAPI.Card.CardAppearanceBehaviourManager.FullCardAppearanceBehaviour.Id
  nameWithType: CardAppearanceBehaviourManager.FullCardAppearanceBehaviour.Id
- uid: InscryptionAPI.Card.CardAppearanceBehaviourManager.Remove(DiskCardGame.CardAppearanceBehaviour.Appearance)
  name: Remove(CardAppearanceBehaviour.Appearance)
  href: api/InscryptionAPI.Card.CardAppearanceBehaviourManager.html#InscryptionAPI_Card_CardAppearanceBehaviourManager_Remove_DiskCardGame_CardAppearanceBehaviour_Appearance_
  commentId: M:InscryptionAPI.Card.CardAppearanceBehaviourManager.Remove(DiskCardGame.CardAppearanceBehaviour.Appearance)
  fullName: InscryptionAPI.Card.CardAppearanceBehaviourManager.Remove(DiskCardGame.CardAppearanceBehaviour.Appearance)
  nameWithType: CardAppearanceBehaviourManager.Remove(CardAppearanceBehaviour.Appearance)
- uid: InscryptionAPI.Card.CardAppearanceBehaviourManager.Remove(InscryptionAPI.Card.CardAppearanceBehaviourManager.FullCardAppearanceBehaviour)
  name: Remove(CardAppearanceBehaviourManager.FullCardAppearanceBehaviour)
  href: api/InscryptionAPI.Card.CardAppearanceBehaviourManager.html#InscryptionAPI_Card_CardAppearanceBehaviourManager_Remove_InscryptionAPI_Card_CardAppearanceBehaviourManager_FullCardAppearanceBehaviour_
  commentId: M:InscryptionAPI.Card.CardAppearanceBehaviourManager.Remove(InscryptionAPI.Card.CardAppearanceBehaviourManager.FullCardAppearanceBehaviour)
  fullName: InscryptionAPI.Card.CardAppearanceBehaviourManager.Remove(InscryptionAPI.Card.CardAppearanceBehaviourManager.FullCardAppearanceBehaviour)
  nameWithType: CardAppearanceBehaviourManager.Remove(CardAppearanceBehaviourManager.FullCardAppearanceBehaviour)
- uid: InscryptionAPI.Card.CardAppearanceBehaviourManager.Remove*
  name: Remove
  href: api/InscryptionAPI.Card.CardAppearanceBehaviourManager.html#InscryptionAPI_Card_CardAppearanceBehaviourManager_Remove_
  commentId: Overload:InscryptionAPI.Card.CardAppearanceBehaviourManager.Remove
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardAppearanceBehaviourManager.Remove
  nameWithType: CardAppearanceBehaviourManager.Remove
- uid: InscryptionAPI.Card.CardExtensions
  name: CardExtensions
  href: api/InscryptionAPI.Card.CardExtensions.html
  commentId: T:InscryptionAPI.Card.CardExtensions
  fullName: InscryptionAPI.Card.CardExtensions
  nameWithType: CardExtensions
- uid: InscryptionAPI.Card.CardExtensions.AddAbilities(DiskCardGame.CardInfo,DiskCardGame.Ability[])
  name: AddAbilities(CardInfo, Ability[])
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_AddAbilities_DiskCardGame_CardInfo_DiskCardGame_Ability___
  commentId: M:InscryptionAPI.Card.CardExtensions.AddAbilities(DiskCardGame.CardInfo,DiskCardGame.Ability[])
  name.vb: AddAbilities(CardInfo, Ability())
  fullName: InscryptionAPI.Card.CardExtensions.AddAbilities(DiskCardGame.CardInfo, DiskCardGame.Ability[])
  fullName.vb: InscryptionAPI.Card.CardExtensions.AddAbilities(DiskCardGame.CardInfo, DiskCardGame.Ability())
  nameWithType: CardExtensions.AddAbilities(CardInfo, Ability[])
  nameWithType.vb: CardExtensions.AddAbilities(CardInfo, Ability())
- uid: InscryptionAPI.Card.CardExtensions.AddAbilities*
  name: AddAbilities
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_AddAbilities_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.AddAbilities
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.AddAbilities
  nameWithType: CardExtensions.AddAbilities
- uid: InscryptionAPI.Card.CardExtensions.AddAppearances(DiskCardGame.CardInfo,DiskCardGame.CardAppearanceBehaviour.Appearance[])
  name: AddAppearances(CardInfo, CardAppearanceBehaviour.Appearance[])
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_AddAppearances_DiskCardGame_CardInfo_DiskCardGame_CardAppearanceBehaviour_Appearance___
  commentId: M:InscryptionAPI.Card.CardExtensions.AddAppearances(DiskCardGame.CardInfo,DiskCardGame.CardAppearanceBehaviour.Appearance[])
  name.vb: AddAppearances(CardInfo, CardAppearanceBehaviour.Appearance())
  fullName: InscryptionAPI.Card.CardExtensions.AddAppearances(DiskCardGame.CardInfo, DiskCardGame.CardAppearanceBehaviour.Appearance[])
  fullName.vb: InscryptionAPI.Card.CardExtensions.AddAppearances(DiskCardGame.CardInfo, DiskCardGame.CardAppearanceBehaviour.Appearance())
  nameWithType: CardExtensions.AddAppearances(CardInfo, CardAppearanceBehaviour.Appearance[])
  nameWithType.vb: CardExtensions.AddAppearances(CardInfo, CardAppearanceBehaviour.Appearance())
- uid: InscryptionAPI.Card.CardExtensions.AddAppearances*
  name: AddAppearances
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_AddAppearances_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.AddAppearances
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.AddAppearances
  nameWithType: CardExtensions.AddAppearances
- uid: InscryptionAPI.Card.CardExtensions.AddDecal(DiskCardGame.CardInfo,System.String[])
  name: AddDecal(CardInfo, String[])
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_AddDecal_DiskCardGame_CardInfo_System_String___
  commentId: M:InscryptionAPI.Card.CardExtensions.AddDecal(DiskCardGame.CardInfo,System.String[])
  name.vb: AddDecal(CardInfo, String())
  fullName: InscryptionAPI.Card.CardExtensions.AddDecal(DiskCardGame.CardInfo, System.String[])
  fullName.vb: InscryptionAPI.Card.CardExtensions.AddDecal(DiskCardGame.CardInfo, System.String())
  nameWithType: CardExtensions.AddDecal(CardInfo, String[])
  nameWithType.vb: CardExtensions.AddDecal(CardInfo, String())
- uid: InscryptionAPI.Card.CardExtensions.AddDecal(DiskCardGame.CardInfo,UnityEngine.Texture[])
  name: AddDecal(CardInfo, Texture[])
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_AddDecal_DiskCardGame_CardInfo_UnityEngine_Texture___
  commentId: M:InscryptionAPI.Card.CardExtensions.AddDecal(DiskCardGame.CardInfo,UnityEngine.Texture[])
  name.vb: AddDecal(CardInfo, Texture())
  fullName: InscryptionAPI.Card.CardExtensions.AddDecal(DiskCardGame.CardInfo, UnityEngine.Texture[])
  fullName.vb: InscryptionAPI.Card.CardExtensions.AddDecal(DiskCardGame.CardInfo, UnityEngine.Texture())
  nameWithType: CardExtensions.AddDecal(CardInfo, Texture[])
  nameWithType.vb: CardExtensions.AddDecal(CardInfo, Texture())
- uid: InscryptionAPI.Card.CardExtensions.AddDecal*
  name: AddDecal
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_AddDecal_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.AddDecal
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.AddDecal
  nameWithType: CardExtensions.AddDecal
- uid: InscryptionAPI.Card.CardExtensions.AddMetaCategories(DiskCardGame.CardInfo,DiskCardGame.CardMetaCategory[])
  name: AddMetaCategories(CardInfo, CardMetaCategory[])
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_AddMetaCategories_DiskCardGame_CardInfo_DiskCardGame_CardMetaCategory___
  commentId: M:InscryptionAPI.Card.CardExtensions.AddMetaCategories(DiskCardGame.CardInfo,DiskCardGame.CardMetaCategory[])
  name.vb: AddMetaCategories(CardInfo, CardMetaCategory())
  fullName: InscryptionAPI.Card.CardExtensions.AddMetaCategories(DiskCardGame.CardInfo, DiskCardGame.CardMetaCategory[])
  fullName.vb: InscryptionAPI.Card.CardExtensions.AddMetaCategories(DiskCardGame.CardInfo, DiskCardGame.CardMetaCategory())
  nameWithType: CardExtensions.AddMetaCategories(CardInfo, CardMetaCategory[])
  nameWithType.vb: CardExtensions.AddMetaCategories(CardInfo, CardMetaCategory())
- uid: InscryptionAPI.Card.CardExtensions.AddMetaCategories*
  name: AddMetaCategories
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_AddMetaCategories_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.AddMetaCategories
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.AddMetaCategories
  nameWithType: CardExtensions.AddMetaCategories
- uid: InscryptionAPI.Card.CardExtensions.AddSpecialAbilities(DiskCardGame.CardInfo,DiskCardGame.SpecialTriggeredAbility[])
  name: AddSpecialAbilities(CardInfo, SpecialTriggeredAbility[])
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_AddSpecialAbilities_DiskCardGame_CardInfo_DiskCardGame_SpecialTriggeredAbility___
  commentId: M:InscryptionAPI.Card.CardExtensions.AddSpecialAbilities(DiskCardGame.CardInfo,DiskCardGame.SpecialTriggeredAbility[])
  name.vb: AddSpecialAbilities(CardInfo, SpecialTriggeredAbility())
  fullName: InscryptionAPI.Card.CardExtensions.AddSpecialAbilities(DiskCardGame.CardInfo, DiskCardGame.SpecialTriggeredAbility[])
  fullName.vb: InscryptionAPI.Card.CardExtensions.AddSpecialAbilities(DiskCardGame.CardInfo, DiskCardGame.SpecialTriggeredAbility())
  nameWithType: CardExtensions.AddSpecialAbilities(CardInfo, SpecialTriggeredAbility[])
  nameWithType.vb: CardExtensions.AddSpecialAbilities(CardInfo, SpecialTriggeredAbility())
- uid: InscryptionAPI.Card.CardExtensions.AddSpecialAbilities*
  name: AddSpecialAbilities
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_AddSpecialAbilities_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.AddSpecialAbilities
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.AddSpecialAbilities
  nameWithType: CardExtensions.AddSpecialAbilities
- uid: InscryptionAPI.Card.CardExtensions.AddTraits(DiskCardGame.CardInfo,DiskCardGame.Trait[])
  name: AddTraits(CardInfo, Trait[])
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_AddTraits_DiskCardGame_CardInfo_DiskCardGame_Trait___
  commentId: M:InscryptionAPI.Card.CardExtensions.AddTraits(DiskCardGame.CardInfo,DiskCardGame.Trait[])
  name.vb: AddTraits(CardInfo, Trait())
  fullName: InscryptionAPI.Card.CardExtensions.AddTraits(DiskCardGame.CardInfo, DiskCardGame.Trait[])
  fullName.vb: InscryptionAPI.Card.CardExtensions.AddTraits(DiskCardGame.CardInfo, DiskCardGame.Trait())
  nameWithType: CardExtensions.AddTraits(CardInfo, Trait[])
  nameWithType.vb: CardExtensions.AddTraits(CardInfo, Trait())
- uid: InscryptionAPI.Card.CardExtensions.AddTraits*
  name: AddTraits
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_AddTraits_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.AddTraits
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.AddTraits
  nameWithType: CardExtensions.AddTraits
- uid: InscryptionAPI.Card.CardExtensions.AddTribes(DiskCardGame.CardInfo,DiskCardGame.Tribe[])
  name: AddTribes(CardInfo, Tribe[])
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_AddTribes_DiskCardGame_CardInfo_DiskCardGame_Tribe___
  commentId: M:InscryptionAPI.Card.CardExtensions.AddTribes(DiskCardGame.CardInfo,DiskCardGame.Tribe[])
  name.vb: AddTribes(CardInfo, Tribe())
  fullName: InscryptionAPI.Card.CardExtensions.AddTribes(DiskCardGame.CardInfo, DiskCardGame.Tribe[])
  fullName.vb: InscryptionAPI.Card.CardExtensions.AddTribes(DiskCardGame.CardInfo, DiskCardGame.Tribe())
  nameWithType: CardExtensions.AddTribes(CardInfo, Tribe[])
  nameWithType.vb: CardExtensions.AddTribes(CardInfo, Tribe())
- uid: InscryptionAPI.Card.CardExtensions.AddTribes*
  name: AddTribes
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_AddTribes_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.AddTribes
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.AddTribes
  nameWithType: CardExtensions.AddTribes
- uid: InscryptionAPI.Card.CardExtensions.CardByName(IEnumerable{DiskCardGame.CardInfo},System.String)
  name: CardByName(IEnumerable<CardInfo>, String)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_CardByName_IEnumerable_DiskCardGame_CardInfo__System_String_
  commentId: M:InscryptionAPI.Card.CardExtensions.CardByName(IEnumerable{DiskCardGame.CardInfo},System.String)
  name.vb: CardByName(IEnumerable(Of CardInfo), String)
  fullName: InscryptionAPI.Card.CardExtensions.CardByName(IEnumerable<DiskCardGame.CardInfo>, System.String)
  fullName.vb: InscryptionAPI.Card.CardExtensions.CardByName(IEnumerable(Of DiskCardGame.CardInfo), System.String)
  nameWithType: CardExtensions.CardByName(IEnumerable<CardInfo>, String)
  nameWithType.vb: CardExtensions.CardByName(IEnumerable(Of CardInfo), String)
- uid: InscryptionAPI.Card.CardExtensions.CardByName*
  name: CardByName
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_CardByName_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.CardByName
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.CardByName
  nameWithType: CardExtensions.CardByName
- uid: InscryptionAPI.Card.CardExtensions.CreateBlueprint(DiskCardGame.CardInfo)
  name: CreateBlueprint(CardInfo)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_CreateBlueprint_DiskCardGame_CardInfo_
  commentId: M:InscryptionAPI.Card.CardExtensions.CreateBlueprint(DiskCardGame.CardInfo)
  fullName: InscryptionAPI.Card.CardExtensions.CreateBlueprint(DiskCardGame.CardInfo)
  nameWithType: CardExtensions.CreateBlueprint(CardInfo)
- uid: InscryptionAPI.Card.CardExtensions.CreateBlueprint(System.String)
  name: CreateBlueprint(String)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_CreateBlueprint_System_String_
  commentId: M:InscryptionAPI.Card.CardExtensions.CreateBlueprint(System.String)
  fullName: InscryptionAPI.Card.CardExtensions.CreateBlueprint(System.String)
  nameWithType: CardExtensions.CreateBlueprint(String)
- uid: InscryptionAPI.Card.CardExtensions.CreateBlueprint*
  name: CreateBlueprint
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_CreateBlueprint_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.CreateBlueprint
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.CreateBlueprint
  nameWithType: CardExtensions.CreateBlueprint
- uid: InscryptionAPI.Card.CardExtensions.DoesNotHaveAbility(DiskCardGame.CardInfo,DiskCardGame.Ability)
  name: DoesNotHaveAbility(CardInfo, Ability)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_DoesNotHaveAbility_DiskCardGame_CardInfo_DiskCardGame_Ability_
  commentId: M:InscryptionAPI.Card.CardExtensions.DoesNotHaveAbility(DiskCardGame.CardInfo,DiskCardGame.Ability)
  fullName: InscryptionAPI.Card.CardExtensions.DoesNotHaveAbility(DiskCardGame.CardInfo, DiskCardGame.Ability)
  nameWithType: CardExtensions.DoesNotHaveAbility(CardInfo, Ability)
- uid: InscryptionAPI.Card.CardExtensions.DoesNotHaveAbility(DiskCardGame.PlayableCard,DiskCardGame.Ability)
  name: DoesNotHaveAbility(PlayableCard, Ability)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_DoesNotHaveAbility_DiskCardGame_PlayableCard_DiskCardGame_Ability_
  commentId: M:InscryptionAPI.Card.CardExtensions.DoesNotHaveAbility(DiskCardGame.PlayableCard,DiskCardGame.Ability)
  fullName: InscryptionAPI.Card.CardExtensions.DoesNotHaveAbility(DiskCardGame.PlayableCard, DiskCardGame.Ability)
  nameWithType: CardExtensions.DoesNotHaveAbility(PlayableCard, Ability)
- uid: InscryptionAPI.Card.CardExtensions.DoesNotHaveAbility*
  name: DoesNotHaveAbility
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_DoesNotHaveAbility_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.DoesNotHaveAbility
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.DoesNotHaveAbility
  nameWithType: CardExtensions.DoesNotHaveAbility
- uid: InscryptionAPI.Card.CardExtensions.DoesNotHaveSpecialAbility(DiskCardGame.CardInfo,DiskCardGame.SpecialTriggeredAbility)
  name: DoesNotHaveSpecialAbility(CardInfo, SpecialTriggeredAbility)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_DoesNotHaveSpecialAbility_DiskCardGame_CardInfo_DiskCardGame_SpecialTriggeredAbility_
  commentId: M:InscryptionAPI.Card.CardExtensions.DoesNotHaveSpecialAbility(DiskCardGame.CardInfo,DiskCardGame.SpecialTriggeredAbility)
  fullName: InscryptionAPI.Card.CardExtensions.DoesNotHaveSpecialAbility(DiskCardGame.CardInfo, DiskCardGame.SpecialTriggeredAbility)
  nameWithType: CardExtensions.DoesNotHaveSpecialAbility(CardInfo, SpecialTriggeredAbility)
- uid: InscryptionAPI.Card.CardExtensions.DoesNotHaveSpecialAbility(DiskCardGame.PlayableCard,DiskCardGame.SpecialTriggeredAbility)
  name: DoesNotHaveSpecialAbility(PlayableCard, SpecialTriggeredAbility)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_DoesNotHaveSpecialAbility_DiskCardGame_PlayableCard_DiskCardGame_SpecialTriggeredAbility_
  commentId: M:InscryptionAPI.Card.CardExtensions.DoesNotHaveSpecialAbility(DiskCardGame.PlayableCard,DiskCardGame.SpecialTriggeredAbility)
  fullName: InscryptionAPI.Card.CardExtensions.DoesNotHaveSpecialAbility(DiskCardGame.PlayableCard, DiskCardGame.SpecialTriggeredAbility)
  nameWithType: CardExtensions.DoesNotHaveSpecialAbility(PlayableCard, SpecialTriggeredAbility)
- uid: InscryptionAPI.Card.CardExtensions.DoesNotHaveSpecialAbility*
  name: DoesNotHaveSpecialAbility
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_DoesNotHaveSpecialAbility_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.DoesNotHaveSpecialAbility
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.DoesNotHaveSpecialAbility
  nameWithType: CardExtensions.DoesNotHaveSpecialAbility
- uid: InscryptionAPI.Card.CardExtensions.GetCardInfo(System.String)
  name: GetCardInfo(String)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_GetCardInfo_System_String_
  commentId: M:InscryptionAPI.Card.CardExtensions.GetCardInfo(System.String)
  fullName: InscryptionAPI.Card.CardExtensions.GetCardInfo(System.String)
  nameWithType: CardExtensions.GetCardInfo(String)
- uid: InscryptionAPI.Card.CardExtensions.GetCardInfo*
  name: GetCardInfo
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_GetCardInfo_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.GetCardInfo
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.GetCardInfo
  nameWithType: CardExtensions.GetCardInfo
- uid: InscryptionAPI.Card.CardExtensions.GetExtendedProperty(DiskCardGame.CardInfo,System.String)
  name: GetExtendedProperty(CardInfo, String)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_GetExtendedProperty_DiskCardGame_CardInfo_System_String_
  commentId: M:InscryptionAPI.Card.CardExtensions.GetExtendedProperty(DiskCardGame.CardInfo,System.String)
  fullName: InscryptionAPI.Card.CardExtensions.GetExtendedProperty(DiskCardGame.CardInfo, System.String)
  nameWithType: CardExtensions.GetExtendedProperty(CardInfo, String)
- uid: InscryptionAPI.Card.CardExtensions.GetExtendedProperty*
  name: GetExtendedProperty
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_GetExtendedProperty_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.GetExtendedProperty
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.GetExtendedProperty
  nameWithType: CardExtensions.GetExtendedProperty
- uid: InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsBool(DiskCardGame.CardInfo,System.String)
  name: GetExtendedPropertyAsBool(CardInfo, String)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_GetExtendedPropertyAsBool_DiskCardGame_CardInfo_System_String_
  commentId: M:InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsBool(DiskCardGame.CardInfo,System.String)
  fullName: InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsBool(DiskCardGame.CardInfo, System.String)
  nameWithType: CardExtensions.GetExtendedPropertyAsBool(CardInfo, String)
- uid: InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsBool*
  name: GetExtendedPropertyAsBool
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_GetExtendedPropertyAsBool_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsBool
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsBool
  nameWithType: CardExtensions.GetExtendedPropertyAsBool
- uid: InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsFloat(DiskCardGame.CardInfo,System.String)
  name: GetExtendedPropertyAsFloat(CardInfo, String)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_GetExtendedPropertyAsFloat_DiskCardGame_CardInfo_System_String_
  commentId: M:InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsFloat(DiskCardGame.CardInfo,System.String)
  fullName: InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsFloat(DiskCardGame.CardInfo, System.String)
  nameWithType: CardExtensions.GetExtendedPropertyAsFloat(CardInfo, String)
- uid: InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsFloat*
  name: GetExtendedPropertyAsFloat
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_GetExtendedPropertyAsFloat_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsFloat
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsFloat
  nameWithType: CardExtensions.GetExtendedPropertyAsFloat
- uid: InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsInt(DiskCardGame.CardInfo,System.String)
  name: GetExtendedPropertyAsInt(CardInfo, String)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_GetExtendedPropertyAsInt_DiskCardGame_CardInfo_System_String_
  commentId: M:InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsInt(DiskCardGame.CardInfo,System.String)
  fullName: InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsInt(DiskCardGame.CardInfo, System.String)
  nameWithType: CardExtensions.GetExtendedPropertyAsInt(CardInfo, String)
- uid: InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsInt*
  name: GetExtendedPropertyAsInt
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_GetExtendedPropertyAsInt_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsInt
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsInt
  nameWithType: CardExtensions.GetExtendedPropertyAsInt
- uid: InscryptionAPI.Card.CardExtensions.GetModPrefix(DiskCardGame.CardInfo)
  name: GetModPrefix(CardInfo)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_GetModPrefix_DiskCardGame_CardInfo_
  commentId: M:InscryptionAPI.Card.CardExtensions.GetModPrefix(DiskCardGame.CardInfo)
  fullName: InscryptionAPI.Card.CardExtensions.GetModPrefix(DiskCardGame.CardInfo)
  nameWithType: CardExtensions.GetModPrefix(CardInfo)
- uid: InscryptionAPI.Card.CardExtensions.GetModPrefix*
  name: GetModPrefix
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_GetModPrefix_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.GetModPrefix
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.GetModPrefix
  nameWithType: CardExtensions.GetModPrefix
- uid: InscryptionAPI.Card.CardExtensions.GetModTag(DiskCardGame.CardInfo)
  name: GetModTag(CardInfo)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_GetModTag_DiskCardGame_CardInfo_
  commentId: M:InscryptionAPI.Card.CardExtensions.GetModTag(DiskCardGame.CardInfo)
  fullName: InscryptionAPI.Card.CardExtensions.GetModTag(DiskCardGame.CardInfo)
  nameWithType: CardExtensions.GetModTag(CardInfo)
- uid: InscryptionAPI.Card.CardExtensions.GetModTag*
  name: GetModTag
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_GetModTag_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.GetModTag
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.GetModTag
  nameWithType: CardExtensions.GetModTag
- uid: InscryptionAPI.Card.CardExtensions.HasSpecialAbility(DiskCardGame.PlayableCard,DiskCardGame.SpecialTriggeredAbility)
  name: HasSpecialAbility(PlayableCard, SpecialTriggeredAbility)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_HasSpecialAbility_DiskCardGame_PlayableCard_DiskCardGame_SpecialTriggeredAbility_
  commentId: M:InscryptionAPI.Card.CardExtensions.HasSpecialAbility(DiskCardGame.PlayableCard,DiskCardGame.SpecialTriggeredAbility)
  fullName: InscryptionAPI.Card.CardExtensions.HasSpecialAbility(DiskCardGame.PlayableCard, DiskCardGame.SpecialTriggeredAbility)
  nameWithType: CardExtensions.HasSpecialAbility(PlayableCard, SpecialTriggeredAbility)
- uid: InscryptionAPI.Card.CardExtensions.HasSpecialAbility*
  name: HasSpecialAbility
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_HasSpecialAbility_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.HasSpecialAbility
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.HasSpecialAbility
  nameWithType: CardExtensions.HasSpecialAbility
- uid: InscryptionAPI.Card.CardExtensions.IsBaseGameCard(DiskCardGame.CardInfo)
  name: IsBaseGameCard(CardInfo)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_IsBaseGameCard_DiskCardGame_CardInfo_
  commentId: M:InscryptionAPI.Card.CardExtensions.IsBaseGameCard(DiskCardGame.CardInfo)
  fullName: InscryptionAPI.Card.CardExtensions.IsBaseGameCard(DiskCardGame.CardInfo)
  nameWithType: CardExtensions.IsBaseGameCard(CardInfo)
- uid: InscryptionAPI.Card.CardExtensions.IsBaseGameCard*
  name: IsBaseGameCard
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_IsBaseGameCard_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.IsBaseGameCard
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.IsBaseGameCard
  nameWithType: CardExtensions.IsBaseGameCard
- uid: InscryptionAPI.Card.CardExtensions.SetAltPortrait(DiskCardGame.CardInfo,System.String)
  name: SetAltPortrait(CardInfo, String)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetAltPortrait_DiskCardGame_CardInfo_System_String_
  commentId: M:InscryptionAPI.Card.CardExtensions.SetAltPortrait(DiskCardGame.CardInfo,System.String)
  fullName: InscryptionAPI.Card.CardExtensions.SetAltPortrait(DiskCardGame.CardInfo, System.String)
  nameWithType: CardExtensions.SetAltPortrait(CardInfo, String)
- uid: InscryptionAPI.Card.CardExtensions.SetAltPortrait(DiskCardGame.CardInfo,UnityEngine.Sprite)
  name: SetAltPortrait(CardInfo, Sprite)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetAltPortrait_DiskCardGame_CardInfo_UnityEngine_Sprite_
  commentId: M:InscryptionAPI.Card.CardExtensions.SetAltPortrait(DiskCardGame.CardInfo,UnityEngine.Sprite)
  fullName: InscryptionAPI.Card.CardExtensions.SetAltPortrait(DiskCardGame.CardInfo, UnityEngine.Sprite)
  nameWithType: CardExtensions.SetAltPortrait(CardInfo, Sprite)
- uid: InscryptionAPI.Card.CardExtensions.SetAltPortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  name: SetAltPortrait(CardInfo, Texture2D, Nullable<FilterMode>)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetAltPortrait_DiskCardGame_CardInfo_UnityEngine_Texture2D_System_Nullable_UnityEngine_FilterMode__
  commentId: M:InscryptionAPI.Card.CardExtensions.SetAltPortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  name.vb: SetAltPortrait(CardInfo, Texture2D, Nullable(Of FilterMode))
  fullName: InscryptionAPI.Card.CardExtensions.SetAltPortrait(DiskCardGame.CardInfo, UnityEngine.Texture2D, System.Nullable<UnityEngine.FilterMode>)
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetAltPortrait(DiskCardGame.CardInfo, UnityEngine.Texture2D, System.Nullable(Of UnityEngine.FilterMode))
  nameWithType: CardExtensions.SetAltPortrait(CardInfo, Texture2D, Nullable<FilterMode>)
  nameWithType.vb: CardExtensions.SetAltPortrait(CardInfo, Texture2D, Nullable(Of FilterMode))
- uid: InscryptionAPI.Card.CardExtensions.SetAltPortrait*
  name: SetAltPortrait
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetAltPortrait_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetAltPortrait
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetAltPortrait
  nameWithType: CardExtensions.SetAltPortrait
- uid: InscryptionAPI.Card.CardExtensions.SetBaseAttackAndHealth(DiskCardGame.CardInfo,System.Nullable{System.Int32},System.Nullable{System.Int32})
  name: SetBaseAttackAndHealth(CardInfo, Nullable<Int32>, Nullable<Int32>)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetBaseAttackAndHealth_DiskCardGame_CardInfo_System_Nullable_System_Int32__System_Nullable_System_Int32__
  commentId: M:InscryptionAPI.Card.CardExtensions.SetBaseAttackAndHealth(DiskCardGame.CardInfo,System.Nullable{System.Int32},System.Nullable{System.Int32})
  name.vb: SetBaseAttackAndHealth(CardInfo, Nullable(Of Int32), Nullable(Of Int32))
  fullName: InscryptionAPI.Card.CardExtensions.SetBaseAttackAndHealth(DiskCardGame.CardInfo, System.Nullable<System.Int32>, System.Nullable<System.Int32>)
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetBaseAttackAndHealth(DiskCardGame.CardInfo, System.Nullable(Of System.Int32), System.Nullable(Of System.Int32))
  nameWithType: CardExtensions.SetBaseAttackAndHealth(CardInfo, Nullable<Int32>, Nullable<Int32>)
  nameWithType.vb: CardExtensions.SetBaseAttackAndHealth(CardInfo, Nullable(Of Int32), Nullable(Of Int32))
- uid: InscryptionAPI.Card.CardExtensions.SetBaseAttackAndHealth*
  name: SetBaseAttackAndHealth
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetBaseAttackAndHealth_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetBaseAttackAndHealth
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetBaseAttackAndHealth
  nameWithType: CardExtensions.SetBaseAttackAndHealth
- uid: InscryptionAPI.Card.CardExtensions.SetBasic(DiskCardGame.CardInfo,System.String,System.Int32,System.Int32,System.String)
  name: SetBasic(CardInfo, String, Int32, Int32, String)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetBasic_DiskCardGame_CardInfo_System_String_System_Int32_System_Int32_System_String_
  commentId: M:InscryptionAPI.Card.CardExtensions.SetBasic(DiskCardGame.CardInfo,System.String,System.Int32,System.Int32,System.String)
  fullName: InscryptionAPI.Card.CardExtensions.SetBasic(DiskCardGame.CardInfo, System.String, System.Int32, System.Int32, System.String)
  nameWithType: CardExtensions.SetBasic(CardInfo, String, Int32, Int32, String)
- uid: InscryptionAPI.Card.CardExtensions.SetBasic*
  name: SetBasic
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetBasic_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetBasic
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetBasic
  nameWithType: CardExtensions.SetBasic
- uid: InscryptionAPI.Card.CardExtensions.SetBloodCost(DiskCardGame.CardInfo,System.Nullable{System.Int32})
  name: SetBloodCost(CardInfo, Nullable<Int32>)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetBloodCost_DiskCardGame_CardInfo_System_Nullable_System_Int32__
  commentId: M:InscryptionAPI.Card.CardExtensions.SetBloodCost(DiskCardGame.CardInfo,System.Nullable{System.Int32})
  name.vb: SetBloodCost(CardInfo, Nullable(Of Int32))
  fullName: InscryptionAPI.Card.CardExtensions.SetBloodCost(DiskCardGame.CardInfo, System.Nullable<System.Int32>)
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetBloodCost(DiskCardGame.CardInfo, System.Nullable(Of System.Int32))
  nameWithType: CardExtensions.SetBloodCost(CardInfo, Nullable<Int32>)
  nameWithType.vb: CardExtensions.SetBloodCost(CardInfo, Nullable(Of Int32))
- uid: InscryptionAPI.Card.CardExtensions.SetBloodCost*
  name: SetBloodCost
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetBloodCost_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetBloodCost
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetBloodCost
  nameWithType: CardExtensions.SetBloodCost
- uid: InscryptionAPI.Card.CardExtensions.SetBonesCost(DiskCardGame.CardInfo,System.Nullable{System.Int32})
  name: SetBonesCost(CardInfo, Nullable<Int32>)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetBonesCost_DiskCardGame_CardInfo_System_Nullable_System_Int32__
  commentId: M:InscryptionAPI.Card.CardExtensions.SetBonesCost(DiskCardGame.CardInfo,System.Nullable{System.Int32})
  name.vb: SetBonesCost(CardInfo, Nullable(Of Int32))
  fullName: InscryptionAPI.Card.CardExtensions.SetBonesCost(DiskCardGame.CardInfo, System.Nullable<System.Int32>)
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetBonesCost(DiskCardGame.CardInfo, System.Nullable(Of System.Int32))
  nameWithType: CardExtensions.SetBonesCost(CardInfo, Nullable<Int32>)
  nameWithType.vb: CardExtensions.SetBonesCost(CardInfo, Nullable(Of Int32))
- uid: InscryptionAPI.Card.CardExtensions.SetBonesCost*
  name: SetBonesCost
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetBonesCost_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetBonesCost
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetBonesCost
  nameWithType: CardExtensions.SetBonesCost
- uid: InscryptionAPI.Card.CardExtensions.SetCost(DiskCardGame.CardInfo,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},List{DiskCardGame.GemType})
  name: SetCost(CardInfo, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, List<GemType>)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetCost_DiskCardGame_CardInfo_System_Nullable_System_Int32__System_Nullable_System_Int32__System_Nullable_System_Int32__List_DiskCardGame_GemType__
  commentId: M:InscryptionAPI.Card.CardExtensions.SetCost(DiskCardGame.CardInfo,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},List{DiskCardGame.GemType})
  name.vb: SetCost(CardInfo, Nullable(Of Int32), Nullable(Of Int32), Nullable(Of Int32), List(Of GemType))
  fullName: InscryptionAPI.Card.CardExtensions.SetCost(DiskCardGame.CardInfo, System.Nullable<System.Int32>, System.Nullable<System.Int32>, System.Nullable<System.Int32>, List<DiskCardGame.GemType>)
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetCost(DiskCardGame.CardInfo, System.Nullable(Of System.Int32), System.Nullable(Of System.Int32), System.Nullable(Of System.Int32), List(Of DiskCardGame.GemType))
  nameWithType: CardExtensions.SetCost(CardInfo, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, List<GemType>)
  nameWithType.vb: CardExtensions.SetCost(CardInfo, Nullable(Of Int32), Nullable(Of Int32), Nullable(Of Int32), List(Of GemType))
- uid: InscryptionAPI.Card.CardExtensions.SetCost*
  name: SetCost
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetCost_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetCost
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetCost
  nameWithType: CardExtensions.SetCost
- uid: InscryptionAPI.Card.CardExtensions.SetDefaultPart1Card(DiskCardGame.CardInfo)
  name: SetDefaultPart1Card(CardInfo)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetDefaultPart1Card_DiskCardGame_CardInfo_
  commentId: M:InscryptionAPI.Card.CardExtensions.SetDefaultPart1Card(DiskCardGame.CardInfo)
  fullName: InscryptionAPI.Card.CardExtensions.SetDefaultPart1Card(DiskCardGame.CardInfo)
  nameWithType: CardExtensions.SetDefaultPart1Card(CardInfo)
- uid: InscryptionAPI.Card.CardExtensions.SetDefaultPart1Card*
  name: SetDefaultPart1Card
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetDefaultPart1Card_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetDefaultPart1Card
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetDefaultPart1Card
  nameWithType: CardExtensions.SetDefaultPart1Card
- uid: InscryptionAPI.Card.CardExtensions.SetDefaultPart3Card(DiskCardGame.CardInfo)
  name: SetDefaultPart3Card(CardInfo)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetDefaultPart3Card_DiskCardGame_CardInfo_
  commentId: M:InscryptionAPI.Card.CardExtensions.SetDefaultPart3Card(DiskCardGame.CardInfo)
  fullName: InscryptionAPI.Card.CardExtensions.SetDefaultPart3Card(DiskCardGame.CardInfo)
  nameWithType: CardExtensions.SetDefaultPart3Card(CardInfo)
- uid: InscryptionAPI.Card.CardExtensions.SetDefaultPart3Card*
  name: SetDefaultPart3Card
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetDefaultPart3Card_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetDefaultPart3Card
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetDefaultPart3Card
  nameWithType: CardExtensions.SetDefaultPart3Card
- uid: InscryptionAPI.Card.CardExtensions.SetDisplayedName(DiskCardGame.CardInfo,System.String)
  name: SetDisplayedName(CardInfo, String)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetDisplayedName_DiskCardGame_CardInfo_System_String_
  commentId: M:InscryptionAPI.Card.CardExtensions.SetDisplayedName(DiskCardGame.CardInfo,System.String)
  fullName: InscryptionAPI.Card.CardExtensions.SetDisplayedName(DiskCardGame.CardInfo, System.String)
  nameWithType: CardExtensions.SetDisplayedName(CardInfo, String)
- uid: InscryptionAPI.Card.CardExtensions.SetDisplayedName*
  name: SetDisplayedName
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetDisplayedName_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetDisplayedName
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetDisplayedName
  nameWithType: CardExtensions.SetDisplayedName
- uid: InscryptionAPI.Card.CardExtensions.SetEmissiveAltPortrait(DiskCardGame.CardInfo,System.String)
  name: SetEmissiveAltPortrait(CardInfo, String)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetEmissiveAltPortrait_DiskCardGame_CardInfo_System_String_
  commentId: M:InscryptionAPI.Card.CardExtensions.SetEmissiveAltPortrait(DiskCardGame.CardInfo,System.String)
  fullName: InscryptionAPI.Card.CardExtensions.SetEmissiveAltPortrait(DiskCardGame.CardInfo, System.String)
  nameWithType: CardExtensions.SetEmissiveAltPortrait(CardInfo, String)
- uid: InscryptionAPI.Card.CardExtensions.SetEmissiveAltPortrait(DiskCardGame.CardInfo,UnityEngine.Sprite)
  name: SetEmissiveAltPortrait(CardInfo, Sprite)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetEmissiveAltPortrait_DiskCardGame_CardInfo_UnityEngine_Sprite_
  commentId: M:InscryptionAPI.Card.CardExtensions.SetEmissiveAltPortrait(DiskCardGame.CardInfo,UnityEngine.Sprite)
  fullName: InscryptionAPI.Card.CardExtensions.SetEmissiveAltPortrait(DiskCardGame.CardInfo, UnityEngine.Sprite)
  nameWithType: CardExtensions.SetEmissiveAltPortrait(CardInfo, Sprite)
- uid: InscryptionAPI.Card.CardExtensions.SetEmissiveAltPortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  name: SetEmissiveAltPortrait(CardInfo, Texture2D, Nullable<FilterMode>)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetEmissiveAltPortrait_DiskCardGame_CardInfo_UnityEngine_Texture2D_System_Nullable_UnityEngine_FilterMode__
  commentId: M:InscryptionAPI.Card.CardExtensions.SetEmissiveAltPortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  name.vb: SetEmissiveAltPortrait(CardInfo, Texture2D, Nullable(Of FilterMode))
  fullName: InscryptionAPI.Card.CardExtensions.SetEmissiveAltPortrait(DiskCardGame.CardInfo, UnityEngine.Texture2D, System.Nullable<UnityEngine.FilterMode>)
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetEmissiveAltPortrait(DiskCardGame.CardInfo, UnityEngine.Texture2D, System.Nullable(Of UnityEngine.FilterMode))
  nameWithType: CardExtensions.SetEmissiveAltPortrait(CardInfo, Texture2D, Nullable<FilterMode>)
  nameWithType.vb: CardExtensions.SetEmissiveAltPortrait(CardInfo, Texture2D, Nullable(Of FilterMode))
- uid: InscryptionAPI.Card.CardExtensions.SetEmissiveAltPortrait*
  name: SetEmissiveAltPortrait
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetEmissiveAltPortrait_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetEmissiveAltPortrait
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetEmissiveAltPortrait
  nameWithType: CardExtensions.SetEmissiveAltPortrait
- uid: InscryptionAPI.Card.CardExtensions.SetEmissivePortrait(DiskCardGame.CardInfo,System.String)
  name: SetEmissivePortrait(CardInfo, String)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetEmissivePortrait_DiskCardGame_CardInfo_System_String_
  commentId: M:InscryptionAPI.Card.CardExtensions.SetEmissivePortrait(DiskCardGame.CardInfo,System.String)
  fullName: InscryptionAPI.Card.CardExtensions.SetEmissivePortrait(DiskCardGame.CardInfo, System.String)
  nameWithType: CardExtensions.SetEmissivePortrait(CardInfo, String)
- uid: InscryptionAPI.Card.CardExtensions.SetEmissivePortrait(DiskCardGame.CardInfo,UnityEngine.Sprite)
  name: SetEmissivePortrait(CardInfo, Sprite)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetEmissivePortrait_DiskCardGame_CardInfo_UnityEngine_Sprite_
  commentId: M:InscryptionAPI.Card.CardExtensions.SetEmissivePortrait(DiskCardGame.CardInfo,UnityEngine.Sprite)
  fullName: InscryptionAPI.Card.CardExtensions.SetEmissivePortrait(DiskCardGame.CardInfo, UnityEngine.Sprite)
  nameWithType: CardExtensions.SetEmissivePortrait(CardInfo, Sprite)
- uid: InscryptionAPI.Card.CardExtensions.SetEmissivePortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  name: SetEmissivePortrait(CardInfo, Texture2D, Nullable<FilterMode>)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetEmissivePortrait_DiskCardGame_CardInfo_UnityEngine_Texture2D_System_Nullable_UnityEngine_FilterMode__
  commentId: M:InscryptionAPI.Card.CardExtensions.SetEmissivePortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  name.vb: SetEmissivePortrait(CardInfo, Texture2D, Nullable(Of FilterMode))
  fullName: InscryptionAPI.Card.CardExtensions.SetEmissivePortrait(DiskCardGame.CardInfo, UnityEngine.Texture2D, System.Nullable<UnityEngine.FilterMode>)
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetEmissivePortrait(DiskCardGame.CardInfo, UnityEngine.Texture2D, System.Nullable(Of UnityEngine.FilterMode))
  nameWithType: CardExtensions.SetEmissivePortrait(CardInfo, Texture2D, Nullable<FilterMode>)
  nameWithType.vb: CardExtensions.SetEmissivePortrait(CardInfo, Texture2D, Nullable(Of FilterMode))
- uid: InscryptionAPI.Card.CardExtensions.SetEmissivePortrait*
  name: SetEmissivePortrait
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetEmissivePortrait_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetEmissivePortrait
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetEmissivePortrait
  nameWithType: CardExtensions.SetEmissivePortrait
- uid: InscryptionAPI.Card.CardExtensions.SetEnergyCost(DiskCardGame.CardInfo,System.Nullable{System.Int32})
  name: SetEnergyCost(CardInfo, Nullable<Int32>)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetEnergyCost_DiskCardGame_CardInfo_System_Nullable_System_Int32__
  commentId: M:InscryptionAPI.Card.CardExtensions.SetEnergyCost(DiskCardGame.CardInfo,System.Nullable{System.Int32})
  name.vb: SetEnergyCost(CardInfo, Nullable(Of Int32))
  fullName: InscryptionAPI.Card.CardExtensions.SetEnergyCost(DiskCardGame.CardInfo, System.Nullable<System.Int32>)
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetEnergyCost(DiskCardGame.CardInfo, System.Nullable(Of System.Int32))
  nameWithType: CardExtensions.SetEnergyCost(CardInfo, Nullable<Int32>)
  nameWithType.vb: CardExtensions.SetEnergyCost(CardInfo, Nullable(Of Int32))
- uid: InscryptionAPI.Card.CardExtensions.SetEnergyCost*
  name: SetEnergyCost
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetEnergyCost_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetEnergyCost
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetEnergyCost
  nameWithType: CardExtensions.SetEnergyCost
- uid: InscryptionAPI.Card.CardExtensions.SetEvolve(DiskCardGame.CardInfo,DiskCardGame.CardInfo,System.Int32,IEnumerable{DiskCardGame.CardModificationInfo})
  name: SetEvolve(CardInfo, CardInfo, Int32, IEnumerable<CardModificationInfo>)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetEvolve_DiskCardGame_CardInfo_DiskCardGame_CardInfo_System_Int32_IEnumerable_DiskCardGame_CardModificationInfo__
  commentId: M:InscryptionAPI.Card.CardExtensions.SetEvolve(DiskCardGame.CardInfo,DiskCardGame.CardInfo,System.Int32,IEnumerable{DiskCardGame.CardModificationInfo})
  name.vb: SetEvolve(CardInfo, CardInfo, Int32, IEnumerable(Of CardModificationInfo))
  fullName: InscryptionAPI.Card.CardExtensions.SetEvolve(DiskCardGame.CardInfo, DiskCardGame.CardInfo, System.Int32, IEnumerable<DiskCardGame.CardModificationInfo>)
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetEvolve(DiskCardGame.CardInfo, DiskCardGame.CardInfo, System.Int32, IEnumerable(Of DiskCardGame.CardModificationInfo))
  nameWithType: CardExtensions.SetEvolve(CardInfo, CardInfo, Int32, IEnumerable<CardModificationInfo>)
  nameWithType.vb: CardExtensions.SetEvolve(CardInfo, CardInfo, Int32, IEnumerable(Of CardModificationInfo))
- uid: InscryptionAPI.Card.CardExtensions.SetEvolve(DiskCardGame.CardInfo,System.String,System.Int32,IEnumerable{DiskCardGame.CardModificationInfo})
  name: SetEvolve(CardInfo, String, Int32, IEnumerable<CardModificationInfo>)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetEvolve_DiskCardGame_CardInfo_System_String_System_Int32_IEnumerable_DiskCardGame_CardModificationInfo__
  commentId: M:InscryptionAPI.Card.CardExtensions.SetEvolve(DiskCardGame.CardInfo,System.String,System.Int32,IEnumerable{DiskCardGame.CardModificationInfo})
  name.vb: SetEvolve(CardInfo, String, Int32, IEnumerable(Of CardModificationInfo))
  fullName: InscryptionAPI.Card.CardExtensions.SetEvolve(DiskCardGame.CardInfo, System.String, System.Int32, IEnumerable<DiskCardGame.CardModificationInfo>)
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetEvolve(DiskCardGame.CardInfo, System.String, System.Int32, IEnumerable(Of DiskCardGame.CardModificationInfo))
  nameWithType: CardExtensions.SetEvolve(CardInfo, String, Int32, IEnumerable<CardModificationInfo>)
  nameWithType.vb: CardExtensions.SetEvolve(CardInfo, String, Int32, IEnumerable(Of CardModificationInfo))
- uid: InscryptionAPI.Card.CardExtensions.SetEvolve*
  name: SetEvolve
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetEvolve_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetEvolve
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetEvolve
  nameWithType: CardExtensions.SetEvolve
- uid: InscryptionAPI.Card.CardExtensions.SetExtendedProperty(DiskCardGame.CardInfo,System.String,System.Object)
  name: SetExtendedProperty(CardInfo, String, Object)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetExtendedProperty_DiskCardGame_CardInfo_System_String_System_Object_
  commentId: M:InscryptionAPI.Card.CardExtensions.SetExtendedProperty(DiskCardGame.CardInfo,System.String,System.Object)
  fullName: InscryptionAPI.Card.CardExtensions.SetExtendedProperty(DiskCardGame.CardInfo, System.String, System.Object)
  nameWithType: CardExtensions.SetExtendedProperty(CardInfo, String, Object)
- uid: InscryptionAPI.Card.CardExtensions.SetExtendedProperty*
  name: SetExtendedProperty
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetExtendedProperty_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetExtendedProperty
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetExtendedProperty
  nameWithType: CardExtensions.SetExtendedProperty
- uid: InscryptionAPI.Card.CardExtensions.SetGBCPlayable(DiskCardGame.CardInfo,CardTemple)
  name: SetGBCPlayable(CardInfo, CardTemple)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetGBCPlayable_DiskCardGame_CardInfo_CardTemple_
  commentId: M:InscryptionAPI.Card.CardExtensions.SetGBCPlayable(DiskCardGame.CardInfo,CardTemple)
  fullName: InscryptionAPI.Card.CardExtensions.SetGBCPlayable(DiskCardGame.CardInfo, CardTemple)
  nameWithType: CardExtensions.SetGBCPlayable(CardInfo, CardTemple)
- uid: InscryptionAPI.Card.CardExtensions.SetGBCPlayable*
  name: SetGBCPlayable
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetGBCPlayable_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetGBCPlayable
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetGBCPlayable
  nameWithType: CardExtensions.SetGBCPlayable
- uid: InscryptionAPI.Card.CardExtensions.SetGemsCost(DiskCardGame.CardInfo,List{DiskCardGame.GemType})
  name: SetGemsCost(CardInfo, List<GemType>)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetGemsCost_DiskCardGame_CardInfo_List_DiskCardGame_GemType__
  commentId: M:InscryptionAPI.Card.CardExtensions.SetGemsCost(DiskCardGame.CardInfo,List{DiskCardGame.GemType})
  name.vb: SetGemsCost(CardInfo, List(Of GemType))
  fullName: InscryptionAPI.Card.CardExtensions.SetGemsCost(DiskCardGame.CardInfo, List<DiskCardGame.GemType>)
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetGemsCost(DiskCardGame.CardInfo, List(Of DiskCardGame.GemType))
  nameWithType: CardExtensions.SetGemsCost(CardInfo, List<GemType>)
  nameWithType.vb: CardExtensions.SetGemsCost(CardInfo, List(Of GemType))
- uid: InscryptionAPI.Card.CardExtensions.SetGemsCost*
  name: SetGemsCost
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetGemsCost_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetGemsCost
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetGemsCost
  nameWithType: CardExtensions.SetGemsCost
- uid: InscryptionAPI.Card.CardExtensions.SetIceCube(DiskCardGame.CardInfo,DiskCardGame.CardInfo,IEnumerable{DiskCardGame.CardModificationInfo})
  name: SetIceCube(CardInfo, CardInfo, IEnumerable<CardModificationInfo>)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetIceCube_DiskCardGame_CardInfo_DiskCardGame_CardInfo_IEnumerable_DiskCardGame_CardModificationInfo__
  commentId: M:InscryptionAPI.Card.CardExtensions.SetIceCube(DiskCardGame.CardInfo,DiskCardGame.CardInfo,IEnumerable{DiskCardGame.CardModificationInfo})
  name.vb: SetIceCube(CardInfo, CardInfo, IEnumerable(Of CardModificationInfo))
  fullName: InscryptionAPI.Card.CardExtensions.SetIceCube(DiskCardGame.CardInfo, DiskCardGame.CardInfo, IEnumerable<DiskCardGame.CardModificationInfo>)
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetIceCube(DiskCardGame.CardInfo, DiskCardGame.CardInfo, IEnumerable(Of DiskCardGame.CardModificationInfo))
  nameWithType: CardExtensions.SetIceCube(CardInfo, CardInfo, IEnumerable<CardModificationInfo>)
  nameWithType.vb: CardExtensions.SetIceCube(CardInfo, CardInfo, IEnumerable(Of CardModificationInfo))
- uid: InscryptionAPI.Card.CardExtensions.SetIceCube(DiskCardGame.CardInfo,System.String,IEnumerable{DiskCardGame.CardModificationInfo})
  name: SetIceCube(CardInfo, String, IEnumerable<CardModificationInfo>)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetIceCube_DiskCardGame_CardInfo_System_String_IEnumerable_DiskCardGame_CardModificationInfo__
  commentId: M:InscryptionAPI.Card.CardExtensions.SetIceCube(DiskCardGame.CardInfo,System.String,IEnumerable{DiskCardGame.CardModificationInfo})
  name.vb: SetIceCube(CardInfo, String, IEnumerable(Of CardModificationInfo))
  fullName: InscryptionAPI.Card.CardExtensions.SetIceCube(DiskCardGame.CardInfo, System.String, IEnumerable<DiskCardGame.CardModificationInfo>)
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetIceCube(DiskCardGame.CardInfo, System.String, IEnumerable(Of DiskCardGame.CardModificationInfo))
  nameWithType: CardExtensions.SetIceCube(CardInfo, String, IEnumerable<CardModificationInfo>)
  nameWithType.vb: CardExtensions.SetIceCube(CardInfo, String, IEnumerable(Of CardModificationInfo))
- uid: InscryptionAPI.Card.CardExtensions.SetIceCube*
  name: SetIceCube
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetIceCube_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetIceCube
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetIceCube
  nameWithType: CardExtensions.SetIceCube
- uid: InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.CardInfo,System.String)
  name: SetLostTailPortrait(CardInfo, String)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetLostTailPortrait_DiskCardGame_CardInfo_System_String_
  commentId: M:InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.CardInfo,System.String)
  fullName: InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.CardInfo, System.String)
  nameWithType: CardExtensions.SetLostTailPortrait(CardInfo, String)
- uid: InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  name: SetLostTailPortrait(CardInfo, Texture2D, Nullable<FilterMode>)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetLostTailPortrait_DiskCardGame_CardInfo_UnityEngine_Texture2D_System_Nullable_UnityEngine_FilterMode__
  commentId: M:InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  name.vb: SetLostTailPortrait(CardInfo, Texture2D, Nullable(Of FilterMode))
  fullName: InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.CardInfo, UnityEngine.Texture2D, System.Nullable<UnityEngine.FilterMode>)
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.CardInfo, UnityEngine.Texture2D, System.Nullable(Of UnityEngine.FilterMode))
  nameWithType: CardExtensions.SetLostTailPortrait(CardInfo, Texture2D, Nullable<FilterMode>)
  nameWithType.vb: CardExtensions.SetLostTailPortrait(CardInfo, Texture2D, Nullable(Of FilterMode))
- uid: InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.TailParams,System.String,DiskCardGame.CardInfo)
  name: SetLostTailPortrait(TailParams, String, CardInfo)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetLostTailPortrait_DiskCardGame_TailParams_System_String_DiskCardGame_CardInfo_
  commentId: M:InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.TailParams,System.String,DiskCardGame.CardInfo)
  fullName: InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.TailParams, System.String, DiskCardGame.CardInfo)
  nameWithType: CardExtensions.SetLostTailPortrait(TailParams, String, CardInfo)
- uid: InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.TailParams,UnityEngine.Sprite,DiskCardGame.CardInfo)
  name: SetLostTailPortrait(TailParams, Sprite, CardInfo)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetLostTailPortrait_DiskCardGame_TailParams_UnityEngine_Sprite_DiskCardGame_CardInfo_
  commentId: M:InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.TailParams,UnityEngine.Sprite,DiskCardGame.CardInfo)
  fullName: InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.TailParams, UnityEngine.Sprite, DiskCardGame.CardInfo)
  nameWithType: CardExtensions.SetLostTailPortrait(TailParams, Sprite, CardInfo)
- uid: InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.TailParams,UnityEngine.Texture2D,DiskCardGame.CardInfo,System.Nullable{UnityEngine.FilterMode})
  name: SetLostTailPortrait(TailParams, Texture2D, CardInfo, Nullable<FilterMode>)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetLostTailPortrait_DiskCardGame_TailParams_UnityEngine_Texture2D_DiskCardGame_CardInfo_System_Nullable_UnityEngine_FilterMode__
  commentId: M:InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.TailParams,UnityEngine.Texture2D,DiskCardGame.CardInfo,System.Nullable{UnityEngine.FilterMode})
  name.vb: SetLostTailPortrait(TailParams, Texture2D, CardInfo, Nullable(Of FilterMode))
  fullName: InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.TailParams, UnityEngine.Texture2D, DiskCardGame.CardInfo, System.Nullable<UnityEngine.FilterMode>)
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.TailParams, UnityEngine.Texture2D, DiskCardGame.CardInfo, System.Nullable(Of UnityEngine.FilterMode))
  nameWithType: CardExtensions.SetLostTailPortrait(TailParams, Texture2D, CardInfo, Nullable<FilterMode>)
  nameWithType.vb: CardExtensions.SetLostTailPortrait(TailParams, Texture2D, CardInfo, Nullable(Of FilterMode))
- uid: InscryptionAPI.Card.CardExtensions.SetLostTailPortrait*
  name: SetLostTailPortrait
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetLostTailPortrait_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetLostTailPortrait
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetLostTailPortrait
  nameWithType: CardExtensions.SetLostTailPortrait
- uid: InscryptionAPI.Card.CardExtensions.SetName(DiskCardGame.CardInfo,System.String,System.String)
  name: SetName(CardInfo, String, String)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetName_DiskCardGame_CardInfo_System_String_System_String_
  commentId: M:InscryptionAPI.Card.CardExtensions.SetName(DiskCardGame.CardInfo,System.String,System.String)
  fullName: InscryptionAPI.Card.CardExtensions.SetName(DiskCardGame.CardInfo, System.String, System.String)
  nameWithType: CardExtensions.SetName(CardInfo, String, String)
- uid: InscryptionAPI.Card.CardExtensions.SetName*
  name: SetName
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetName_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetName
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetName
  nameWithType: CardExtensions.SetName
- uid: InscryptionAPI.Card.CardExtensions.SetNames(DiskCardGame.CardInfo,System.String,System.String,System.String)
  name: SetNames(CardInfo, String, String, String)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetNames_DiskCardGame_CardInfo_System_String_System_String_System_String_
  commentId: M:InscryptionAPI.Card.CardExtensions.SetNames(DiskCardGame.CardInfo,System.String,System.String,System.String)
  fullName: InscryptionAPI.Card.CardExtensions.SetNames(DiskCardGame.CardInfo, System.String, System.String, System.String)
  nameWithType: CardExtensions.SetNames(CardInfo, String, String, String)
- uid: InscryptionAPI.Card.CardExtensions.SetNames*
  name: SetNames
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetNames_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetNames
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetNames
  nameWithType: CardExtensions.SetNames
- uid: InscryptionAPI.Card.CardExtensions.SetPixelPortrait(DiskCardGame.CardInfo,System.String)
  name: SetPixelPortrait(CardInfo, String)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetPixelPortrait_DiskCardGame_CardInfo_System_String_
  commentId: M:InscryptionAPI.Card.CardExtensions.SetPixelPortrait(DiskCardGame.CardInfo,System.String)
  fullName: InscryptionAPI.Card.CardExtensions.SetPixelPortrait(DiskCardGame.CardInfo, System.String)
  nameWithType: CardExtensions.SetPixelPortrait(CardInfo, String)
- uid: InscryptionAPI.Card.CardExtensions.SetPixelPortrait(DiskCardGame.CardInfo,UnityEngine.Sprite)
  name: SetPixelPortrait(CardInfo, Sprite)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetPixelPortrait_DiskCardGame_CardInfo_UnityEngine_Sprite_
  commentId: M:InscryptionAPI.Card.CardExtensions.SetPixelPortrait(DiskCardGame.CardInfo,UnityEngine.Sprite)
  fullName: InscryptionAPI.Card.CardExtensions.SetPixelPortrait(DiskCardGame.CardInfo, UnityEngine.Sprite)
  nameWithType: CardExtensions.SetPixelPortrait(CardInfo, Sprite)
- uid: InscryptionAPI.Card.CardExtensions.SetPixelPortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  name: SetPixelPortrait(CardInfo, Texture2D, Nullable<FilterMode>)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetPixelPortrait_DiskCardGame_CardInfo_UnityEngine_Texture2D_System_Nullable_UnityEngine_FilterMode__
  commentId: M:InscryptionAPI.Card.CardExtensions.SetPixelPortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  name.vb: SetPixelPortrait(CardInfo, Texture2D, Nullable(Of FilterMode))
  fullName: InscryptionAPI.Card.CardExtensions.SetPixelPortrait(DiskCardGame.CardInfo, UnityEngine.Texture2D, System.Nullable<UnityEngine.FilterMode>)
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetPixelPortrait(DiskCardGame.CardInfo, UnityEngine.Texture2D, System.Nullable(Of UnityEngine.FilterMode))
  nameWithType: CardExtensions.SetPixelPortrait(CardInfo, Texture2D, Nullable<FilterMode>)
  nameWithType.vb: CardExtensions.SetPixelPortrait(CardInfo, Texture2D, Nullable(Of FilterMode))
- uid: InscryptionAPI.Card.CardExtensions.SetPixelPortrait*
  name: SetPixelPortrait
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetPixelPortrait_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetPixelPortrait
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetPixelPortrait
  nameWithType: CardExtensions.SetPixelPortrait
- uid: InscryptionAPI.Card.CardExtensions.SetPortrait(DiskCardGame.CardInfo,System.String)
  name: SetPortrait(CardInfo, String)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetPortrait_DiskCardGame_CardInfo_System_String_
  commentId: M:InscryptionAPI.Card.CardExtensions.SetPortrait(DiskCardGame.CardInfo,System.String)
  fullName: InscryptionAPI.Card.CardExtensions.SetPortrait(DiskCardGame.CardInfo, System.String)
  nameWithType: CardExtensions.SetPortrait(CardInfo, String)
- uid: InscryptionAPI.Card.CardExtensions.SetPortrait(DiskCardGame.CardInfo,UnityEngine.Sprite)
  name: SetPortrait(CardInfo, Sprite)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetPortrait_DiskCardGame_CardInfo_UnityEngine_Sprite_
  commentId: M:InscryptionAPI.Card.CardExtensions.SetPortrait(DiskCardGame.CardInfo,UnityEngine.Sprite)
  fullName: InscryptionAPI.Card.CardExtensions.SetPortrait(DiskCardGame.CardInfo, UnityEngine.Sprite)
  nameWithType: CardExtensions.SetPortrait(CardInfo, Sprite)
- uid: InscryptionAPI.Card.CardExtensions.SetPortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  name: SetPortrait(CardInfo, Texture2D, Nullable<FilterMode>)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetPortrait_DiskCardGame_CardInfo_UnityEngine_Texture2D_System_Nullable_UnityEngine_FilterMode__
  commentId: M:InscryptionAPI.Card.CardExtensions.SetPortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  name.vb: SetPortrait(CardInfo, Texture2D, Nullable(Of FilterMode))
  fullName: InscryptionAPI.Card.CardExtensions.SetPortrait(DiskCardGame.CardInfo, UnityEngine.Texture2D, System.Nullable<UnityEngine.FilterMode>)
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetPortrait(DiskCardGame.CardInfo, UnityEngine.Texture2D, System.Nullable(Of UnityEngine.FilterMode))
  nameWithType: CardExtensions.SetPortrait(CardInfo, Texture2D, Nullable<FilterMode>)
  nameWithType.vb: CardExtensions.SetPortrait(CardInfo, Texture2D, Nullable(Of FilterMode))
- uid: InscryptionAPI.Card.CardExtensions.SetPortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  name: SetPortrait(CardInfo, Texture2D, Texture2D, Nullable<FilterMode>)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetPortrait_DiskCardGame_CardInfo_UnityEngine_Texture2D_UnityEngine_Texture2D_System_Nullable_UnityEngine_FilterMode__
  commentId: M:InscryptionAPI.Card.CardExtensions.SetPortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  name.vb: SetPortrait(CardInfo, Texture2D, Texture2D, Nullable(Of FilterMode))
  fullName: InscryptionAPI.Card.CardExtensions.SetPortrait(DiskCardGame.CardInfo, UnityEngine.Texture2D, UnityEngine.Texture2D, System.Nullable<UnityEngine.FilterMode>)
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetPortrait(DiskCardGame.CardInfo, UnityEngine.Texture2D, UnityEngine.Texture2D, System.Nullable(Of UnityEngine.FilterMode))
  nameWithType: CardExtensions.SetPortrait(CardInfo, Texture2D, Texture2D, Nullable<FilterMode>)
  nameWithType.vb: CardExtensions.SetPortrait(CardInfo, Texture2D, Texture2D, Nullable(Of FilterMode))
- uid: InscryptionAPI.Card.CardExtensions.SetPortrait*
  name: SetPortrait
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetPortrait_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetPortrait
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetPortrait
  nameWithType: CardExtensions.SetPortrait
- uid: InscryptionAPI.Card.CardExtensions.SetPortraitAndEmission(DiskCardGame.CardInfo,System.String,System.String)
  name: SetPortraitAndEmission(CardInfo, String, String)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetPortraitAndEmission_DiskCardGame_CardInfo_System_String_System_String_
  commentId: M:InscryptionAPI.Card.CardExtensions.SetPortraitAndEmission(DiskCardGame.CardInfo,System.String,System.String)
  fullName: InscryptionAPI.Card.CardExtensions.SetPortraitAndEmission(DiskCardGame.CardInfo, System.String, System.String)
  nameWithType: CardExtensions.SetPortraitAndEmission(CardInfo, String, String)
- uid: InscryptionAPI.Card.CardExtensions.SetPortraitAndEmission(DiskCardGame.CardInfo,UnityEngine.Sprite,UnityEngine.Sprite)
  name: SetPortraitAndEmission(CardInfo, Sprite, Sprite)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetPortraitAndEmission_DiskCardGame_CardInfo_UnityEngine_Sprite_UnityEngine_Sprite_
  commentId: M:InscryptionAPI.Card.CardExtensions.SetPortraitAndEmission(DiskCardGame.CardInfo,UnityEngine.Sprite,UnityEngine.Sprite)
  fullName: InscryptionAPI.Card.CardExtensions.SetPortraitAndEmission(DiskCardGame.CardInfo, UnityEngine.Sprite, UnityEngine.Sprite)
  nameWithType: CardExtensions.SetPortraitAndEmission(CardInfo, Sprite, Sprite)
- uid: InscryptionAPI.Card.CardExtensions.SetPortraitAndEmission(DiskCardGame.CardInfo,UnityEngine.Texture2D,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  name: SetPortraitAndEmission(CardInfo, Texture2D, Texture2D, Nullable<FilterMode>)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetPortraitAndEmission_DiskCardGame_CardInfo_UnityEngine_Texture2D_UnityEngine_Texture2D_System_Nullable_UnityEngine_FilterMode__
  commentId: M:InscryptionAPI.Card.CardExtensions.SetPortraitAndEmission(DiskCardGame.CardInfo,UnityEngine.Texture2D,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  name.vb: SetPortraitAndEmission(CardInfo, Texture2D, Texture2D, Nullable(Of FilterMode))
  fullName: InscryptionAPI.Card.CardExtensions.SetPortraitAndEmission(DiskCardGame.CardInfo, UnityEngine.Texture2D, UnityEngine.Texture2D, System.Nullable<UnityEngine.FilterMode>)
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetPortraitAndEmission(DiskCardGame.CardInfo, UnityEngine.Texture2D, UnityEngine.Texture2D, System.Nullable(Of UnityEngine.FilterMode))
  nameWithType: CardExtensions.SetPortraitAndEmission(CardInfo, Texture2D, Texture2D, Nullable<FilterMode>)
  nameWithType.vb: CardExtensions.SetPortraitAndEmission(CardInfo, Texture2D, Texture2D, Nullable(Of FilterMode))
- uid: InscryptionAPI.Card.CardExtensions.SetPortraitAndEmission*
  name: SetPortraitAndEmission
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetPortraitAndEmission_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetPortraitAndEmission
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetPortraitAndEmission
  nameWithType: CardExtensions.SetPortraitAndEmission
- uid: InscryptionAPI.Card.CardExtensions.SetRare(DiskCardGame.CardInfo)
  name: SetRare(CardInfo)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetRare_DiskCardGame_CardInfo_
  commentId: M:InscryptionAPI.Card.CardExtensions.SetRare(DiskCardGame.CardInfo)
  fullName: InscryptionAPI.Card.CardExtensions.SetRare(DiskCardGame.CardInfo)
  nameWithType: CardExtensions.SetRare(CardInfo)
- uid: InscryptionAPI.Card.CardExtensions.SetRare*
  name: SetRare
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetRare_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetRare
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetRare
  nameWithType: CardExtensions.SetRare
- uid: InscryptionAPI.Card.CardExtensions.SetSpecialAbilities(DiskCardGame.CardInfo,DiskCardGame.SpecialTriggeredAbility[])
  name: SetSpecialAbilities(CardInfo, SpecialTriggeredAbility[])
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetSpecialAbilities_DiskCardGame_CardInfo_DiskCardGame_SpecialTriggeredAbility___
  commentId: M:InscryptionAPI.Card.CardExtensions.SetSpecialAbilities(DiskCardGame.CardInfo,DiskCardGame.SpecialTriggeredAbility[])
  name.vb: SetSpecialAbilities(CardInfo, SpecialTriggeredAbility())
  fullName: InscryptionAPI.Card.CardExtensions.SetSpecialAbilities(DiskCardGame.CardInfo, DiskCardGame.SpecialTriggeredAbility[])
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetSpecialAbilities(DiskCardGame.CardInfo, DiskCardGame.SpecialTriggeredAbility())
  nameWithType: CardExtensions.SetSpecialAbilities(CardInfo, SpecialTriggeredAbility[])
  nameWithType.vb: CardExtensions.SetSpecialAbilities(CardInfo, SpecialTriggeredAbility())
- uid: InscryptionAPI.Card.CardExtensions.SetSpecialAbilities*
  name: SetSpecialAbilities
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetSpecialAbilities_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetSpecialAbilities
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetSpecialAbilities
  nameWithType: CardExtensions.SetSpecialAbilities
- uid: InscryptionAPI.Card.CardExtensions.SetStatIcon(DiskCardGame.CardInfo,DiskCardGame.SpecialStatIcon)
  name: SetStatIcon(CardInfo, SpecialStatIcon)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetStatIcon_DiskCardGame_CardInfo_DiskCardGame_SpecialStatIcon_
  commentId: M:InscryptionAPI.Card.CardExtensions.SetStatIcon(DiskCardGame.CardInfo,DiskCardGame.SpecialStatIcon)
  fullName: InscryptionAPI.Card.CardExtensions.SetStatIcon(DiskCardGame.CardInfo, DiskCardGame.SpecialStatIcon)
  nameWithType: CardExtensions.SetStatIcon(CardInfo, SpecialStatIcon)
- uid: InscryptionAPI.Card.CardExtensions.SetStatIcon*
  name: SetStatIcon
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetStatIcon_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetStatIcon
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetStatIcon
  nameWithType: CardExtensions.SetStatIcon
- uid: InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo,DiskCardGame.CardInfo,UnityEngine.Sprite,IEnumerable{DiskCardGame.CardModificationInfo})
  name: SetTail(CardInfo, CardInfo, Sprite, IEnumerable<CardModificationInfo>)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetTail_DiskCardGame_CardInfo_DiskCardGame_CardInfo_UnityEngine_Sprite_IEnumerable_DiskCardGame_CardModificationInfo__
  commentId: M:InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo,DiskCardGame.CardInfo,UnityEngine.Sprite,IEnumerable{DiskCardGame.CardModificationInfo})
  name.vb: SetTail(CardInfo, CardInfo, Sprite, IEnumerable(Of CardModificationInfo))
  fullName: InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo, DiskCardGame.CardInfo, UnityEngine.Sprite, IEnumerable<DiskCardGame.CardModificationInfo>)
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo, DiskCardGame.CardInfo, UnityEngine.Sprite, IEnumerable(Of DiskCardGame.CardModificationInfo))
  nameWithType: CardExtensions.SetTail(CardInfo, CardInfo, Sprite, IEnumerable<CardModificationInfo>)
  nameWithType.vb: CardExtensions.SetTail(CardInfo, CardInfo, Sprite, IEnumerable(Of CardModificationInfo))
- uid: InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo,DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode},IEnumerable{DiskCardGame.CardModificationInfo})
  name: SetTail(CardInfo, CardInfo, Texture2D, Nullable<FilterMode>, IEnumerable<CardModificationInfo>)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetTail_DiskCardGame_CardInfo_DiskCardGame_CardInfo_UnityEngine_Texture2D_System_Nullable_UnityEngine_FilterMode__IEnumerable_DiskCardGame_CardModificationInfo__
  commentId: M:InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo,DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode},IEnumerable{DiskCardGame.CardModificationInfo})
  name.vb: SetTail(CardInfo, CardInfo, Texture2D, Nullable(Of FilterMode), IEnumerable(Of CardModificationInfo))
  fullName: InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo, DiskCardGame.CardInfo, UnityEngine.Texture2D, System.Nullable<UnityEngine.FilterMode>, IEnumerable<DiskCardGame.CardModificationInfo>)
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo, DiskCardGame.CardInfo, UnityEngine.Texture2D, System.Nullable(Of UnityEngine.FilterMode), IEnumerable(Of DiskCardGame.CardModificationInfo))
  nameWithType: CardExtensions.SetTail(CardInfo, CardInfo, Texture2D, Nullable<FilterMode>, IEnumerable<CardModificationInfo>)
  nameWithType.vb: CardExtensions.SetTail(CardInfo, CardInfo, Texture2D, Nullable(Of FilterMode), IEnumerable(Of CardModificationInfo))
- uid: InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo,System.String,System.String,IEnumerable{DiskCardGame.CardModificationInfo})
  name: SetTail(CardInfo, String, String, IEnumerable<CardModificationInfo>)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetTail_DiskCardGame_CardInfo_System_String_System_String_IEnumerable_DiskCardGame_CardModificationInfo__
  commentId: M:InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo,System.String,System.String,IEnumerable{DiskCardGame.CardModificationInfo})
  name.vb: SetTail(CardInfo, String, String, IEnumerable(Of CardModificationInfo))
  fullName: InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo, System.String, System.String, IEnumerable<DiskCardGame.CardModificationInfo>)
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo, System.String, System.String, IEnumerable(Of DiskCardGame.CardModificationInfo))
  nameWithType: CardExtensions.SetTail(CardInfo, String, String, IEnumerable<CardModificationInfo>)
  nameWithType.vb: CardExtensions.SetTail(CardInfo, String, String, IEnumerable(Of CardModificationInfo))
- uid: InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo,System.String,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode},IEnumerable{DiskCardGame.CardModificationInfo})
  name: SetTail(CardInfo, String, Texture2D, Nullable<FilterMode>, IEnumerable<CardModificationInfo>)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetTail_DiskCardGame_CardInfo_System_String_UnityEngine_Texture2D_System_Nullable_UnityEngine_FilterMode__IEnumerable_DiskCardGame_CardModificationInfo__
  commentId: M:InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo,System.String,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode},IEnumerable{DiskCardGame.CardModificationInfo})
  name.vb: SetTail(CardInfo, String, Texture2D, Nullable(Of FilterMode), IEnumerable(Of CardModificationInfo))
  fullName: InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo, System.String, UnityEngine.Texture2D, System.Nullable<UnityEngine.FilterMode>, IEnumerable<DiskCardGame.CardModificationInfo>)
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo, System.String, UnityEngine.Texture2D, System.Nullable(Of UnityEngine.FilterMode), IEnumerable(Of DiskCardGame.CardModificationInfo))
  nameWithType: CardExtensions.SetTail(CardInfo, String, Texture2D, Nullable<FilterMode>, IEnumerable<CardModificationInfo>)
  nameWithType.vb: CardExtensions.SetTail(CardInfo, String, Texture2D, Nullable(Of FilterMode), IEnumerable(Of CardModificationInfo))
- uid: InscryptionAPI.Card.CardExtensions.SetTail*
  name: SetTail
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetTail_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetTail
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetTail
  nameWithType: CardExtensions.SetTail
- uid: InscryptionAPI.Card.CardExtensions.SetTerrain(DiskCardGame.CardInfo)
  name: SetTerrain(CardInfo)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetTerrain_DiskCardGame_CardInfo_
  commentId: M:InscryptionAPI.Card.CardExtensions.SetTerrain(DiskCardGame.CardInfo)
  fullName: InscryptionAPI.Card.CardExtensions.SetTerrain(DiskCardGame.CardInfo)
  nameWithType: CardExtensions.SetTerrain(CardInfo)
- uid: InscryptionAPI.Card.CardExtensions.SetTerrain*
  name: SetTerrain
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetTerrain_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetTerrain
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetTerrain
  nameWithType: CardExtensions.SetTerrain
- uid: InscryptionAPI.Card.CardExtensions.SetTraits(DiskCardGame.CardInfo,DiskCardGame.Trait[])
  name: SetTraits(CardInfo, Trait[])
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetTraits_DiskCardGame_CardInfo_DiskCardGame_Trait___
  commentId: M:InscryptionAPI.Card.CardExtensions.SetTraits(DiskCardGame.CardInfo,DiskCardGame.Trait[])
  name.vb: SetTraits(CardInfo, Trait())
  fullName: InscryptionAPI.Card.CardExtensions.SetTraits(DiskCardGame.CardInfo, DiskCardGame.Trait[])
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetTraits(DiskCardGame.CardInfo, DiskCardGame.Trait())
  nameWithType: CardExtensions.SetTraits(CardInfo, Trait[])
  nameWithType.vb: CardExtensions.SetTraits(CardInfo, Trait())
- uid: InscryptionAPI.Card.CardExtensions.SetTraits*
  name: SetTraits
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetTraits_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetTraits
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetTraits
  nameWithType: CardExtensions.SetTraits
- uid: InscryptionAPI.Card.CardExtensions.SetTribes(DiskCardGame.CardInfo,DiskCardGame.Tribe[])
  name: SetTribes(CardInfo, Tribe[])
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetTribes_DiskCardGame_CardInfo_DiskCardGame_Tribe___
  commentId: M:InscryptionAPI.Card.CardExtensions.SetTribes(DiskCardGame.CardInfo,DiskCardGame.Tribe[])
  name.vb: SetTribes(CardInfo, Tribe())
  fullName: InscryptionAPI.Card.CardExtensions.SetTribes(DiskCardGame.CardInfo, DiskCardGame.Tribe[])
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetTribes(DiskCardGame.CardInfo, DiskCardGame.Tribe())
  nameWithType: CardExtensions.SetTribes(CardInfo, Tribe[])
  nameWithType.vb: CardExtensions.SetTribes(CardInfo, Tribe())
- uid: InscryptionAPI.Card.CardExtensions.SetTribes*
  name: SetTribes
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetTribes_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetTribes
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetTribes
  nameWithType: CardExtensions.SetTribes
- uid: InscryptionAPI.Card.CardManager
  name: CardManager
  href: api/InscryptionAPI.Card.CardManager.html
  commentId: T:InscryptionAPI.Card.CardManager
  fullName: InscryptionAPI.Card.CardManager
  nameWithType: CardManager
- uid: InscryptionAPI.Card.CardManager.Add(System.String,DiskCardGame.CardInfo)
  name: Add(String, CardInfo)
  href: api/InscryptionAPI.Card.CardManager.html#InscryptionAPI_Card_CardManager_Add_System_String_DiskCardGame_CardInfo_
  commentId: M:InscryptionAPI.Card.CardManager.Add(System.String,DiskCardGame.CardInfo)
  fullName: InscryptionAPI.Card.CardManager.Add(System.String, DiskCardGame.CardInfo)
  nameWithType: CardManager.Add(String, CardInfo)
- uid: InscryptionAPI.Card.CardManager.Add*
  name: Add
  href: api/InscryptionAPI.Card.CardManager.html#InscryptionAPI_Card_CardManager_Add_
  commentId: Overload:InscryptionAPI.Card.CardManager.Add
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardManager.Add
  nameWithType: CardManager.Add
- uid: InscryptionAPI.Card.CardManager.AllCardsCopy
  name: AllCardsCopy
  href: api/InscryptionAPI.Card.CardManager.html#InscryptionAPI_Card_CardManager_AllCardsCopy
  commentId: P:InscryptionAPI.Card.CardManager.AllCardsCopy
  fullName: InscryptionAPI.Card.CardManager.AllCardsCopy
  nameWithType: CardManager.AllCardsCopy
- uid: InscryptionAPI.Card.CardManager.AllCardsCopy*
  name: AllCardsCopy
  href: api/InscryptionAPI.Card.CardManager.html#InscryptionAPI_Card_CardManager_AllCardsCopy_
  commentId: Overload:InscryptionAPI.Card.CardManager.AllCardsCopy
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardManager.AllCardsCopy
  nameWithType: CardManager.AllCardsCopy
- uid: InscryptionAPI.Card.CardManager.BaseGameCards
  name: BaseGameCards
  href: api/InscryptionAPI.Card.CardManager.html#InscryptionAPI_Card_CardManager_BaseGameCards
  commentId: F:InscryptionAPI.Card.CardManager.BaseGameCards
  fullName: InscryptionAPI.Card.CardManager.BaseGameCards
  nameWithType: CardManager.BaseGameCards
- uid: InscryptionAPI.Card.CardManager.GetExtendedClass*
  name: GetExtendedClass
  href: api/InscryptionAPI.Card.CardManager.html#InscryptionAPI_Card_CardManager_GetExtendedClass_
  commentId: Overload:InscryptionAPI.Card.CardManager.GetExtendedClass
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardManager.GetExtendedClass
  nameWithType: CardManager.GetExtendedClass
- uid: InscryptionAPI.Card.CardManager.GetExtendedClass``1(DiskCardGame.CardInfo)
  name: GetExtendedClass<T>(CardInfo)
  href: api/InscryptionAPI.Card.CardManager.html#InscryptionAPI_Card_CardManager_GetExtendedClass__1_DiskCardGame_CardInfo_
  commentId: M:InscryptionAPI.Card.CardManager.GetExtendedClass``1(DiskCardGame.CardInfo)
  name.vb: GetExtendedClass(Of T)(CardInfo)
  fullName: InscryptionAPI.Card.CardManager.GetExtendedClass<T>(DiskCardGame.CardInfo)
  fullName.vb: InscryptionAPI.Card.CardManager.GetExtendedClass(Of T)(DiskCardGame.CardInfo)
  nameWithType: CardManager.GetExtendedClass<T>(CardInfo)
  nameWithType.vb: CardManager.GetExtendedClass(Of T)(CardInfo)
- uid: InscryptionAPI.Card.CardManager.ModifyCardList
  name: ModifyCardList
  href: api/InscryptionAPI.Card.CardManager.html#InscryptionAPI_Card_CardManager_ModifyCardList
  commentId: E:InscryptionAPI.Card.CardManager.ModifyCardList
  fullName: InscryptionAPI.Card.CardManager.ModifyCardList
  nameWithType: CardManager.ModifyCardList
- uid: InscryptionAPI.Card.CardManager.New(System.String,System.String,System.String,System.Int32,System.Int32,System.String)
  name: New(String, String, String, Int32, Int32, String)
  href: api/InscryptionAPI.Card.CardManager.html#InscryptionAPI_Card_CardManager_New_System_String_System_String_System_String_System_Int32_System_Int32_System_String_
  commentId: M:InscryptionAPI.Card.CardManager.New(System.String,System.String,System.String,System.Int32,System.Int32,System.String)
  fullName: InscryptionAPI.Card.CardManager.New(System.String, System.String, System.String, System.Int32, System.Int32, System.String)
  nameWithType: CardManager.New(String, String, String, Int32, Int32, String)
- uid: InscryptionAPI.Card.CardManager.New*
  name: New
  href: api/InscryptionAPI.Card.CardManager.html#InscryptionAPI_Card_CardManager_New_
  commentId: Overload:InscryptionAPI.Card.CardManager.New
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardManager.New
  nameWithType: CardManager.New
- uid: InscryptionAPI.Card.CardManager.Remove(DiskCardGame.CardInfo)
  name: Remove(CardInfo)
  href: api/InscryptionAPI.Card.CardManager.html#InscryptionAPI_Card_CardManager_Remove_DiskCardGame_CardInfo_
  commentId: M:InscryptionAPI.Card.CardManager.Remove(DiskCardGame.CardInfo)
  fullName: InscryptionAPI.Card.CardManager.Remove(DiskCardGame.CardInfo)
  nameWithType: CardManager.Remove(CardInfo)
- uid: InscryptionAPI.Card.CardManager.Remove*
  name: Remove
  href: api/InscryptionAPI.Card.CardManager.html#InscryptionAPI_Card_CardManager_Remove_
  commentId: Overload:InscryptionAPI.Card.CardManager.Remove
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardManager.Remove
  nameWithType: CardManager.Remove
- uid: InscryptionAPI.Card.CardManager.SyncCardList
  name: SyncCardList()
  href: api/InscryptionAPI.Card.CardManager.html#InscryptionAPI_Card_CardManager_SyncCardList
  commentId: M:InscryptionAPI.Card.CardManager.SyncCardList
  fullName: InscryptionAPI.Card.CardManager.SyncCardList()
  nameWithType: CardManager.SyncCardList()
- uid: InscryptionAPI.Card.CardManager.SyncCardList*
  name: SyncCardList
  href: api/InscryptionAPI.Card.CardManager.html#InscryptionAPI_Card_CardManager_SyncCardList_
  commentId: Overload:InscryptionAPI.Card.CardManager.SyncCardList
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardManager.SyncCardList
  nameWithType: CardManager.SyncCardList
- uid: InscryptionAPI.Card.ExtendedAbilityBehaviour
  name: ExtendedAbilityBehaviour
  href: api/InscryptionAPI.Card.ExtendedAbilityBehaviour.html
  commentId: T:InscryptionAPI.Card.ExtendedAbilityBehaviour
  fullName: InscryptionAPI.Card.ExtendedAbilityBehaviour
  nameWithType: ExtendedAbilityBehaviour
- uid: InscryptionAPI.Card.ExtendedAbilityBehaviour.GetOpposingSlots(List{DiskCardGame.CardSlot},List{DiskCardGame.CardSlot})
  name: GetOpposingSlots(List<CardSlot>, List<CardSlot>)
  href: api/InscryptionAPI.Card.ExtendedAbilityBehaviour.html#InscryptionAPI_Card_ExtendedAbilityBehaviour_GetOpposingSlots_List_DiskCardGame_CardSlot__List_DiskCardGame_CardSlot__
  commentId: M:InscryptionAPI.Card.ExtendedAbilityBehaviour.GetOpposingSlots(List{DiskCardGame.CardSlot},List{DiskCardGame.CardSlot})
  name.vb: GetOpposingSlots(List(Of CardSlot), List(Of CardSlot))
  fullName: InscryptionAPI.Card.ExtendedAbilityBehaviour.GetOpposingSlots(List<DiskCardGame.CardSlot>, List<DiskCardGame.CardSlot>)
  fullName.vb: InscryptionAPI.Card.ExtendedAbilityBehaviour.GetOpposingSlots(List(Of DiskCardGame.CardSlot), List(Of DiskCardGame.CardSlot))
  nameWithType: ExtendedAbilityBehaviour.GetOpposingSlots(List<CardSlot>, List<CardSlot>)
  nameWithType.vb: ExtendedAbilityBehaviour.GetOpposingSlots(List(Of CardSlot), List(Of CardSlot))
- uid: InscryptionAPI.Card.ExtendedAbilityBehaviour.GetOpposingSlots*
  name: GetOpposingSlots
  href: api/InscryptionAPI.Card.ExtendedAbilityBehaviour.html#InscryptionAPI_Card_ExtendedAbilityBehaviour_GetOpposingSlots_
  commentId: Overload:InscryptionAPI.Card.ExtendedAbilityBehaviour.GetOpposingSlots
  isSpec: "True"
  fullName: InscryptionAPI.Card.ExtendedAbilityBehaviour.GetOpposingSlots
  nameWithType: ExtendedAbilityBehaviour.GetOpposingSlots
- uid: InscryptionAPI.Card.ExtendedAbilityBehaviour.GetPassiveAttackBuffs
  name: GetPassiveAttackBuffs()
  href: api/InscryptionAPI.Card.ExtendedAbilityBehaviour.html#InscryptionAPI_Card_ExtendedAbilityBehaviour_GetPassiveAttackBuffs
  commentId: M:InscryptionAPI.Card.ExtendedAbilityBehaviour.GetPassiveAttackBuffs
  fullName: InscryptionAPI.Card.ExtendedAbilityBehaviour.GetPassiveAttackBuffs()
  nameWithType: ExtendedAbilityBehaviour.GetPassiveAttackBuffs()
- uid: InscryptionAPI.Card.ExtendedAbilityBehaviour.GetPassiveAttackBuffs*
  name: GetPassiveAttackBuffs
  href: api/InscryptionAPI.Card.ExtendedAbilityBehaviour.html#InscryptionAPI_Card_ExtendedAbilityBehaviour_GetPassiveAttackBuffs_
  commentId: Overload:InscryptionAPI.Card.ExtendedAbilityBehaviour.GetPassiveAttackBuffs
  isSpec: "True"
  fullName: InscryptionAPI.Card.ExtendedAbilityBehaviour.GetPassiveAttackBuffs
  nameWithType: ExtendedAbilityBehaviour.GetPassiveAttackBuffs
- uid: InscryptionAPI.Card.ExtendedAbilityBehaviour.GetPassiveHealthBuffs
  name: GetPassiveHealthBuffs()
  href: api/InscryptionAPI.Card.ExtendedAbilityBehaviour.html#InscryptionAPI_Card_ExtendedAbilityBehaviour_GetPassiveHealthBuffs
  commentId: M:InscryptionAPI.Card.ExtendedAbilityBehaviour.GetPassiveHealthBuffs
  fullName: InscryptionAPI.Card.ExtendedAbilityBehaviour.GetPassiveHealthBuffs()
  nameWithType: ExtendedAbilityBehaviour.GetPassiveHealthBuffs()
- uid: InscryptionAPI.Card.ExtendedAbilityBehaviour.GetPassiveHealthBuffs*
  name: GetPassiveHealthBuffs
  href: api/InscryptionAPI.Card.ExtendedAbilityBehaviour.html#InscryptionAPI_Card_ExtendedAbilityBehaviour_GetPassiveHealthBuffs_
  commentId: Overload:InscryptionAPI.Card.ExtendedAbilityBehaviour.GetPassiveHealthBuffs
  isSpec: "True"
  fullName: InscryptionAPI.Card.ExtendedAbilityBehaviour.GetPassiveHealthBuffs
  nameWithType: ExtendedAbilityBehaviour.GetPassiveHealthBuffs
- uid: InscryptionAPI.Card.ExtendedAbilityBehaviour.ProvidesPassiveAttackBuff
  name: ProvidesPassiveAttackBuff
  href: api/InscryptionAPI.Card.ExtendedAbilityBehaviour.html#InscryptionAPI_Card_ExtendedAbilityBehaviour_ProvidesPassiveAttackBuff
  commentId: P:InscryptionAPI.Card.ExtendedAbilityBehaviour.ProvidesPassiveAttackBuff
  fullName: InscryptionAPI.Card.ExtendedAbilityBehaviour.ProvidesPassiveAttackBuff
  nameWithType: ExtendedAbilityBehaviour.ProvidesPassiveAttackBuff
- uid: InscryptionAPI.Card.ExtendedAbilityBehaviour.ProvidesPassiveAttackBuff*
  name: ProvidesPassiveAttackBuff
  href: api/InscryptionAPI.Card.ExtendedAbilityBehaviour.html#InscryptionAPI_Card_ExtendedAbilityBehaviour_ProvidesPassiveAttackBuff_
  commentId: Overload:InscryptionAPI.Card.ExtendedAbilityBehaviour.ProvidesPassiveAttackBuff
  isSpec: "True"
  fullName: InscryptionAPI.Card.ExtendedAbilityBehaviour.ProvidesPassiveAttackBuff
  nameWithType: ExtendedAbilityBehaviour.ProvidesPassiveAttackBuff
- uid: InscryptionAPI.Card.ExtendedAbilityBehaviour.ProvidesPassiveHealthBuff
  name: ProvidesPassiveHealthBuff
  href: api/InscryptionAPI.Card.ExtendedAbilityBehaviour.html#InscryptionAPI_Card_ExtendedAbilityBehaviour_ProvidesPassiveHealthBuff
  commentId: P:InscryptionAPI.Card.ExtendedAbilityBehaviour.ProvidesPassiveHealthBuff
  fullName: InscryptionAPI.Card.ExtendedAbilityBehaviour.ProvidesPassiveHealthBuff
  nameWithType: ExtendedAbilityBehaviour.ProvidesPassiveHealthBuff
- uid: InscryptionAPI.Card.ExtendedAbilityBehaviour.ProvidesPassiveHealthBuff*
  name: ProvidesPassiveHealthBuff
  href: api/InscryptionAPI.Card.ExtendedAbilityBehaviour.html#InscryptionAPI_Card_ExtendedAbilityBehaviour_ProvidesPassiveHealthBuff_
  commentId: Overload:InscryptionAPI.Card.ExtendedAbilityBehaviour.ProvidesPassiveHealthBuff
  isSpec: "True"
  fullName: InscryptionAPI.Card.ExtendedAbilityBehaviour.ProvidesPassiveHealthBuff
  nameWithType: ExtendedAbilityBehaviour.ProvidesPassiveHealthBuff
- uid: InscryptionAPI.Card.ExtendedAbilityBehaviour.RemoveDefaultAttackSlot
  name: RemoveDefaultAttackSlot()
  href: api/InscryptionAPI.Card.ExtendedAbilityBehaviour.html#InscryptionAPI_Card_ExtendedAbilityBehaviour_RemoveDefaultAttackSlot
  commentId: M:InscryptionAPI.Card.ExtendedAbilityBehaviour.RemoveDefaultAttackSlot
  fullName: InscryptionAPI.Card.ExtendedAbilityBehaviour.RemoveDefaultAttackSlot()
  nameWithType: ExtendedAbilityBehaviour.RemoveDefaultAttackSlot()
- uid: InscryptionAPI.Card.ExtendedAbilityBehaviour.RemoveDefaultAttackSlot*
  name: RemoveDefaultAttackSlot
  href: api/InscryptionAPI.Card.ExtendedAbilityBehaviour.html#InscryptionAPI_Card_ExtendedAbilityBehaviour_RemoveDefaultAttackSlot_
  commentId: Overload:InscryptionAPI.Card.ExtendedAbilityBehaviour.RemoveDefaultAttackSlot
  isSpec: "True"
  fullName: InscryptionAPI.Card.ExtendedAbilityBehaviour.RemoveDefaultAttackSlot
  nameWithType: ExtendedAbilityBehaviour.RemoveDefaultAttackSlot
- uid: InscryptionAPI.Card.ExtendedAbilityBehaviour.RespondsToGetOpposingSlots
  name: RespondsToGetOpposingSlots()
  href: api/InscryptionAPI.Card.ExtendedAbilityBehaviour.html#InscryptionAPI_Card_ExtendedAbilityBehaviour_RespondsToGetOpposingSlots
  commentId: M:InscryptionAPI.Card.ExtendedAbilityBehaviour.RespondsToGetOpposingSlots
  fullName: InscryptionAPI.Card.ExtendedAbilityBehaviour.RespondsToGetOpposingSlots()
  nameWithType: ExtendedAbilityBehaviour.RespondsToGetOpposingSlots()
- uid: InscryptionAPI.Card.ExtendedAbilityBehaviour.RespondsToGetOpposingSlots*
  name: RespondsToGetOpposingSlots
  href: api/InscryptionAPI.Card.ExtendedAbilityBehaviour.html#InscryptionAPI_Card_ExtendedAbilityBehaviour_RespondsToGetOpposingSlots_
  commentId: Overload:InscryptionAPI.Card.ExtendedAbilityBehaviour.RespondsToGetOpposingSlots
  isSpec: "True"
  fullName: InscryptionAPI.Card.ExtendedAbilityBehaviour.RespondsToGetOpposingSlots
  nameWithType: ExtendedAbilityBehaviour.RespondsToGetOpposingSlots
- uid: InscryptionAPI.Card.ExtendedAbilityBehaviour.TriggerWhenFacedown
  name: TriggerWhenFacedown
  href: api/InscryptionAPI.Card.ExtendedAbilityBehaviour.html#InscryptionAPI_Card_ExtendedAbilityBehaviour_TriggerWhenFacedown
  commentId: P:InscryptionAPI.Card.ExtendedAbilityBehaviour.TriggerWhenFacedown
  fullName: InscryptionAPI.Card.ExtendedAbilityBehaviour.TriggerWhenFacedown
  nameWithType: ExtendedAbilityBehaviour.TriggerWhenFacedown
- uid: InscryptionAPI.Card.ExtendedAbilityBehaviour.TriggerWhenFacedown*
  name: TriggerWhenFacedown
  href: api/InscryptionAPI.Card.ExtendedAbilityBehaviour.html#InscryptionAPI_Card_ExtendedAbilityBehaviour_TriggerWhenFacedown_
  commentId: Overload:InscryptionAPI.Card.ExtendedAbilityBehaviour.TriggerWhenFacedown
  isSpec: "True"
  fullName: InscryptionAPI.Card.ExtendedAbilityBehaviour.TriggerWhenFacedown
  nameWithType: ExtendedAbilityBehaviour.TriggerWhenFacedown
- uid: InscryptionAPI.Card.IActivateWhenFacedown
  name: IActivateWhenFacedown
  href: api/InscryptionAPI.Card.IActivateWhenFacedown.html
  commentId: T:InscryptionAPI.Card.IActivateWhenFacedown
  fullName: InscryptionAPI.Card.IActivateWhenFacedown
  nameWithType: IActivateWhenFacedown
- uid: InscryptionAPI.Card.IActivateWhenFacedown.ShouldCustomTriggerFaceDown(InscryptionAPI.Triggers.CustomTrigger,System.Object[])
  name: ShouldCustomTriggerFaceDown(CustomTrigger, Object[])
  href: api/InscryptionAPI.Card.IActivateWhenFacedown.html#InscryptionAPI_Card_IActivateWhenFacedown_ShouldCustomTriggerFaceDown_InscryptionAPI_Triggers_CustomTrigger_System_Object___
  commentId: M:InscryptionAPI.Card.IActivateWhenFacedown.ShouldCustomTriggerFaceDown(InscryptionAPI.Triggers.CustomTrigger,System.Object[])
  name.vb: ShouldCustomTriggerFaceDown(CustomTrigger, Object())
  fullName: InscryptionAPI.Card.IActivateWhenFacedown.ShouldCustomTriggerFaceDown(InscryptionAPI.Triggers.CustomTrigger, System.Object[])
  fullName.vb: InscryptionAPI.Card.IActivateWhenFacedown.ShouldCustomTriggerFaceDown(InscryptionAPI.Triggers.CustomTrigger, System.Object())
  nameWithType: IActivateWhenFacedown.ShouldCustomTriggerFaceDown(CustomTrigger, Object[])
  nameWithType.vb: IActivateWhenFacedown.ShouldCustomTriggerFaceDown(CustomTrigger, Object())
- uid: InscryptionAPI.Card.IActivateWhenFacedown.ShouldCustomTriggerFaceDown(System.String,System.String,System.Object[])
  name: ShouldCustomTriggerFaceDown(String, String, Object[])
  href: api/InscryptionAPI.Card.IActivateWhenFacedown.html#InscryptionAPI_Card_IActivateWhenFacedown_ShouldCustomTriggerFaceDown_System_String_System_String_System_Object___
  commentId: M:InscryptionAPI.Card.IActivateWhenFacedown.ShouldCustomTriggerFaceDown(System.String,System.String,System.Object[])
  name.vb: ShouldCustomTriggerFaceDown(String, String, Object())
  fullName: InscryptionAPI.Card.IActivateWhenFacedown.ShouldCustomTriggerFaceDown(System.String, System.String, System.Object[])
  fullName.vb: InscryptionAPI.Card.IActivateWhenFacedown.ShouldCustomTriggerFaceDown(System.String, System.String, System.Object())
  nameWithType: IActivateWhenFacedown.ShouldCustomTriggerFaceDown(String, String, Object[])
  nameWithType.vb: IActivateWhenFacedown.ShouldCustomTriggerFaceDown(String, String, Object())
- uid: InscryptionAPI.Card.IActivateWhenFacedown.ShouldCustomTriggerFaceDown*
  name: ShouldCustomTriggerFaceDown
  href: api/InscryptionAPI.Card.IActivateWhenFacedown.html#InscryptionAPI_Card_IActivateWhenFacedown_ShouldCustomTriggerFaceDown_
  commentId: Overload:InscryptionAPI.Card.IActivateWhenFacedown.ShouldCustomTriggerFaceDown
  isSpec: "True"
  fullName: InscryptionAPI.Card.IActivateWhenFacedown.ShouldCustomTriggerFaceDown
  nameWithType: IActivateWhenFacedown.ShouldCustomTriggerFaceDown
- uid: InscryptionAPI.Card.IActivateWhenFacedown.ShouldTriggerWhenFaceDown(DiskCardGame.Trigger,System.Object[])
  name: ShouldTriggerWhenFaceDown(Trigger, Object[])
  href: api/InscryptionAPI.Card.IActivateWhenFacedown.html#InscryptionAPI_Card_IActivateWhenFacedown_ShouldTriggerWhenFaceDown_DiskCardGame_Trigger_System_Object___
  commentId: M:InscryptionAPI.Card.IActivateWhenFacedown.ShouldTriggerWhenFaceDown(DiskCardGame.Trigger,System.Object[])
  name.vb: ShouldTriggerWhenFaceDown(Trigger, Object())
  fullName: InscryptionAPI.Card.IActivateWhenFacedown.ShouldTriggerWhenFaceDown(DiskCardGame.Trigger, System.Object[])
  fullName.vb: InscryptionAPI.Card.IActivateWhenFacedown.ShouldTriggerWhenFaceDown(DiskCardGame.Trigger, System.Object())
  nameWithType: IActivateWhenFacedown.ShouldTriggerWhenFaceDown(Trigger, Object[])
  nameWithType.vb: IActivateWhenFacedown.ShouldTriggerWhenFaceDown(Trigger, Object())
- uid: InscryptionAPI.Card.IActivateWhenFacedown.ShouldTriggerWhenFaceDown*
  name: ShouldTriggerWhenFaceDown
  href: api/InscryptionAPI.Card.IActivateWhenFacedown.html#InscryptionAPI_Card_IActivateWhenFacedown_ShouldTriggerWhenFaceDown_
  commentId: Overload:InscryptionAPI.Card.IActivateWhenFacedown.ShouldTriggerWhenFaceDown
  isSpec: "True"
  fullName: InscryptionAPI.Card.IActivateWhenFacedown.ShouldTriggerWhenFaceDown
  nameWithType: IActivateWhenFacedown.ShouldTriggerWhenFaceDown
- uid: InscryptionAPI.Card.SpecialTriggeredAbilityManager
  name: SpecialTriggeredAbilityManager
  href: api/InscryptionAPI.Card.SpecialTriggeredAbilityManager.html
  commentId: T:InscryptionAPI.Card.SpecialTriggeredAbilityManager
  fullName: InscryptionAPI.Card.SpecialTriggeredAbilityManager
  nameWithType: SpecialTriggeredAbilityManager
- uid: InscryptionAPI.Card.SpecialTriggeredAbilityManager.Add(System.String,System.String,Type)
  name: Add(String, String, Type)
  href: api/InscryptionAPI.Card.SpecialTriggeredAbilityManager.html#InscryptionAPI_Card_SpecialTriggeredAbilityManager_Add_System_String_System_String_Type_
  commentId: M:InscryptionAPI.Card.SpecialTriggeredAbilityManager.Add(System.String,System.String,Type)
  fullName: InscryptionAPI.Card.SpecialTriggeredAbilityManager.Add(System.String, System.String, Type)
  nameWithType: SpecialTriggeredAbilityManager.Add(String, String, Type)
- uid: InscryptionAPI.Card.SpecialTriggeredAbilityManager.Add*
  name: Add
  href: api/InscryptionAPI.Card.SpecialTriggeredAbilityManager.html#InscryptionAPI_Card_SpecialTriggeredAbilityManager_Add_
  commentId: Overload:InscryptionAPI.Card.SpecialTriggeredAbilityManager.Add
  isSpec: "True"
  fullName: InscryptionAPI.Card.SpecialTriggeredAbilityManager.Add
  nameWithType: SpecialTriggeredAbilityManager.Add
- uid: InscryptionAPI.Card.SpecialTriggeredAbilityManager.AllSpecialTriggers
  name: AllSpecialTriggers
  href: api/InscryptionAPI.Card.SpecialTriggeredAbilityManager.html#InscryptionAPI_Card_SpecialTriggeredAbilityManager_AllSpecialTriggers
  commentId: P:InscryptionAPI.Card.SpecialTriggeredAbilityManager.AllSpecialTriggers
  fullName: InscryptionAPI.Card.SpecialTriggeredAbilityManager.AllSpecialTriggers
  nameWithType: SpecialTriggeredAbilityManager.AllSpecialTriggers
- uid: InscryptionAPI.Card.SpecialTriggeredAbilityManager.AllSpecialTriggers*
  name: AllSpecialTriggers
  href: api/InscryptionAPI.Card.SpecialTriggeredAbilityManager.html#InscryptionAPI_Card_SpecialTriggeredAbilityManager_AllSpecialTriggers_
  commentId: Overload:InscryptionAPI.Card.SpecialTriggeredAbilityManager.AllSpecialTriggers
  isSpec: "True"
  fullName: InscryptionAPI.Card.SpecialTriggeredAbilityManager.AllSpecialTriggers
  nameWithType: SpecialTriggeredAbilityManager.AllSpecialTriggers
- uid: InscryptionAPI.Card.SpecialTriggeredAbilityManager.BaseGameSpecialTriggers
  name: BaseGameSpecialTriggers
  href: api/InscryptionAPI.Card.SpecialTriggeredAbilityManager.html#InscryptionAPI_Card_SpecialTriggeredAbilityManager_BaseGameSpecialTriggers
  commentId: F:InscryptionAPI.Card.SpecialTriggeredAbilityManager.BaseGameSpecialTriggers
  fullName: InscryptionAPI.Card.SpecialTriggeredAbilityManager.BaseGameSpecialTriggers
  nameWithType: SpecialTriggeredAbilityManager.BaseGameSpecialTriggers
- uid: InscryptionAPI.Card.SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility
  name: SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility
  href: api/InscryptionAPI.Card.SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility.html
  commentId: T:InscryptionAPI.Card.SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility
  fullName: InscryptionAPI.Card.SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility
  nameWithType: SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility
- uid: InscryptionAPI.Card.SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility.#ctor(DiskCardGame.SpecialTriggeredAbility,Type)
  name: FullSpecialTriggeredAbility(SpecialTriggeredAbility, Type)
  href: api/InscryptionAPI.Card.SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility.html#InscryptionAPI_Card_SpecialTriggeredAbilityManager_FullSpecialTriggeredAbility__ctor_DiskCardGame_SpecialTriggeredAbility_Type_
  commentId: M:InscryptionAPI.Card.SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility.#ctor(DiskCardGame.SpecialTriggeredAbility,Type)
  fullName: InscryptionAPI.Card.SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility.FullSpecialTriggeredAbility(DiskCardGame.SpecialTriggeredAbility, Type)
  nameWithType: SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility.FullSpecialTriggeredAbility(SpecialTriggeredAbility, Type)
- uid: InscryptionAPI.Card.SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility.#ctor*
  name: FullSpecialTriggeredAbility
  href: api/InscryptionAPI.Card.SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility.html#InscryptionAPI_Card_SpecialTriggeredAbilityManager_FullSpecialTriggeredAbility__ctor_
  commentId: Overload:InscryptionAPI.Card.SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility.#ctor
  isSpec: "True"
  fullName: InscryptionAPI.Card.SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility.FullSpecialTriggeredAbility
  nameWithType: SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility.FullSpecialTriggeredAbility
- uid: InscryptionAPI.Card.SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility.AbilityBehaviour
  name: AbilityBehaviour
  href: api/InscryptionAPI.Card.SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility.html#InscryptionAPI_Card_SpecialTriggeredAbilityManager_FullSpecialTriggeredAbility_AbilityBehaviour
  commentId: F:InscryptionAPI.Card.SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility.AbilityBehaviour
  fullName: InscryptionAPI.Card.SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility.AbilityBehaviour
  nameWithType: SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility.AbilityBehaviour
- uid: InscryptionAPI.Card.SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility.Id
  name: Id
  href: api/InscryptionAPI.Card.SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility.html#InscryptionAPI_Card_SpecialTriggeredAbilityManager_FullSpecialTriggeredAbility_Id
  commentId: F:InscryptionAPI.Card.SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility.Id
  fullName: InscryptionAPI.Card.SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility.Id
  nameWithType: SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility.Id
- uid: InscryptionAPI.Card.SpecialTriggeredAbilityManager.Remove(DiskCardGame.SpecialTriggeredAbility)
  name: Remove(SpecialTriggeredAbility)
  href: api/InscryptionAPI.Card.SpecialTriggeredAbilityManager.html#InscryptionAPI_Card_SpecialTriggeredAbilityManager_Remove_DiskCardGame_SpecialTriggeredAbility_
  commentId: M:InscryptionAPI.Card.SpecialTriggeredAbilityManager.Remove(DiskCardGame.SpecialTriggeredAbility)
  fullName: InscryptionAPI.Card.SpecialTriggeredAbilityManager.Remove(DiskCardGame.SpecialTriggeredAbility)
  nameWithType: SpecialTriggeredAbilityManager.Remove(SpecialTriggeredAbility)
- uid: InscryptionAPI.Card.SpecialTriggeredAbilityManager.Remove(InscryptionAPI.Card.SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility)
  name: Remove(SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility)
  href: api/InscryptionAPI.Card.SpecialTriggeredAbilityManager.html#InscryptionAPI_Card_SpecialTriggeredAbilityManager_Remove_InscryptionAPI_Card_SpecialTriggeredAbilityManager_FullSpecialTriggeredAbility_
  commentId: M:InscryptionAPI.Card.SpecialTriggeredAbilityManager.Remove(InscryptionAPI.Card.SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility)
  fullName: InscryptionAPI.Card.SpecialTriggeredAbilityManager.Remove(InscryptionAPI.Card.SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility)
  nameWithType: SpecialTriggeredAbilityManager.Remove(SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility)
- uid: InscryptionAPI.Card.SpecialTriggeredAbilityManager.Remove*
  name: Remove
  href: api/InscryptionAPI.Card.SpecialTriggeredAbilityManager.html#InscryptionAPI_Card_SpecialTriggeredAbilityManager_Remove_
  commentId: Overload:InscryptionAPI.Card.SpecialTriggeredAbilityManager.Remove
  isSpec: "True"
  fullName: InscryptionAPI.Card.SpecialTriggeredAbilityManager.Remove
  nameWithType: SpecialTriggeredAbilityManager.Remove
- uid: InscryptionAPI.Card.StatIconManager
  name: StatIconManager
  href: api/InscryptionAPI.Card.StatIconManager.html
  commentId: T:InscryptionAPI.Card.StatIconManager
  fullName: InscryptionAPI.Card.StatIconManager
  nameWithType: StatIconManager
- uid: InscryptionAPI.Card.StatIconManager.Add(System.String,DiskCardGame.StatIconInfo,Type)
  name: Add(String, StatIconInfo, Type)
  href: api/InscryptionAPI.Card.StatIconManager.html#InscryptionAPI_Card_StatIconManager_Add_System_String_DiskCardGame_StatIconInfo_Type_
  commentId: M:InscryptionAPI.Card.StatIconManager.Add(System.String,DiskCardGame.StatIconInfo,Type)
  fullName: InscryptionAPI.Card.StatIconManager.Add(System.String, DiskCardGame.StatIconInfo, Type)
  nameWithType: StatIconManager.Add(String, StatIconInfo, Type)
- uid: InscryptionAPI.Card.StatIconManager.Add*
  name: Add
  href: api/InscryptionAPI.Card.StatIconManager.html#InscryptionAPI_Card_StatIconManager_Add_
  commentId: Overload:InscryptionAPI.Card.StatIconManager.Add
  isSpec: "True"
  fullName: InscryptionAPI.Card.StatIconManager.Add
  nameWithType: StatIconManager.Add
- uid: InscryptionAPI.Card.StatIconManager.AllStatIconInfos
  name: AllStatIconInfos
  href: api/InscryptionAPI.Card.StatIconManager.html#InscryptionAPI_Card_StatIconManager_AllStatIconInfos
  commentId: P:InscryptionAPI.Card.StatIconManager.AllStatIconInfos
  fullName: InscryptionAPI.Card.StatIconManager.AllStatIconInfos
  nameWithType: StatIconManager.AllStatIconInfos
- uid: InscryptionAPI.Card.StatIconManager.AllStatIconInfos*
  name: AllStatIconInfos
  href: api/InscryptionAPI.Card.StatIconManager.html#InscryptionAPI_Card_StatIconManager_AllStatIconInfos_
  commentId: Overload:InscryptionAPI.Card.StatIconManager.AllStatIconInfos
  isSpec: "True"
  fullName: InscryptionAPI.Card.StatIconManager.AllStatIconInfos
  nameWithType: StatIconManager.AllStatIconInfos
- uid: InscryptionAPI.Card.StatIconManager.AllStatIcons
  name: AllStatIcons
  href: api/InscryptionAPI.Card.StatIconManager.html#InscryptionAPI_Card_StatIconManager_AllStatIcons
  commentId: P:InscryptionAPI.Card.StatIconManager.AllStatIcons
  fullName: InscryptionAPI.Card.StatIconManager.AllStatIcons
  nameWithType: StatIconManager.AllStatIcons
- uid: InscryptionAPI.Card.StatIconManager.AllStatIcons*
  name: AllStatIcons
  href: api/InscryptionAPI.Card.StatIconManager.html#InscryptionAPI_Card_StatIconManager_AllStatIcons_
  commentId: Overload:InscryptionAPI.Card.StatIconManager.AllStatIcons
  isSpec: "True"
  fullName: InscryptionAPI.Card.StatIconManager.AllStatIcons
  nameWithType: StatIconManager.AllStatIcons
- uid: InscryptionAPI.Card.StatIconManager.BaseGameStatIcons
  name: BaseGameStatIcons
  href: api/InscryptionAPI.Card.StatIconManager.html#InscryptionAPI_Card_StatIconManager_BaseGameStatIcons
  commentId: F:InscryptionAPI.Card.StatIconManager.BaseGameStatIcons
  fullName: InscryptionAPI.Card.StatIconManager.BaseGameStatIcons
  nameWithType: StatIconManager.BaseGameStatIcons
- uid: InscryptionAPI.Card.StatIconManager.FixRulebook(DiskCardGame.AbilityMetaCategory,DiskCardGame.RuleBookInfo,List{DiskCardGame.RuleBookPageInfo}@)
  name: FixRulebook(AbilityMetaCategory, RuleBookInfo, ref List<RuleBookPageInfo>)
  href: api/InscryptionAPI.Card.StatIconManager.html#InscryptionAPI_Card_StatIconManager_FixRulebook_DiskCardGame_AbilityMetaCategory_DiskCardGame_RuleBookInfo_List_DiskCardGame_RuleBookPageInfo___
  commentId: M:InscryptionAPI.Card.StatIconManager.FixRulebook(DiskCardGame.AbilityMetaCategory,DiskCardGame.RuleBookInfo,List{DiskCardGame.RuleBookPageInfo}@)
  name.vb: FixRulebook(AbilityMetaCategory, RuleBookInfo, ByRef List(Of RuleBookPageInfo))
  fullName: InscryptionAPI.Card.StatIconManager.FixRulebook(DiskCardGame.AbilityMetaCategory, DiskCardGame.RuleBookInfo, ref List<DiskCardGame.RuleBookPageInfo>)
  fullName.vb: InscryptionAPI.Card.StatIconManager.FixRulebook(DiskCardGame.AbilityMetaCategory, DiskCardGame.RuleBookInfo, ByRef List(Of DiskCardGame.RuleBookPageInfo))
  nameWithType: StatIconManager.FixRulebook(AbilityMetaCategory, RuleBookInfo, ref List<RuleBookPageInfo>)
  nameWithType.vb: StatIconManager.FixRulebook(AbilityMetaCategory, RuleBookInfo, ByRef List(Of RuleBookPageInfo))
- uid: InscryptionAPI.Card.StatIconManager.FixRulebook*
  name: FixRulebook
  href: api/InscryptionAPI.Card.StatIconManager.html#InscryptionAPI_Card_StatIconManager_FixRulebook_
  commentId: Overload:InscryptionAPI.Card.StatIconManager.FixRulebook
  isSpec: "True"
  fullName: InscryptionAPI.Card.StatIconManager.FixRulebook
  nameWithType: StatIconManager.FixRulebook
- uid: InscryptionAPI.Card.StatIconManager.FullStatIcon
  name: StatIconManager.FullStatIcon
  href: api/InscryptionAPI.Card.StatIconManager.FullStatIcon.html
  commentId: T:InscryptionAPI.Card.StatIconManager.FullStatIcon
  fullName: InscryptionAPI.Card.StatIconManager.FullStatIcon
  nameWithType: StatIconManager.FullStatIcon
- uid: InscryptionAPI.Card.StatIconManager.FullStatIcon.#ctor(DiskCardGame.SpecialStatIcon,DiskCardGame.SpecialTriggeredAbility,DiskCardGame.StatIconInfo,Type)
  name: FullStatIcon(SpecialStatIcon, SpecialTriggeredAbility, StatIconInfo, Type)
  href: api/InscryptionAPI.Card.StatIconManager.FullStatIcon.html#InscryptionAPI_Card_StatIconManager_FullStatIcon__ctor_DiskCardGame_SpecialStatIcon_DiskCardGame_SpecialTriggeredAbility_DiskCardGame_StatIconInfo_Type_
  commentId: M:InscryptionAPI.Card.StatIconManager.FullStatIcon.#ctor(DiskCardGame.SpecialStatIcon,DiskCardGame.SpecialTriggeredAbility,DiskCardGame.StatIconInfo,Type)
  fullName: InscryptionAPI.Card.StatIconManager.FullStatIcon.FullStatIcon(DiskCardGame.SpecialStatIcon, DiskCardGame.SpecialTriggeredAbility, DiskCardGame.StatIconInfo, Type)
  nameWithType: StatIconManager.FullStatIcon.FullStatIcon(SpecialStatIcon, SpecialTriggeredAbility, StatIconInfo, Type)
- uid: InscryptionAPI.Card.StatIconManager.FullStatIcon.#ctor*
  name: FullStatIcon
  href: api/InscryptionAPI.Card.StatIconManager.FullStatIcon.html#InscryptionAPI_Card_StatIconManager_FullStatIcon__ctor_
  commentId: Overload:InscryptionAPI.Card.StatIconManager.FullStatIcon.#ctor
  isSpec: "True"
  fullName: InscryptionAPI.Card.StatIconManager.FullStatIcon.FullStatIcon
  nameWithType: StatIconManager.FullStatIcon.FullStatIcon
- uid: InscryptionAPI.Card.StatIconManager.FullStatIcon.AbilityId
  name: AbilityId
  href: api/InscryptionAPI.Card.StatIconManager.FullStatIcon.html#InscryptionAPI_Card_StatIconManager_FullStatIcon_AbilityId
  commentId: F:InscryptionAPI.Card.StatIconManager.FullStatIcon.AbilityId
  fullName: InscryptionAPI.Card.StatIconManager.FullStatIcon.AbilityId
  nameWithType: StatIconManager.FullStatIcon.AbilityId
- uid: InscryptionAPI.Card.StatIconManager.FullStatIcon.Id
  name: Id
  href: api/InscryptionAPI.Card.StatIconManager.FullStatIcon.html#InscryptionAPI_Card_StatIconManager_FullStatIcon_Id
  commentId: F:InscryptionAPI.Card.StatIconManager.FullStatIcon.Id
  fullName: InscryptionAPI.Card.StatIconManager.FullStatIcon.Id
  nameWithType: StatIconManager.FullStatIcon.Id
- uid: InscryptionAPI.Card.StatIconManager.FullStatIcon.Info
  name: Info
  href: api/InscryptionAPI.Card.StatIconManager.FullStatIcon.html#InscryptionAPI_Card_StatIconManager_FullStatIcon_Info
  commentId: F:InscryptionAPI.Card.StatIconManager.FullStatIcon.Info
  fullName: InscryptionAPI.Card.StatIconManager.FullStatIcon.Info
  nameWithType: StatIconManager.FullStatIcon.Info
- uid: InscryptionAPI.Card.StatIconManager.FullStatIcon.VariableStatBehavior
  name: VariableStatBehavior
  href: api/InscryptionAPI.Card.StatIconManager.FullStatIcon.html#InscryptionAPI_Card_StatIconManager_FullStatIcon_VariableStatBehavior
  commentId: F:InscryptionAPI.Card.StatIconManager.FullStatIcon.VariableStatBehavior
  fullName: InscryptionAPI.Card.StatIconManager.FullStatIcon.VariableStatBehavior
  nameWithType: StatIconManager.FullStatIcon.VariableStatBehavior
- uid: InscryptionAPI.Card.StatIconManager.New(System.String,System.String,System.String,Type)
  name: New(String, String, String, Type)
  href: api/InscryptionAPI.Card.StatIconManager.html#InscryptionAPI_Card_StatIconManager_New_System_String_System_String_System_String_Type_
  commentId: M:InscryptionAPI.Card.StatIconManager.New(System.String,System.String,System.String,Type)
  fullName: InscryptionAPI.Card.StatIconManager.New(System.String, System.String, System.String, Type)
  nameWithType: StatIconManager.New(String, String, String, Type)
- uid: InscryptionAPI.Card.StatIconManager.New*
  name: New
  href: api/InscryptionAPI.Card.StatIconManager.html#InscryptionAPI_Card_StatIconManager_New_
  commentId: Overload:InscryptionAPI.Card.StatIconManager.New
  isSpec: "True"
  fullName: InscryptionAPI.Card.StatIconManager.New
  nameWithType: StatIconManager.New
- uid: InscryptionAPI.Card.StatIconManager.Remove(DiskCardGame.SpecialStatIcon)
  name: Remove(SpecialStatIcon)
  href: api/InscryptionAPI.Card.StatIconManager.html#InscryptionAPI_Card_StatIconManager_Remove_DiskCardGame_SpecialStatIcon_
  commentId: M:InscryptionAPI.Card.StatIconManager.Remove(DiskCardGame.SpecialStatIcon)
  fullName: InscryptionAPI.Card.StatIconManager.Remove(DiskCardGame.SpecialStatIcon)
  nameWithType: StatIconManager.Remove(SpecialStatIcon)
- uid: InscryptionAPI.Card.StatIconManager.Remove(InscryptionAPI.Card.StatIconManager.FullStatIcon)
  name: Remove(StatIconManager.FullStatIcon)
  href: api/InscryptionAPI.Card.StatIconManager.html#InscryptionAPI_Card_StatIconManager_Remove_InscryptionAPI_Card_StatIconManager_FullStatIcon_
  commentId: M:InscryptionAPI.Card.StatIconManager.Remove(InscryptionAPI.Card.StatIconManager.FullStatIcon)
  fullName: InscryptionAPI.Card.StatIconManager.Remove(InscryptionAPI.Card.StatIconManager.FullStatIcon)
  nameWithType: StatIconManager.Remove(StatIconManager.FullStatIcon)
- uid: InscryptionAPI.Card.StatIconManager.Remove*
  name: Remove
  href: api/InscryptionAPI.Card.StatIconManager.html#InscryptionAPI_Card_StatIconManager_Remove_
  commentId: Overload:InscryptionAPI.Card.StatIconManager.Remove
  isSpec: "True"
  fullName: InscryptionAPI.Card.StatIconManager.Remove
  nameWithType: StatIconManager.Remove
- uid: InscryptionAPI.Card.TribeManager
  name: TribeManager
  href: api/InscryptionAPI.Card.TribeManager.html
  commentId: T:InscryptionAPI.Card.TribeManager
  fullName: InscryptionAPI.Card.TribeManager
  nameWithType: TribeManager
- uid: InscryptionAPI.Card.TribeManager.Add(System.String,System.String,System.String,System.Boolean,System.String)
  name: Add(String, String, String, Boolean, String)
  href: api/InscryptionAPI.Card.TribeManager.html#InscryptionAPI_Card_TribeManager_Add_System_String_System_String_System_String_System_Boolean_System_String_
  commentId: M:InscryptionAPI.Card.TribeManager.Add(System.String,System.String,System.String,System.Boolean,System.String)
  fullName: InscryptionAPI.Card.TribeManager.Add(System.String, System.String, System.String, System.Boolean, System.String)
  nameWithType: TribeManager.Add(String, String, String, Boolean, String)
- uid: InscryptionAPI.Card.TribeManager.Add(System.String,System.String,UnityEngine.Texture2D,System.Boolean,UnityEngine.Texture2D)
  name: Add(String, String, Texture2D, Boolean, Texture2D)
  href: api/InscryptionAPI.Card.TribeManager.html#InscryptionAPI_Card_TribeManager_Add_System_String_System_String_UnityEngine_Texture2D_System_Boolean_UnityEngine_Texture2D_
  commentId: M:InscryptionAPI.Card.TribeManager.Add(System.String,System.String,UnityEngine.Texture2D,System.Boolean,UnityEngine.Texture2D)
  fullName: InscryptionAPI.Card.TribeManager.Add(System.String, System.String, UnityEngine.Texture2D, System.Boolean, UnityEngine.Texture2D)
  nameWithType: TribeManager.Add(String, String, Texture2D, Boolean, Texture2D)
- uid: InscryptionAPI.Card.TribeManager.Add*
  name: Add
  href: api/InscryptionAPI.Card.TribeManager.html#InscryptionAPI_Card_TribeManager_Add_
  commentId: Overload:InscryptionAPI.Card.TribeManager.Add
  isSpec: "True"
  fullName: InscryptionAPI.Card.TribeManager.Add
  nameWithType: TribeManager.Add
- uid: InscryptionAPI.Card.TribeManager.GenerateTribeChoices(List{DiskCardGame.CardChoice}@,System.Int32)
  name: GenerateTribeChoices(ref List<CardChoice>, Int32)
  href: api/InscryptionAPI.Card.TribeManager.html#InscryptionAPI_Card_TribeManager_GenerateTribeChoices_List_DiskCardGame_CardChoice___System_Int32_
  commentId: M:InscryptionAPI.Card.TribeManager.GenerateTribeChoices(List{DiskCardGame.CardChoice}@,System.Int32)
  name.vb: GenerateTribeChoices(ByRef List(Of CardChoice), Int32)
  fullName: InscryptionAPI.Card.TribeManager.GenerateTribeChoices(ref List<DiskCardGame.CardChoice>, System.Int32)
  fullName.vb: InscryptionAPI.Card.TribeManager.GenerateTribeChoices(ByRef List(Of DiskCardGame.CardChoice), System.Int32)
  nameWithType: TribeManager.GenerateTribeChoices(ref List<CardChoice>, Int32)
  nameWithType.vb: TribeManager.GenerateTribeChoices(ByRef List(Of CardChoice), Int32)
- uid: InscryptionAPI.Card.TribeManager.GenerateTribeChoices*
  name: GenerateTribeChoices
  href: api/InscryptionAPI.Card.TribeManager.html#InscryptionAPI_Card_TribeManager_GenerateTribeChoices_
  commentId: Overload:InscryptionAPI.Card.TribeManager.GenerateTribeChoices
  isSpec: "True"
  fullName: InscryptionAPI.Card.TribeManager.GenerateTribeChoices
  nameWithType: TribeManager.GenerateTribeChoices
- uid: InscryptionAPI.Card.TribeManager.GetCardbackTexture(UnityEngine.Texture@,DiskCardGame.CardChoice)
  name: GetCardbackTexture(ref Texture, CardChoice)
  href: api/InscryptionAPI.Card.TribeManager.html#InscryptionAPI_Card_TribeManager_GetCardbackTexture_UnityEngine_Texture__DiskCardGame_CardChoice_
  commentId: M:InscryptionAPI.Card.TribeManager.GetCardbackTexture(UnityEngine.Texture@,DiskCardGame.CardChoice)
  name.vb: GetCardbackTexture(ByRef Texture, CardChoice)
  fullName: InscryptionAPI.Card.TribeManager.GetCardbackTexture(ref UnityEngine.Texture, DiskCardGame.CardChoice)
  fullName.vb: InscryptionAPI.Card.TribeManager.GetCardbackTexture(ByRef UnityEngine.Texture, DiskCardGame.CardChoice)
  nameWithType: TribeManager.GetCardbackTexture(ref Texture, CardChoice)
  nameWithType.vb: TribeManager.GetCardbackTexture(ByRef Texture, CardChoice)
- uid: InscryptionAPI.Card.TribeManager.GetCardbackTexture*
  name: GetCardbackTexture
  href: api/InscryptionAPI.Card.TribeManager.html#InscryptionAPI_Card_TribeManager_GetCardbackTexture_
  commentId: Overload:InscryptionAPI.Card.TribeManager.GetCardbackTexture
  isSpec: "True"
  fullName: InscryptionAPI.Card.TribeManager.GetCardbackTexture
  nameWithType: TribeManager.GetCardbackTexture
- uid: InscryptionAPI.Card.TribeManager.UpdateTribeIcon(DiskCardGame.CardDisplayer3D,DiskCardGame.CardInfo)
  name: UpdateTribeIcon(CardDisplayer3D, CardInfo)
  href: api/InscryptionAPI.Card.TribeManager.html#InscryptionAPI_Card_TribeManager_UpdateTribeIcon_DiskCardGame_CardDisplayer3D_DiskCardGame_CardInfo_
  commentId: M:InscryptionAPI.Card.TribeManager.UpdateTribeIcon(DiskCardGame.CardDisplayer3D,DiskCardGame.CardInfo)
  fullName: InscryptionAPI.Card.TribeManager.UpdateTribeIcon(DiskCardGame.CardDisplayer3D, DiskCardGame.CardInfo)
  nameWithType: TribeManager.UpdateTribeIcon(CardDisplayer3D, CardInfo)
- uid: InscryptionAPI.Card.TribeManager.UpdateTribeIcon*
  name: UpdateTribeIcon
  href: api/InscryptionAPI.Card.TribeManager.html#InscryptionAPI_Card_TribeManager_UpdateTribeIcon_
  commentId: Overload:InscryptionAPI.Card.TribeManager.UpdateTribeIcon
  isSpec: "True"
  fullName: InscryptionAPI.Card.TribeManager.UpdateTribeIcon
  nameWithType: TribeManager.UpdateTribeIcon
- uid: InscryptionAPI.Encounters
  name: InscryptionAPI.Encounters
  href: api/InscryptionAPI.Encounters.html
  commentId: N:InscryptionAPI.Encounters
  fullName: InscryptionAPI.Encounters
  nameWithType: InscryptionAPI.Encounters
- uid: InscryptionAPI.Encounters.AIManager
  name: AIManager
  href: api/InscryptionAPI.Encounters.AIManager.html
  commentId: T:InscryptionAPI.Encounters.AIManager
  fullName: InscryptionAPI.Encounters.AIManager
  nameWithType: AIManager
- uid: InscryptionAPI.Encounters.AIManager.Add(System.String,System.String,Type)
  name: Add(String, String, Type)
  href: api/InscryptionAPI.Encounters.AIManager.html#InscryptionAPI_Encounters_AIManager_Add_System_String_System_String_Type_
  commentId: M:InscryptionAPI.Encounters.AIManager.Add(System.String,System.String,Type)
  fullName: InscryptionAPI.Encounters.AIManager.Add(System.String, System.String, Type)
  nameWithType: AIManager.Add(String, String, Type)
- uid: InscryptionAPI.Encounters.AIManager.Add*
  name: Add
  href: api/InscryptionAPI.Encounters.AIManager.html#InscryptionAPI_Encounters_AIManager_Add_
  commentId: Overload:InscryptionAPI.Encounters.AIManager.Add
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.AIManager.Add
  nameWithType: AIManager.Add
- uid: InscryptionAPI.Encounters.AIManager.AllAIs
  name: AllAIs
  href: api/InscryptionAPI.Encounters.AIManager.html#InscryptionAPI_Encounters_AIManager_AllAIs
  commentId: P:InscryptionAPI.Encounters.AIManager.AllAIs
  fullName: InscryptionAPI.Encounters.AIManager.AllAIs
  nameWithType: AIManager.AllAIs
- uid: InscryptionAPI.Encounters.AIManager.AllAIs*
  name: AllAIs
  href: api/InscryptionAPI.Encounters.AIManager.html#InscryptionAPI_Encounters_AIManager_AllAIs_
  commentId: Overload:InscryptionAPI.Encounters.AIManager.AllAIs
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.AIManager.AllAIs
  nameWithType: AIManager.AllAIs
- uid: InscryptionAPI.Encounters.AIManager.BaseGameAIs
  name: BaseGameAIs
  href: api/InscryptionAPI.Encounters.AIManager.html#InscryptionAPI_Encounters_AIManager_BaseGameAIs
  commentId: F:InscryptionAPI.Encounters.AIManager.BaseGameAIs
  fullName: InscryptionAPI.Encounters.AIManager.BaseGameAIs
  nameWithType: AIManager.BaseGameAIs
- uid: InscryptionAPI.Encounters.AIManager.FullAI
  name: AIManager.FullAI
  href: api/InscryptionAPI.Encounters.AIManager.FullAI.html
  commentId: T:InscryptionAPI.Encounters.AIManager.FullAI
  fullName: InscryptionAPI.Encounters.AIManager.FullAI
  nameWithType: AIManager.FullAI
- uid: InscryptionAPI.Encounters.AIManager.FullAI.#ctor(System.String,Type)
  name: FullAI(String, Type)
  href: api/InscryptionAPI.Encounters.AIManager.FullAI.html#InscryptionAPI_Encounters_AIManager_FullAI__ctor_System_String_Type_
  commentId: M:InscryptionAPI.Encounters.AIManager.FullAI.#ctor(System.String,Type)
  fullName: InscryptionAPI.Encounters.AIManager.FullAI.FullAI(System.String, Type)
  nameWithType: AIManager.FullAI.FullAI(String, Type)
- uid: InscryptionAPI.Encounters.AIManager.FullAI.#ctor*
  name: FullAI
  href: api/InscryptionAPI.Encounters.AIManager.FullAI.html#InscryptionAPI_Encounters_AIManager_FullAI__ctor_
  commentId: Overload:InscryptionAPI.Encounters.AIManager.FullAI.#ctor
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.AIManager.FullAI.FullAI
  nameWithType: AIManager.FullAI.FullAI
- uid: InscryptionAPI.Encounters.AIManager.FullAI.AI
  name: AI
  href: api/InscryptionAPI.Encounters.AIManager.FullAI.html#InscryptionAPI_Encounters_AIManager_FullAI_AI
  commentId: F:InscryptionAPI.Encounters.AIManager.FullAI.AI
  fullName: InscryptionAPI.Encounters.AIManager.FullAI.AI
  nameWithType: AIManager.FullAI.AI
- uid: InscryptionAPI.Encounters.AIManager.FullAI.Id
  name: Id
  href: api/InscryptionAPI.Encounters.AIManager.FullAI.html#InscryptionAPI_Encounters_AIManager_FullAI_Id
  commentId: F:InscryptionAPI.Encounters.AIManager.FullAI.Id
  fullName: InscryptionAPI.Encounters.AIManager.FullAI.Id
  nameWithType: AIManager.FullAI.Id
- uid: InscryptionAPI.Encounters.CustomNodeData
  name: CustomNodeData
  href: api/InscryptionAPI.Encounters.CustomNodeData.html
  commentId: T:InscryptionAPI.Encounters.CustomNodeData
  fullName: InscryptionAPI.Encounters.CustomNodeData
  nameWithType: CustomNodeData
- uid: InscryptionAPI.Encounters.CustomNodeData.#ctor
  name: CustomNodeData()
  href: api/InscryptionAPI.Encounters.CustomNodeData.html#InscryptionAPI_Encounters_CustomNodeData__ctor
  commentId: M:InscryptionAPI.Encounters.CustomNodeData.#ctor
  fullName: InscryptionAPI.Encounters.CustomNodeData.CustomNodeData()
  nameWithType: CustomNodeData.CustomNodeData()
- uid: InscryptionAPI.Encounters.CustomNodeData.#ctor*
  name: CustomNodeData
  href: api/InscryptionAPI.Encounters.CustomNodeData.html#InscryptionAPI_Encounters_CustomNodeData__ctor_
  commentId: Overload:InscryptionAPI.Encounters.CustomNodeData.#ctor
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.CustomNodeData.CustomNodeData
  nameWithType: CustomNodeData.CustomNodeData
- uid: InscryptionAPI.Encounters.CustomNodeData.AddForceGenerationCondition(Func{System.Boolean})
  name: AddForceGenerationCondition(Func<Boolean>)
  href: api/InscryptionAPI.Encounters.CustomNodeData.html#InscryptionAPI_Encounters_CustomNodeData_AddForceGenerationCondition_Func_System_Boolean__
  commentId: M:InscryptionAPI.Encounters.CustomNodeData.AddForceGenerationCondition(Func{System.Boolean})
  name.vb: AddForceGenerationCondition(Func(Of Boolean))
  fullName: InscryptionAPI.Encounters.CustomNodeData.AddForceGenerationCondition(Func<System.Boolean>)
  fullName.vb: InscryptionAPI.Encounters.CustomNodeData.AddForceGenerationCondition(Func(Of System.Boolean))
  nameWithType: CustomNodeData.AddForceGenerationCondition(Func<Boolean>)
  nameWithType.vb: CustomNodeData.AddForceGenerationCondition(Func(Of Boolean))
- uid: InscryptionAPI.Encounters.CustomNodeData.AddForceGenerationCondition(InscryptionAPI.Encounters.CustomNodeData.NodeGenerationCondition)
  name: AddForceGenerationCondition(CustomNodeData.NodeGenerationCondition)
  href: api/InscryptionAPI.Encounters.CustomNodeData.html#InscryptionAPI_Encounters_CustomNodeData_AddForceGenerationCondition_InscryptionAPI_Encounters_CustomNodeData_NodeGenerationCondition_
  commentId: M:InscryptionAPI.Encounters.CustomNodeData.AddForceGenerationCondition(InscryptionAPI.Encounters.CustomNodeData.NodeGenerationCondition)
  fullName: InscryptionAPI.Encounters.CustomNodeData.AddForceGenerationCondition(InscryptionAPI.Encounters.CustomNodeData.NodeGenerationCondition)
  nameWithType: CustomNodeData.AddForceGenerationCondition(CustomNodeData.NodeGenerationCondition)
- uid: InscryptionAPI.Encounters.CustomNodeData.AddForceGenerationCondition*
  name: AddForceGenerationCondition
  href: api/InscryptionAPI.Encounters.CustomNodeData.html#InscryptionAPI_Encounters_CustomNodeData_AddForceGenerationCondition_
  commentId: Overload:InscryptionAPI.Encounters.CustomNodeData.AddForceGenerationCondition
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.CustomNodeData.AddForceGenerationCondition
  nameWithType: CustomNodeData.AddForceGenerationCondition
- uid: InscryptionAPI.Encounters.CustomNodeData.AddGenerationPrerequisite(Func{System.Boolean})
  name: AddGenerationPrerequisite(Func<Boolean>)
  href: api/InscryptionAPI.Encounters.CustomNodeData.html#InscryptionAPI_Encounters_CustomNodeData_AddGenerationPrerequisite_Func_System_Boolean__
  commentId: M:InscryptionAPI.Encounters.CustomNodeData.AddGenerationPrerequisite(Func{System.Boolean})
  name.vb: AddGenerationPrerequisite(Func(Of Boolean))
  fullName: InscryptionAPI.Encounters.CustomNodeData.AddGenerationPrerequisite(Func<System.Boolean>)
  fullName.vb: InscryptionAPI.Encounters.CustomNodeData.AddGenerationPrerequisite(Func(Of System.Boolean))
  nameWithType: CustomNodeData.AddGenerationPrerequisite(Func<Boolean>)
  nameWithType.vb: CustomNodeData.AddGenerationPrerequisite(Func(Of Boolean))
- uid: InscryptionAPI.Encounters.CustomNodeData.AddGenerationPrerequisite(InscryptionAPI.Encounters.CustomNodeData.NodeGenerationCondition)
  name: AddGenerationPrerequisite(CustomNodeData.NodeGenerationCondition)
  href: api/InscryptionAPI.Encounters.CustomNodeData.html#InscryptionAPI_Encounters_CustomNodeData_AddGenerationPrerequisite_InscryptionAPI_Encounters_CustomNodeData_NodeGenerationCondition_
  commentId: M:InscryptionAPI.Encounters.CustomNodeData.AddGenerationPrerequisite(InscryptionAPI.Encounters.CustomNodeData.NodeGenerationCondition)
  fullName: InscryptionAPI.Encounters.CustomNodeData.AddGenerationPrerequisite(InscryptionAPI.Encounters.CustomNodeData.NodeGenerationCondition)
  nameWithType: CustomNodeData.AddGenerationPrerequisite(CustomNodeData.NodeGenerationCondition)
- uid: InscryptionAPI.Encounters.CustomNodeData.AddGenerationPrerequisite*
  name: AddGenerationPrerequisite
  href: api/InscryptionAPI.Encounters.CustomNodeData.html#InscryptionAPI_Encounters_CustomNodeData_AddGenerationPrerequisite_
  commentId: Overload:InscryptionAPI.Encounters.CustomNodeData.AddGenerationPrerequisite
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.CustomNodeData.AddGenerationPrerequisite
  nameWithType: CustomNodeData.AddGenerationPrerequisite
- uid: InscryptionAPI.Encounters.CustomNodeData.ForceGenerationConditions
  name: ForceGenerationConditions
  href: api/InscryptionAPI.Encounters.CustomNodeData.html#InscryptionAPI_Encounters_CustomNodeData_ForceGenerationConditions
  commentId: P:InscryptionAPI.Encounters.CustomNodeData.ForceGenerationConditions
  fullName: InscryptionAPI.Encounters.CustomNodeData.ForceGenerationConditions
  nameWithType: CustomNodeData.ForceGenerationConditions
- uid: InscryptionAPI.Encounters.CustomNodeData.ForceGenerationConditions*
  name: ForceGenerationConditions
  href: api/InscryptionAPI.Encounters.CustomNodeData.html#InscryptionAPI_Encounters_CustomNodeData_ForceGenerationConditions_
  commentId: Overload:InscryptionAPI.Encounters.CustomNodeData.ForceGenerationConditions
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.CustomNodeData.ForceGenerationConditions
  nameWithType: CustomNodeData.ForceGenerationConditions
- uid: InscryptionAPI.Encounters.CustomNodeData.GenerationPrerequisiteConditions
  name: GenerationPrerequisiteConditions
  href: api/InscryptionAPI.Encounters.CustomNodeData.html#InscryptionAPI_Encounters_CustomNodeData_GenerationPrerequisiteConditions
  commentId: P:InscryptionAPI.Encounters.CustomNodeData.GenerationPrerequisiteConditions
  fullName: InscryptionAPI.Encounters.CustomNodeData.GenerationPrerequisiteConditions
  nameWithType: CustomNodeData.GenerationPrerequisiteConditions
- uid: InscryptionAPI.Encounters.CustomNodeData.GenerationPrerequisiteConditions*
  name: GenerationPrerequisiteConditions
  href: api/InscryptionAPI.Encounters.CustomNodeData.html#InscryptionAPI_Encounters_CustomNodeData_GenerationPrerequisiteConditions_
  commentId: Overload:InscryptionAPI.Encounters.CustomNodeData.GenerationPrerequisiteConditions
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.CustomNodeData.GenerationPrerequisiteConditions
  nameWithType: CustomNodeData.GenerationPrerequisiteConditions
- uid: InscryptionAPI.Encounters.CustomNodeData.Initialize
  name: Initialize()
  href: api/InscryptionAPI.Encounters.CustomNodeData.html#InscryptionAPI_Encounters_CustomNodeData_Initialize
  commentId: M:InscryptionAPI.Encounters.CustomNodeData.Initialize
  fullName: InscryptionAPI.Encounters.CustomNodeData.Initialize()
  nameWithType: CustomNodeData.Initialize()
- uid: InscryptionAPI.Encounters.CustomNodeData.Initialize*
  name: Initialize
  href: api/InscryptionAPI.Encounters.CustomNodeData.html#InscryptionAPI_Encounters_CustomNodeData_Initialize_
  commentId: Overload:InscryptionAPI.Encounters.CustomNodeData.Initialize
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.CustomNodeData.Initialize
  nameWithType: CustomNodeData.Initialize
- uid: InscryptionAPI.Encounters.CustomNodeData.NodeGenerationCondition
  name: CustomNodeData.NodeGenerationCondition
  href: api/InscryptionAPI.Encounters.CustomNodeData.NodeGenerationCondition.html
  commentId: T:InscryptionAPI.Encounters.CustomNodeData.NodeGenerationCondition
  fullName: InscryptionAPI.Encounters.CustomNodeData.NodeGenerationCondition
  nameWithType: CustomNodeData.NodeGenerationCondition
- uid: InscryptionAPI.Encounters.CustomNodeData.PrefabPath
  name: PrefabPath
  href: api/InscryptionAPI.Encounters.CustomNodeData.html#InscryptionAPI_Encounters_CustomNodeData_PrefabPath
  commentId: P:InscryptionAPI.Encounters.CustomNodeData.PrefabPath
  fullName: InscryptionAPI.Encounters.CustomNodeData.PrefabPath
  nameWithType: CustomNodeData.PrefabPath
- uid: InscryptionAPI.Encounters.CustomNodeData.PrefabPath*
  name: PrefabPath
  href: api/InscryptionAPI.Encounters.CustomNodeData.html#InscryptionAPI_Encounters_CustomNodeData_PrefabPath_
  commentId: Overload:InscryptionAPI.Encounters.CustomNodeData.PrefabPath
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.CustomNodeData.PrefabPath
  nameWithType: CustomNodeData.PrefabPath
- uid: InscryptionAPI.Encounters.EncounterBuilder
  name: EncounterBuilder
  href: api/InscryptionAPI.Encounters.EncounterBuilder.html
  commentId: T:InscryptionAPI.Encounters.EncounterBuilder
  fullName: InscryptionAPI.Encounters.EncounterBuilder
  nameWithType: EncounterBuilder
- uid: InscryptionAPI.Encounters.EncounterBuilder.Build(InscryptionAPI.Encounters.EncounterBuilderBlueprintData)
  name: Build(EncounterBuilderBlueprintData)
  href: api/InscryptionAPI.Encounters.EncounterBuilder.html#InscryptionAPI_Encounters_EncounterBuilder_Build_InscryptionAPI_Encounters_EncounterBuilderBlueprintData_
  commentId: M:InscryptionAPI.Encounters.EncounterBuilder.Build(InscryptionAPI.Encounters.EncounterBuilderBlueprintData)
  fullName: InscryptionAPI.Encounters.EncounterBuilder.Build(InscryptionAPI.Encounters.EncounterBuilderBlueprintData)
  nameWithType: EncounterBuilder.Build(EncounterBuilderBlueprintData)
- uid: InscryptionAPI.Encounters.EncounterBuilder.Build*
  name: Build
  href: api/InscryptionAPI.Encounters.EncounterBuilder.html#InscryptionAPI_Encounters_EncounterBuilder_Build_
  commentId: Overload:InscryptionAPI.Encounters.EncounterBuilder.Build
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.EncounterBuilder.Build
  nameWithType: EncounterBuilder.Build
- uid: InscryptionAPI.Encounters.EncounterBuilderBlueprintData
  name: EncounterBuilderBlueprintData
  href: api/InscryptionAPI.Encounters.EncounterBuilderBlueprintData.html
  commentId: T:InscryptionAPI.Encounters.EncounterBuilderBlueprintData
  fullName: InscryptionAPI.Encounters.EncounterBuilderBlueprintData
  nameWithType: EncounterBuilderBlueprintData
- uid: InscryptionAPI.Encounters.EncounterBuilderBlueprintData.SetBasic(System.String,DiskCardGame.RegionData)
  name: SetBasic(String, RegionData)
  href: api/InscryptionAPI.Encounters.EncounterBuilderBlueprintData.html#InscryptionAPI_Encounters_EncounterBuilderBlueprintData_SetBasic_System_String_DiskCardGame_RegionData_
  commentId: M:InscryptionAPI.Encounters.EncounterBuilderBlueprintData.SetBasic(System.String,DiskCardGame.RegionData)
  fullName: InscryptionAPI.Encounters.EncounterBuilderBlueprintData.SetBasic(System.String, DiskCardGame.RegionData)
  nameWithType: EncounterBuilderBlueprintData.SetBasic(String, RegionData)
- uid: InscryptionAPI.Encounters.EncounterBuilderBlueprintData.SetBasic*
  name: SetBasic
  href: api/InscryptionAPI.Encounters.EncounterBuilderBlueprintData.html#InscryptionAPI_Encounters_EncounterBuilderBlueprintData_SetBasic_
  commentId: Overload:InscryptionAPI.Encounters.EncounterBuilderBlueprintData.SetBasic
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.EncounterBuilderBlueprintData.SetBasic
  nameWithType: EncounterBuilderBlueprintData.SetBasic
- uid: InscryptionAPI.Encounters.EncounterExtensions
  name: EncounterExtensions
  href: api/InscryptionAPI.Encounters.EncounterExtensions.html
  commentId: T:InscryptionAPI.Encounters.EncounterExtensions
  fullName: InscryptionAPI.Encounters.EncounterExtensions
  nameWithType: EncounterExtensions
- uid: InscryptionAPI.Encounters.EncounterExtensions.AddDominantTribes*
  name: AddDominantTribes
  href: api/InscryptionAPI.Encounters.EncounterExtensions.html#InscryptionAPI_Encounters_EncounterExtensions_AddDominantTribes_
  commentId: Overload:InscryptionAPI.Encounters.EncounterExtensions.AddDominantTribes
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.EncounterExtensions.AddDominantTribes
  nameWithType: EncounterExtensions.AddDominantTribes
- uid: InscryptionAPI.Encounters.EncounterExtensions.AddDominantTribes``1(``0,DiskCardGame.Tribe[])
  name: AddDominantTribes<T>(T, Tribe[])
  href: api/InscryptionAPI.Encounters.EncounterExtensions.html#InscryptionAPI_Encounters_EncounterExtensions_AddDominantTribes__1___0_DiskCardGame_Tribe___
  commentId: M:InscryptionAPI.Encounters.EncounterExtensions.AddDominantTribes``1(``0,DiskCardGame.Tribe[])
  name.vb: AddDominantTribes(Of T)(T, Tribe())
  fullName: InscryptionAPI.Encounters.EncounterExtensions.AddDominantTribes<T>(T, DiskCardGame.Tribe[])
  fullName.vb: InscryptionAPI.Encounters.EncounterExtensions.AddDominantTribes(Of T)(T, DiskCardGame.Tribe())
  nameWithType: EncounterExtensions.AddDominantTribes<T>(T, Tribe[])
  nameWithType.vb: EncounterExtensions.AddDominantTribes(Of T)(T, Tribe())
- uid: InscryptionAPI.Encounters.EncounterExtensions.AddRandomReplacementCards*
  name: AddRandomReplacementCards
  href: api/InscryptionAPI.Encounters.EncounterExtensions.html#InscryptionAPI_Encounters_EncounterExtensions_AddRandomReplacementCards_
  commentId: Overload:InscryptionAPI.Encounters.EncounterExtensions.AddRandomReplacementCards
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.EncounterExtensions.AddRandomReplacementCards
  nameWithType: EncounterExtensions.AddRandomReplacementCards
- uid: InscryptionAPI.Encounters.EncounterExtensions.AddRandomReplacementCards``1(``0,System.String[])
  name: AddRandomReplacementCards<T>(T, String[])
  href: api/InscryptionAPI.Encounters.EncounterExtensions.html#InscryptionAPI_Encounters_EncounterExtensions_AddRandomReplacementCards__1___0_System_String___
  commentId: M:InscryptionAPI.Encounters.EncounterExtensions.AddRandomReplacementCards``1(``0,System.String[])
  name.vb: AddRandomReplacementCards(Of T)(T, String())
  fullName: InscryptionAPI.Encounters.EncounterExtensions.AddRandomReplacementCards<T>(T, System.String[])
  fullName.vb: InscryptionAPI.Encounters.EncounterExtensions.AddRandomReplacementCards(Of T)(T, System.String())
  nameWithType: EncounterExtensions.AddRandomReplacementCards<T>(T, String[])
  nameWithType.vb: EncounterExtensions.AddRandomReplacementCards(Of T)(T, String())
- uid: InscryptionAPI.Encounters.EncounterExtensions.AddTurn*
  name: AddTurn
  href: api/InscryptionAPI.Encounters.EncounterExtensions.html#InscryptionAPI_Encounters_EncounterExtensions_AddTurn_
  commentId: Overload:InscryptionAPI.Encounters.EncounterExtensions.AddTurn
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.EncounterExtensions.AddTurn
  nameWithType: EncounterExtensions.AddTurn
- uid: InscryptionAPI.Encounters.EncounterExtensions.AddTurn``1(``0,DiskCardGame.EncounterBlueprintData.CardBlueprint[])
  name: AddTurn<T>(T, EncounterBlueprintData.CardBlueprint[])
  href: api/InscryptionAPI.Encounters.EncounterExtensions.html#InscryptionAPI_Encounters_EncounterExtensions_AddTurn__1___0_DiskCardGame_EncounterBlueprintData_CardBlueprint___
  commentId: M:InscryptionAPI.Encounters.EncounterExtensions.AddTurn``1(``0,DiskCardGame.EncounterBlueprintData.CardBlueprint[])
  name.vb: AddTurn(Of T)(T, EncounterBlueprintData.CardBlueprint())
  fullName: InscryptionAPI.Encounters.EncounterExtensions.AddTurn<T>(T, DiskCardGame.EncounterBlueprintData.CardBlueprint[])
  fullName.vb: InscryptionAPI.Encounters.EncounterExtensions.AddTurn(Of T)(T, DiskCardGame.EncounterBlueprintData.CardBlueprint())
  nameWithType: EncounterExtensions.AddTurn<T>(T, EncounterBlueprintData.CardBlueprint[])
  nameWithType.vb: EncounterExtensions.AddTurn(Of T)(T, EncounterBlueprintData.CardBlueprint())
- uid: InscryptionAPI.Encounters.EncounterExtensions.AddTurnMods*
  name: AddTurnMods
  href: api/InscryptionAPI.Encounters.EncounterExtensions.html#InscryptionAPI_Encounters_EncounterExtensions_AddTurnMods_
  commentId: Overload:InscryptionAPI.Encounters.EncounterExtensions.AddTurnMods
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.EncounterExtensions.AddTurnMods
  nameWithType: EncounterExtensions.AddTurnMods
- uid: InscryptionAPI.Encounters.EncounterExtensions.AddTurnMods``1(``0,DiskCardGame.EncounterBlueprintData.TurnModBlueprint[])
  name: AddTurnMods<T>(T, EncounterBlueprintData.TurnModBlueprint[])
  href: api/InscryptionAPI.Encounters.EncounterExtensions.html#InscryptionAPI_Encounters_EncounterExtensions_AddTurnMods__1___0_DiskCardGame_EncounterBlueprintData_TurnModBlueprint___
  commentId: M:InscryptionAPI.Encounters.EncounterExtensions.AddTurnMods``1(``0,DiskCardGame.EncounterBlueprintData.TurnModBlueprint[])
  name.vb: AddTurnMods(Of T)(T, EncounterBlueprintData.TurnModBlueprint())
  fullName: InscryptionAPI.Encounters.EncounterExtensions.AddTurnMods<T>(T, DiskCardGame.EncounterBlueprintData.TurnModBlueprint[])
  fullName.vb: InscryptionAPI.Encounters.EncounterExtensions.AddTurnMods(Of T)(T, DiskCardGame.EncounterBlueprintData.TurnModBlueprint())
  nameWithType: EncounterExtensions.AddTurnMods<T>(T, EncounterBlueprintData.TurnModBlueprint[])
  nameWithType.vb: EncounterExtensions.AddTurnMods(Of T)(T, EncounterBlueprintData.TurnModBlueprint())
- uid: InscryptionAPI.Encounters.EncounterExtensions.CreateTurn*
  name: CreateTurn
  href: api/InscryptionAPI.Encounters.EncounterExtensions.html#InscryptionAPI_Encounters_EncounterExtensions_CreateTurn_
  commentId: Overload:InscryptionAPI.Encounters.EncounterExtensions.CreateTurn
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.EncounterExtensions.CreateTurn
  nameWithType: EncounterExtensions.CreateTurn
- uid: InscryptionAPI.Encounters.EncounterExtensions.CreateTurn``1(``0)
  name: CreateTurn<T>(T)
  href: api/InscryptionAPI.Encounters.EncounterExtensions.html#InscryptionAPI_Encounters_EncounterExtensions_CreateTurn__1___0_
  commentId: M:InscryptionAPI.Encounters.EncounterExtensions.CreateTurn``1(``0)
  name.vb: CreateTurn(Of T)(T)
  fullName: InscryptionAPI.Encounters.EncounterExtensions.CreateTurn<T>(T)
  fullName.vb: InscryptionAPI.Encounters.EncounterExtensions.CreateTurn(Of T)(T)
  nameWithType: EncounterExtensions.CreateTurn<T>(T)
  nameWithType.vb: EncounterExtensions.CreateTurn(Of T)(T)
- uid: InscryptionAPI.Encounters.EncounterExtensions.OpponentById(IEnumerable{InscryptionAPI.Encounters.OpponentManager.FullOpponent},DiskCardGame.Opponent.Type)
  name: OpponentById(IEnumerable<OpponentManager.FullOpponent>, Opponent.Type)
  href: api/InscryptionAPI.Encounters.EncounterExtensions.html#InscryptionAPI_Encounters_EncounterExtensions_OpponentById_IEnumerable_InscryptionAPI_Encounters_OpponentManager_FullOpponent__DiskCardGame_Opponent_Type_
  commentId: M:InscryptionAPI.Encounters.EncounterExtensions.OpponentById(IEnumerable{InscryptionAPI.Encounters.OpponentManager.FullOpponent},DiskCardGame.Opponent.Type)
  name.vb: OpponentById(IEnumerable(Of OpponentManager.FullOpponent), Opponent.Type)
  fullName: InscryptionAPI.Encounters.EncounterExtensions.OpponentById(IEnumerable<InscryptionAPI.Encounters.OpponentManager.FullOpponent>, DiskCardGame.Opponent.Type)
  fullName.vb: InscryptionAPI.Encounters.EncounterExtensions.OpponentById(IEnumerable(Of InscryptionAPI.Encounters.OpponentManager.FullOpponent), DiskCardGame.Opponent.Type)
  nameWithType: EncounterExtensions.OpponentById(IEnumerable<OpponentManager.FullOpponent>, Opponent.Type)
  nameWithType.vb: EncounterExtensions.OpponentById(IEnumerable(Of OpponentManager.FullOpponent), Opponent.Type)
- uid: InscryptionAPI.Encounters.EncounterExtensions.OpponentById*
  name: OpponentById
  href: api/InscryptionAPI.Encounters.EncounterExtensions.html#InscryptionAPI_Encounters_EncounterExtensions_OpponentById_
  commentId: Overload:InscryptionAPI.Encounters.EncounterExtensions.OpponentById
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.EncounterExtensions.OpponentById
  nameWithType: EncounterExtensions.OpponentById
- uid: InscryptionAPI.Encounters.EncounterExtensions.SetDifficulty*
  name: SetDifficulty
  href: api/InscryptionAPI.Encounters.EncounterExtensions.html#InscryptionAPI_Encounters_EncounterExtensions_SetDifficulty_
  commentId: Overload:InscryptionAPI.Encounters.EncounterExtensions.SetDifficulty
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.EncounterExtensions.SetDifficulty
  nameWithType: EncounterExtensions.SetDifficulty
- uid: InscryptionAPI.Encounters.EncounterExtensions.SetDifficulty``1(``0,System.Int32,System.Int32)
  name: SetDifficulty<T>(T, Int32, Int32)
  href: api/InscryptionAPI.Encounters.EncounterExtensions.html#InscryptionAPI_Encounters_EncounterExtensions_SetDifficulty__1___0_System_Int32_System_Int32_
  commentId: M:InscryptionAPI.Encounters.EncounterExtensions.SetDifficulty``1(``0,System.Int32,System.Int32)
  name.vb: SetDifficulty(Of T)(T, Int32, Int32)
  fullName: InscryptionAPI.Encounters.EncounterExtensions.SetDifficulty<T>(T, System.Int32, System.Int32)
  fullName.vb: InscryptionAPI.Encounters.EncounterExtensions.SetDifficulty(Of T)(T, System.Int32, System.Int32)
  nameWithType: EncounterExtensions.SetDifficulty<T>(T, Int32, Int32)
  nameWithType.vb: EncounterExtensions.SetDifficulty(Of T)(T, Int32, Int32)
- uid: InscryptionAPI.Encounters.EncounterExtensions.SetNewSequencer(InscryptionAPI.Encounters.OpponentManager.FullOpponent,System.String,System.String,Type)
  name: SetNewSequencer(OpponentManager.FullOpponent, String, String, Type)
  href: api/InscryptionAPI.Encounters.EncounterExtensions.html#InscryptionAPI_Encounters_EncounterExtensions_SetNewSequencer_InscryptionAPI_Encounters_OpponentManager_FullOpponent_System_String_System_String_Type_
  commentId: M:InscryptionAPI.Encounters.EncounterExtensions.SetNewSequencer(InscryptionAPI.Encounters.OpponentManager.FullOpponent,System.String,System.String,Type)
  fullName: InscryptionAPI.Encounters.EncounterExtensions.SetNewSequencer(InscryptionAPI.Encounters.OpponentManager.FullOpponent, System.String, System.String, Type)
  nameWithType: EncounterExtensions.SetNewSequencer(OpponentManager.FullOpponent, String, String, Type)
- uid: InscryptionAPI.Encounters.EncounterExtensions.SetNewSequencer*
  name: SetNewSequencer
  href: api/InscryptionAPI.Encounters.EncounterExtensions.html#InscryptionAPI_Encounters_EncounterExtensions_SetNewSequencer_
  commentId: Overload:InscryptionAPI.Encounters.EncounterExtensions.SetNewSequencer
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.EncounterExtensions.SetNewSequencer
  nameWithType: EncounterExtensions.SetNewSequencer
- uid: InscryptionAPI.Encounters.EncounterExtensions.SetOpponent(InscryptionAPI.Encounters.OpponentManager.FullOpponent,Type)
  name: SetOpponent(OpponentManager.FullOpponent, Type)
  href: api/InscryptionAPI.Encounters.EncounterExtensions.html#InscryptionAPI_Encounters_EncounterExtensions_SetOpponent_InscryptionAPI_Encounters_OpponentManager_FullOpponent_Type_
  commentId: M:InscryptionAPI.Encounters.EncounterExtensions.SetOpponent(InscryptionAPI.Encounters.OpponentManager.FullOpponent,Type)
  fullName: InscryptionAPI.Encounters.EncounterExtensions.SetOpponent(InscryptionAPI.Encounters.OpponentManager.FullOpponent, Type)
  nameWithType: EncounterExtensions.SetOpponent(OpponentManager.FullOpponent, Type)
- uid: InscryptionAPI.Encounters.EncounterExtensions.SetOpponent*
  name: SetOpponent
  href: api/InscryptionAPI.Encounters.EncounterExtensions.html#InscryptionAPI_Encounters_EncounterExtensions_SetOpponent_
  commentId: Overload:InscryptionAPI.Encounters.EncounterExtensions.SetOpponent
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.EncounterExtensions.SetOpponent
  nameWithType: EncounterExtensions.SetOpponent
- uid: InscryptionAPI.Encounters.EncounterExtensions.SetRedundantAbilities*
  name: SetRedundantAbilities
  href: api/InscryptionAPI.Encounters.EncounterExtensions.html#InscryptionAPI_Encounters_EncounterExtensions_SetRedundantAbilities_
  commentId: Overload:InscryptionAPI.Encounters.EncounterExtensions.SetRedundantAbilities
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.EncounterExtensions.SetRedundantAbilities
  nameWithType: EncounterExtensions.SetRedundantAbilities
- uid: InscryptionAPI.Encounters.EncounterExtensions.SetRedundantAbilities``1(``0,DiskCardGame.Ability[])
  name: SetRedundantAbilities<T>(T, Ability[])
  href: api/InscryptionAPI.Encounters.EncounterExtensions.html#InscryptionAPI_Encounters_EncounterExtensions_SetRedundantAbilities__1___0_DiskCardGame_Ability___
  commentId: M:InscryptionAPI.Encounters.EncounterExtensions.SetRedundantAbilities``1(``0,DiskCardGame.Ability[])
  name.vb: SetRedundantAbilities(Of T)(T, Ability())
  fullName: InscryptionAPI.Encounters.EncounterExtensions.SetRedundantAbilities<T>(T, DiskCardGame.Ability[])
  fullName.vb: InscryptionAPI.Encounters.EncounterExtensions.SetRedundantAbilities(Of T)(T, DiskCardGame.Ability())
  nameWithType: EncounterExtensions.SetRedundantAbilities<T>(T, Ability[])
  nameWithType.vb: EncounterExtensions.SetRedundantAbilities(Of T)(T, Ability())
- uid: InscryptionAPI.Encounters.EncounterExtensions.SetRegionSpecific*
  name: SetRegionSpecific
  href: api/InscryptionAPI.Encounters.EncounterExtensions.html#InscryptionAPI_Encounters_EncounterExtensions_SetRegionSpecific_
  commentId: Overload:InscryptionAPI.Encounters.EncounterExtensions.SetRegionSpecific
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.EncounterExtensions.SetRegionSpecific
  nameWithType: EncounterExtensions.SetRegionSpecific
- uid: InscryptionAPI.Encounters.EncounterExtensions.SetRegionSpecific``1(``0,System.Boolean)
  name: SetRegionSpecific<T>(T, Boolean)
  href: api/InscryptionAPI.Encounters.EncounterExtensions.html#InscryptionAPI_Encounters_EncounterExtensions_SetRegionSpecific__1___0_System_Boolean_
  commentId: M:InscryptionAPI.Encounters.EncounterExtensions.SetRegionSpecific``1(``0,System.Boolean)
  name.vb: SetRegionSpecific(Of T)(T, Boolean)
  fullName: InscryptionAPI.Encounters.EncounterExtensions.SetRegionSpecific<T>(T, System.Boolean)
  fullName.vb: InscryptionAPI.Encounters.EncounterExtensions.SetRegionSpecific(Of T)(T, System.Boolean)
  nameWithType: EncounterExtensions.SetRegionSpecific<T>(T, Boolean)
  nameWithType.vb: EncounterExtensions.SetRegionSpecific(Of T)(T, Boolean)
- uid: InscryptionAPI.Encounters.EncounterExtensions.SetSequencer(InscryptionAPI.Encounters.OpponentManager.FullOpponent,System.String)
  name: SetSequencer(OpponentManager.FullOpponent, String)
  href: api/InscryptionAPI.Encounters.EncounterExtensions.html#InscryptionAPI_Encounters_EncounterExtensions_SetSequencer_InscryptionAPI_Encounters_OpponentManager_FullOpponent_System_String_
  commentId: M:InscryptionAPI.Encounters.EncounterExtensions.SetSequencer(InscryptionAPI.Encounters.OpponentManager.FullOpponent,System.String)
  fullName: InscryptionAPI.Encounters.EncounterExtensions.SetSequencer(InscryptionAPI.Encounters.OpponentManager.FullOpponent, System.String)
  nameWithType: EncounterExtensions.SetSequencer(OpponentManager.FullOpponent, String)
- uid: InscryptionAPI.Encounters.EncounterExtensions.SetSequencer*
  name: SetSequencer
  href: api/InscryptionAPI.Encounters.EncounterExtensions.html#InscryptionAPI_Encounters_EncounterExtensions_SetSequencer_
  commentId: Overload:InscryptionAPI.Encounters.EncounterExtensions.SetSequencer
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.EncounterExtensions.SetSequencer
  nameWithType: EncounterExtensions.SetSequencer
- uid: InscryptionAPI.Encounters.EncounterExtensions.SetUnlockedCardPrerequisites*
  name: SetUnlockedCardPrerequisites
  href: api/InscryptionAPI.Encounters.EncounterExtensions.html#InscryptionAPI_Encounters_EncounterExtensions_SetUnlockedCardPrerequisites_
  commentId: Overload:InscryptionAPI.Encounters.EncounterExtensions.SetUnlockedCardPrerequisites
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.EncounterExtensions.SetUnlockedCardPrerequisites
  nameWithType: EncounterExtensions.SetUnlockedCardPrerequisites
- uid: InscryptionAPI.Encounters.EncounterExtensions.SetUnlockedCardPrerequisites``1(``0,System.String[])
  name: SetUnlockedCardPrerequisites<T>(T, String[])
  href: api/InscryptionAPI.Encounters.EncounterExtensions.html#InscryptionAPI_Encounters_EncounterExtensions_SetUnlockedCardPrerequisites__1___0_System_String___
  commentId: M:InscryptionAPI.Encounters.EncounterExtensions.SetUnlockedCardPrerequisites``1(``0,System.String[])
  name.vb: SetUnlockedCardPrerequisites(Of T)(T, String())
  fullName: InscryptionAPI.Encounters.EncounterExtensions.SetUnlockedCardPrerequisites<T>(T, System.String[])
  fullName.vb: InscryptionAPI.Encounters.EncounterExtensions.SetUnlockedCardPrerequisites(Of T)(T, System.String())
  nameWithType: EncounterExtensions.SetUnlockedCardPrerequisites<T>(T, String[])
  nameWithType.vb: EncounterExtensions.SetUnlockedCardPrerequisites(Of T)(T, String())
- uid: InscryptionAPI.Encounters.EncounterManager
  name: EncounterManager
  href: api/InscryptionAPI.Encounters.EncounterManager.html
  commentId: T:InscryptionAPI.Encounters.EncounterManager
  fullName: InscryptionAPI.Encounters.EncounterManager
  nameWithType: EncounterManager
- uid: InscryptionAPI.Encounters.EncounterManager.Add(DiskCardGame.EncounterBlueprintData)
  name: Add(EncounterBlueprintData)
  href: api/InscryptionAPI.Encounters.EncounterManager.html#InscryptionAPI_Encounters_EncounterManager_Add_DiskCardGame_EncounterBlueprintData_
  commentId: M:InscryptionAPI.Encounters.EncounterManager.Add(DiskCardGame.EncounterBlueprintData)
  fullName: InscryptionAPI.Encounters.EncounterManager.Add(DiskCardGame.EncounterBlueprintData)
  nameWithType: EncounterManager.Add(EncounterBlueprintData)
- uid: InscryptionAPI.Encounters.EncounterManager.Add*
  name: Add
  href: api/InscryptionAPI.Encounters.EncounterManager.html#InscryptionAPI_Encounters_EncounterManager_Add_
  commentId: Overload:InscryptionAPI.Encounters.EncounterManager.Add
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.EncounterManager.Add
  nameWithType: EncounterManager.Add
- uid: InscryptionAPI.Encounters.EncounterManager.AllEncountersCopy
  name: AllEncountersCopy
  href: api/InscryptionAPI.Encounters.EncounterManager.html#InscryptionAPI_Encounters_EncounterManager_AllEncountersCopy
  commentId: P:InscryptionAPI.Encounters.EncounterManager.AllEncountersCopy
  fullName: InscryptionAPI.Encounters.EncounterManager.AllEncountersCopy
  nameWithType: EncounterManager.AllEncountersCopy
- uid: InscryptionAPI.Encounters.EncounterManager.AllEncountersCopy*
  name: AllEncountersCopy
  href: api/InscryptionAPI.Encounters.EncounterManager.html#InscryptionAPI_Encounters_EncounterManager_AllEncountersCopy_
  commentId: Overload:InscryptionAPI.Encounters.EncounterManager.AllEncountersCopy
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.EncounterManager.AllEncountersCopy
  nameWithType: EncounterManager.AllEncountersCopy
- uid: InscryptionAPI.Encounters.EncounterManager.BaseGameEncounters
  name: BaseGameEncounters
  href: api/InscryptionAPI.Encounters.EncounterManager.html#InscryptionAPI_Encounters_EncounterManager_BaseGameEncounters
  commentId: F:InscryptionAPI.Encounters.EncounterManager.BaseGameEncounters
  fullName: InscryptionAPI.Encounters.EncounterManager.BaseGameEncounters
  nameWithType: EncounterManager.BaseGameEncounters
- uid: InscryptionAPI.Encounters.EncounterManager.ModifyEncountersList
  name: ModifyEncountersList
  href: api/InscryptionAPI.Encounters.EncounterManager.html#InscryptionAPI_Encounters_EncounterManager_ModifyEncountersList
  commentId: E:InscryptionAPI.Encounters.EncounterManager.ModifyEncountersList
  fullName: InscryptionAPI.Encounters.EncounterManager.ModifyEncountersList
  nameWithType: EncounterManager.ModifyEncountersList
- uid: InscryptionAPI.Encounters.EncounterManager.New(System.String,System.Boolean)
  name: New(String, Boolean)
  href: api/InscryptionAPI.Encounters.EncounterManager.html#InscryptionAPI_Encounters_EncounterManager_New_System_String_System_Boolean_
  commentId: M:InscryptionAPI.Encounters.EncounterManager.New(System.String,System.Boolean)
  fullName: InscryptionAPI.Encounters.EncounterManager.New(System.String, System.Boolean)
  nameWithType: EncounterManager.New(String, Boolean)
- uid: InscryptionAPI.Encounters.EncounterManager.New*
  name: New
  href: api/InscryptionAPI.Encounters.EncounterManager.html#InscryptionAPI_Encounters_EncounterManager_New_
  commentId: Overload:InscryptionAPI.Encounters.EncounterManager.New
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.EncounterManager.New
  nameWithType: EncounterManager.New
- uid: InscryptionAPI.Encounters.EncounterManager.Remove(DiskCardGame.EncounterBlueprintData)
  name: Remove(EncounterBlueprintData)
  href: api/InscryptionAPI.Encounters.EncounterManager.html#InscryptionAPI_Encounters_EncounterManager_Remove_DiskCardGame_EncounterBlueprintData_
  commentId: M:InscryptionAPI.Encounters.EncounterManager.Remove(DiskCardGame.EncounterBlueprintData)
  fullName: InscryptionAPI.Encounters.EncounterManager.Remove(DiskCardGame.EncounterBlueprintData)
  nameWithType: EncounterManager.Remove(EncounterBlueprintData)
- uid: InscryptionAPI.Encounters.EncounterManager.Remove*
  name: Remove
  href: api/InscryptionAPI.Encounters.EncounterManager.html#InscryptionAPI_Encounters_EncounterManager_Remove_
  commentId: Overload:InscryptionAPI.Encounters.EncounterManager.Remove
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.EncounterManager.Remove
  nameWithType: EncounterManager.Remove
- uid: InscryptionAPI.Encounters.EncounterManager.SyncEncounterList
  name: SyncEncounterList()
  href: api/InscryptionAPI.Encounters.EncounterManager.html#InscryptionAPI_Encounters_EncounterManager_SyncEncounterList
  commentId: M:InscryptionAPI.Encounters.EncounterManager.SyncEncounterList
  fullName: InscryptionAPI.Encounters.EncounterManager.SyncEncounterList()
  nameWithType: EncounterManager.SyncEncounterList()
- uid: InscryptionAPI.Encounters.EncounterManager.SyncEncounterList*
  name: SyncEncounterList
  href: api/InscryptionAPI.Encounters.EncounterManager.html#InscryptionAPI_Encounters_EncounterManager_SyncEncounterList_
  commentId: Overload:InscryptionAPI.Encounters.EncounterManager.SyncEncounterList
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.EncounterManager.SyncEncounterList
  nameWithType: EncounterManager.SyncEncounterList
- uid: InscryptionAPI.Encounters.ICustomNodeSequence
  name: ICustomNodeSequence
  href: api/InscryptionAPI.Encounters.ICustomNodeSequence.html
  commentId: T:InscryptionAPI.Encounters.ICustomNodeSequence
  fullName: InscryptionAPI.Encounters.ICustomNodeSequence
  nameWithType: ICustomNodeSequence
- uid: InscryptionAPI.Encounters.ICustomNodeSequence.ExecuteCustomSequence(InscryptionAPI.Encounters.CustomNodeData)
  name: ExecuteCustomSequence(CustomNodeData)
  href: api/InscryptionAPI.Encounters.ICustomNodeSequence.html#InscryptionAPI_Encounters_ICustomNodeSequence_ExecuteCustomSequence_InscryptionAPI_Encounters_CustomNodeData_
  commentId: M:InscryptionAPI.Encounters.ICustomNodeSequence.ExecuteCustomSequence(InscryptionAPI.Encounters.CustomNodeData)
  fullName: InscryptionAPI.Encounters.ICustomNodeSequence.ExecuteCustomSequence(InscryptionAPI.Encounters.CustomNodeData)
  nameWithType: ICustomNodeSequence.ExecuteCustomSequence(CustomNodeData)
- uid: InscryptionAPI.Encounters.ICustomNodeSequence.ExecuteCustomSequence*
  name: ExecuteCustomSequence
  href: api/InscryptionAPI.Encounters.ICustomNodeSequence.html#InscryptionAPI_Encounters_ICustomNodeSequence_ExecuteCustomSequence_
  commentId: Overload:InscryptionAPI.Encounters.ICustomNodeSequence.ExecuteCustomSequence
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.ICustomNodeSequence.ExecuteCustomSequence
  nameWithType: ICustomNodeSequence.ExecuteCustomSequence
- uid: InscryptionAPI.Encounters.NodeManager
  name: NodeManager
  href: api/InscryptionAPI.Encounters.NodeManager.html
  commentId: T:InscryptionAPI.Encounters.NodeManager
  fullName: InscryptionAPI.Encounters.NodeManager
  nameWithType: NodeManager
- uid: InscryptionAPI.Encounters.NodeManager.Add*
  name: Add
  href: api/InscryptionAPI.Encounters.NodeManager.html#InscryptionAPI_Encounters_NodeManager_Add_
  commentId: Overload:InscryptionAPI.Encounters.NodeManager.Add
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.NodeManager.Add
  nameWithType: NodeManager.Add
- uid: InscryptionAPI.Encounters.NodeManager.Add``1(UnityEngine.Texture2D[],InscryptionAPI.Encounters.NodeManager.NodePosition)
  name: Add<S>(Texture2D[], NodeManager.NodePosition)
  href: api/InscryptionAPI.Encounters.NodeManager.html#InscryptionAPI_Encounters_NodeManager_Add__1_UnityEngine_Texture2D___InscryptionAPI_Encounters_NodeManager_NodePosition_
  commentId: M:InscryptionAPI.Encounters.NodeManager.Add``1(UnityEngine.Texture2D[],InscryptionAPI.Encounters.NodeManager.NodePosition)
  name.vb: Add(Of S)(Texture2D(), NodeManager.NodePosition)
  fullName: InscryptionAPI.Encounters.NodeManager.Add<S>(UnityEngine.Texture2D[], InscryptionAPI.Encounters.NodeManager.NodePosition)
  fullName.vb: InscryptionAPI.Encounters.NodeManager.Add(Of S)(UnityEngine.Texture2D(), InscryptionAPI.Encounters.NodeManager.NodePosition)
  nameWithType: NodeManager.Add<S>(Texture2D[], NodeManager.NodePosition)
  nameWithType.vb: NodeManager.Add(Of S)(Texture2D(), NodeManager.NodePosition)
- uid: InscryptionAPI.Encounters.NodeManager.Add``2(UnityEngine.Texture2D[],InscryptionAPI.Encounters.NodeManager.NodePosition)
  name: Add<S, N>(Texture2D[], NodeManager.NodePosition)
  href: api/InscryptionAPI.Encounters.NodeManager.html#InscryptionAPI_Encounters_NodeManager_Add__2_UnityEngine_Texture2D___InscryptionAPI_Encounters_NodeManager_NodePosition_
  commentId: M:InscryptionAPI.Encounters.NodeManager.Add``2(UnityEngine.Texture2D[],InscryptionAPI.Encounters.NodeManager.NodePosition)
  name.vb: Add(Of S, N)(Texture2D(), NodeManager.NodePosition)
  fullName: InscryptionAPI.Encounters.NodeManager.Add<S, N>(UnityEngine.Texture2D[], InscryptionAPI.Encounters.NodeManager.NodePosition)
  fullName.vb: InscryptionAPI.Encounters.NodeManager.Add(Of S, N)(UnityEngine.Texture2D(), InscryptionAPI.Encounters.NodeManager.NodePosition)
  nameWithType: NodeManager.Add<S, N>(Texture2D[], NodeManager.NodePosition)
  nameWithType.vb: NodeManager.Add(Of S, N)(Texture2D(), NodeManager.NodePosition)
- uid: InscryptionAPI.Encounters.NodeManager.NodeInfo
  name: NodeManager.NodeInfo
  href: api/InscryptionAPI.Encounters.NodeManager.NodeInfo.html
  commentId: T:InscryptionAPI.Encounters.NodeManager.NodeInfo
  fullName: InscryptionAPI.Encounters.NodeManager.NodeInfo
  nameWithType: NodeManager.NodeInfo
- uid: InscryptionAPI.Encounters.NodeManager.NodeInfo.animatedMapNode
  name: animatedMapNode
  href: api/InscryptionAPI.Encounters.NodeManager.NodeInfo.html#InscryptionAPI_Encounters_NodeManager_NodeInfo_animatedMapNode
  commentId: P:InscryptionAPI.Encounters.NodeManager.NodeInfo.animatedMapNode
  fullName: InscryptionAPI.Encounters.NodeManager.NodeInfo.animatedMapNode
  nameWithType: NodeManager.NodeInfo.animatedMapNode
- uid: InscryptionAPI.Encounters.NodeManager.NodeInfo.animatedMapNode*
  name: animatedMapNode
  href: api/InscryptionAPI.Encounters.NodeManager.NodeInfo.html#InscryptionAPI_Encounters_NodeManager_NodeInfo_animatedMapNode_
  commentId: Overload:InscryptionAPI.Encounters.NodeManager.NodeInfo.animatedMapNode
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.NodeManager.NodeInfo.animatedMapNode
  nameWithType: NodeManager.NodeInfo.animatedMapNode
- uid: InscryptionAPI.Encounters.NodeManager.NodeInfo.BuildNode
  name: BuildNode()
  href: api/InscryptionAPI.Encounters.NodeManager.NodeInfo.html#InscryptionAPI_Encounters_NodeManager_NodeInfo_BuildNode
  commentId: M:InscryptionAPI.Encounters.NodeManager.NodeInfo.BuildNode
  fullName: InscryptionAPI.Encounters.NodeManager.NodeInfo.BuildNode()
  nameWithType: NodeManager.NodeInfo.BuildNode()
- uid: InscryptionAPI.Encounters.NodeManager.NodeInfo.BuildNode*
  name: BuildNode
  href: api/InscryptionAPI.Encounters.NodeManager.NodeInfo.html#InscryptionAPI_Encounters_NodeManager_NodeInfo_BuildNode_
  commentId: Overload:InscryptionAPI.Encounters.NodeManager.NodeInfo.BuildNode
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.NodeManager.NodeInfo.BuildNode
  nameWithType: NodeManager.NodeInfo.BuildNode
- uid: InscryptionAPI.Encounters.NodeManager.NodeInfo.guid
  name: guid
  href: api/InscryptionAPI.Encounters.NodeManager.NodeInfo.html#InscryptionAPI_Encounters_NodeManager_NodeInfo_guid
  commentId: P:InscryptionAPI.Encounters.NodeManager.NodeInfo.guid
  fullName: InscryptionAPI.Encounters.NodeManager.NodeInfo.guid
  nameWithType: NodeManager.NodeInfo.guid
- uid: InscryptionAPI.Encounters.NodeManager.NodeInfo.guid*
  name: guid
  href: api/InscryptionAPI.Encounters.NodeManager.NodeInfo.html#InscryptionAPI_Encounters_NodeManager_NodeInfo_guid_
  commentId: Overload:InscryptionAPI.Encounters.NodeManager.NodeInfo.guid
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.NodeManager.NodeInfo.guid
  nameWithType: NodeManager.NodeInfo.guid
- uid: InscryptionAPI.Encounters.NodeManager.NodeInfo.nodeDataType
  name: nodeDataType
  href: api/InscryptionAPI.Encounters.NodeManager.NodeInfo.html#InscryptionAPI_Encounters_NodeManager_NodeInfo_nodeDataType
  commentId: P:InscryptionAPI.Encounters.NodeManager.NodeInfo.nodeDataType
  fullName: InscryptionAPI.Encounters.NodeManager.NodeInfo.nodeDataType
  nameWithType: NodeManager.NodeInfo.nodeDataType
- uid: InscryptionAPI.Encounters.NodeManager.NodeInfo.nodeDataType*
  name: nodeDataType
  href: api/InscryptionAPI.Encounters.NodeManager.NodeInfo.html#InscryptionAPI_Encounters_NodeManager_NodeInfo_nodeDataType_
  commentId: Overload:InscryptionAPI.Encounters.NodeManager.NodeInfo.nodeDataType
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.NodeManager.NodeInfo.nodeDataType
  nameWithType: NodeManager.NodeInfo.nodeDataType
- uid: InscryptionAPI.Encounters.NodeManager.NodeInfo.nodePosition
  name: nodePosition
  href: api/InscryptionAPI.Encounters.NodeManager.NodeInfo.html#InscryptionAPI_Encounters_NodeManager_NodeInfo_nodePosition
  commentId: P:InscryptionAPI.Encounters.NodeManager.NodeInfo.nodePosition
  fullName: InscryptionAPI.Encounters.NodeManager.NodeInfo.nodePosition
  nameWithType: NodeManager.NodeInfo.nodePosition
- uid: InscryptionAPI.Encounters.NodeManager.NodeInfo.nodePosition*
  name: nodePosition
  href: api/InscryptionAPI.Encounters.NodeManager.NodeInfo.html#InscryptionAPI_Encounters_NodeManager_NodeInfo_nodePosition_
  commentId: Overload:InscryptionAPI.Encounters.NodeManager.NodeInfo.nodePosition
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.NodeManager.NodeInfo.nodePosition
  nameWithType: NodeManager.NodeInfo.nodePosition
- uid: InscryptionAPI.Encounters.NodeManager.NodeInfo.sequencerType
  name: sequencerType
  href: api/InscryptionAPI.Encounters.NodeManager.NodeInfo.html#InscryptionAPI_Encounters_NodeManager_NodeInfo_sequencerType
  commentId: P:InscryptionAPI.Encounters.NodeManager.NodeInfo.sequencerType
  fullName: InscryptionAPI.Encounters.NodeManager.NodeInfo.sequencerType
  nameWithType: NodeManager.NodeInfo.sequencerType
- uid: InscryptionAPI.Encounters.NodeManager.NodeInfo.sequencerType*
  name: sequencerType
  href: api/InscryptionAPI.Encounters.NodeManager.NodeInfo.html#InscryptionAPI_Encounters_NodeManager_NodeInfo_sequencerType_
  commentId: Overload:InscryptionAPI.Encounters.NodeManager.NodeInfo.sequencerType
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.NodeManager.NodeInfo.sequencerType
  nameWithType: NodeManager.NodeInfo.sequencerType
- uid: InscryptionAPI.Encounters.NodeManager.NodePosition
  name: NodeManager.NodePosition
  href: api/InscryptionAPI.Encounters.NodeManager.NodePosition.html
  commentId: T:InscryptionAPI.Encounters.NodeManager.NodePosition
  fullName: InscryptionAPI.Encounters.NodeManager.NodePosition
  nameWithType: NodeManager.NodePosition
- uid: InscryptionAPI.Encounters.NodeManager.NodePosition.Act1Available
  name: Act1Available
  href: api/InscryptionAPI.Encounters.NodeManager.NodePosition.html#InscryptionAPI_Encounters_NodeManager_NodePosition_Act1Available
  commentId: F:InscryptionAPI.Encounters.NodeManager.NodePosition.Act1Available
  fullName: InscryptionAPI.Encounters.NodeManager.NodePosition.Act1Available
  nameWithType: NodeManager.NodePosition.Act1Available
- uid: InscryptionAPI.Encounters.NodeManager.NodePosition.CardChoiceRandom
  name: CardChoiceRandom
  href: api/InscryptionAPI.Encounters.NodeManager.NodePosition.html#InscryptionAPI_Encounters_NodeManager_NodePosition_CardChoiceRandom
  commentId: F:InscryptionAPI.Encounters.NodeManager.NodePosition.CardChoiceRandom
  fullName: InscryptionAPI.Encounters.NodeManager.NodePosition.CardChoiceRandom
  nameWithType: NodeManager.NodePosition.CardChoiceRandom
- uid: InscryptionAPI.Encounters.NodeManager.NodePosition.MapStart
  name: MapStart
  href: api/InscryptionAPI.Encounters.NodeManager.NodePosition.html#InscryptionAPI_Encounters_NodeManager_NodePosition_MapStart
  commentId: F:InscryptionAPI.Encounters.NodeManager.NodePosition.MapStart
  fullName: InscryptionAPI.Encounters.NodeManager.NodePosition.MapStart
  nameWithType: NodeManager.NodePosition.MapStart
- uid: InscryptionAPI.Encounters.NodeManager.NodePosition.NotGenerated
  name: NotGenerated
  href: api/InscryptionAPI.Encounters.NodeManager.NodePosition.html#InscryptionAPI_Encounters_NodeManager_NodePosition_NotGenerated
  commentId: F:InscryptionAPI.Encounters.NodeManager.NodePosition.NotGenerated
  fullName: InscryptionAPI.Encounters.NodeManager.NodePosition.NotGenerated
  nameWithType: NodeManager.NodePosition.NotGenerated
- uid: InscryptionAPI.Encounters.NodeManager.NodePosition.PostBoss
  name: PostBoss
  href: api/InscryptionAPI.Encounters.NodeManager.NodePosition.html#InscryptionAPI_Encounters_NodeManager_NodePosition_PostBoss
  commentId: F:InscryptionAPI.Encounters.NodeManager.NodePosition.PostBoss
  fullName: InscryptionAPI.Encounters.NodeManager.NodePosition.PostBoss
  nameWithType: NodeManager.NodePosition.PostBoss
- uid: InscryptionAPI.Encounters.NodeManager.NodePosition.PreBoss
  name: PreBoss
  href: api/InscryptionAPI.Encounters.NodeManager.NodePosition.html#InscryptionAPI_Encounters_NodeManager_NodePosition_PreBoss
  commentId: F:InscryptionAPI.Encounters.NodeManager.NodePosition.PreBoss
  fullName: InscryptionAPI.Encounters.NodeManager.NodePosition.PreBoss
  nameWithType: NodeManager.NodePosition.PreBoss
- uid: InscryptionAPI.Encounters.NodeManager.NodePosition.SpecialEventRandom
  name: SpecialEventRandom
  href: api/InscryptionAPI.Encounters.NodeManager.NodePosition.html#InscryptionAPI_Encounters_NodeManager_NodePosition_SpecialEventRandom
  commentId: F:InscryptionAPI.Encounters.NodeManager.NodePosition.SpecialEventRandom
  fullName: InscryptionAPI.Encounters.NodeManager.NodePosition.SpecialEventRandom
  nameWithType: NodeManager.NodePosition.SpecialEventRandom
- uid: InscryptionAPI.Encounters.OpponentManager
  name: OpponentManager
  href: api/InscryptionAPI.Encounters.OpponentManager.html
  commentId: T:InscryptionAPI.Encounters.OpponentManager
  fullName: InscryptionAPI.Encounters.OpponentManager
  nameWithType: OpponentManager
- uid: InscryptionAPI.Encounters.OpponentManager.Add(System.String,System.String,System.String,Type)
  name: Add(String, String, String, Type)
  href: api/InscryptionAPI.Encounters.OpponentManager.html#InscryptionAPI_Encounters_OpponentManager_Add_System_String_System_String_System_String_Type_
  commentId: M:InscryptionAPI.Encounters.OpponentManager.Add(System.String,System.String,System.String,Type)
  fullName: InscryptionAPI.Encounters.OpponentManager.Add(System.String, System.String, System.String, Type)
  nameWithType: OpponentManager.Add(String, String, String, Type)
- uid: InscryptionAPI.Encounters.OpponentManager.Add*
  name: Add
  href: api/InscryptionAPI.Encounters.OpponentManager.html#InscryptionAPI_Encounters_OpponentManager_Add_
  commentId: Overload:InscryptionAPI.Encounters.OpponentManager.Add
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.OpponentManager.Add
  nameWithType: OpponentManager.Add
- uid: InscryptionAPI.Encounters.OpponentManager.AllOpponents
  name: AllOpponents
  href: api/InscryptionAPI.Encounters.OpponentManager.html#InscryptionAPI_Encounters_OpponentManager_AllOpponents
  commentId: P:InscryptionAPI.Encounters.OpponentManager.AllOpponents
  fullName: InscryptionAPI.Encounters.OpponentManager.AllOpponents
  nameWithType: OpponentManager.AllOpponents
- uid: InscryptionAPI.Encounters.OpponentManager.AllOpponents*
  name: AllOpponents
  href: api/InscryptionAPI.Encounters.OpponentManager.html#InscryptionAPI_Encounters_OpponentManager_AllOpponents_
  commentId: Overload:InscryptionAPI.Encounters.OpponentManager.AllOpponents
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.OpponentManager.AllOpponents
  nameWithType: OpponentManager.AllOpponents
- uid: InscryptionAPI.Encounters.OpponentManager.BaseGameOpponents
  name: BaseGameOpponents
  href: api/InscryptionAPI.Encounters.OpponentManager.html#InscryptionAPI_Encounters_OpponentManager_BaseGameOpponents
  commentId: F:InscryptionAPI.Encounters.OpponentManager.BaseGameOpponents
  fullName: InscryptionAPI.Encounters.OpponentManager.BaseGameOpponents
  nameWithType: OpponentManager.BaseGameOpponents
- uid: InscryptionAPI.Encounters.OpponentManager.FullOpponent
  name: OpponentManager.FullOpponent
  href: api/InscryptionAPI.Encounters.OpponentManager.FullOpponent.html
  commentId: T:InscryptionAPI.Encounters.OpponentManager.FullOpponent
  fullName: InscryptionAPI.Encounters.OpponentManager.FullOpponent
  nameWithType: OpponentManager.FullOpponent
- uid: InscryptionAPI.Encounters.OpponentManager.FullOpponent.#ctor(DiskCardGame.Opponent.Type,Type,System.String)
  name: FullOpponent(Opponent.Type, Type, String)
  href: api/InscryptionAPI.Encounters.OpponentManager.FullOpponent.html#InscryptionAPI_Encounters_OpponentManager_FullOpponent__ctor_DiskCardGame_Opponent_Type_Type_System_String_
  commentId: M:InscryptionAPI.Encounters.OpponentManager.FullOpponent.#ctor(DiskCardGame.Opponent.Type,Type,System.String)
  fullName: InscryptionAPI.Encounters.OpponentManager.FullOpponent.FullOpponent(DiskCardGame.Opponent.Type, Type, System.String)
  nameWithType: OpponentManager.FullOpponent.FullOpponent(Opponent.Type, Type, String)
- uid: InscryptionAPI.Encounters.OpponentManager.FullOpponent.#ctor*
  name: FullOpponent
  href: api/InscryptionAPI.Encounters.OpponentManager.FullOpponent.html#InscryptionAPI_Encounters_OpponentManager_FullOpponent__ctor_
  commentId: Overload:InscryptionAPI.Encounters.OpponentManager.FullOpponent.#ctor
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.OpponentManager.FullOpponent.FullOpponent
  nameWithType: OpponentManager.FullOpponent.FullOpponent
- uid: InscryptionAPI.Encounters.OpponentManager.FullOpponent.Id
  name: Id
  href: api/InscryptionAPI.Encounters.OpponentManager.FullOpponent.html#InscryptionAPI_Encounters_OpponentManager_FullOpponent_Id
  commentId: F:InscryptionAPI.Encounters.OpponentManager.FullOpponent.Id
  fullName: InscryptionAPI.Encounters.OpponentManager.FullOpponent.Id
  nameWithType: OpponentManager.FullOpponent.Id
- uid: InscryptionAPI.Encounters.OpponentManager.FullOpponent.Opponent
  name: Opponent
  href: api/InscryptionAPI.Encounters.OpponentManager.FullOpponent.html#InscryptionAPI_Encounters_OpponentManager_FullOpponent_Opponent
  commentId: F:InscryptionAPI.Encounters.OpponentManager.FullOpponent.Opponent
  fullName: InscryptionAPI.Encounters.OpponentManager.FullOpponent.Opponent
  nameWithType: OpponentManager.FullOpponent.Opponent
- uid: InscryptionAPI.Encounters.OpponentManager.FullOpponent.SpecialSequencerId
  name: SpecialSequencerId
  href: api/InscryptionAPI.Encounters.OpponentManager.FullOpponent.html#InscryptionAPI_Encounters_OpponentManager_FullOpponent_SpecialSequencerId
  commentId: F:InscryptionAPI.Encounters.OpponentManager.FullOpponent.SpecialSequencerId
  fullName: InscryptionAPI.Encounters.OpponentManager.FullOpponent.SpecialSequencerId
  nameWithType: OpponentManager.FullOpponent.SpecialSequencerId
- uid: InscryptionAPI.Encounters.OpponentManager.OriginalGetSequencerIdForBoss(DiskCardGame.Opponent.Type)
  name: OriginalGetSequencerIdForBoss(Opponent.Type)
  href: api/InscryptionAPI.Encounters.OpponentManager.html#InscryptionAPI_Encounters_OpponentManager_OriginalGetSequencerIdForBoss_DiskCardGame_Opponent_Type_
  commentId: M:InscryptionAPI.Encounters.OpponentManager.OriginalGetSequencerIdForBoss(DiskCardGame.Opponent.Type)
  fullName: InscryptionAPI.Encounters.OpponentManager.OriginalGetSequencerIdForBoss(DiskCardGame.Opponent.Type)
  nameWithType: OpponentManager.OriginalGetSequencerIdForBoss(Opponent.Type)
- uid: InscryptionAPI.Encounters.OpponentManager.OriginalGetSequencerIdForBoss*
  name: OriginalGetSequencerIdForBoss
  href: api/InscryptionAPI.Encounters.OpponentManager.html#InscryptionAPI_Encounters_OpponentManager_OriginalGetSequencerIdForBoss_
  commentId: Overload:InscryptionAPI.Encounters.OpponentManager.OriginalGetSequencerIdForBoss
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.OpponentManager.OriginalGetSequencerIdForBoss
  nameWithType: OpponentManager.OriginalGetSequencerIdForBoss
- uid: InscryptionAPI.Encounters.OpponentManager.ReplaceGetSequencerId(DiskCardGame.Opponent.Type,System.String@)
  name: ReplaceGetSequencerId(Opponent.Type, ref String)
  href: api/InscryptionAPI.Encounters.OpponentManager.html#InscryptionAPI_Encounters_OpponentManager_ReplaceGetSequencerId_DiskCardGame_Opponent_Type_System_String__
  commentId: M:InscryptionAPI.Encounters.OpponentManager.ReplaceGetSequencerId(DiskCardGame.Opponent.Type,System.String@)
  name.vb: ReplaceGetSequencerId(Opponent.Type, ByRef String)
  fullName: InscryptionAPI.Encounters.OpponentManager.ReplaceGetSequencerId(DiskCardGame.Opponent.Type, ref System.String)
  fullName.vb: InscryptionAPI.Encounters.OpponentManager.ReplaceGetSequencerId(DiskCardGame.Opponent.Type, ByRef System.String)
  nameWithType: OpponentManager.ReplaceGetSequencerId(Opponent.Type, ref String)
  nameWithType.vb: OpponentManager.ReplaceGetSequencerId(Opponent.Type, ByRef String)
- uid: InscryptionAPI.Encounters.OpponentManager.ReplaceGetSequencerId*
  name: ReplaceGetSequencerId
  href: api/InscryptionAPI.Encounters.OpponentManager.html#InscryptionAPI_Encounters_OpponentManager_ReplaceGetSequencerId_
  commentId: Overload:InscryptionAPI.Encounters.OpponentManager.ReplaceGetSequencerId
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.OpponentManager.ReplaceGetSequencerId
  nameWithType: OpponentManager.ReplaceGetSequencerId
- uid: InscryptionAPI.Encounters.OpponentManager.ReplacePrefabPath(System.String@,DiskCardGame.Opponent.Type)
  name: ReplacePrefabPath(ref String, Opponent.Type)
  href: api/InscryptionAPI.Encounters.OpponentManager.html#InscryptionAPI_Encounters_OpponentManager_ReplacePrefabPath_System_String__DiskCardGame_Opponent_Type_
  commentId: M:InscryptionAPI.Encounters.OpponentManager.ReplacePrefabPath(System.String@,DiskCardGame.Opponent.Type)
  name.vb: ReplacePrefabPath(ByRef String, Opponent.Type)
  fullName: InscryptionAPI.Encounters.OpponentManager.ReplacePrefabPath(ref System.String, DiskCardGame.Opponent.Type)
  fullName.vb: InscryptionAPI.Encounters.OpponentManager.ReplacePrefabPath(ByRef System.String, DiskCardGame.Opponent.Type)
  nameWithType: OpponentManager.ReplacePrefabPath(ref String, Opponent.Type)
  nameWithType.vb: OpponentManager.ReplacePrefabPath(ByRef String, Opponent.Type)
- uid: InscryptionAPI.Encounters.OpponentManager.ReplacePrefabPath*
  name: ReplacePrefabPath
  href: api/InscryptionAPI.Encounters.OpponentManager.html#InscryptionAPI_Encounters_OpponentManager_ReplacePrefabPath_
  commentId: Overload:InscryptionAPI.Encounters.OpponentManager.ReplacePrefabPath
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.OpponentManager.ReplacePrefabPath
  nameWithType: OpponentManager.ReplacePrefabPath
- uid: InscryptionAPI.Encounters.OpponentManager.ReplaceSpawnOpponent(DiskCardGame.EncounterData,DiskCardGame.Opponent@)
  name: ReplaceSpawnOpponent(EncounterData, ref Opponent)
  href: api/InscryptionAPI.Encounters.OpponentManager.html#InscryptionAPI_Encounters_OpponentManager_ReplaceSpawnOpponent_DiskCardGame_EncounterData_DiskCardGame_Opponent__
  commentId: M:InscryptionAPI.Encounters.OpponentManager.ReplaceSpawnOpponent(DiskCardGame.EncounterData,DiskCardGame.Opponent@)
  name.vb: ReplaceSpawnOpponent(EncounterData, ByRef Opponent)
  fullName: InscryptionAPI.Encounters.OpponentManager.ReplaceSpawnOpponent(DiskCardGame.EncounterData, ref DiskCardGame.Opponent)
  fullName.vb: InscryptionAPI.Encounters.OpponentManager.ReplaceSpawnOpponent(DiskCardGame.EncounterData, ByRef DiskCardGame.Opponent)
  nameWithType: OpponentManager.ReplaceSpawnOpponent(EncounterData, ref Opponent)
  nameWithType.vb: OpponentManager.ReplaceSpawnOpponent(EncounterData, ByRef Opponent)
- uid: InscryptionAPI.Encounters.OpponentManager.ReplaceSpawnOpponent*
  name: ReplaceSpawnOpponent
  href: api/InscryptionAPI.Encounters.OpponentManager.html#InscryptionAPI_Encounters_OpponentManager_ReplaceSpawnOpponent_
  commentId: Overload:InscryptionAPI.Encounters.OpponentManager.ReplaceSpawnOpponent
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.OpponentManager.ReplaceSpawnOpponent
  nameWithType: OpponentManager.ReplaceSpawnOpponent
- uid: InscryptionAPI.Encounters.SpecialSequenceManager
  name: SpecialSequenceManager
  href: api/InscryptionAPI.Encounters.SpecialSequenceManager.html
  commentId: T:InscryptionAPI.Encounters.SpecialSequenceManager
  fullName: InscryptionAPI.Encounters.SpecialSequenceManager
  nameWithType: SpecialSequenceManager
- uid: InscryptionAPI.Encounters.SpecialSequenceManager.Add(System.String,System.String,Type)
  name: Add(String, String, Type)
  href: api/InscryptionAPI.Encounters.SpecialSequenceManager.html#InscryptionAPI_Encounters_SpecialSequenceManager_Add_System_String_System_String_Type_
  commentId: M:InscryptionAPI.Encounters.SpecialSequenceManager.Add(System.String,System.String,Type)
  fullName: InscryptionAPI.Encounters.SpecialSequenceManager.Add(System.String, System.String, Type)
  nameWithType: SpecialSequenceManager.Add(String, String, Type)
- uid: InscryptionAPI.Encounters.SpecialSequenceManager.Add*
  name: Add
  href: api/InscryptionAPI.Encounters.SpecialSequenceManager.html#InscryptionAPI_Encounters_SpecialSequenceManager_Add_
  commentId: Overload:InscryptionAPI.Encounters.SpecialSequenceManager.Add
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.SpecialSequenceManager.Add
  nameWithType: SpecialSequenceManager.Add
- uid: InscryptionAPI.Encounters.SpecialSequenceManager.AllSpecialSequencers
  name: AllSpecialSequencers
  href: api/InscryptionAPI.Encounters.SpecialSequenceManager.html#InscryptionAPI_Encounters_SpecialSequenceManager_AllSpecialSequencers
  commentId: P:InscryptionAPI.Encounters.SpecialSequenceManager.AllSpecialSequencers
  fullName: InscryptionAPI.Encounters.SpecialSequenceManager.AllSpecialSequencers
  nameWithType: SpecialSequenceManager.AllSpecialSequencers
- uid: InscryptionAPI.Encounters.SpecialSequenceManager.AllSpecialSequencers*
  name: AllSpecialSequencers
  href: api/InscryptionAPI.Encounters.SpecialSequenceManager.html#InscryptionAPI_Encounters_SpecialSequenceManager_AllSpecialSequencers_
  commentId: Overload:InscryptionAPI.Encounters.SpecialSequenceManager.AllSpecialSequencers
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.SpecialSequenceManager.AllSpecialSequencers
  nameWithType: SpecialSequenceManager.AllSpecialSequencers
- uid: InscryptionAPI.Encounters.SpecialSequenceManager.BaseGameSpecialSequencers
  name: BaseGameSpecialSequencers
  href: api/InscryptionAPI.Encounters.SpecialSequenceManager.html#InscryptionAPI_Encounters_SpecialSequenceManager_BaseGameSpecialSequencers
  commentId: F:InscryptionAPI.Encounters.SpecialSequenceManager.BaseGameSpecialSequencers
  fullName: InscryptionAPI.Encounters.SpecialSequenceManager.BaseGameSpecialSequencers
  nameWithType: SpecialSequenceManager.BaseGameSpecialSequencers
- uid: InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer
  name: SpecialSequenceManager.FullSpecialSequencer
  href: api/InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.html
  commentId: T:InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer
  fullName: InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer
  nameWithType: SpecialSequenceManager.FullSpecialSequencer
- uid: InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.#ctor(System.String,Type)
  name: FullSpecialSequencer(String, Type)
  href: api/InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.html#InscryptionAPI_Encounters_SpecialSequenceManager_FullSpecialSequencer__ctor_System_String_Type_
  commentId: M:InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.#ctor(System.String,Type)
  fullName: InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.FullSpecialSequencer(System.String, Type)
  nameWithType: SpecialSequenceManager.FullSpecialSequencer.FullSpecialSequencer(String, Type)
- uid: InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.#ctor*
  name: FullSpecialSequencer
  href: api/InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.html#InscryptionAPI_Encounters_SpecialSequenceManager_FullSpecialSequencer__ctor_
  commentId: Overload:InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.#ctor
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.FullSpecialSequencer
  nameWithType: SpecialSequenceManager.FullSpecialSequencer.FullSpecialSequencer
- uid: InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.Id
  name: Id
  href: api/InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.html#InscryptionAPI_Encounters_SpecialSequenceManager_FullSpecialSequencer_Id
  commentId: F:InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.Id
  fullName: InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.Id
  nameWithType: SpecialSequenceManager.FullSpecialSequencer.Id
- uid: InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.SpecialSequencer
  name: SpecialSequencer
  href: api/InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.html#InscryptionAPI_Encounters_SpecialSequenceManager_FullSpecialSequencer_SpecialSequencer
  commentId: P:InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.SpecialSequencer
  fullName: InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.SpecialSequencer
  nameWithType: SpecialSequenceManager.FullSpecialSequencer.SpecialSequencer
- uid: InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.SpecialSequencer*
  name: SpecialSequencer
  href: api/InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.html#InscryptionAPI_Encounters_SpecialSequenceManager_FullSpecialSequencer_SpecialSequencer_
  commentId: Overload:InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.SpecialSequencer
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.SpecialSequencer
  nameWithType: SpecialSequenceManager.FullSpecialSequencer.SpecialSequencer
- uid: InscryptionAPI.Encounters.TurnBuilder`1
  name: TurnBuilder<T>
  href: api/InscryptionAPI.Encounters.TurnBuilder-1.html
  commentId: T:InscryptionAPI.Encounters.TurnBuilder`1
  name.vb: TurnBuilder(Of T)
  fullName: InscryptionAPI.Encounters.TurnBuilder<T>
  fullName.vb: InscryptionAPI.Encounters.TurnBuilder(Of T)
  nameWithType: TurnBuilder<T>
  nameWithType.vb: TurnBuilder(Of T)
- uid: InscryptionAPI.Encounters.TurnBuilder`1.#ctor
  name: TurnBuilder()
  href: api/InscryptionAPI.Encounters.TurnBuilder-1.html#InscryptionAPI_Encounters_TurnBuilder_1__ctor
  commentId: M:InscryptionAPI.Encounters.TurnBuilder`1.#ctor
  fullName: InscryptionAPI.Encounters.TurnBuilder<T>.TurnBuilder()
  fullName.vb: InscryptionAPI.Encounters.TurnBuilder(Of T).TurnBuilder()
  nameWithType: TurnBuilder<T>.TurnBuilder()
  nameWithType.vb: TurnBuilder(Of T).TurnBuilder()
- uid: InscryptionAPI.Encounters.TurnBuilder`1.#ctor*
  name: TurnBuilder
  href: api/InscryptionAPI.Encounters.TurnBuilder-1.html#InscryptionAPI_Encounters_TurnBuilder_1__ctor_
  commentId: Overload:InscryptionAPI.Encounters.TurnBuilder`1.#ctor
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.TurnBuilder<T>.TurnBuilder
  fullName.vb: InscryptionAPI.Encounters.TurnBuilder(Of T).TurnBuilder
  nameWithType: TurnBuilder<T>.TurnBuilder
  nameWithType.vb: TurnBuilder(Of T).TurnBuilder
- uid: InscryptionAPI.Encounters.TurnBuilder`1.SetBlueprint(`0)
  name: SetBlueprint(T)
  href: api/InscryptionAPI.Encounters.TurnBuilder-1.html#InscryptionAPI_Encounters_TurnBuilder_1_SetBlueprint__0_
  commentId: M:InscryptionAPI.Encounters.TurnBuilder`1.SetBlueprint(`0)
  fullName: InscryptionAPI.Encounters.TurnBuilder<T>.SetBlueprint(T)
  fullName.vb: InscryptionAPI.Encounters.TurnBuilder(Of T).SetBlueprint(T)
  nameWithType: TurnBuilder<T>.SetBlueprint(T)
  nameWithType.vb: TurnBuilder(Of T).SetBlueprint(T)
- uid: InscryptionAPI.Encounters.TurnBuilder`1.SetBlueprint*
  name: SetBlueprint
  href: api/InscryptionAPI.Encounters.TurnBuilder-1.html#InscryptionAPI_Encounters_TurnBuilder_1_SetBlueprint_
  commentId: Overload:InscryptionAPI.Encounters.TurnBuilder`1.SetBlueprint
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.TurnBuilder<T>.SetBlueprint
  fullName.vb: InscryptionAPI.Encounters.TurnBuilder(Of T).SetBlueprint
  nameWithType: TurnBuilder<T>.SetBlueprint
  nameWithType.vb: TurnBuilder(Of T).SetBlueprint
- uid: InscryptionAPI.Encounters.TurnExtensions
  name: TurnExtensions
  href: api/InscryptionAPI.Encounters.TurnExtensions.html
  commentId: T:InscryptionAPI.Encounters.TurnExtensions
  fullName: InscryptionAPI.Encounters.TurnExtensions
  nameWithType: TurnExtensions
- uid: InscryptionAPI.Encounters.TurnExtensions.AddCardBlueprint*
  name: AddCardBlueprint
  href: api/InscryptionAPI.Encounters.TurnExtensions.html#InscryptionAPI_Encounters_TurnExtensions_AddCardBlueprint_
  commentId: Overload:InscryptionAPI.Encounters.TurnExtensions.AddCardBlueprint
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.TurnExtensions.AddCardBlueprint
  nameWithType: TurnExtensions.AddCardBlueprint
- uid: InscryptionAPI.Encounters.TurnExtensions.AddCardBlueprint``1(InscryptionAPI.Encounters.TurnBuilder{``0},System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.String)
  name: AddCardBlueprint<T>(TurnBuilder<T>, String, Int32, Int32, Int32, Boolean, Int32, String)
  href: api/InscryptionAPI.Encounters.TurnExtensions.html#InscryptionAPI_Encounters_TurnExtensions_AddCardBlueprint__1_InscryptionAPI_Encounters_TurnBuilder___0__System_String_System_Int32_System_Int32_System_Int32_System_Boolean_System_Int32_System_String_
  commentId: M:InscryptionAPI.Encounters.TurnExtensions.AddCardBlueprint``1(InscryptionAPI.Encounters.TurnBuilder{``0},System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.String)
  name.vb: AddCardBlueprint(Of T)(TurnBuilder(Of T), String, Int32, Int32, Int32, Boolean, Int32, String)
  fullName: InscryptionAPI.Encounters.TurnExtensions.AddCardBlueprint<T>(InscryptionAPI.Encounters.TurnBuilder<T>, System.String, System.Int32, System.Int32, System.Int32, System.Boolean, System.Int32, System.String)
  fullName.vb: InscryptionAPI.Encounters.TurnExtensions.AddCardBlueprint(Of T)(InscryptionAPI.Encounters.TurnBuilder(Of T), System.String, System.Int32, System.Int32, System.Int32, System.Boolean, System.Int32, System.String)
  nameWithType: TurnExtensions.AddCardBlueprint<T>(TurnBuilder<T>, String, Int32, Int32, Int32, Boolean, Int32, String)
  nameWithType.vb: TurnExtensions.AddCardBlueprint(Of T)(TurnBuilder(Of T), String, Int32, Int32, Int32, Boolean, Int32, String)
- uid: InscryptionAPI.Encounters.TurnExtensions.Build*
  name: Build
  href: api/InscryptionAPI.Encounters.TurnExtensions.html#InscryptionAPI_Encounters_TurnExtensions_Build_
  commentId: Overload:InscryptionAPI.Encounters.TurnExtensions.Build
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.TurnExtensions.Build
  nameWithType: TurnExtensions.Build
- uid: InscryptionAPI.Encounters.TurnExtensions.Build``1(InscryptionAPI.Encounters.TurnBuilder{``0})
  name: Build<T>(TurnBuilder<T>)
  href: api/InscryptionAPI.Encounters.TurnExtensions.html#InscryptionAPI_Encounters_TurnExtensions_Build__1_InscryptionAPI_Encounters_TurnBuilder___0__
  commentId: M:InscryptionAPI.Encounters.TurnExtensions.Build``1(InscryptionAPI.Encounters.TurnBuilder{``0})
  name.vb: Build(Of T)(TurnBuilder(Of T))
  fullName: InscryptionAPI.Encounters.TurnExtensions.Build<T>(InscryptionAPI.Encounters.TurnBuilder<T>)
  fullName.vb: InscryptionAPI.Encounters.TurnExtensions.Build(Of T)(InscryptionAPI.Encounters.TurnBuilder(Of T))
  nameWithType: TurnExtensions.Build<T>(TurnBuilder<T>)
  nameWithType.vb: TurnExtensions.Build(Of T)(TurnBuilder(Of T))
- uid: InscryptionAPI.Guid
  name: InscryptionAPI.Guid
  href: api/InscryptionAPI.Guid.html
  commentId: N:InscryptionAPI.Guid
  fullName: InscryptionAPI.Guid
  nameWithType: InscryptionAPI.Guid
- uid: InscryptionAPI.Guid.GuidManager
  name: GuidManager
  href: api/InscryptionAPI.Guid.GuidManager.html
  commentId: T:InscryptionAPI.Guid.GuidManager
  fullName: InscryptionAPI.Guid.GuidManager
  nameWithType: GuidManager
- uid: InscryptionAPI.Guid.GuidManager.GetEnumType(System.Int32)
  name: GetEnumType(Int32)
  href: api/InscryptionAPI.Guid.GuidManager.html#InscryptionAPI_Guid_GuidManager_GetEnumType_System_Int32_
  commentId: M:InscryptionAPI.Guid.GuidManager.GetEnumType(System.Int32)
  fullName: InscryptionAPI.Guid.GuidManager.GetEnumType(System.Int32)
  nameWithType: GuidManager.GetEnumType(Int32)
- uid: InscryptionAPI.Guid.GuidManager.GetEnumType*
  name: GetEnumType
  href: api/InscryptionAPI.Guid.GuidManager.html#InscryptionAPI_Guid_GuidManager_GetEnumType_
  commentId: Overload:InscryptionAPI.Guid.GuidManager.GetEnumType
  isSpec: "True"
  fullName: InscryptionAPI.Guid.GuidManager.GetEnumType
  nameWithType: GuidManager.GetEnumType
- uid: InscryptionAPI.Guid.GuidManager.GetEnumValue*
  name: GetEnumValue
  href: api/InscryptionAPI.Guid.GuidManager.html#InscryptionAPI_Guid_GuidManager_GetEnumValue_
  commentId: Overload:InscryptionAPI.Guid.GuidManager.GetEnumValue
  isSpec: "True"
  fullName: InscryptionAPI.Guid.GuidManager.GetEnumValue
  nameWithType: GuidManager.GetEnumValue
- uid: InscryptionAPI.Guid.GuidManager.GetEnumValue``1(System.String,System.String)
  name: GetEnumValue<T>(String, String)
  href: api/InscryptionAPI.Guid.GuidManager.html#InscryptionAPI_Guid_GuidManager_GetEnumValue__1_System_String_System_String_
  commentId: M:InscryptionAPI.Guid.GuidManager.GetEnumValue``1(System.String,System.String)
  name.vb: GetEnumValue(Of T)(String, String)
  fullName: InscryptionAPI.Guid.GuidManager.GetEnumValue<T>(System.String, System.String)
  fullName.vb: InscryptionAPI.Guid.GuidManager.GetEnumValue(Of T)(System.String, System.String)
  nameWithType: GuidManager.GetEnumValue<T>(String, String)
  nameWithType.vb: GuidManager.GetEnumValue(Of T)(String, String)
- uid: InscryptionAPI.Guid.GuidManager.GetFullyQualifiedName(System.String,System.String)
  name: GetFullyQualifiedName(String, String)
  href: api/InscryptionAPI.Guid.GuidManager.html#InscryptionAPI_Guid_GuidManager_GetFullyQualifiedName_System_String_System_String_
  commentId: M:InscryptionAPI.Guid.GuidManager.GetFullyQualifiedName(System.String,System.String)
  fullName: InscryptionAPI.Guid.GuidManager.GetFullyQualifiedName(System.String, System.String)
  nameWithType: GuidManager.GetFullyQualifiedName(String, String)
- uid: InscryptionAPI.Guid.GuidManager.GetFullyQualifiedName*
  name: GetFullyQualifiedName
  href: api/InscryptionAPI.Guid.GuidManager.html#InscryptionAPI_Guid_GuidManager_GetFullyQualifiedName_
  commentId: Overload:InscryptionAPI.Guid.GuidManager.GetFullyQualifiedName
  isSpec: "True"
  fullName: InscryptionAPI.Guid.GuidManager.GetFullyQualifiedName
  nameWithType: GuidManager.GetFullyQualifiedName
- uid: InscryptionAPI.Guid.GuidManager.GetValues*
  name: GetValues
  href: api/InscryptionAPI.Guid.GuidManager.html#InscryptionAPI_Guid_GuidManager_GetValues_
  commentId: Overload:InscryptionAPI.Guid.GuidManager.GetValues
  isSpec: "True"
  fullName: InscryptionAPI.Guid.GuidManager.GetValues
  nameWithType: GuidManager.GetValues
- uid: InscryptionAPI.Guid.GuidManager.GetValues``1
  name: GetValues<T>()
  href: api/InscryptionAPI.Guid.GuidManager.html#InscryptionAPI_Guid_GuidManager_GetValues__1
  commentId: M:InscryptionAPI.Guid.GuidManager.GetValues``1
  name.vb: GetValues(Of T)()
  fullName: InscryptionAPI.Guid.GuidManager.GetValues<T>()
  fullName.vb: InscryptionAPI.Guid.GuidManager.GetValues(Of T)()
  nameWithType: GuidManager.GetValues<T>()
  nameWithType.vb: GuidManager.GetValues(Of T)()
- uid: InscryptionAPI.Guid.GuidManager.MAX_DATA
  name: MAX_DATA
  href: api/InscryptionAPI.Guid.GuidManager.html#InscryptionAPI_Guid_GuidManager_MAX_DATA
  commentId: F:InscryptionAPI.Guid.GuidManager.MAX_DATA
  fullName: InscryptionAPI.Guid.GuidManager.MAX_DATA
  nameWithType: GuidManager.MAX_DATA
- uid: InscryptionAPI.Guid.GuidManager.START_INDEX
  name: START_INDEX
  href: api/InscryptionAPI.Guid.GuidManager.html#InscryptionAPI_Guid_GuidManager_START_INDEX
  commentId: F:InscryptionAPI.Guid.GuidManager.START_INDEX
  fullName: InscryptionAPI.Guid.GuidManager.START_INDEX
  nameWithType: GuidManager.START_INDEX
- uid: InscryptionAPI.Guid.TypeManager
  name: TypeManager
  href: api/InscryptionAPI.Guid.TypeManager.html
  commentId: T:InscryptionAPI.Guid.TypeManager
  fullName: InscryptionAPI.Guid.TypeManager
  nameWithType: TypeManager
- uid: InscryptionAPI.Guid.TypeManager.GetCustomType(System.String,System.String,Type@)
  name: GetCustomType(String, String, ref Type)
  href: api/InscryptionAPI.Guid.TypeManager.html#InscryptionAPI_Guid_TypeManager_GetCustomType_System_String_System_String_Type__
  commentId: M:InscryptionAPI.Guid.TypeManager.GetCustomType(System.String,System.String,Type@)
  name.vb: GetCustomType(String, String, ByRef Type)
  fullName: InscryptionAPI.Guid.TypeManager.GetCustomType(System.String, System.String, ref Type)
  fullName.vb: InscryptionAPI.Guid.TypeManager.GetCustomType(System.String, System.String, ByRef Type)
  nameWithType: TypeManager.GetCustomType(String, String, ref Type)
  nameWithType.vb: TypeManager.GetCustomType(String, String, ByRef Type)
- uid: InscryptionAPI.Guid.TypeManager.GetCustomType*
  name: GetCustomType
  href: api/InscryptionAPI.Guid.TypeManager.html#InscryptionAPI_Guid_TypeManager_GetCustomType_
  commentId: Overload:InscryptionAPI.Guid.TypeManager.GetCustomType
  isSpec: "True"
  fullName: InscryptionAPI.Guid.TypeManager.GetCustomType
  nameWithType: TypeManager.GetCustomType
- uid: InscryptionAPI.Guid.TypeManager.GetModIdFromCallstack(System.Reflection.Assembly)
  name: GetModIdFromCallstack(Assembly)
  href: api/InscryptionAPI.Guid.TypeManager.html#InscryptionAPI_Guid_TypeManager_GetModIdFromCallstack_System_Reflection_Assembly_
  commentId: M:InscryptionAPI.Guid.TypeManager.GetModIdFromCallstack(System.Reflection.Assembly)
  fullName: InscryptionAPI.Guid.TypeManager.GetModIdFromCallstack(System.Reflection.Assembly)
  nameWithType: TypeManager.GetModIdFromCallstack(Assembly)
- uid: InscryptionAPI.Guid.TypeManager.GetModIdFromCallstack*
  name: GetModIdFromCallstack
  href: api/InscryptionAPI.Guid.TypeManager.html#InscryptionAPI_Guid_TypeManager_GetModIdFromCallstack_
  commentId: Overload:InscryptionAPI.Guid.TypeManager.GetModIdFromCallstack
  isSpec: "True"
  fullName: InscryptionAPI.Guid.TypeManager.GetModIdFromCallstack
  nameWithType: TypeManager.GetModIdFromCallstack
- uid: InscryptionAPI.Guid.TypeManager.OriginalGetType(System.String,System.String)
  name: OriginalGetType(String, String)
  href: api/InscryptionAPI.Guid.TypeManager.html#InscryptionAPI_Guid_TypeManager_OriginalGetType_System_String_System_String_
  commentId: M:InscryptionAPI.Guid.TypeManager.OriginalGetType(System.String,System.String)
  fullName: InscryptionAPI.Guid.TypeManager.OriginalGetType(System.String, System.String)
  nameWithType: TypeManager.OriginalGetType(String, String)
- uid: InscryptionAPI.Guid.TypeManager.OriginalGetType*
  name: OriginalGetType
  href: api/InscryptionAPI.Guid.TypeManager.html#InscryptionAPI_Guid_TypeManager_OriginalGetType_
  commentId: Overload:InscryptionAPI.Guid.TypeManager.OriginalGetType
  isSpec: "True"
  fullName: InscryptionAPI.Guid.TypeManager.OriginalGetType
  nameWithType: TypeManager.OriginalGetType
- uid: InscryptionAPI.Helpers
  name: InscryptionAPI.Helpers
  href: api/InscryptionAPI.Helpers.html
  commentId: N:InscryptionAPI.Helpers
  fullName: InscryptionAPI.Helpers
  nameWithType: InscryptionAPI.Helpers
- uid: InscryptionAPI.Helpers.Extensions
  name: InscryptionAPI.Helpers.Extensions
  href: api/InscryptionAPI.Helpers.Extensions.html
  commentId: N:InscryptionAPI.Helpers.Extensions
  fullName: InscryptionAPI.Helpers.Extensions
  nameWithType: InscryptionAPI.Helpers.Extensions
- uid: InscryptionAPI.Helpers.Extensions.BoardManagerExtensions
  name: BoardManagerExtensions
  href: api/InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.html
  commentId: T:InscryptionAPI.Helpers.Extensions.BoardManagerExtensions
  fullName: InscryptionAPI.Helpers.Extensions.BoardManagerExtensions
  nameWithType: BoardManagerExtensions
- uid: InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetOpponentCards(DiskCardGame.BoardManager,Predicate{DiskCardGame.PlayableCard})
  name: GetOpponentCards(BoardManager, Predicate<PlayableCard>)
  href: api/InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.html#InscryptionAPI_Helpers_Extensions_BoardManagerExtensions_GetOpponentCards_DiskCardGame_BoardManager_Predicate_DiskCardGame_PlayableCard__
  commentId: M:InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetOpponentCards(DiskCardGame.BoardManager,Predicate{DiskCardGame.PlayableCard})
  name.vb: GetOpponentCards(BoardManager, Predicate(Of PlayableCard))
  fullName: InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetOpponentCards(DiskCardGame.BoardManager, Predicate<DiskCardGame.PlayableCard>)
  fullName.vb: InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetOpponentCards(DiskCardGame.BoardManager, Predicate(Of DiskCardGame.PlayableCard))
  nameWithType: BoardManagerExtensions.GetOpponentCards(BoardManager, Predicate<PlayableCard>)
  nameWithType.vb: BoardManagerExtensions.GetOpponentCards(BoardManager, Predicate(Of PlayableCard))
- uid: InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetOpponentCards*
  name: GetOpponentCards
  href: api/InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.html#InscryptionAPI_Helpers_Extensions_BoardManagerExtensions_GetOpponentCards_
  commentId: Overload:InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetOpponentCards
  isSpec: "True"
  fullName: InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetOpponentCards
  nameWithType: BoardManagerExtensions.GetOpponentCards
- uid: InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetOpponentOpenSlots(DiskCardGame.BoardManager,Predicate{DiskCardGame.CardSlot})
  name: GetOpponentOpenSlots(BoardManager, Predicate<CardSlot>)
  href: api/InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.html#InscryptionAPI_Helpers_Extensions_BoardManagerExtensions_GetOpponentOpenSlots_DiskCardGame_BoardManager_Predicate_DiskCardGame_CardSlot__
  commentId: M:InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetOpponentOpenSlots(DiskCardGame.BoardManager,Predicate{DiskCardGame.CardSlot})
  name.vb: GetOpponentOpenSlots(BoardManager, Predicate(Of CardSlot))
  fullName: InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetOpponentOpenSlots(DiskCardGame.BoardManager, Predicate<DiskCardGame.CardSlot>)
  fullName.vb: InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetOpponentOpenSlots(DiskCardGame.BoardManager, Predicate(Of DiskCardGame.CardSlot))
  nameWithType: BoardManagerExtensions.GetOpponentOpenSlots(BoardManager, Predicate<CardSlot>)
  nameWithType.vb: BoardManagerExtensions.GetOpponentOpenSlots(BoardManager, Predicate(Of CardSlot))
- uid: InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetOpponentOpenSlots*
  name: GetOpponentOpenSlots
  href: api/InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.html#InscryptionAPI_Helpers_Extensions_BoardManagerExtensions_GetOpponentOpenSlots_
  commentId: Overload:InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetOpponentOpenSlots
  isSpec: "True"
  fullName: InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetOpponentOpenSlots
  nameWithType: BoardManagerExtensions.GetOpponentOpenSlots
- uid: InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetPlayerCards(DiskCardGame.BoardManager,Predicate{DiskCardGame.PlayableCard})
  name: GetPlayerCards(BoardManager, Predicate<PlayableCard>)
  href: api/InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.html#InscryptionAPI_Helpers_Extensions_BoardManagerExtensions_GetPlayerCards_DiskCardGame_BoardManager_Predicate_DiskCardGame_PlayableCard__
  commentId: M:InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetPlayerCards(DiskCardGame.BoardManager,Predicate{DiskCardGame.PlayableCard})
  name.vb: GetPlayerCards(BoardManager, Predicate(Of PlayableCard))
  fullName: InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetPlayerCards(DiskCardGame.BoardManager, Predicate<DiskCardGame.PlayableCard>)
  fullName.vb: InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetPlayerCards(DiskCardGame.BoardManager, Predicate(Of DiskCardGame.PlayableCard))
  nameWithType: BoardManagerExtensions.GetPlayerCards(BoardManager, Predicate<PlayableCard>)
  nameWithType.vb: BoardManagerExtensions.GetPlayerCards(BoardManager, Predicate(Of PlayableCard))
- uid: InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetPlayerCards*
  name: GetPlayerCards
  href: api/InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.html#InscryptionAPI_Helpers_Extensions_BoardManagerExtensions_GetPlayerCards_
  commentId: Overload:InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetPlayerCards
  isSpec: "True"
  fullName: InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetPlayerCards
  nameWithType: BoardManagerExtensions.GetPlayerCards
- uid: InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetPlayerOpenSlots(DiskCardGame.BoardManager,Predicate{DiskCardGame.CardSlot})
  name: GetPlayerOpenSlots(BoardManager, Predicate<CardSlot>)
  href: api/InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.html#InscryptionAPI_Helpers_Extensions_BoardManagerExtensions_GetPlayerOpenSlots_DiskCardGame_BoardManager_Predicate_DiskCardGame_CardSlot__
  commentId: M:InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetPlayerOpenSlots(DiskCardGame.BoardManager,Predicate{DiskCardGame.CardSlot})
  name.vb: GetPlayerOpenSlots(BoardManager, Predicate(Of CardSlot))
  fullName: InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetPlayerOpenSlots(DiskCardGame.BoardManager, Predicate<DiskCardGame.CardSlot>)
  fullName.vb: InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetPlayerOpenSlots(DiskCardGame.BoardManager, Predicate(Of DiskCardGame.CardSlot))
  nameWithType: BoardManagerExtensions.GetPlayerOpenSlots(BoardManager, Predicate<CardSlot>)
  nameWithType.vb: BoardManagerExtensions.GetPlayerOpenSlots(BoardManager, Predicate(Of CardSlot))
- uid: InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetPlayerOpenSlots*
  name: GetPlayerOpenSlots
  href: api/InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.html#InscryptionAPI_Helpers_Extensions_BoardManagerExtensions_GetPlayerOpenSlots_
  commentId: Overload:InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetPlayerOpenSlots
  isSpec: "True"
  fullName: InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetPlayerOpenSlots
  nameWithType: BoardManagerExtensions.GetPlayerOpenSlots
- uid: InscryptionAPI.Helpers.Extensions.CardSlotExtensions
  name: CardSlotExtensions
  href: api/InscryptionAPI.Helpers.Extensions.CardSlotExtensions.html
  commentId: T:InscryptionAPI.Helpers.Extensions.CardSlotExtensions
  fullName: InscryptionAPI.Helpers.Extensions.CardSlotExtensions
  nameWithType: CardSlotExtensions
- uid: InscryptionAPI.Helpers.Extensions.CardSlotExtensions.GetCards(IEnumerable{DiskCardGame.CardSlot},Predicate{DiskCardGame.PlayableCard})
  name: GetCards(IEnumerable<CardSlot>, Predicate<PlayableCard>)
  href: api/InscryptionAPI.Helpers.Extensions.CardSlotExtensions.html#InscryptionAPI_Helpers_Extensions_CardSlotExtensions_GetCards_IEnumerable_DiskCardGame_CardSlot__Predicate_DiskCardGame_PlayableCard__
  commentId: M:InscryptionAPI.Helpers.Extensions.CardSlotExtensions.GetCards(IEnumerable{DiskCardGame.CardSlot},Predicate{DiskCardGame.PlayableCard})
  name.vb: GetCards(IEnumerable(Of CardSlot), Predicate(Of PlayableCard))
  fullName: InscryptionAPI.Helpers.Extensions.CardSlotExtensions.GetCards(IEnumerable<DiskCardGame.CardSlot>, Predicate<DiskCardGame.PlayableCard>)
  fullName.vb: InscryptionAPI.Helpers.Extensions.CardSlotExtensions.GetCards(IEnumerable(Of DiskCardGame.CardSlot), Predicate(Of DiskCardGame.PlayableCard))
  nameWithType: CardSlotExtensions.GetCards(IEnumerable<CardSlot>, Predicate<PlayableCard>)
  nameWithType.vb: CardSlotExtensions.GetCards(IEnumerable(Of CardSlot), Predicate(Of PlayableCard))
- uid: InscryptionAPI.Helpers.Extensions.CardSlotExtensions.GetCards*
  name: GetCards
  href: api/InscryptionAPI.Helpers.Extensions.CardSlotExtensions.html#InscryptionAPI_Helpers_Extensions_CardSlotExtensions_GetCards_
  commentId: Overload:InscryptionAPI.Helpers.Extensions.CardSlotExtensions.GetCards
  isSpec: "True"
  fullName: InscryptionAPI.Helpers.Extensions.CardSlotExtensions.GetCards
  nameWithType: CardSlotExtensions.GetCards
- uid: InscryptionAPI.Helpers.Extensions.CardSlotExtensions.OpenSlots(IEnumerable{DiskCardGame.CardSlot},Predicate{DiskCardGame.CardSlot})
  name: OpenSlots(IEnumerable<CardSlot>, Predicate<CardSlot>)
  href: api/InscryptionAPI.Helpers.Extensions.CardSlotExtensions.html#InscryptionAPI_Helpers_Extensions_CardSlotExtensions_OpenSlots_IEnumerable_DiskCardGame_CardSlot__Predicate_DiskCardGame_CardSlot__
  commentId: M:InscryptionAPI.Helpers.Extensions.CardSlotExtensions.OpenSlots(IEnumerable{DiskCardGame.CardSlot},Predicate{DiskCardGame.CardSlot})
  name.vb: OpenSlots(IEnumerable(Of CardSlot), Predicate(Of CardSlot))
  fullName: InscryptionAPI.Helpers.Extensions.CardSlotExtensions.OpenSlots(IEnumerable<DiskCardGame.CardSlot>, Predicate<DiskCardGame.CardSlot>)
  fullName.vb: InscryptionAPI.Helpers.Extensions.CardSlotExtensions.OpenSlots(IEnumerable(Of DiskCardGame.CardSlot), Predicate(Of DiskCardGame.CardSlot))
  nameWithType: CardSlotExtensions.OpenSlots(IEnumerable<CardSlot>, Predicate<CardSlot>)
  nameWithType.vb: CardSlotExtensions.OpenSlots(IEnumerable(Of CardSlot), Predicate(Of CardSlot))
- uid: InscryptionAPI.Helpers.Extensions.CardSlotExtensions.OpenSlots*
  name: OpenSlots
  href: api/InscryptionAPI.Helpers.Extensions.CardSlotExtensions.html#InscryptionAPI_Helpers_Extensions_CardSlotExtensions_OpenSlots_
  commentId: Overload:InscryptionAPI.Helpers.Extensions.CardSlotExtensions.OpenSlots
  isSpec: "True"
  fullName: InscryptionAPI.Helpers.Extensions.CardSlotExtensions.OpenSlots
  nameWithType: CardSlotExtensions.OpenSlots
- uid: InscryptionAPI.Helpers.TextureHelper
  name: TextureHelper
  href: api/InscryptionAPI.Helpers.TextureHelper.html
  commentId: T:InscryptionAPI.Helpers.TextureHelper
  fullName: InscryptionAPI.Helpers.TextureHelper
  nameWithType: TextureHelper
- uid: InscryptionAPI.Helpers.TextureHelper.CombineTextures(List{UnityEngine.Texture2D},UnityEngine.Texture2D,System.Int32,System.Int32,System.Int32,System.Int32)
  name: CombineTextures(List<Texture2D>, Texture2D, Int32, Int32, Int32, Int32)
  href: api/InscryptionAPI.Helpers.TextureHelper.html#InscryptionAPI_Helpers_TextureHelper_CombineTextures_List_UnityEngine_Texture2D__UnityEngine_Texture2D_System_Int32_System_Int32_System_Int32_System_Int32_
  commentId: M:InscryptionAPI.Helpers.TextureHelper.CombineTextures(List{UnityEngine.Texture2D},UnityEngine.Texture2D,System.Int32,System.Int32,System.Int32,System.Int32)
  name.vb: CombineTextures(List(Of Texture2D), Texture2D, Int32, Int32, Int32, Int32)
  fullName: InscryptionAPI.Helpers.TextureHelper.CombineTextures(List<UnityEngine.Texture2D>, UnityEngine.Texture2D, System.Int32, System.Int32, System.Int32, System.Int32)
  fullName.vb: InscryptionAPI.Helpers.TextureHelper.CombineTextures(List(Of UnityEngine.Texture2D), UnityEngine.Texture2D, System.Int32, System.Int32, System.Int32, System.Int32)
  nameWithType: TextureHelper.CombineTextures(List<Texture2D>, Texture2D, Int32, Int32, Int32, Int32)
  nameWithType.vb: TextureHelper.CombineTextures(List(Of Texture2D), Texture2D, Int32, Int32, Int32, Int32)
- uid: InscryptionAPI.Helpers.TextureHelper.CombineTextures*
  name: CombineTextures
  href: api/InscryptionAPI.Helpers.TextureHelper.html#InscryptionAPI_Helpers_TextureHelper_CombineTextures_
  commentId: Overload:InscryptionAPI.Helpers.TextureHelper.CombineTextures
  isSpec: "True"
  fullName: InscryptionAPI.Helpers.TextureHelper.CombineTextures
  nameWithType: TextureHelper.CombineTextures
- uid: InscryptionAPI.Helpers.TextureHelper.ConvertTexture(UnityEngine.Texture2D,InscryptionAPI.Helpers.TextureHelper.SpriteType,UnityEngine.FilterMode)
  name: ConvertTexture(Texture2D, TextureHelper.SpriteType, FilterMode)
  href: api/InscryptionAPI.Helpers.TextureHelper.html#InscryptionAPI_Helpers_TextureHelper_ConvertTexture_UnityEngine_Texture2D_InscryptionAPI_Helpers_TextureHelper_SpriteType_UnityEngine_FilterMode_
  commentId: M:InscryptionAPI.Helpers.TextureHelper.ConvertTexture(UnityEngine.Texture2D,InscryptionAPI.Helpers.TextureHelper.SpriteType,UnityEngine.FilterMode)
  fullName: InscryptionAPI.Helpers.TextureHelper.ConvertTexture(UnityEngine.Texture2D, InscryptionAPI.Helpers.TextureHelper.SpriteType, UnityEngine.FilterMode)
  nameWithType: TextureHelper.ConvertTexture(Texture2D, TextureHelper.SpriteType, FilterMode)
- uid: InscryptionAPI.Helpers.TextureHelper.ConvertTexture(UnityEngine.Texture2D,System.Nullable{UnityEngine.Vector2})
  name: ConvertTexture(Texture2D, Nullable<Vector2>)
  href: api/InscryptionAPI.Helpers.TextureHelper.html#InscryptionAPI_Helpers_TextureHelper_ConvertTexture_UnityEngine_Texture2D_System_Nullable_UnityEngine_Vector2__
  commentId: M:InscryptionAPI.Helpers.TextureHelper.ConvertTexture(UnityEngine.Texture2D,System.Nullable{UnityEngine.Vector2})
  name.vb: ConvertTexture(Texture2D, Nullable(Of Vector2))
  fullName: InscryptionAPI.Helpers.TextureHelper.ConvertTexture(UnityEngine.Texture2D, System.Nullable<UnityEngine.Vector2>)
  fullName.vb: InscryptionAPI.Helpers.TextureHelper.ConvertTexture(UnityEngine.Texture2D, System.Nullable(Of UnityEngine.Vector2))
  nameWithType: TextureHelper.ConvertTexture(Texture2D, Nullable<Vector2>)
  nameWithType.vb: TextureHelper.ConvertTexture(Texture2D, Nullable(Of Vector2))
- uid: InscryptionAPI.Helpers.TextureHelper.ConvertTexture*
  name: ConvertTexture
  href: api/InscryptionAPI.Helpers.TextureHelper.html#InscryptionAPI_Helpers_TextureHelper_ConvertTexture_
  commentId: Overload:InscryptionAPI.Helpers.TextureHelper.ConvertTexture
  isSpec: "True"
  fullName: InscryptionAPI.Helpers.TextureHelper.ConvertTexture
  nameWithType: TextureHelper.ConvertTexture
- uid: InscryptionAPI.Helpers.TextureHelper.GetImageAsSprite(System.String,InscryptionAPI.Helpers.TextureHelper.SpriteType,UnityEngine.FilterMode)
  name: GetImageAsSprite(String, TextureHelper.SpriteType, FilterMode)
  href: api/InscryptionAPI.Helpers.TextureHelper.html#InscryptionAPI_Helpers_TextureHelper_GetImageAsSprite_System_String_InscryptionAPI_Helpers_TextureHelper_SpriteType_UnityEngine_FilterMode_
  commentId: M:InscryptionAPI.Helpers.TextureHelper.GetImageAsSprite(System.String,InscryptionAPI.Helpers.TextureHelper.SpriteType,UnityEngine.FilterMode)
  fullName: InscryptionAPI.Helpers.TextureHelper.GetImageAsSprite(System.String, InscryptionAPI.Helpers.TextureHelper.SpriteType, UnityEngine.FilterMode)
  nameWithType: TextureHelper.GetImageAsSprite(String, TextureHelper.SpriteType, FilterMode)
- uid: InscryptionAPI.Helpers.TextureHelper.GetImageAsSprite*
  name: GetImageAsSprite
  href: api/InscryptionAPI.Helpers.TextureHelper.html#InscryptionAPI_Helpers_TextureHelper_GetImageAsSprite_
  commentId: Overload:InscryptionAPI.Helpers.TextureHelper.GetImageAsSprite
  isSpec: "True"
  fullName: InscryptionAPI.Helpers.TextureHelper.GetImageAsSprite
  nameWithType: TextureHelper.GetImageAsSprite
- uid: InscryptionAPI.Helpers.TextureHelper.GetImageAsTexture(System.String,System.Reflection.Assembly,UnityEngine.FilterMode)
  name: GetImageAsTexture(String, Assembly, FilterMode)
  href: api/InscryptionAPI.Helpers.TextureHelper.html#InscryptionAPI_Helpers_TextureHelper_GetImageAsTexture_System_String_System_Reflection_Assembly_UnityEngine_FilterMode_
  commentId: M:InscryptionAPI.Helpers.TextureHelper.GetImageAsTexture(System.String,System.Reflection.Assembly,UnityEngine.FilterMode)
  fullName: InscryptionAPI.Helpers.TextureHelper.GetImageAsTexture(System.String, System.Reflection.Assembly, UnityEngine.FilterMode)
  nameWithType: TextureHelper.GetImageAsTexture(String, Assembly, FilterMode)
- uid: InscryptionAPI.Helpers.TextureHelper.GetImageAsTexture(System.String,UnityEngine.FilterMode)
  name: GetImageAsTexture(String, FilterMode)
  href: api/InscryptionAPI.Helpers.TextureHelper.html#InscryptionAPI_Helpers_TextureHelper_GetImageAsTexture_System_String_UnityEngine_FilterMode_
  commentId: M:InscryptionAPI.Helpers.TextureHelper.GetImageAsTexture(System.String,UnityEngine.FilterMode)
  fullName: InscryptionAPI.Helpers.TextureHelper.GetImageAsTexture(System.String, UnityEngine.FilterMode)
  nameWithType: TextureHelper.GetImageAsTexture(String, FilterMode)
- uid: InscryptionAPI.Helpers.TextureHelper.GetImageAsTexture*
  name: GetImageAsTexture
  href: api/InscryptionAPI.Helpers.TextureHelper.html#InscryptionAPI_Helpers_TextureHelper_GetImageAsTexture_
  commentId: Overload:InscryptionAPI.Helpers.TextureHelper.GetImageAsTexture
  isSpec: "True"
  fullName: InscryptionAPI.Helpers.TextureHelper.GetImageAsTexture
  nameWithType: TextureHelper.GetImageAsTexture
- uid: InscryptionAPI.Helpers.TextureHelper.GetResourceBytes(System.String,System.Reflection.Assembly)
  name: GetResourceBytes(String, Assembly)
  href: api/InscryptionAPI.Helpers.TextureHelper.html#InscryptionAPI_Helpers_TextureHelper_GetResourceBytes_System_String_System_Reflection_Assembly_
  commentId: M:InscryptionAPI.Helpers.TextureHelper.GetResourceBytes(System.String,System.Reflection.Assembly)
  fullName: InscryptionAPI.Helpers.TextureHelper.GetResourceBytes(System.String, System.Reflection.Assembly)
  nameWithType: TextureHelper.GetResourceBytes(String, Assembly)
- uid: InscryptionAPI.Helpers.TextureHelper.GetResourceBytes*
  name: GetResourceBytes
  href: api/InscryptionAPI.Helpers.TextureHelper.html#InscryptionAPI_Helpers_TextureHelper_GetResourceBytes_
  commentId: Overload:InscryptionAPI.Helpers.TextureHelper.GetResourceBytes
  isSpec: "True"
  fullName: InscryptionAPI.Helpers.TextureHelper.GetResourceBytes
  nameWithType: TextureHelper.GetResourceBytes
- uid: InscryptionAPI.Helpers.TextureHelper.ReadArtworkFileAsBytes(System.String)
  name: ReadArtworkFileAsBytes(String)
  href: api/InscryptionAPI.Helpers.TextureHelper.html#InscryptionAPI_Helpers_TextureHelper_ReadArtworkFileAsBytes_System_String_
  commentId: M:InscryptionAPI.Helpers.TextureHelper.ReadArtworkFileAsBytes(System.String)
  fullName: InscryptionAPI.Helpers.TextureHelper.ReadArtworkFileAsBytes(System.String)
  nameWithType: TextureHelper.ReadArtworkFileAsBytes(String)
- uid: InscryptionAPI.Helpers.TextureHelper.ReadArtworkFileAsBytes*
  name: ReadArtworkFileAsBytes
  href: api/InscryptionAPI.Helpers.TextureHelper.html#InscryptionAPI_Helpers_TextureHelper_ReadArtworkFileAsBytes_
  commentId: Overload:InscryptionAPI.Helpers.TextureHelper.ReadArtworkFileAsBytes
  isSpec: "True"
  fullName: InscryptionAPI.Helpers.TextureHelper.ReadArtworkFileAsBytes
  nameWithType: TextureHelper.ReadArtworkFileAsBytes
- uid: InscryptionAPI.Helpers.TextureHelper.RegisterEmissionForSprite(UnityEngine.Sprite,System.String,InscryptionAPI.Helpers.TextureHelper.SpriteType,UnityEngine.FilterMode)
  name: RegisterEmissionForSprite(Sprite, String, TextureHelper.SpriteType, FilterMode)
  href: api/InscryptionAPI.Helpers.TextureHelper.html#InscryptionAPI_Helpers_TextureHelper_RegisterEmissionForSprite_UnityEngine_Sprite_System_String_InscryptionAPI_Helpers_TextureHelper_SpriteType_UnityEngine_FilterMode_
  commentId: M:InscryptionAPI.Helpers.TextureHelper.RegisterEmissionForSprite(UnityEngine.Sprite,System.String,InscryptionAPI.Helpers.TextureHelper.SpriteType,UnityEngine.FilterMode)
  fullName: InscryptionAPI.Helpers.TextureHelper.RegisterEmissionForSprite(UnityEngine.Sprite, System.String, InscryptionAPI.Helpers.TextureHelper.SpriteType, UnityEngine.FilterMode)
  nameWithType: TextureHelper.RegisterEmissionForSprite(Sprite, String, TextureHelper.SpriteType, FilterMode)
- uid: InscryptionAPI.Helpers.TextureHelper.RegisterEmissionForSprite(UnityEngine.Sprite,UnityEngine.Sprite)
  name: RegisterEmissionForSprite(Sprite, Sprite)
  href: api/InscryptionAPI.Helpers.TextureHelper.html#InscryptionAPI_Helpers_TextureHelper_RegisterEmissionForSprite_UnityEngine_Sprite_UnityEngine_Sprite_
  commentId: M:InscryptionAPI.Helpers.TextureHelper.RegisterEmissionForSprite(UnityEngine.Sprite,UnityEngine.Sprite)
  fullName: InscryptionAPI.Helpers.TextureHelper.RegisterEmissionForSprite(UnityEngine.Sprite, UnityEngine.Sprite)
  nameWithType: TextureHelper.RegisterEmissionForSprite(Sprite, Sprite)
- uid: InscryptionAPI.Helpers.TextureHelper.RegisterEmissionForSprite(UnityEngine.Sprite,UnityEngine.Texture2D,InscryptionAPI.Helpers.TextureHelper.SpriteType,UnityEngine.FilterMode)
  name: RegisterEmissionForSprite(Sprite, Texture2D, TextureHelper.SpriteType, FilterMode)
  href: api/InscryptionAPI.Helpers.TextureHelper.html#InscryptionAPI_Helpers_TextureHelper_RegisterEmissionForSprite_UnityEngine_Sprite_UnityEngine_Texture2D_InscryptionAPI_Helpers_TextureHelper_SpriteType_UnityEngine_FilterMode_
  commentId: M:InscryptionAPI.Helpers.TextureHelper.RegisterEmissionForSprite(UnityEngine.Sprite,UnityEngine.Texture2D,InscryptionAPI.Helpers.TextureHelper.SpriteType,UnityEngine.FilterMode)
  fullName: InscryptionAPI.Helpers.TextureHelper.RegisterEmissionForSprite(UnityEngine.Sprite, UnityEngine.Texture2D, InscryptionAPI.Helpers.TextureHelper.SpriteType, UnityEngine.FilterMode)
  nameWithType: TextureHelper.RegisterEmissionForSprite(Sprite, Texture2D, TextureHelper.SpriteType, FilterMode)
- uid: InscryptionAPI.Helpers.TextureHelper.RegisterEmissionForSprite*
  name: RegisterEmissionForSprite
  href: api/InscryptionAPI.Helpers.TextureHelper.html#InscryptionAPI_Helpers_TextureHelper_RegisterEmissionForSprite_
  commentId: Overload:InscryptionAPI.Helpers.TextureHelper.RegisterEmissionForSprite
  isSpec: "True"
  fullName: InscryptionAPI.Helpers.TextureHelper.RegisterEmissionForSprite
  nameWithType: TextureHelper.RegisterEmissionForSprite
- uid: InscryptionAPI.Helpers.TextureHelper.SpriteType
  name: TextureHelper.SpriteType
  href: api/InscryptionAPI.Helpers.TextureHelper.SpriteType.html
  commentId: T:InscryptionAPI.Helpers.TextureHelper.SpriteType
  fullName: InscryptionAPI.Helpers.TextureHelper.SpriteType
  nameWithType: TextureHelper.SpriteType
- uid: InscryptionAPI.Helpers.TextureHelper.SpriteType.Act2CostDecalLeft
  name: Act2CostDecalLeft
  href: api/InscryptionAPI.Helpers.TextureHelper.SpriteType.html#InscryptionAPI_Helpers_TextureHelper_SpriteType_Act2CostDecalLeft
  commentId: F:InscryptionAPI.Helpers.TextureHelper.SpriteType.Act2CostDecalLeft
  fullName: InscryptionAPI.Helpers.TextureHelper.SpriteType.Act2CostDecalLeft
  nameWithType: TextureHelper.SpriteType.Act2CostDecalLeft
- uid: InscryptionAPI.Helpers.TextureHelper.SpriteType.Act2CostDecalRight
  name: Act2CostDecalRight
  href: api/InscryptionAPI.Helpers.TextureHelper.SpriteType.html#InscryptionAPI_Helpers_TextureHelper_SpriteType_Act2CostDecalRight
  commentId: F:InscryptionAPI.Helpers.TextureHelper.SpriteType.Act2CostDecalRight
  fullName: InscryptionAPI.Helpers.TextureHelper.SpriteType.Act2CostDecalRight
  nameWithType: TextureHelper.SpriteType.Act2CostDecalRight
- uid: InscryptionAPI.Helpers.TextureHelper.SpriteType.CardPortrait
  name: CardPortrait
  href: api/InscryptionAPI.Helpers.TextureHelper.SpriteType.html#InscryptionAPI_Helpers_TextureHelper_SpriteType_CardPortrait
  commentId: F:InscryptionAPI.Helpers.TextureHelper.SpriteType.CardPortrait
  fullName: InscryptionAPI.Helpers.TextureHelper.SpriteType.CardPortrait
  nameWithType: TextureHelper.SpriteType.CardPortrait
- uid: InscryptionAPI.Helpers.TextureHelper.SpriteType.ChallengeIcon
  name: ChallengeIcon
  href: api/InscryptionAPI.Helpers.TextureHelper.SpriteType.html#InscryptionAPI_Helpers_TextureHelper_SpriteType_ChallengeIcon
  commentId: F:InscryptionAPI.Helpers.TextureHelper.SpriteType.ChallengeIcon
  fullName: InscryptionAPI.Helpers.TextureHelper.SpriteType.ChallengeIcon
  nameWithType: TextureHelper.SpriteType.ChallengeIcon
- uid: InscryptionAPI.Helpers.TextureHelper.SpriteType.CostDecal
  name: CostDecal
  href: api/InscryptionAPI.Helpers.TextureHelper.SpriteType.html#InscryptionAPI_Helpers_TextureHelper_SpriteType_CostDecal
  commentId: F:InscryptionAPI.Helpers.TextureHelper.SpriteType.CostDecal
  fullName: InscryptionAPI.Helpers.TextureHelper.SpriteType.CostDecal
  nameWithType: TextureHelper.SpriteType.CostDecal
- uid: InscryptionAPI.Helpers.TextureHelper.SpriteType.OversizedCostDecal
  name: OversizedCostDecal
  href: api/InscryptionAPI.Helpers.TextureHelper.SpriteType.html#InscryptionAPI_Helpers_TextureHelper_SpriteType_OversizedCostDecal
  commentId: F:InscryptionAPI.Helpers.TextureHelper.SpriteType.OversizedCostDecal
  fullName: InscryptionAPI.Helpers.TextureHelper.SpriteType.OversizedCostDecal
  nameWithType: TextureHelper.SpriteType.OversizedCostDecal
- uid: InscryptionAPI.Helpers.TextureHelper.SpriteType.PixelAbilityIcon
  name: PixelAbilityIcon
  href: api/InscryptionAPI.Helpers.TextureHelper.SpriteType.html#InscryptionAPI_Helpers_TextureHelper_SpriteType_PixelAbilityIcon
  commentId: F:InscryptionAPI.Helpers.TextureHelper.SpriteType.PixelAbilityIcon
  fullName: InscryptionAPI.Helpers.TextureHelper.SpriteType.PixelAbilityIcon
  nameWithType: TextureHelper.SpriteType.PixelAbilityIcon
- uid: InscryptionAPI.Helpers.TextureHelper.SpriteType.PixelPortrait
  name: PixelPortrait
  href: api/InscryptionAPI.Helpers.TextureHelper.SpriteType.html#InscryptionAPI_Helpers_TextureHelper_SpriteType_PixelPortrait
  commentId: F:InscryptionAPI.Helpers.TextureHelper.SpriteType.PixelPortrait
  fullName: InscryptionAPI.Helpers.TextureHelper.SpriteType.PixelPortrait
  nameWithType: TextureHelper.SpriteType.PixelPortrait
- uid: InscryptionAPI.Helpers.TextureHelper.SpriteType.PixelStatIcon
  name: PixelStatIcon
  href: api/InscryptionAPI.Helpers.TextureHelper.SpriteType.html#InscryptionAPI_Helpers_TextureHelper_SpriteType_PixelStatIcon
  commentId: F:InscryptionAPI.Helpers.TextureHelper.SpriteType.PixelStatIcon
  fullName: InscryptionAPI.Helpers.TextureHelper.SpriteType.PixelStatIcon
  nameWithType: TextureHelper.SpriteType.PixelStatIcon
- uid: InscryptionAPI.Helpers.TextureHelper.SpriteType.StarterDeckIcon
  name: StarterDeckIcon
  href: api/InscryptionAPI.Helpers.TextureHelper.SpriteType.html#InscryptionAPI_Helpers_TextureHelper_SpriteType_StarterDeckIcon
  commentId: F:InscryptionAPI.Helpers.TextureHelper.SpriteType.StarterDeckIcon
  fullName: InscryptionAPI.Helpers.TextureHelper.SpriteType.StarterDeckIcon
  nameWithType: TextureHelper.SpriteType.StarterDeckIcon
- uid: InscryptionAPI.Helpers.TextureHelper.TryReuseEmission(DiskCardGame.CardInfo,UnityEngine.Sprite)
  name: TryReuseEmission(CardInfo, Sprite)
  href: api/InscryptionAPI.Helpers.TextureHelper.html#InscryptionAPI_Helpers_TextureHelper_TryReuseEmission_DiskCardGame_CardInfo_UnityEngine_Sprite_
  commentId: M:InscryptionAPI.Helpers.TextureHelper.TryReuseEmission(DiskCardGame.CardInfo,UnityEngine.Sprite)
  fullName: InscryptionAPI.Helpers.TextureHelper.TryReuseEmission(DiskCardGame.CardInfo, UnityEngine.Sprite)
  nameWithType: TextureHelper.TryReuseEmission(CardInfo, Sprite)
- uid: InscryptionAPI.Helpers.TextureHelper.TryReuseEmission*
  name: TryReuseEmission
  href: api/InscryptionAPI.Helpers.TextureHelper.html#InscryptionAPI_Helpers_TextureHelper_TryReuseEmission_
  commentId: Overload:InscryptionAPI.Helpers.TextureHelper.TryReuseEmission
  isSpec: "True"
  fullName: InscryptionAPI.Helpers.TextureHelper.TryReuseEmission
  nameWithType: TextureHelper.TryReuseEmission
- uid: InscryptionAPI.InscryptionAPIPlugin
  name: InscryptionAPIPlugin
  href: api/InscryptionAPI.InscryptionAPIPlugin.html
  commentId: T:InscryptionAPI.InscryptionAPIPlugin
  fullName: InscryptionAPI.InscryptionAPIPlugin
  nameWithType: InscryptionAPIPlugin
- uid: InscryptionAPI.InscryptionAPIPlugin.ModGUID
  name: ModGUID
  href: api/InscryptionAPI.InscryptionAPIPlugin.html#InscryptionAPI_InscryptionAPIPlugin_ModGUID
  commentId: F:InscryptionAPI.InscryptionAPIPlugin.ModGUID
  fullName: InscryptionAPI.InscryptionAPIPlugin.ModGUID
  nameWithType: InscryptionAPIPlugin.ModGUID
- uid: InscryptionAPI.InscryptionAPIPlugin.ModName
  name: ModName
  href: api/InscryptionAPI.InscryptionAPIPlugin.html#InscryptionAPI_InscryptionAPIPlugin_ModName
  commentId: F:InscryptionAPI.InscryptionAPIPlugin.ModName
  fullName: InscryptionAPI.InscryptionAPIPlugin.ModName
  nameWithType: InscryptionAPIPlugin.ModName
- uid: InscryptionAPI.InscryptionAPIPlugin.ModVer
  name: ModVer
  href: api/InscryptionAPI.InscryptionAPIPlugin.html#InscryptionAPI_InscryptionAPIPlugin_ModVer
  commentId: F:InscryptionAPI.InscryptionAPIPlugin.ModVer
  fullName: InscryptionAPI.InscryptionAPIPlugin.ModVer
  nameWithType: InscryptionAPIPlugin.ModVer
- uid: InscryptionAPI.InscryptionAPIPlugin.OnDisable
  name: OnDisable()
  href: api/InscryptionAPI.InscryptionAPIPlugin.html#InscryptionAPI_InscryptionAPIPlugin_OnDisable
  commentId: M:InscryptionAPI.InscryptionAPIPlugin.OnDisable
  fullName: InscryptionAPI.InscryptionAPIPlugin.OnDisable()
  nameWithType: InscryptionAPIPlugin.OnDisable()
- uid: InscryptionAPI.InscryptionAPIPlugin.OnDisable*
  name: OnDisable
  href: api/InscryptionAPI.InscryptionAPIPlugin.html#InscryptionAPI_InscryptionAPIPlugin_OnDisable_
  commentId: Overload:InscryptionAPI.InscryptionAPIPlugin.OnDisable
  isSpec: "True"
  fullName: InscryptionAPI.InscryptionAPIPlugin.OnDisable
  nameWithType: InscryptionAPIPlugin.OnDisable
- uid: InscryptionAPI.InscryptionAPIPlugin.OnEnable
  name: OnEnable()
  href: api/InscryptionAPI.InscryptionAPIPlugin.html#InscryptionAPI_InscryptionAPIPlugin_OnEnable
  commentId: M:InscryptionAPI.InscryptionAPIPlugin.OnEnable
  fullName: InscryptionAPI.InscryptionAPIPlugin.OnEnable()
  nameWithType: InscryptionAPIPlugin.OnEnable()
- uid: InscryptionAPI.InscryptionAPIPlugin.OnEnable*
  name: OnEnable
  href: api/InscryptionAPI.InscryptionAPIPlugin.html#InscryptionAPI_InscryptionAPIPlugin_OnEnable_
  commentId: Overload:InscryptionAPI.InscryptionAPIPlugin.OnEnable
  isSpec: "True"
  fullName: InscryptionAPI.InscryptionAPIPlugin.OnEnable
  nameWithType: InscryptionAPIPlugin.OnEnable
- uid: InscryptionAPI.InscryptionAPIPlugin.ScriptableObjectLoaderLoad
  name: ScriptableObjectLoaderLoad
  href: api/InscryptionAPI.InscryptionAPIPlugin.html#InscryptionAPI_InscryptionAPIPlugin_ScriptableObjectLoaderLoad
  commentId: E:InscryptionAPI.InscryptionAPIPlugin.ScriptableObjectLoaderLoad
  fullName: InscryptionAPI.InscryptionAPIPlugin.ScriptableObjectLoaderLoad
  nameWithType: InscryptionAPIPlugin.ScriptableObjectLoaderLoad
- uid: InscryptionAPI.InscryptionAPIPlugin.Start
  name: Start()
  href: api/InscryptionAPI.InscryptionAPIPlugin.html#InscryptionAPI_InscryptionAPIPlugin_Start
  commentId: M:InscryptionAPI.InscryptionAPIPlugin.Start
  fullName: InscryptionAPI.InscryptionAPIPlugin.Start()
  nameWithType: InscryptionAPIPlugin.Start()
- uid: InscryptionAPI.InscryptionAPIPlugin.Start*
  name: Start
  href: api/InscryptionAPI.InscryptionAPIPlugin.html#InscryptionAPI_InscryptionAPIPlugin_Start_
  commentId: Overload:InscryptionAPI.InscryptionAPIPlugin.Start
  isSpec: "True"
  fullName: InscryptionAPI.InscryptionAPIPlugin.Start
  nameWithType: InscryptionAPIPlugin.Start
- uid: InscryptionAPI.Regions
  name: InscryptionAPI.Regions
  href: api/InscryptionAPI.Regions.html
  commentId: N:InscryptionAPI.Regions
  fullName: InscryptionAPI.Regions
  nameWithType: InscryptionAPI.Regions
- uid: InscryptionAPI.Regions.Part1RegionData
  name: Part1RegionData
  href: api/InscryptionAPI.Regions.Part1RegionData.html
  commentId: T:InscryptionAPI.Regions.Part1RegionData
  fullName: InscryptionAPI.Regions.Part1RegionData
  nameWithType: Part1RegionData
- uid: InscryptionAPI.Regions.Part1RegionData.#ctor(DiskCardGame.RegionData,System.Int32)
  name: Part1RegionData(RegionData, Int32)
  href: api/InscryptionAPI.Regions.Part1RegionData.html#InscryptionAPI_Regions_Part1RegionData__ctor_DiskCardGame_RegionData_System_Int32_
  commentId: M:InscryptionAPI.Regions.Part1RegionData.#ctor(DiskCardGame.RegionData,System.Int32)
  fullName: InscryptionAPI.Regions.Part1RegionData.Part1RegionData(DiskCardGame.RegionData, System.Int32)
  nameWithType: Part1RegionData.Part1RegionData(RegionData, Int32)
- uid: InscryptionAPI.Regions.Part1RegionData.#ctor*
  name: Part1RegionData
  href: api/InscryptionAPI.Regions.Part1RegionData.html#InscryptionAPI_Regions_Part1RegionData__ctor_
  commentId: Overload:InscryptionAPI.Regions.Part1RegionData.#ctor
  isSpec: "True"
  fullName: InscryptionAPI.Regions.Part1RegionData.Part1RegionData
  nameWithType: Part1RegionData.Part1RegionData
- uid: InscryptionAPI.Regions.Part1RegionData.Region
  name: Region
  href: api/InscryptionAPI.Regions.Part1RegionData.html#InscryptionAPI_Regions_Part1RegionData_Region
  commentId: P:InscryptionAPI.Regions.Part1RegionData.Region
  fullName: InscryptionAPI.Regions.Part1RegionData.Region
  nameWithType: Part1RegionData.Region
- uid: InscryptionAPI.Regions.Part1RegionData.Region*
  name: Region
  href: api/InscryptionAPI.Regions.Part1RegionData.html#InscryptionAPI_Regions_Part1RegionData_Region_
  commentId: Overload:InscryptionAPI.Regions.Part1RegionData.Region
  isSpec: "True"
  fullName: InscryptionAPI.Regions.Part1RegionData.Region
  nameWithType: Part1RegionData.Region
- uid: InscryptionAPI.Regions.Part1RegionData.Tier
  name: Tier
  href: api/InscryptionAPI.Regions.Part1RegionData.html#InscryptionAPI_Regions_Part1RegionData_Tier
  commentId: P:InscryptionAPI.Regions.Part1RegionData.Tier
  fullName: InscryptionAPI.Regions.Part1RegionData.Tier
  nameWithType: Part1RegionData.Tier
- uid: InscryptionAPI.Regions.Part1RegionData.Tier*
  name: Tier
  href: api/InscryptionAPI.Regions.Part1RegionData.html#InscryptionAPI_Regions_Part1RegionData_Tier_
  commentId: Overload:InscryptionAPI.Regions.Part1RegionData.Tier
  isSpec: "True"
  fullName: InscryptionAPI.Regions.Part1RegionData.Tier
  nameWithType: Part1RegionData.Tier
- uid: InscryptionAPI.Regions.RegionExtensions
  name: RegionExtensions
  href: api/InscryptionAPI.Regions.RegionExtensions.html
  commentId: T:InscryptionAPI.Regions.RegionExtensions
  fullName: InscryptionAPI.Regions.RegionExtensions
  nameWithType: RegionExtensions
- uid: InscryptionAPI.Regions.RegionExtensions.AddBosses(DiskCardGame.RegionData,DiskCardGame.Opponent.Type[])
  name: AddBosses(RegionData, Opponent.Type[])
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_AddBosses_DiskCardGame_RegionData_DiskCardGame_Opponent_Type___
  commentId: M:InscryptionAPI.Regions.RegionExtensions.AddBosses(DiskCardGame.RegionData,DiskCardGame.Opponent.Type[])
  name.vb: AddBosses(RegionData, Opponent.Type())
  fullName: InscryptionAPI.Regions.RegionExtensions.AddBosses(DiskCardGame.RegionData, DiskCardGame.Opponent.Type[])
  fullName.vb: InscryptionAPI.Regions.RegionExtensions.AddBosses(DiskCardGame.RegionData, DiskCardGame.Opponent.Type())
  nameWithType: RegionExtensions.AddBosses(RegionData, Opponent.Type[])
  nameWithType.vb: RegionExtensions.AddBosses(RegionData, Opponent.Type())
- uid: InscryptionAPI.Regions.RegionExtensions.AddBosses*
  name: AddBosses
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_AddBosses_
  commentId: Overload:InscryptionAPI.Regions.RegionExtensions.AddBosses
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionExtensions.AddBosses
  nameWithType: RegionExtensions.AddBosses
- uid: InscryptionAPI.Regions.RegionExtensions.AddConsumableItems(DiskCardGame.RegionData,DiskCardGame.ConsumableItemData[])
  name: AddConsumableItems(RegionData, ConsumableItemData[])
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_AddConsumableItems_DiskCardGame_RegionData_DiskCardGame_ConsumableItemData___
  commentId: M:InscryptionAPI.Regions.RegionExtensions.AddConsumableItems(DiskCardGame.RegionData,DiskCardGame.ConsumableItemData[])
  name.vb: AddConsumableItems(RegionData, ConsumableItemData())
  fullName: InscryptionAPI.Regions.RegionExtensions.AddConsumableItems(DiskCardGame.RegionData, DiskCardGame.ConsumableItemData[])
  fullName.vb: InscryptionAPI.Regions.RegionExtensions.AddConsumableItems(DiskCardGame.RegionData, DiskCardGame.ConsumableItemData())
  nameWithType: RegionExtensions.AddConsumableItems(RegionData, ConsumableItemData[])
  nameWithType.vb: RegionExtensions.AddConsumableItems(RegionData, ConsumableItemData())
- uid: InscryptionAPI.Regions.RegionExtensions.AddConsumableItems(DiskCardGame.RegionData,System.String[])
  name: AddConsumableItems(RegionData, String[])
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_AddConsumableItems_DiskCardGame_RegionData_System_String___
  commentId: M:InscryptionAPI.Regions.RegionExtensions.AddConsumableItems(DiskCardGame.RegionData,System.String[])
  name.vb: AddConsumableItems(RegionData, String())
  fullName: InscryptionAPI.Regions.RegionExtensions.AddConsumableItems(DiskCardGame.RegionData, System.String[])
  fullName.vb: InscryptionAPI.Regions.RegionExtensions.AddConsumableItems(DiskCardGame.RegionData, System.String())
  nameWithType: RegionExtensions.AddConsumableItems(RegionData, String[])
  nameWithType.vb: RegionExtensions.AddConsumableItems(RegionData, String())
- uid: InscryptionAPI.Regions.RegionExtensions.AddConsumableItems*
  name: AddConsumableItems
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_AddConsumableItems_
  commentId: Overload:InscryptionAPI.Regions.RegionExtensions.AddConsumableItems
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionExtensions.AddConsumableItems
  nameWithType: RegionExtensions.AddConsumableItems
- uid: InscryptionAPI.Regions.RegionExtensions.AddDominantTribes(DiskCardGame.RegionData,DiskCardGame.Tribe[])
  name: AddDominantTribes(RegionData, Tribe[])
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_AddDominantTribes_DiskCardGame_RegionData_DiskCardGame_Tribe___
  commentId: M:InscryptionAPI.Regions.RegionExtensions.AddDominantTribes(DiskCardGame.RegionData,DiskCardGame.Tribe[])
  name.vb: AddDominantTribes(RegionData, Tribe())
  fullName: InscryptionAPI.Regions.RegionExtensions.AddDominantTribes(DiskCardGame.RegionData, DiskCardGame.Tribe[])
  fullName.vb: InscryptionAPI.Regions.RegionExtensions.AddDominantTribes(DiskCardGame.RegionData, DiskCardGame.Tribe())
  nameWithType: RegionExtensions.AddDominantTribes(RegionData, Tribe[])
  nameWithType.vb: RegionExtensions.AddDominantTribes(RegionData, Tribe())
- uid: InscryptionAPI.Regions.RegionExtensions.AddDominantTribes*
  name: AddDominantTribes
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_AddDominantTribes_
  commentId: Overload:InscryptionAPI.Regions.RegionExtensions.AddDominantTribes
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionExtensions.AddDominantTribes
  nameWithType: RegionExtensions.AddDominantTribes
- uid: InscryptionAPI.Regions.RegionExtensions.AddEncounters(DiskCardGame.RegionData,DiskCardGame.EncounterBlueprintData[])
  name: AddEncounters(RegionData, EncounterBlueprintData[])
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_AddEncounters_DiskCardGame_RegionData_DiskCardGame_EncounterBlueprintData___
  commentId: M:InscryptionAPI.Regions.RegionExtensions.AddEncounters(DiskCardGame.RegionData,DiskCardGame.EncounterBlueprintData[])
  name.vb: AddEncounters(RegionData, EncounterBlueprintData())
  fullName: InscryptionAPI.Regions.RegionExtensions.AddEncounters(DiskCardGame.RegionData, DiskCardGame.EncounterBlueprintData[])
  fullName.vb: InscryptionAPI.Regions.RegionExtensions.AddEncounters(DiskCardGame.RegionData, DiskCardGame.EncounterBlueprintData())
  nameWithType: RegionExtensions.AddEncounters(RegionData, EncounterBlueprintData[])
  nameWithType.vb: RegionExtensions.AddEncounters(RegionData, EncounterBlueprintData())
- uid: InscryptionAPI.Regions.RegionExtensions.AddEncounters*
  name: AddEncounters
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_AddEncounters_
  commentId: Overload:InscryptionAPI.Regions.RegionExtensions.AddEncounters
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionExtensions.AddEncounters
  nameWithType: RegionExtensions.AddEncounters
- uid: InscryptionAPI.Regions.RegionExtensions.AddFillerScenery(DiskCardGame.RegionData,DiskCardGame.FillerSceneryEntry[])
  name: AddFillerScenery(RegionData, FillerSceneryEntry[])
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_AddFillerScenery_DiskCardGame_RegionData_DiskCardGame_FillerSceneryEntry___
  commentId: M:InscryptionAPI.Regions.RegionExtensions.AddFillerScenery(DiskCardGame.RegionData,DiskCardGame.FillerSceneryEntry[])
  name.vb: AddFillerScenery(RegionData, FillerSceneryEntry())
  fullName: InscryptionAPI.Regions.RegionExtensions.AddFillerScenery(DiskCardGame.RegionData, DiskCardGame.FillerSceneryEntry[])
  fullName.vb: InscryptionAPI.Regions.RegionExtensions.AddFillerScenery(DiskCardGame.RegionData, DiskCardGame.FillerSceneryEntry())
  nameWithType: RegionExtensions.AddFillerScenery(RegionData, FillerSceneryEntry[])
  nameWithType.vb: RegionExtensions.AddFillerScenery(RegionData, FillerSceneryEntry())
- uid: InscryptionAPI.Regions.RegionExtensions.AddFillerScenery*
  name: AddFillerScenery
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_AddFillerScenery_
  commentId: Overload:InscryptionAPI.Regions.RegionExtensions.AddFillerScenery
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionExtensions.AddFillerScenery
  nameWithType: RegionExtensions.AddFillerScenery
- uid: InscryptionAPI.Regions.RegionExtensions.AddLikelyCards(DiskCardGame.RegionData,System.String[])
  name: AddLikelyCards(RegionData, String[])
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_AddLikelyCards_DiskCardGame_RegionData_System_String___
  commentId: M:InscryptionAPI.Regions.RegionExtensions.AddLikelyCards(DiskCardGame.RegionData,System.String[])
  name.vb: AddLikelyCards(RegionData, String())
  fullName: InscryptionAPI.Regions.RegionExtensions.AddLikelyCards(DiskCardGame.RegionData, System.String[])
  fullName.vb: InscryptionAPI.Regions.RegionExtensions.AddLikelyCards(DiskCardGame.RegionData, System.String())
  nameWithType: RegionExtensions.AddLikelyCards(RegionData, String[])
  nameWithType.vb: RegionExtensions.AddLikelyCards(RegionData, String())
- uid: InscryptionAPI.Regions.RegionExtensions.AddLikelyCards*
  name: AddLikelyCards
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_AddLikelyCards_
  commentId: Overload:InscryptionAPI.Regions.RegionExtensions.AddLikelyCards
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionExtensions.AddLikelyCards
  nameWithType: RegionExtensions.AddLikelyCards
- uid: InscryptionAPI.Regions.RegionExtensions.AddScarceScenery(DiskCardGame.RegionData,DiskCardGame.ScarceSceneryEntry[])
  name: AddScarceScenery(RegionData, ScarceSceneryEntry[])
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_AddScarceScenery_DiskCardGame_RegionData_DiskCardGame_ScarceSceneryEntry___
  commentId: M:InscryptionAPI.Regions.RegionExtensions.AddScarceScenery(DiskCardGame.RegionData,DiskCardGame.ScarceSceneryEntry[])
  name.vb: AddScarceScenery(RegionData, ScarceSceneryEntry())
  fullName: InscryptionAPI.Regions.RegionExtensions.AddScarceScenery(DiskCardGame.RegionData, DiskCardGame.ScarceSceneryEntry[])
  fullName.vb: InscryptionAPI.Regions.RegionExtensions.AddScarceScenery(DiskCardGame.RegionData, DiskCardGame.ScarceSceneryEntry())
  nameWithType: RegionExtensions.AddScarceScenery(RegionData, ScarceSceneryEntry[])
  nameWithType.vb: RegionExtensions.AddScarceScenery(RegionData, ScarceSceneryEntry())
- uid: InscryptionAPI.Regions.RegionExtensions.AddScarceScenery*
  name: AddScarceScenery
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_AddScarceScenery_
  commentId: Overload:InscryptionAPI.Regions.RegionExtensions.AddScarceScenery
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionExtensions.AddScarceScenery
  nameWithType: RegionExtensions.AddScarceScenery
- uid: InscryptionAPI.Regions.RegionExtensions.AddTerrainCards(DiskCardGame.RegionData,System.String[])
  name: AddTerrainCards(RegionData, String[])
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_AddTerrainCards_DiskCardGame_RegionData_System_String___
  commentId: M:InscryptionAPI.Regions.RegionExtensions.AddTerrainCards(DiskCardGame.RegionData,System.String[])
  name.vb: AddTerrainCards(RegionData, String())
  fullName: InscryptionAPI.Regions.RegionExtensions.AddTerrainCards(DiskCardGame.RegionData, System.String[])
  fullName.vb: InscryptionAPI.Regions.RegionExtensions.AddTerrainCards(DiskCardGame.RegionData, System.String())
  nameWithType: RegionExtensions.AddTerrainCards(RegionData, String[])
  nameWithType.vb: RegionExtensions.AddTerrainCards(RegionData, String())
- uid: InscryptionAPI.Regions.RegionExtensions.AddTerrainCards*
  name: AddTerrainCards
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_AddTerrainCards_
  commentId: Overload:InscryptionAPI.Regions.RegionExtensions.AddTerrainCards
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionExtensions.AddTerrainCards
  nameWithType: RegionExtensions.AddTerrainCards
- uid: InscryptionAPI.Regions.RegionExtensions.Build(DiskCardGame.RegionData,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  name: Build(RegionData, Boolean, Boolean, Boolean, Boolean)
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_Build_DiskCardGame_RegionData_System_Boolean_System_Boolean_System_Boolean_System_Boolean_
  commentId: M:InscryptionAPI.Regions.RegionExtensions.Build(DiskCardGame.RegionData,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  fullName: InscryptionAPI.Regions.RegionExtensions.Build(DiskCardGame.RegionData, System.Boolean, System.Boolean, System.Boolean, System.Boolean)
  nameWithType: RegionExtensions.Build(RegionData, Boolean, Boolean, Boolean, Boolean)
- uid: InscryptionAPI.Regions.RegionExtensions.Build*
  name: Build
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_Build_
  commentId: Overload:InscryptionAPI.Regions.RegionExtensions.Build
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionExtensions.Build
  nameWithType: RegionExtensions.Build
- uid: InscryptionAPI.Regions.RegionExtensions.CreateEncounter(DiskCardGame.RegionData,System.String)
  name: CreateEncounter(RegionData, String)
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_CreateEncounter_DiskCardGame_RegionData_System_String_
  commentId: M:InscryptionAPI.Regions.RegionExtensions.CreateEncounter(DiskCardGame.RegionData,System.String)
  fullName: InscryptionAPI.Regions.RegionExtensions.CreateEncounter(DiskCardGame.RegionData, System.String)
  nameWithType: RegionExtensions.CreateEncounter(RegionData, String)
- uid: InscryptionAPI.Regions.RegionExtensions.CreateEncounter*
  name: CreateEncounter
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_CreateEncounter_
  commentId: Overload:InscryptionAPI.Regions.RegionExtensions.CreateEncounter
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionExtensions.CreateEncounter
  nameWithType: RegionExtensions.CreateEncounter
- uid: InscryptionAPI.Regions.RegionExtensions.RegionByName(IEnumerable{DiskCardGame.RegionData},System.String)
  name: RegionByName(IEnumerable<RegionData>, String)
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_RegionByName_IEnumerable_DiskCardGame_RegionData__System_String_
  commentId: M:InscryptionAPI.Regions.RegionExtensions.RegionByName(IEnumerable{DiskCardGame.RegionData},System.String)
  name.vb: RegionByName(IEnumerable(Of RegionData), String)
  fullName: InscryptionAPI.Regions.RegionExtensions.RegionByName(IEnumerable<DiskCardGame.RegionData>, System.String)
  fullName.vb: InscryptionAPI.Regions.RegionExtensions.RegionByName(IEnumerable(Of DiskCardGame.RegionData), System.String)
  nameWithType: RegionExtensions.RegionByName(IEnumerable<RegionData>, String)
  nameWithType.vb: RegionExtensions.RegionByName(IEnumerable(Of RegionData), String)
- uid: InscryptionAPI.Regions.RegionExtensions.RegionByName*
  name: RegionByName
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_RegionByName_
  commentId: Overload:InscryptionAPI.Regions.RegionExtensions.RegionByName
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionExtensions.RegionByName
  nameWithType: RegionExtensions.RegionByName
- uid: InscryptionAPI.Regions.RegionExtensions.SetAmbientLoopId(DiskCardGame.RegionData,System.String)
  name: SetAmbientLoopId(RegionData, String)
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetAmbientLoopId_DiskCardGame_RegionData_System_String_
  commentId: M:InscryptionAPI.Regions.RegionExtensions.SetAmbientLoopId(DiskCardGame.RegionData,System.String)
  fullName: InscryptionAPI.Regions.RegionExtensions.SetAmbientLoopId(DiskCardGame.RegionData, System.String)
  nameWithType: RegionExtensions.SetAmbientLoopId(RegionData, String)
- uid: InscryptionAPI.Regions.RegionExtensions.SetAmbientLoopId*
  name: SetAmbientLoopId
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetAmbientLoopId_
  commentId: Overload:InscryptionAPI.Regions.RegionExtensions.SetAmbientLoopId
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionExtensions.SetAmbientLoopId
  nameWithType: RegionExtensions.SetAmbientLoopId
- uid: InscryptionAPI.Regions.RegionExtensions.SetBoardColor(DiskCardGame.RegionData,UnityEngine.Color)
  name: SetBoardColor(RegionData, Color)
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetBoardColor_DiskCardGame_RegionData_UnityEngine_Color_
  commentId: M:InscryptionAPI.Regions.RegionExtensions.SetBoardColor(DiskCardGame.RegionData,UnityEngine.Color)
  fullName: InscryptionAPI.Regions.RegionExtensions.SetBoardColor(DiskCardGame.RegionData, UnityEngine.Color)
  nameWithType: RegionExtensions.SetBoardColor(RegionData, Color)
- uid: InscryptionAPI.Regions.RegionExtensions.SetBoardColor*
  name: SetBoardColor
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetBoardColor_
  commentId: Overload:InscryptionAPI.Regions.RegionExtensions.SetBoardColor
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionExtensions.SetBoardColor
  nameWithType: RegionExtensions.SetBoardColor
- uid: InscryptionAPI.Regions.RegionExtensions.SetBossPrepCondition(DiskCardGame.RegionData,DiskCardGame.StoryEventCondition)
  name: SetBossPrepCondition(RegionData, StoryEventCondition)
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetBossPrepCondition_DiskCardGame_RegionData_DiskCardGame_StoryEventCondition_
  commentId: M:InscryptionAPI.Regions.RegionExtensions.SetBossPrepCondition(DiskCardGame.RegionData,DiskCardGame.StoryEventCondition)
  fullName: InscryptionAPI.Regions.RegionExtensions.SetBossPrepCondition(DiskCardGame.RegionData, DiskCardGame.StoryEventCondition)
  nameWithType: RegionExtensions.SetBossPrepCondition(RegionData, StoryEventCondition)
- uid: InscryptionAPI.Regions.RegionExtensions.SetBossPrepCondition*
  name: SetBossPrepCondition
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetBossPrepCondition_
  commentId: Overload:InscryptionAPI.Regions.RegionExtensions.SetBossPrepCondition
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionExtensions.SetBossPrepCondition
  nameWithType: RegionExtensions.SetBossPrepCondition
- uid: InscryptionAPI.Regions.RegionExtensions.SetBossPrepEncounter(DiskCardGame.RegionData,DiskCardGame.EncounterBlueprintData)
  name: SetBossPrepEncounter(RegionData, EncounterBlueprintData)
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetBossPrepEncounter_DiskCardGame_RegionData_DiskCardGame_EncounterBlueprintData_
  commentId: M:InscryptionAPI.Regions.RegionExtensions.SetBossPrepEncounter(DiskCardGame.RegionData,DiskCardGame.EncounterBlueprintData)
  fullName: InscryptionAPI.Regions.RegionExtensions.SetBossPrepEncounter(DiskCardGame.RegionData, DiskCardGame.EncounterBlueprintData)
  nameWithType: RegionExtensions.SetBossPrepEncounter(RegionData, EncounterBlueprintData)
- uid: InscryptionAPI.Regions.RegionExtensions.SetBossPrepEncounter*
  name: SetBossPrepEncounter
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetBossPrepEncounter_
  commentId: Overload:InscryptionAPI.Regions.RegionExtensions.SetBossPrepEncounter
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionExtensions.SetBossPrepEncounter
  nameWithType: RegionExtensions.SetBossPrepEncounter
- uid: InscryptionAPI.Regions.RegionExtensions.SetCardsColor(DiskCardGame.RegionData,UnityEngine.Color)
  name: SetCardsColor(RegionData, Color)
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetCardsColor_DiskCardGame_RegionData_UnityEngine_Color_
  commentId: M:InscryptionAPI.Regions.RegionExtensions.SetCardsColor(DiskCardGame.RegionData,UnityEngine.Color)
  fullName: InscryptionAPI.Regions.RegionExtensions.SetCardsColor(DiskCardGame.RegionData, UnityEngine.Color)
  nameWithType: RegionExtensions.SetCardsColor(RegionData, Color)
- uid: InscryptionAPI.Regions.RegionExtensions.SetCardsColor*
  name: SetCardsColor
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetCardsColor_
  commentId: Overload:InscryptionAPI.Regions.RegionExtensions.SetCardsColor
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionExtensions.SetCardsColor
  nameWithType: RegionExtensions.SetCardsColor
- uid: InscryptionAPI.Regions.RegionExtensions.SetDustParticlesEnabled(DiskCardGame.RegionData,System.Boolean)
  name: SetDustParticlesEnabled(RegionData, Boolean)
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetDustParticlesEnabled_DiskCardGame_RegionData_System_Boolean_
  commentId: M:InscryptionAPI.Regions.RegionExtensions.SetDustParticlesEnabled(DiskCardGame.RegionData,System.Boolean)
  fullName: InscryptionAPI.Regions.RegionExtensions.SetDustParticlesEnabled(DiskCardGame.RegionData, System.Boolean)
  nameWithType: RegionExtensions.SetDustParticlesEnabled(RegionData, Boolean)
- uid: InscryptionAPI.Regions.RegionExtensions.SetDustParticlesEnabled*
  name: SetDustParticlesEnabled
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetDustParticlesEnabled_
  commentId: Overload:InscryptionAPI.Regions.RegionExtensions.SetDustParticlesEnabled
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionExtensions.SetDustParticlesEnabled
  nameWithType: RegionExtensions.SetDustParticlesEnabled
- uid: InscryptionAPI.Regions.RegionExtensions.SetFogAlpha(DiskCardGame.RegionData,System.Single)
  name: SetFogAlpha(RegionData, Single)
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetFogAlpha_DiskCardGame_RegionData_System_Single_
  commentId: M:InscryptionAPI.Regions.RegionExtensions.SetFogAlpha(DiskCardGame.RegionData,System.Single)
  fullName: InscryptionAPI.Regions.RegionExtensions.SetFogAlpha(DiskCardGame.RegionData, System.Single)
  nameWithType: RegionExtensions.SetFogAlpha(RegionData, Single)
- uid: InscryptionAPI.Regions.RegionExtensions.SetFogAlpha*
  name: SetFogAlpha
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetFogAlpha_
  commentId: Overload:InscryptionAPI.Regions.RegionExtensions.SetFogAlpha
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionExtensions.SetFogAlpha
  nameWithType: RegionExtensions.SetFogAlpha
- uid: InscryptionAPI.Regions.RegionExtensions.SetFogEnabled(DiskCardGame.RegionData,System.Boolean)
  name: SetFogEnabled(RegionData, Boolean)
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetFogEnabled_DiskCardGame_RegionData_System_Boolean_
  commentId: M:InscryptionAPI.Regions.RegionExtensions.SetFogEnabled(DiskCardGame.RegionData,System.Boolean)
  fullName: InscryptionAPI.Regions.RegionExtensions.SetFogEnabled(DiskCardGame.RegionData, System.Boolean)
  nameWithType: RegionExtensions.SetFogEnabled(RegionData, Boolean)
- uid: InscryptionAPI.Regions.RegionExtensions.SetFogEnabled*
  name: SetFogEnabled
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetFogEnabled_
  commentId: Overload:InscryptionAPI.Regions.RegionExtensions.SetFogEnabled
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionExtensions.SetFogEnabled
  nameWithType: RegionExtensions.SetFogEnabled
- uid: InscryptionAPI.Regions.RegionExtensions.SetFogProfile(DiskCardGame.RegionData,VolumetricFogAndMist.VolumetricFogProfile)
  name: SetFogProfile(RegionData, VolumetricFogProfile)
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetFogProfile_DiskCardGame_RegionData_VolumetricFogAndMist_VolumetricFogProfile_
  commentId: M:InscryptionAPI.Regions.RegionExtensions.SetFogProfile(DiskCardGame.RegionData,VolumetricFogAndMist.VolumetricFogProfile)
  fullName: InscryptionAPI.Regions.RegionExtensions.SetFogProfile(DiskCardGame.RegionData, VolumetricFogAndMist.VolumetricFogProfile)
  nameWithType: RegionExtensions.SetFogProfile(RegionData, VolumetricFogProfile)
- uid: InscryptionAPI.Regions.RegionExtensions.SetFogProfile*
  name: SetFogProfile
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetFogProfile_
  commentId: Overload:InscryptionAPI.Regions.RegionExtensions.SetFogProfile
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionExtensions.SetFogProfile
  nameWithType: RegionExtensions.SetFogProfile
- uid: InscryptionAPI.Regions.RegionExtensions.SetMapAlbedo(DiskCardGame.RegionData,UnityEngine.Texture)
  name: SetMapAlbedo(RegionData, Texture)
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetMapAlbedo_DiskCardGame_RegionData_UnityEngine_Texture_
  commentId: M:InscryptionAPI.Regions.RegionExtensions.SetMapAlbedo(DiskCardGame.RegionData,UnityEngine.Texture)
  fullName: InscryptionAPI.Regions.RegionExtensions.SetMapAlbedo(DiskCardGame.RegionData, UnityEngine.Texture)
  nameWithType: RegionExtensions.SetMapAlbedo(RegionData, Texture)
- uid: InscryptionAPI.Regions.RegionExtensions.SetMapAlbedo*
  name: SetMapAlbedo
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetMapAlbedo_
  commentId: Overload:InscryptionAPI.Regions.RegionExtensions.SetMapAlbedo
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionExtensions.SetMapAlbedo
  nameWithType: RegionExtensions.SetMapAlbedo
- uid: InscryptionAPI.Regions.RegionExtensions.SetMapEmission(DiskCardGame.RegionData,UnityEngine.Texture2D)
  name: SetMapEmission(RegionData, Texture2D)
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetMapEmission_DiskCardGame_RegionData_UnityEngine_Texture2D_
  commentId: M:InscryptionAPI.Regions.RegionExtensions.SetMapEmission(DiskCardGame.RegionData,UnityEngine.Texture2D)
  fullName: InscryptionAPI.Regions.RegionExtensions.SetMapEmission(DiskCardGame.RegionData, UnityEngine.Texture2D)
  nameWithType: RegionExtensions.SetMapEmission(RegionData, Texture2D)
- uid: InscryptionAPI.Regions.RegionExtensions.SetMapEmission*
  name: SetMapEmission
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetMapEmission_
  commentId: Overload:InscryptionAPI.Regions.RegionExtensions.SetMapEmission
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionExtensions.SetMapEmission
  nameWithType: RegionExtensions.SetMapEmission
- uid: InscryptionAPI.Regions.RegionExtensions.SetMapEmissionColor(DiskCardGame.RegionData,UnityEngine.Color)
  name: SetMapEmissionColor(RegionData, Color)
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetMapEmissionColor_DiskCardGame_RegionData_UnityEngine_Color_
  commentId: M:InscryptionAPI.Regions.RegionExtensions.SetMapEmissionColor(DiskCardGame.RegionData,UnityEngine.Color)
  fullName: InscryptionAPI.Regions.RegionExtensions.SetMapEmissionColor(DiskCardGame.RegionData, UnityEngine.Color)
  nameWithType: RegionExtensions.SetMapEmissionColor(RegionData, Color)
- uid: InscryptionAPI.Regions.RegionExtensions.SetMapEmissionColor*
  name: SetMapEmissionColor
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetMapEmissionColor_
  commentId: Overload:InscryptionAPI.Regions.RegionExtensions.SetMapEmissionColor
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionExtensions.SetMapEmissionColor
  nameWithType: RegionExtensions.SetMapEmissionColor
- uid: InscryptionAPI.Regions.RegionExtensions.SetMapParticlesPrefabs(DiskCardGame.RegionData,UnityEngine.GameObject[])
  name: SetMapParticlesPrefabs(RegionData, GameObject[])
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetMapParticlesPrefabs_DiskCardGame_RegionData_UnityEngine_GameObject___
  commentId: M:InscryptionAPI.Regions.RegionExtensions.SetMapParticlesPrefabs(DiskCardGame.RegionData,UnityEngine.GameObject[])
  name.vb: SetMapParticlesPrefabs(RegionData, GameObject())
  fullName: InscryptionAPI.Regions.RegionExtensions.SetMapParticlesPrefabs(DiskCardGame.RegionData, UnityEngine.GameObject[])
  fullName.vb: InscryptionAPI.Regions.RegionExtensions.SetMapParticlesPrefabs(DiskCardGame.RegionData, UnityEngine.GameObject())
  nameWithType: RegionExtensions.SetMapParticlesPrefabs(RegionData, GameObject[])
  nameWithType.vb: RegionExtensions.SetMapParticlesPrefabs(RegionData, GameObject())
- uid: InscryptionAPI.Regions.RegionExtensions.SetMapParticlesPrefabs*
  name: SetMapParticlesPrefabs
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetMapParticlesPrefabs_
  commentId: Overload:InscryptionAPI.Regions.RegionExtensions.SetMapParticlesPrefabs
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionExtensions.SetMapParticlesPrefabs
  nameWithType: RegionExtensions.SetMapParticlesPrefabs
- uid: InscryptionAPI.Regions.RegionExtensions.SetName(DiskCardGame.RegionData,System.String)
  name: SetName(RegionData, String)
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetName_DiskCardGame_RegionData_System_String_
  commentId: M:InscryptionAPI.Regions.RegionExtensions.SetName(DiskCardGame.RegionData,System.String)
  fullName: InscryptionAPI.Regions.RegionExtensions.SetName(DiskCardGame.RegionData, System.String)
  nameWithType: RegionExtensions.SetName(RegionData, String)
- uid: InscryptionAPI.Regions.RegionExtensions.SetName*
  name: SetName
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetName_
  commentId: Overload:InscryptionAPI.Regions.RegionExtensions.SetName
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionExtensions.SetName
  nameWithType: RegionExtensions.SetName
- uid: InscryptionAPI.Regions.RegionExtensions.SetSilenceCabinAmbience(DiskCardGame.RegionData,System.Boolean)
  name: SetSilenceCabinAmbience(RegionData, Boolean)
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetSilenceCabinAmbience_DiskCardGame_RegionData_System_Boolean_
  commentId: M:InscryptionAPI.Regions.RegionExtensions.SetSilenceCabinAmbience(DiskCardGame.RegionData,System.Boolean)
  fullName: InscryptionAPI.Regions.RegionExtensions.SetSilenceCabinAmbience(DiskCardGame.RegionData, System.Boolean)
  nameWithType: RegionExtensions.SetSilenceCabinAmbience(RegionData, Boolean)
- uid: InscryptionAPI.Regions.RegionExtensions.SetSilenceCabinAmbience*
  name: SetSilenceCabinAmbience
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetSilenceCabinAmbience_
  commentId: Overload:InscryptionAPI.Regions.RegionExtensions.SetSilenceCabinAmbience
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionExtensions.SetSilenceCabinAmbience
  nameWithType: RegionExtensions.SetSilenceCabinAmbience
- uid: InscryptionAPI.Regions.RegionManager
  name: RegionManager
  href: api/InscryptionAPI.Regions.RegionManager.html
  commentId: T:InscryptionAPI.Regions.RegionManager
  fullName: InscryptionAPI.Regions.RegionManager
  nameWithType: RegionManager
- uid: InscryptionAPI.Regions.RegionManager.Add(DiskCardGame.RegionData,System.Int32)
  name: Add(RegionData, Int32)
  href: api/InscryptionAPI.Regions.RegionManager.html#InscryptionAPI_Regions_RegionManager_Add_DiskCardGame_RegionData_System_Int32_
  commentId: M:InscryptionAPI.Regions.RegionManager.Add(DiskCardGame.RegionData,System.Int32)
  fullName: InscryptionAPI.Regions.RegionManager.Add(DiskCardGame.RegionData, System.Int32)
  nameWithType: RegionManager.Add(RegionData, Int32)
- uid: InscryptionAPI.Regions.RegionManager.Add*
  name: Add
  href: api/InscryptionAPI.Regions.RegionManager.html#InscryptionAPI_Regions_RegionManager_Add_
  commentId: Overload:InscryptionAPI.Regions.RegionManager.Add
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionManager.Add
  nameWithType: RegionManager.Add
- uid: InscryptionAPI.Regions.RegionManager.AllRegionsCopy
  name: AllRegionsCopy
  href: api/InscryptionAPI.Regions.RegionManager.html#InscryptionAPI_Regions_RegionManager_AllRegionsCopy
  commentId: P:InscryptionAPI.Regions.RegionManager.AllRegionsCopy
  fullName: InscryptionAPI.Regions.RegionManager.AllRegionsCopy
  nameWithType: RegionManager.AllRegionsCopy
- uid: InscryptionAPI.Regions.RegionManager.AllRegionsCopy*
  name: AllRegionsCopy
  href: api/InscryptionAPI.Regions.RegionManager.html#InscryptionAPI_Regions_RegionManager_AllRegionsCopy_
  commentId: Overload:InscryptionAPI.Regions.RegionManager.AllRegionsCopy
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionManager.AllRegionsCopy
  nameWithType: RegionManager.AllRegionsCopy
- uid: InscryptionAPI.Regions.RegionManager.BaseGameRegions
  name: BaseGameRegions
  href: api/InscryptionAPI.Regions.RegionManager.html#InscryptionAPI_Regions_RegionManager_BaseGameRegions
  commentId: F:InscryptionAPI.Regions.RegionManager.BaseGameRegions
  fullName: InscryptionAPI.Regions.RegionManager.BaseGameRegions
  nameWithType: RegionManager.BaseGameRegions
- uid: InscryptionAPI.Regions.RegionManager.FromTierBasic(System.String,System.Int32,System.Boolean)
  name: FromTierBasic(String, Int32, Boolean)
  href: api/InscryptionAPI.Regions.RegionManager.html#InscryptionAPI_Regions_RegionManager_FromTierBasic_System_String_System_Int32_System_Boolean_
  commentId: M:InscryptionAPI.Regions.RegionManager.FromTierBasic(System.String,System.Int32,System.Boolean)
  fullName: InscryptionAPI.Regions.RegionManager.FromTierBasic(System.String, System.Int32, System.Boolean)
  nameWithType: RegionManager.FromTierBasic(String, Int32, Boolean)
- uid: InscryptionAPI.Regions.RegionManager.FromTierBasic(System.String,System.Int32,System.Int32,System.Boolean)
  name: FromTierBasic(String, Int32, Int32, Boolean)
  href: api/InscryptionAPI.Regions.RegionManager.html#InscryptionAPI_Regions_RegionManager_FromTierBasic_System_String_System_Int32_System_Int32_System_Boolean_
  commentId: M:InscryptionAPI.Regions.RegionManager.FromTierBasic(System.String,System.Int32,System.Int32,System.Boolean)
  fullName: InscryptionAPI.Regions.RegionManager.FromTierBasic(System.String, System.Int32, System.Int32, System.Boolean)
  nameWithType: RegionManager.FromTierBasic(String, Int32, Int32, Boolean)
- uid: InscryptionAPI.Regions.RegionManager.FromTierBasic*
  name: FromTierBasic
  href: api/InscryptionAPI.Regions.RegionManager.html#InscryptionAPI_Regions_RegionManager_FromTierBasic_
  commentId: Overload:InscryptionAPI.Regions.RegionManager.FromTierBasic
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionManager.FromTierBasic
  nameWithType: RegionManager.FromTierBasic
- uid: InscryptionAPI.Regions.RegionManager.FromTierFull(System.String,System.Int32,System.Boolean)
  name: FromTierFull(String, Int32, Boolean)
  href: api/InscryptionAPI.Regions.RegionManager.html#InscryptionAPI_Regions_RegionManager_FromTierFull_System_String_System_Int32_System_Boolean_
  commentId: M:InscryptionAPI.Regions.RegionManager.FromTierFull(System.String,System.Int32,System.Boolean)
  fullName: InscryptionAPI.Regions.RegionManager.FromTierFull(System.String, System.Int32, System.Boolean)
  nameWithType: RegionManager.FromTierFull(String, Int32, Boolean)
- uid: InscryptionAPI.Regions.RegionManager.FromTierFull(System.String,System.Int32,System.Int32,System.Boolean)
  name: FromTierFull(String, Int32, Int32, Boolean)
  href: api/InscryptionAPI.Regions.RegionManager.html#InscryptionAPI_Regions_RegionManager_FromTierFull_System_String_System_Int32_System_Int32_System_Boolean_
  commentId: M:InscryptionAPI.Regions.RegionManager.FromTierFull(System.String,System.Int32,System.Int32,System.Boolean)
  fullName: InscryptionAPI.Regions.RegionManager.FromTierFull(System.String, System.Int32, System.Int32, System.Boolean)
  nameWithType: RegionManager.FromTierFull(String, Int32, Int32, Boolean)
- uid: InscryptionAPI.Regions.RegionManager.FromTierFull*
  name: FromTierFull
  href: api/InscryptionAPI.Regions.RegionManager.html#InscryptionAPI_Regions_RegionManager_FromTierFull_
  commentId: Overload:InscryptionAPI.Regions.RegionManager.FromTierFull
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionManager.FromTierFull
  nameWithType: RegionManager.FromTierFull
- uid: InscryptionAPI.Regions.RegionManager.GetRandomRegionFromTier(System.Int32)
  name: GetRandomRegionFromTier(Int32)
  href: api/InscryptionAPI.Regions.RegionManager.html#InscryptionAPI_Regions_RegionManager_GetRandomRegionFromTier_System_Int32_
  commentId: M:InscryptionAPI.Regions.RegionManager.GetRandomRegionFromTier(System.Int32)
  fullName: InscryptionAPI.Regions.RegionManager.GetRandomRegionFromTier(System.Int32)
  nameWithType: RegionManager.GetRandomRegionFromTier(Int32)
- uid: InscryptionAPI.Regions.RegionManager.GetRandomRegionFromTier*
  name: GetRandomRegionFromTier
  href: api/InscryptionAPI.Regions.RegionManager.html#InscryptionAPI_Regions_RegionManager_GetRandomRegionFromTier_
  commentId: Overload:InscryptionAPI.Regions.RegionManager.GetRandomRegionFromTier
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionManager.GetRandomRegionFromTier
  nameWithType: RegionManager.GetRandomRegionFromTier
- uid: InscryptionAPI.Regions.RegionManager.ModifyRegionsList
  name: ModifyRegionsList
  href: api/InscryptionAPI.Regions.RegionManager.html#InscryptionAPI_Regions_RegionManager_ModifyRegionsList
  commentId: E:InscryptionAPI.Regions.RegionManager.ModifyRegionsList
  fullName: InscryptionAPI.Regions.RegionManager.ModifyRegionsList
  nameWithType: RegionManager.ModifyRegionsList
- uid: InscryptionAPI.Regions.RegionManager.New(System.String,System.Int32,System.Boolean)
  name: New(String, Int32, Boolean)
  href: api/InscryptionAPI.Regions.RegionManager.html#InscryptionAPI_Regions_RegionManager_New_System_String_System_Int32_System_Boolean_
  commentId: M:InscryptionAPI.Regions.RegionManager.New(System.String,System.Int32,System.Boolean)
  fullName: InscryptionAPI.Regions.RegionManager.New(System.String, System.Int32, System.Boolean)
  nameWithType: RegionManager.New(String, Int32, Boolean)
- uid: InscryptionAPI.Regions.RegionManager.New*
  name: New
  href: api/InscryptionAPI.Regions.RegionManager.html#InscryptionAPI_Regions_RegionManager_New_
  commentId: Overload:InscryptionAPI.Regions.RegionManager.New
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionManager.New
  nameWithType: RegionManager.New
- uid: InscryptionAPI.Regions.RegionManager.Remove(DiskCardGame.RegionData)
  name: Remove(RegionData)
  href: api/InscryptionAPI.Regions.RegionManager.html#InscryptionAPI_Regions_RegionManager_Remove_DiskCardGame_RegionData_
  commentId: M:InscryptionAPI.Regions.RegionManager.Remove(DiskCardGame.RegionData)
  fullName: InscryptionAPI.Regions.RegionManager.Remove(DiskCardGame.RegionData)
  nameWithType: RegionManager.Remove(RegionData)
- uid: InscryptionAPI.Regions.RegionManager.Remove*
  name: Remove
  href: api/InscryptionAPI.Regions.RegionManager.html#InscryptionAPI_Regions_RegionManager_Remove_
  commentId: Overload:InscryptionAPI.Regions.RegionManager.Remove
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionManager.Remove
  nameWithType: RegionManager.Remove
- uid: InscryptionAPI.Regions.RegionManager.SyncRegionList
  name: SyncRegionList()
  href: api/InscryptionAPI.Regions.RegionManager.html#InscryptionAPI_Regions_RegionManager_SyncRegionList
  commentId: M:InscryptionAPI.Regions.RegionManager.SyncRegionList
  fullName: InscryptionAPI.Regions.RegionManager.SyncRegionList()
  nameWithType: RegionManager.SyncRegionList()
- uid: InscryptionAPI.Regions.RegionManager.SyncRegionList*
  name: SyncRegionList
  href: api/InscryptionAPI.Regions.RegionManager.html#InscryptionAPI_Regions_RegionManager_SyncRegionList_
  commentId: Overload:InscryptionAPI.Regions.RegionManager.SyncRegionList
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionManager.SyncRegionList
  nameWithType: RegionManager.SyncRegionList
- uid: InscryptionAPI.Saves
  name: InscryptionAPI.Saves
  href: api/InscryptionAPI.Saves.html
  commentId: N:InscryptionAPI.Saves
  fullName: InscryptionAPI.Saves
  nameWithType: InscryptionAPI.Saves
- uid: InscryptionAPI.Saves.ModdedSaveData
  name: ModdedSaveData
  href: api/InscryptionAPI.Saves.ModdedSaveData.html
  commentId: T:InscryptionAPI.Saves.ModdedSaveData
  fullName: InscryptionAPI.Saves.ModdedSaveData
  nameWithType: ModdedSaveData
- uid: InscryptionAPI.Saves.ModdedSaveData.GetValue(System.String,System.String)
  name: GetValue(String, String)
  href: api/InscryptionAPI.Saves.ModdedSaveData.html#InscryptionAPI_Saves_ModdedSaveData_GetValue_System_String_System_String_
  commentId: M:InscryptionAPI.Saves.ModdedSaveData.GetValue(System.String,System.String)
  fullName: InscryptionAPI.Saves.ModdedSaveData.GetValue(System.String, System.String)
  nameWithType: ModdedSaveData.GetValue(String, String)
- uid: InscryptionAPI.Saves.ModdedSaveData.GetValue*
  name: GetValue
  href: api/InscryptionAPI.Saves.ModdedSaveData.html#InscryptionAPI_Saves_ModdedSaveData_GetValue_
  commentId: Overload:InscryptionAPI.Saves.ModdedSaveData.GetValue
  isSpec: "True"
  fullName: InscryptionAPI.Saves.ModdedSaveData.GetValue
  nameWithType: ModdedSaveData.GetValue
- uid: InscryptionAPI.Saves.ModdedSaveData.GetValueAsBoolean(System.String,System.String)
  name: GetValueAsBoolean(String, String)
  href: api/InscryptionAPI.Saves.ModdedSaveData.html#InscryptionAPI_Saves_ModdedSaveData_GetValueAsBoolean_System_String_System_String_
  commentId: M:InscryptionAPI.Saves.ModdedSaveData.GetValueAsBoolean(System.String,System.String)
  fullName: InscryptionAPI.Saves.ModdedSaveData.GetValueAsBoolean(System.String, System.String)
  nameWithType: ModdedSaveData.GetValueAsBoolean(String, String)
- uid: InscryptionAPI.Saves.ModdedSaveData.GetValueAsBoolean*
  name: GetValueAsBoolean
  href: api/InscryptionAPI.Saves.ModdedSaveData.html#InscryptionAPI_Saves_ModdedSaveData_GetValueAsBoolean_
  commentId: Overload:InscryptionAPI.Saves.ModdedSaveData.GetValueAsBoolean
  isSpec: "True"
  fullName: InscryptionAPI.Saves.ModdedSaveData.GetValueAsBoolean
  nameWithType: ModdedSaveData.GetValueAsBoolean
- uid: InscryptionAPI.Saves.ModdedSaveData.GetValueAsFloat(System.String,System.String)
  name: GetValueAsFloat(String, String)
  href: api/InscryptionAPI.Saves.ModdedSaveData.html#InscryptionAPI_Saves_ModdedSaveData_GetValueAsFloat_System_String_System_String_
  commentId: M:InscryptionAPI.Saves.ModdedSaveData.GetValueAsFloat(System.String,System.String)
  fullName: InscryptionAPI.Saves.ModdedSaveData.GetValueAsFloat(System.String, System.String)
  nameWithType: ModdedSaveData.GetValueAsFloat(String, String)
- uid: InscryptionAPI.Saves.ModdedSaveData.GetValueAsFloat*
  name: GetValueAsFloat
  href: api/InscryptionAPI.Saves.ModdedSaveData.html#InscryptionAPI_Saves_ModdedSaveData_GetValueAsFloat_
  commentId: Overload:InscryptionAPI.Saves.ModdedSaveData.GetValueAsFloat
  isSpec: "True"
  fullName: InscryptionAPI.Saves.ModdedSaveData.GetValueAsFloat
  nameWithType: ModdedSaveData.GetValueAsFloat
- uid: InscryptionAPI.Saves.ModdedSaveData.GetValueAsInt(System.String,System.String)
  name: GetValueAsInt(String, String)
  href: api/InscryptionAPI.Saves.ModdedSaveData.html#InscryptionAPI_Saves_ModdedSaveData_GetValueAsInt_System_String_System_String_
  commentId: M:InscryptionAPI.Saves.ModdedSaveData.GetValueAsInt(System.String,System.String)
  fullName: InscryptionAPI.Saves.ModdedSaveData.GetValueAsInt(System.String, System.String)
  nameWithType: ModdedSaveData.GetValueAsInt(String, String)
- uid: InscryptionAPI.Saves.ModdedSaveData.GetValueAsInt*
  name: GetValueAsInt
  href: api/InscryptionAPI.Saves.ModdedSaveData.html#InscryptionAPI_Saves_ModdedSaveData_GetValueAsInt_
  commentId: Overload:InscryptionAPI.Saves.ModdedSaveData.GetValueAsInt
  isSpec: "True"
  fullName: InscryptionAPI.Saves.ModdedSaveData.GetValueAsInt
  nameWithType: ModdedSaveData.GetValueAsInt
- uid: InscryptionAPI.Saves.ModdedSaveData.GetValueAsObject*
  name: GetValueAsObject
  href: api/InscryptionAPI.Saves.ModdedSaveData.html#InscryptionAPI_Saves_ModdedSaveData_GetValueAsObject_
  commentId: Overload:InscryptionAPI.Saves.ModdedSaveData.GetValueAsObject
  isSpec: "True"
  fullName: InscryptionAPI.Saves.ModdedSaveData.GetValueAsObject
  nameWithType: ModdedSaveData.GetValueAsObject
- uid: InscryptionAPI.Saves.ModdedSaveData.GetValueAsObject``1(System.String,System.String)
  name: GetValueAsObject<T>(String, String)
  href: api/InscryptionAPI.Saves.ModdedSaveData.html#InscryptionAPI_Saves_ModdedSaveData_GetValueAsObject__1_System_String_System_String_
  commentId: M:InscryptionAPI.Saves.ModdedSaveData.GetValueAsObject``1(System.String,System.String)
  name.vb: GetValueAsObject(Of T)(String, String)
  fullName: InscryptionAPI.Saves.ModdedSaveData.GetValueAsObject<T>(System.String, System.String)
  fullName.vb: InscryptionAPI.Saves.ModdedSaveData.GetValueAsObject(Of T)(System.String, System.String)
  nameWithType: ModdedSaveData.GetValueAsObject<T>(String, String)
  nameWithType.vb: ModdedSaveData.GetValueAsObject(Of T)(String, String)
- uid: InscryptionAPI.Saves.ModdedSaveData.SetValue(System.String,System.String,System.Object)
  name: SetValue(String, String, Object)
  href: api/InscryptionAPI.Saves.ModdedSaveData.html#InscryptionAPI_Saves_ModdedSaveData_SetValue_System_String_System_String_System_Object_
  commentId: M:InscryptionAPI.Saves.ModdedSaveData.SetValue(System.String,System.String,System.Object)
  fullName: InscryptionAPI.Saves.ModdedSaveData.SetValue(System.String, System.String, System.Object)
  nameWithType: ModdedSaveData.SetValue(String, String, Object)
- uid: InscryptionAPI.Saves.ModdedSaveData.SetValue*
  name: SetValue
  href: api/InscryptionAPI.Saves.ModdedSaveData.html#InscryptionAPI_Saves_ModdedSaveData_SetValue_
  commentId: Overload:InscryptionAPI.Saves.ModdedSaveData.SetValue
  isSpec: "True"
  fullName: InscryptionAPI.Saves.ModdedSaveData.SetValue
  nameWithType: ModdedSaveData.SetValue
- uid: InscryptionAPI.Saves.ModdedSaveData.SetValueAsObject*
  name: SetValueAsObject
  href: api/InscryptionAPI.Saves.ModdedSaveData.html#InscryptionAPI_Saves_ModdedSaveData_SetValueAsObject_
  commentId: Overload:InscryptionAPI.Saves.ModdedSaveData.SetValueAsObject
  isSpec: "True"
  fullName: InscryptionAPI.Saves.ModdedSaveData.SetValueAsObject
  nameWithType: ModdedSaveData.SetValueAsObject
- uid: InscryptionAPI.Saves.ModdedSaveData.SetValueAsObject``1(System.String,System.String,``0)
  name: SetValueAsObject<T>(String, String, T)
  href: api/InscryptionAPI.Saves.ModdedSaveData.html#InscryptionAPI_Saves_ModdedSaveData_SetValueAsObject__1_System_String_System_String___0_
  commentId: M:InscryptionAPI.Saves.ModdedSaveData.SetValueAsObject``1(System.String,System.String,``0)
  name.vb: SetValueAsObject(Of T)(String, String, T)
  fullName: InscryptionAPI.Saves.ModdedSaveData.SetValueAsObject<T>(System.String, System.String, T)
  fullName.vb: InscryptionAPI.Saves.ModdedSaveData.SetValueAsObject(Of T)(System.String, System.String, T)
  nameWithType: ModdedSaveData.SetValueAsObject<T>(String, String, T)
  nameWithType.vb: ModdedSaveData.SetValueAsObject(Of T)(String, String, T)
- uid: InscryptionAPI.Saves.ModdedSaveManager
  name: ModdedSaveManager
  href: api/InscryptionAPI.Saves.ModdedSaveManager.html
  commentId: T:InscryptionAPI.Saves.ModdedSaveManager
  fullName: InscryptionAPI.Saves.ModdedSaveManager
  nameWithType: ModdedSaveManager
- uid: InscryptionAPI.Saves.ModdedSaveManager.ReadDataFromFile
  name: ReadDataFromFile()
  href: api/InscryptionAPI.Saves.ModdedSaveManager.html#InscryptionAPI_Saves_ModdedSaveManager_ReadDataFromFile
  commentId: M:InscryptionAPI.Saves.ModdedSaveManager.ReadDataFromFile
  fullName: InscryptionAPI.Saves.ModdedSaveManager.ReadDataFromFile()
  nameWithType: ModdedSaveManager.ReadDataFromFile()
- uid: InscryptionAPI.Saves.ModdedSaveManager.ReadDataFromFile*
  name: ReadDataFromFile
  href: api/InscryptionAPI.Saves.ModdedSaveManager.html#InscryptionAPI_Saves_ModdedSaveManager_ReadDataFromFile_
  commentId: Overload:InscryptionAPI.Saves.ModdedSaveManager.ReadDataFromFile
  isSpec: "True"
  fullName: InscryptionAPI.Saves.ModdedSaveManager.ReadDataFromFile
  nameWithType: ModdedSaveManager.ReadDataFromFile
- uid: InscryptionAPI.Saves.ModdedSaveManager.ResetRunStateOnNewAscensionRun
  name: ResetRunStateOnNewAscensionRun()
  href: api/InscryptionAPI.Saves.ModdedSaveManager.html#InscryptionAPI_Saves_ModdedSaveManager_ResetRunStateOnNewAscensionRun
  commentId: M:InscryptionAPI.Saves.ModdedSaveManager.ResetRunStateOnNewAscensionRun
  fullName: InscryptionAPI.Saves.ModdedSaveManager.ResetRunStateOnNewAscensionRun()
  nameWithType: ModdedSaveManager.ResetRunStateOnNewAscensionRun()
- uid: InscryptionAPI.Saves.ModdedSaveManager.ResetRunStateOnNewAscensionRun*
  name: ResetRunStateOnNewAscensionRun
  href: api/InscryptionAPI.Saves.ModdedSaveManager.html#InscryptionAPI_Saves_ModdedSaveManager_ResetRunStateOnNewAscensionRun_
  commentId: Overload:InscryptionAPI.Saves.ModdedSaveManager.ResetRunStateOnNewAscensionRun
  isSpec: "True"
  fullName: InscryptionAPI.Saves.ModdedSaveManager.ResetRunStateOnNewAscensionRun
  nameWithType: ModdedSaveManager.ResetRunStateOnNewAscensionRun
- uid: InscryptionAPI.Saves.ModdedSaveManager.ResetRunStateOnPart1Run
  name: ResetRunStateOnPart1Run()
  href: api/InscryptionAPI.Saves.ModdedSaveManager.html#InscryptionAPI_Saves_ModdedSaveManager_ResetRunStateOnPart1Run
  commentId: M:InscryptionAPI.Saves.ModdedSaveManager.ResetRunStateOnPart1Run
  fullName: InscryptionAPI.Saves.ModdedSaveManager.ResetRunStateOnPart1Run()
  nameWithType: ModdedSaveManager.ResetRunStateOnPart1Run()
- uid: InscryptionAPI.Saves.ModdedSaveManager.ResetRunStateOnPart1Run*
  name: ResetRunStateOnPart1Run
  href: api/InscryptionAPI.Saves.ModdedSaveManager.html#InscryptionAPI_Saves_ModdedSaveManager_ResetRunStateOnPart1Run_
  commentId: Overload:InscryptionAPI.Saves.ModdedSaveManager.ResetRunStateOnPart1Run
  isSpec: "True"
  fullName: InscryptionAPI.Saves.ModdedSaveManager.ResetRunStateOnPart1Run
  nameWithType: ModdedSaveManager.ResetRunStateOnPart1Run
- uid: InscryptionAPI.Saves.ModdedSaveManager.RunState
  name: RunState
  href: api/InscryptionAPI.Saves.ModdedSaveManager.html#InscryptionAPI_Saves_ModdedSaveManager_RunState
  commentId: P:InscryptionAPI.Saves.ModdedSaveManager.RunState
  fullName: InscryptionAPI.Saves.ModdedSaveManager.RunState
  nameWithType: ModdedSaveManager.RunState
- uid: InscryptionAPI.Saves.ModdedSaveManager.RunState*
  name: RunState
  href: api/InscryptionAPI.Saves.ModdedSaveManager.html#InscryptionAPI_Saves_ModdedSaveManager_RunState_
  commentId: Overload:InscryptionAPI.Saves.ModdedSaveManager.RunState
  isSpec: "True"
  fullName: InscryptionAPI.Saves.ModdedSaveManager.RunState
  nameWithType: ModdedSaveManager.RunState
- uid: InscryptionAPI.Saves.ModdedSaveManager.SaveData
  name: SaveData
  href: api/InscryptionAPI.Saves.ModdedSaveManager.html#InscryptionAPI_Saves_ModdedSaveManager_SaveData
  commentId: P:InscryptionAPI.Saves.ModdedSaveManager.SaveData
  fullName: InscryptionAPI.Saves.ModdedSaveManager.SaveData
  nameWithType: ModdedSaveManager.SaveData
- uid: InscryptionAPI.Saves.ModdedSaveManager.SaveData*
  name: SaveData
  href: api/InscryptionAPI.Saves.ModdedSaveManager.html#InscryptionAPI_Saves_ModdedSaveManager_SaveData_
  commentId: Overload:InscryptionAPI.Saves.ModdedSaveManager.SaveData
  isSpec: "True"
  fullName: InscryptionAPI.Saves.ModdedSaveManager.SaveData
  nameWithType: ModdedSaveManager.SaveData
- uid: InscryptionAPI.Saves.ModdedSaveManager.SaveDataToFile
  name: SaveDataToFile()
  href: api/InscryptionAPI.Saves.ModdedSaveManager.html#InscryptionAPI_Saves_ModdedSaveManager_SaveDataToFile
  commentId: M:InscryptionAPI.Saves.ModdedSaveManager.SaveDataToFile
  fullName: InscryptionAPI.Saves.ModdedSaveManager.SaveDataToFile()
  nameWithType: ModdedSaveManager.SaveDataToFile()
- uid: InscryptionAPI.Saves.ModdedSaveManager.SaveDataToFile*
  name: SaveDataToFile
  href: api/InscryptionAPI.Saves.ModdedSaveManager.html#InscryptionAPI_Saves_ModdedSaveManager_SaveDataToFile_
  commentId: Overload:InscryptionAPI.Saves.ModdedSaveManager.SaveDataToFile
  isSpec: "True"
  fullName: InscryptionAPI.Saves.ModdedSaveManager.SaveDataToFile
  nameWithType: ModdedSaveManager.SaveDataToFile
- uid: InscryptionAPI.Triggers
  name: InscryptionAPI.Triggers
  href: api/InscryptionAPI.Triggers.html
  commentId: N:InscryptionAPI.Triggers
  fullName: InscryptionAPI.Triggers
  nameWithType: InscryptionAPI.Triggers
- uid: InscryptionAPI.Triggers.CustomGlobalTriggerHandler
  name: CustomGlobalTriggerHandler
  href: api/InscryptionAPI.Triggers.CustomGlobalTriggerHandler.html
  commentId: T:InscryptionAPI.Triggers.CustomGlobalTriggerHandler
  fullName: InscryptionAPI.Triggers.CustomGlobalTriggerHandler
  nameWithType: CustomGlobalTriggerHandler
- uid: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.CustomTriggerAll(InscryptionAPI.Triggers.CustomTrigger,System.Boolean,System.Object[])
  name: CustomTriggerAll(CustomTrigger, Boolean, Object[])
  href: api/InscryptionAPI.Triggers.CustomGlobalTriggerHandler.html#InscryptionAPI_Triggers_CustomGlobalTriggerHandler_CustomTriggerAll_InscryptionAPI_Triggers_CustomTrigger_System_Boolean_System_Object___
  commentId: M:InscryptionAPI.Triggers.CustomGlobalTriggerHandler.CustomTriggerAll(InscryptionAPI.Triggers.CustomTrigger,System.Boolean,System.Object[])
  name.vb: CustomTriggerAll(CustomTrigger, Boolean, Object())
  fullName: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.CustomTriggerAll(InscryptionAPI.Triggers.CustomTrigger, System.Boolean, System.Object[])
  fullName.vb: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.CustomTriggerAll(InscryptionAPI.Triggers.CustomTrigger, System.Boolean, System.Object())
  nameWithType: CustomGlobalTriggerHandler.CustomTriggerAll(CustomTrigger, Boolean, Object[])
  nameWithType.vb: CustomGlobalTriggerHandler.CustomTriggerAll(CustomTrigger, Boolean, Object())
- uid: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.CustomTriggerAll(System.String,System.String,System.Boolean,System.Object[])
  name: CustomTriggerAll(String, String, Boolean, Object[])
  href: api/InscryptionAPI.Triggers.CustomGlobalTriggerHandler.html#InscryptionAPI_Triggers_CustomGlobalTriggerHandler_CustomTriggerAll_System_String_System_String_System_Boolean_System_Object___
  commentId: M:InscryptionAPI.Triggers.CustomGlobalTriggerHandler.CustomTriggerAll(System.String,System.String,System.Boolean,System.Object[])
  name.vb: CustomTriggerAll(String, String, Boolean, Object())
  fullName: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.CustomTriggerAll(System.String, System.String, System.Boolean, System.Object[])
  fullName.vb: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.CustomTriggerAll(System.String, System.String, System.Boolean, System.Object())
  nameWithType: CustomGlobalTriggerHandler.CustomTriggerAll(String, String, Boolean, Object[])
  nameWithType.vb: CustomGlobalTriggerHandler.CustomTriggerAll(String, String, Boolean, Object())
- uid: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.CustomTriggerAll*
  name: CustomTriggerAll
  href: api/InscryptionAPI.Triggers.CustomGlobalTriggerHandler.html#InscryptionAPI_Triggers_CustomGlobalTriggerHandler_CustomTriggerAll_
  commentId: Overload:InscryptionAPI.Triggers.CustomGlobalTriggerHandler.CustomTriggerAll
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.CustomTriggerAll
  nameWithType: CustomGlobalTriggerHandler.CustomTriggerAll
- uid: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.CustomTriggerCardsInHand(InscryptionAPI.Triggers.CustomTrigger,System.Object[])
  name: CustomTriggerCardsInHand(CustomTrigger, Object[])
  href: api/InscryptionAPI.Triggers.CustomGlobalTriggerHandler.html#InscryptionAPI_Triggers_CustomGlobalTriggerHandler_CustomTriggerCardsInHand_InscryptionAPI_Triggers_CustomTrigger_System_Object___
  commentId: M:InscryptionAPI.Triggers.CustomGlobalTriggerHandler.CustomTriggerCardsInHand(InscryptionAPI.Triggers.CustomTrigger,System.Object[])
  name.vb: CustomTriggerCardsInHand(CustomTrigger, Object())
  fullName: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.CustomTriggerCardsInHand(InscryptionAPI.Triggers.CustomTrigger, System.Object[])
  fullName.vb: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.CustomTriggerCardsInHand(InscryptionAPI.Triggers.CustomTrigger, System.Object())
  nameWithType: CustomGlobalTriggerHandler.CustomTriggerCardsInHand(CustomTrigger, Object[])
  nameWithType.vb: CustomGlobalTriggerHandler.CustomTriggerCardsInHand(CustomTrigger, Object())
- uid: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.CustomTriggerCardsInHand(System.String,System.String,System.Object[])
  name: CustomTriggerCardsInHand(String, String, Object[])
  href: api/InscryptionAPI.Triggers.CustomGlobalTriggerHandler.html#InscryptionAPI_Triggers_CustomGlobalTriggerHandler_CustomTriggerCardsInHand_System_String_System_String_System_Object___
  commentId: M:InscryptionAPI.Triggers.CustomGlobalTriggerHandler.CustomTriggerCardsInHand(System.String,System.String,System.Object[])
  name.vb: CustomTriggerCardsInHand(String, String, Object())
  fullName: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.CustomTriggerCardsInHand(System.String, System.String, System.Object[])
  fullName.vb: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.CustomTriggerCardsInHand(System.String, System.String, System.Object())
  nameWithType: CustomGlobalTriggerHandler.CustomTriggerCardsInHand(String, String, Object[])
  nameWithType.vb: CustomGlobalTriggerHandler.CustomTriggerCardsInHand(String, String, Object())
- uid: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.CustomTriggerCardsInHand*
  name: CustomTriggerCardsInHand
  href: api/InscryptionAPI.Triggers.CustomGlobalTriggerHandler.html#InscryptionAPI_Triggers_CustomGlobalTriggerHandler_CustomTriggerCardsInHand_
  commentId: Overload:InscryptionAPI.Triggers.CustomGlobalTriggerHandler.CustomTriggerCardsInHand
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.CustomTriggerCardsInHand
  nameWithType: CustomGlobalTriggerHandler.CustomTriggerCardsInHand
- uid: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.CustomTriggerCardsOnBoard(InscryptionAPI.Triggers.CustomTrigger,System.Boolean,System.Object[])
  name: CustomTriggerCardsOnBoard(CustomTrigger, Boolean, Object[])
  href: api/InscryptionAPI.Triggers.CustomGlobalTriggerHandler.html#InscryptionAPI_Triggers_CustomGlobalTriggerHandler_CustomTriggerCardsOnBoard_InscryptionAPI_Triggers_CustomTrigger_System_Boolean_System_Object___
  commentId: M:InscryptionAPI.Triggers.CustomGlobalTriggerHandler.CustomTriggerCardsOnBoard(InscryptionAPI.Triggers.CustomTrigger,System.Boolean,System.Object[])
  name.vb: CustomTriggerCardsOnBoard(CustomTrigger, Boolean, Object())
  fullName: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.CustomTriggerCardsOnBoard(InscryptionAPI.Triggers.CustomTrigger, System.Boolean, System.Object[])
  fullName.vb: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.CustomTriggerCardsOnBoard(InscryptionAPI.Triggers.CustomTrigger, System.Boolean, System.Object())
  nameWithType: CustomGlobalTriggerHandler.CustomTriggerCardsOnBoard(CustomTrigger, Boolean, Object[])
  nameWithType.vb: CustomGlobalTriggerHandler.CustomTriggerCardsOnBoard(CustomTrigger, Boolean, Object())
- uid: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.CustomTriggerCardsOnBoard(System.String,System.String,System.Boolean,System.Object[])
  name: CustomTriggerCardsOnBoard(String, String, Boolean, Object[])
  href: api/InscryptionAPI.Triggers.CustomGlobalTriggerHandler.html#InscryptionAPI_Triggers_CustomGlobalTriggerHandler_CustomTriggerCardsOnBoard_System_String_System_String_System_Boolean_System_Object___
  commentId: M:InscryptionAPI.Triggers.CustomGlobalTriggerHandler.CustomTriggerCardsOnBoard(System.String,System.String,System.Boolean,System.Object[])
  name.vb: CustomTriggerCardsOnBoard(String, String, Boolean, Object())
  fullName: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.CustomTriggerCardsOnBoard(System.String, System.String, System.Boolean, System.Object[])
  fullName.vb: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.CustomTriggerCardsOnBoard(System.String, System.String, System.Boolean, System.Object())
  nameWithType: CustomGlobalTriggerHandler.CustomTriggerCardsOnBoard(String, String, Boolean, Object[])
  nameWithType.vb: CustomGlobalTriggerHandler.CustomTriggerCardsOnBoard(String, String, Boolean, Object())
- uid: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.CustomTriggerCardsOnBoard*
  name: CustomTriggerCardsOnBoard
  href: api/InscryptionAPI.Triggers.CustomGlobalTriggerHandler.html#InscryptionAPI_Triggers_CustomGlobalTriggerHandler_CustomTriggerCardsOnBoard_
  commentId: Overload:InscryptionAPI.Triggers.CustomGlobalTriggerHandler.CustomTriggerCardsOnBoard
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.CustomTriggerCardsOnBoard
  nameWithType: CustomGlobalTriggerHandler.CustomTriggerCardsOnBoard
- uid: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.CustomTriggerSequence(DiskCardGame.TriggerReceiver,System.Collections.IEnumerator)
  name: CustomTriggerSequence(TriggerReceiver, IEnumerator)
  href: api/InscryptionAPI.Triggers.CustomGlobalTriggerHandler.html#InscryptionAPI_Triggers_CustomGlobalTriggerHandler_CustomTriggerSequence_DiskCardGame_TriggerReceiver_System_Collections_IEnumerator_
  commentId: M:InscryptionAPI.Triggers.CustomGlobalTriggerHandler.CustomTriggerSequence(DiskCardGame.TriggerReceiver,System.Collections.IEnumerator)
  fullName: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.CustomTriggerSequence(DiskCardGame.TriggerReceiver, System.Collections.IEnumerator)
  nameWithType: CustomGlobalTriggerHandler.CustomTriggerSequence(TriggerReceiver, IEnumerator)
- uid: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.CustomTriggerSequence(InscryptionAPI.Triggers.CustomTrigger,DiskCardGame.TriggerReceiver,System.Object[])
  name: CustomTriggerSequence(CustomTrigger, TriggerReceiver, Object[])
  href: api/InscryptionAPI.Triggers.CustomGlobalTriggerHandler.html#InscryptionAPI_Triggers_CustomGlobalTriggerHandler_CustomTriggerSequence_InscryptionAPI_Triggers_CustomTrigger_DiskCardGame_TriggerReceiver_System_Object___
  commentId: M:InscryptionAPI.Triggers.CustomGlobalTriggerHandler.CustomTriggerSequence(InscryptionAPI.Triggers.CustomTrigger,DiskCardGame.TriggerReceiver,System.Object[])
  name.vb: CustomTriggerSequence(CustomTrigger, TriggerReceiver, Object())
  fullName: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.CustomTriggerSequence(InscryptionAPI.Triggers.CustomTrigger, DiskCardGame.TriggerReceiver, System.Object[])
  fullName.vb: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.CustomTriggerSequence(InscryptionAPI.Triggers.CustomTrigger, DiskCardGame.TriggerReceiver, System.Object())
  nameWithType: CustomGlobalTriggerHandler.CustomTriggerSequence(CustomTrigger, TriggerReceiver, Object[])
  nameWithType.vb: CustomGlobalTriggerHandler.CustomTriggerSequence(CustomTrigger, TriggerReceiver, Object())
- uid: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.CustomTriggerSequence(System.String,System.String,DiskCardGame.TriggerReceiver,System.Object[])
  name: CustomTriggerSequence(String, String, TriggerReceiver, Object[])
  href: api/InscryptionAPI.Triggers.CustomGlobalTriggerHandler.html#InscryptionAPI_Triggers_CustomGlobalTriggerHandler_CustomTriggerSequence_System_String_System_String_DiskCardGame_TriggerReceiver_System_Object___
  commentId: M:InscryptionAPI.Triggers.CustomGlobalTriggerHandler.CustomTriggerSequence(System.String,System.String,DiskCardGame.TriggerReceiver,System.Object[])
  name.vb: CustomTriggerSequence(String, String, TriggerReceiver, Object())
  fullName: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.CustomTriggerSequence(System.String, System.String, DiskCardGame.TriggerReceiver, System.Object[])
  fullName.vb: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.CustomTriggerSequence(System.String, System.String, DiskCardGame.TriggerReceiver, System.Object())
  nameWithType: CustomGlobalTriggerHandler.CustomTriggerSequence(String, String, TriggerReceiver, Object[])
  nameWithType.vb: CustomGlobalTriggerHandler.CustomTriggerSequence(String, String, TriggerReceiver, Object())
- uid: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.CustomTriggerSequence*
  name: CustomTriggerSequence
  href: api/InscryptionAPI.Triggers.CustomGlobalTriggerHandler.html#InscryptionAPI_Triggers_CustomGlobalTriggerHandler_CustomTriggerSequence_
  commentId: Overload:InscryptionAPI.Triggers.CustomGlobalTriggerHandler.CustomTriggerSequence
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.CustomTriggerSequence
  nameWithType: CustomGlobalTriggerHandler.CustomTriggerSequence
- uid: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.OnCustomTrigger(DiskCardGame.CardTriggerHandler,InscryptionAPI.Triggers.CustomTrigger,System.Object[])
  name: OnCustomTrigger(CardTriggerHandler, CustomTrigger, Object[])
  href: api/InscryptionAPI.Triggers.CustomGlobalTriggerHandler.html#InscryptionAPI_Triggers_CustomGlobalTriggerHandler_OnCustomTrigger_DiskCardGame_CardTriggerHandler_InscryptionAPI_Triggers_CustomTrigger_System_Object___
  commentId: M:InscryptionAPI.Triggers.CustomGlobalTriggerHandler.OnCustomTrigger(DiskCardGame.CardTriggerHandler,InscryptionAPI.Triggers.CustomTrigger,System.Object[])
  name.vb: OnCustomTrigger(CardTriggerHandler, CustomTrigger, Object())
  fullName: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.OnCustomTrigger(DiskCardGame.CardTriggerHandler, InscryptionAPI.Triggers.CustomTrigger, System.Object[])
  fullName.vb: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.OnCustomTrigger(DiskCardGame.CardTriggerHandler, InscryptionAPI.Triggers.CustomTrigger, System.Object())
  nameWithType: CustomGlobalTriggerHandler.OnCustomTrigger(CardTriggerHandler, CustomTrigger, Object[])
  nameWithType.vb: CustomGlobalTriggerHandler.OnCustomTrigger(CardTriggerHandler, CustomTrigger, Object())
- uid: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.OnCustomTrigger(DiskCardGame.CardTriggerHandler,System.String,System.String,System.Object[])
  name: OnCustomTrigger(CardTriggerHandler, String, String, Object[])
  href: api/InscryptionAPI.Triggers.CustomGlobalTriggerHandler.html#InscryptionAPI_Triggers_CustomGlobalTriggerHandler_OnCustomTrigger_DiskCardGame_CardTriggerHandler_System_String_System_String_System_Object___
  commentId: M:InscryptionAPI.Triggers.CustomGlobalTriggerHandler.OnCustomTrigger(DiskCardGame.CardTriggerHandler,System.String,System.String,System.Object[])
  name.vb: OnCustomTrigger(CardTriggerHandler, String, String, Object())
  fullName: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.OnCustomTrigger(DiskCardGame.CardTriggerHandler, System.String, System.String, System.Object[])
  fullName.vb: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.OnCustomTrigger(DiskCardGame.CardTriggerHandler, System.String, System.String, System.Object())
  nameWithType: CustomGlobalTriggerHandler.OnCustomTrigger(CardTriggerHandler, String, String, Object[])
  nameWithType.vb: CustomGlobalTriggerHandler.OnCustomTrigger(CardTriggerHandler, String, String, Object())
- uid: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.OnCustomTrigger*
  name: OnCustomTrigger
  href: api/InscryptionAPI.Triggers.CustomGlobalTriggerHandler.html#InscryptionAPI_Triggers_CustomGlobalTriggerHandler_OnCustomTrigger_
  commentId: Overload:InscryptionAPI.Triggers.CustomGlobalTriggerHandler.OnCustomTrigger
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.OnCustomTrigger
  nameWithType: CustomGlobalTriggerHandler.OnCustomTrigger
- uid: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.ReceiverRespondsToCustomTrigger(InscryptionAPI.Triggers.CustomTrigger,DiskCardGame.TriggerReceiver,System.Object[])
  name: ReceiverRespondsToCustomTrigger(CustomTrigger, TriggerReceiver, Object[])
  href: api/InscryptionAPI.Triggers.CustomGlobalTriggerHandler.html#InscryptionAPI_Triggers_CustomGlobalTriggerHandler_ReceiverRespondsToCustomTrigger_InscryptionAPI_Triggers_CustomTrigger_DiskCardGame_TriggerReceiver_System_Object___
  commentId: M:InscryptionAPI.Triggers.CustomGlobalTriggerHandler.ReceiverRespondsToCustomTrigger(InscryptionAPI.Triggers.CustomTrigger,DiskCardGame.TriggerReceiver,System.Object[])
  name.vb: ReceiverRespondsToCustomTrigger(CustomTrigger, TriggerReceiver, Object())
  fullName: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.ReceiverRespondsToCustomTrigger(InscryptionAPI.Triggers.CustomTrigger, DiskCardGame.TriggerReceiver, System.Object[])
  fullName.vb: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.ReceiverRespondsToCustomTrigger(InscryptionAPI.Triggers.CustomTrigger, DiskCardGame.TriggerReceiver, System.Object())
  nameWithType: CustomGlobalTriggerHandler.ReceiverRespondsToCustomTrigger(CustomTrigger, TriggerReceiver, Object[])
  nameWithType.vb: CustomGlobalTriggerHandler.ReceiverRespondsToCustomTrigger(CustomTrigger, TriggerReceiver, Object())
- uid: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.ReceiverRespondsToCustomTrigger(System.String,System.String,DiskCardGame.TriggerReceiver,System.Object[])
  name: ReceiverRespondsToCustomTrigger(String, String, TriggerReceiver, Object[])
  href: api/InscryptionAPI.Triggers.CustomGlobalTriggerHandler.html#InscryptionAPI_Triggers_CustomGlobalTriggerHandler_ReceiverRespondsToCustomTrigger_System_String_System_String_DiskCardGame_TriggerReceiver_System_Object___
  commentId: M:InscryptionAPI.Triggers.CustomGlobalTriggerHandler.ReceiverRespondsToCustomTrigger(System.String,System.String,DiskCardGame.TriggerReceiver,System.Object[])
  name.vb: ReceiverRespondsToCustomTrigger(String, String, TriggerReceiver, Object())
  fullName: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.ReceiverRespondsToCustomTrigger(System.String, System.String, DiskCardGame.TriggerReceiver, System.Object[])
  fullName.vb: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.ReceiverRespondsToCustomTrigger(System.String, System.String, DiskCardGame.TriggerReceiver, System.Object())
  nameWithType: CustomGlobalTriggerHandler.ReceiverRespondsToCustomTrigger(String, String, TriggerReceiver, Object[])
  nameWithType.vb: CustomGlobalTriggerHandler.ReceiverRespondsToCustomTrigger(String, String, TriggerReceiver, Object())
- uid: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.ReceiverRespondsToCustomTrigger*
  name: ReceiverRespondsToCustomTrigger
  href: api/InscryptionAPI.Triggers.CustomGlobalTriggerHandler.html#InscryptionAPI_Triggers_CustomGlobalTriggerHandler_ReceiverRespondsToCustomTrigger_
  commentId: Overload:InscryptionAPI.Triggers.CustomGlobalTriggerHandler.ReceiverRespondsToCustomTrigger
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.ReceiverRespondsToCustomTrigger
  nameWithType: CustomGlobalTriggerHandler.ReceiverRespondsToCustomTrigger
- uid: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.RegisterCustomTrigger(System.String,System.String,System.Type[])
  name: RegisterCustomTrigger(String, String, Type[])
  href: api/InscryptionAPI.Triggers.CustomGlobalTriggerHandler.html#InscryptionAPI_Triggers_CustomGlobalTriggerHandler_RegisterCustomTrigger_System_String_System_String_System_Type___
  commentId: M:InscryptionAPI.Triggers.CustomGlobalTriggerHandler.RegisterCustomTrigger(System.String,System.String,System.Type[])
  name.vb: RegisterCustomTrigger(String, String, Type())
  fullName: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.RegisterCustomTrigger(System.String, System.String, System.Type[])
  fullName.vb: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.RegisterCustomTrigger(System.String, System.String, System.Type())
  nameWithType: CustomGlobalTriggerHandler.RegisterCustomTrigger(String, String, Type[])
  nameWithType.vb: CustomGlobalTriggerHandler.RegisterCustomTrigger(String, String, Type())
- uid: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.RegisterCustomTrigger*
  name: RegisterCustomTrigger
  href: api/InscryptionAPI.Triggers.CustomGlobalTriggerHandler.html#InscryptionAPI_Triggers_CustomGlobalTriggerHandler_RegisterCustomTrigger_
  commentId: Overload:InscryptionAPI.Triggers.CustomGlobalTriggerHandler.RegisterCustomTrigger
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.RegisterCustomTrigger
  nameWithType: CustomGlobalTriggerHandler.RegisterCustomTrigger
- uid: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.RespondsToCustomTrigger(DiskCardGame.CardTriggerHandler,InscryptionAPI.Triggers.CustomTrigger,System.Object[])
  name: RespondsToCustomTrigger(CardTriggerHandler, CustomTrigger, Object[])
  href: api/InscryptionAPI.Triggers.CustomGlobalTriggerHandler.html#InscryptionAPI_Triggers_CustomGlobalTriggerHandler_RespondsToCustomTrigger_DiskCardGame_CardTriggerHandler_InscryptionAPI_Triggers_CustomTrigger_System_Object___
  commentId: M:InscryptionAPI.Triggers.CustomGlobalTriggerHandler.RespondsToCustomTrigger(DiskCardGame.CardTriggerHandler,InscryptionAPI.Triggers.CustomTrigger,System.Object[])
  name.vb: RespondsToCustomTrigger(CardTriggerHandler, CustomTrigger, Object())
  fullName: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.RespondsToCustomTrigger(DiskCardGame.CardTriggerHandler, InscryptionAPI.Triggers.CustomTrigger, System.Object[])
  fullName.vb: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.RespondsToCustomTrigger(DiskCardGame.CardTriggerHandler, InscryptionAPI.Triggers.CustomTrigger, System.Object())
  nameWithType: CustomGlobalTriggerHandler.RespondsToCustomTrigger(CardTriggerHandler, CustomTrigger, Object[])
  nameWithType.vb: CustomGlobalTriggerHandler.RespondsToCustomTrigger(CardTriggerHandler, CustomTrigger, Object())
- uid: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.RespondsToCustomTrigger(DiskCardGame.CardTriggerHandler,System.String,System.String,System.Object[])
  name: RespondsToCustomTrigger(CardTriggerHandler, String, String, Object[])
  href: api/InscryptionAPI.Triggers.CustomGlobalTriggerHandler.html#InscryptionAPI_Triggers_CustomGlobalTriggerHandler_RespondsToCustomTrigger_DiskCardGame_CardTriggerHandler_System_String_System_String_System_Object___
  commentId: M:InscryptionAPI.Triggers.CustomGlobalTriggerHandler.RespondsToCustomTrigger(DiskCardGame.CardTriggerHandler,System.String,System.String,System.Object[])
  name.vb: RespondsToCustomTrigger(CardTriggerHandler, String, String, Object())
  fullName: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.RespondsToCustomTrigger(DiskCardGame.CardTriggerHandler, System.String, System.String, System.Object[])
  fullName.vb: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.RespondsToCustomTrigger(DiskCardGame.CardTriggerHandler, System.String, System.String, System.Object())
  nameWithType: CustomGlobalTriggerHandler.RespondsToCustomTrigger(CardTriggerHandler, String, String, Object[])
  nameWithType.vb: CustomGlobalTriggerHandler.RespondsToCustomTrigger(CardTriggerHandler, String, String, Object())
- uid: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.RespondsToCustomTrigger*
  name: RespondsToCustomTrigger
  href: api/InscryptionAPI.Triggers.CustomGlobalTriggerHandler.html#InscryptionAPI_Triggers_CustomGlobalTriggerHandler_RespondsToCustomTrigger_
  commentId: Overload:InscryptionAPI.Triggers.CustomGlobalTriggerHandler.RespondsToCustomTrigger
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.CustomGlobalTriggerHandler.RespondsToCustomTrigger
  nameWithType: CustomGlobalTriggerHandler.RespondsToCustomTrigger
- uid: InscryptionAPI.Triggers.CustomTrigger
  name: CustomTrigger
  href: api/InscryptionAPI.Triggers.CustomTrigger.html
  commentId: T:InscryptionAPI.Triggers.CustomTrigger
  fullName: InscryptionAPI.Triggers.CustomTrigger
  nameWithType: CustomTrigger
- uid: InscryptionAPI.Triggers.CustomTrigger.None
  name: None
  href: api/InscryptionAPI.Triggers.CustomTrigger.html#InscryptionAPI_Triggers_CustomTrigger_None
  commentId: F:InscryptionAPI.Triggers.CustomTrigger.None
  fullName: InscryptionAPI.Triggers.CustomTrigger.None
  nameWithType: CustomTrigger.None
- uid: InscryptionAPI.Triggers.CustomTrigger.OnAddedToHand
  name: OnAddedToHand
  href: api/InscryptionAPI.Triggers.CustomTrigger.html#InscryptionAPI_Triggers_CustomTrigger_OnAddedToHand
  commentId: F:InscryptionAPI.Triggers.CustomTrigger.OnAddedToHand
  fullName: InscryptionAPI.Triggers.CustomTrigger.OnAddedToHand
  nameWithType: CustomTrigger.OnAddedToHand
- uid: InscryptionAPI.Triggers.CustomTrigger.OnBellRung
  name: OnBellRung
  href: api/InscryptionAPI.Triggers.CustomTrigger.html#InscryptionAPI_Triggers_CustomTrigger_OnBellRung
  commentId: F:InscryptionAPI.Triggers.CustomTrigger.OnBellRung
  fullName: InscryptionAPI.Triggers.CustomTrigger.OnBellRung
  nameWithType: CustomTrigger.OnBellRung
- uid: InscryptionAPI.Triggers.CustomTrigger.OnCardAssignedToSlotNoResolve
  name: OnCardAssignedToSlotNoResolve
  href: api/InscryptionAPI.Triggers.CustomTrigger.html#InscryptionAPI_Triggers_CustomTrigger_OnCardAssignedToSlotNoResolve
  commentId: F:InscryptionAPI.Triggers.CustomTrigger.OnCardAssignedToSlotNoResolve
  fullName: InscryptionAPI.Triggers.CustomTrigger.OnCardAssignedToSlotNoResolve
  nameWithType: CustomTrigger.OnCardAssignedToSlotNoResolve
- uid: InscryptionAPI.Triggers.CustomTrigger.OnOtherCardAddedToHand
  name: OnOtherCardAddedToHand
  href: api/InscryptionAPI.Triggers.CustomTrigger.html#InscryptionAPI_Triggers_CustomTrigger_OnOtherCardAddedToHand
  commentId: F:InscryptionAPI.Triggers.CustomTrigger.OnOtherCardAddedToHand
  fullName: InscryptionAPI.Triggers.CustomTrigger.OnOtherCardAddedToHand
  nameWithType: CustomTrigger.OnOtherCardAddedToHand
- uid: InscryptionAPI.Triggers.CustomTrigger.OnOtherCardAssignedToSlotInHand
  name: OnOtherCardAssignedToSlotInHand
  href: api/InscryptionAPI.Triggers.CustomTrigger.html#InscryptionAPI_Triggers_CustomTrigger_OnOtherCardAssignedToSlotInHand
  commentId: F:InscryptionAPI.Triggers.CustomTrigger.OnOtherCardAssignedToSlotInHand
  fullName: InscryptionAPI.Triggers.CustomTrigger.OnOtherCardAssignedToSlotInHand
  nameWithType: CustomTrigger.OnOtherCardAssignedToSlotInHand
- uid: InscryptionAPI.Triggers.CustomTrigger.OnOtherCardDealtDamageInHand
  name: OnOtherCardDealtDamageInHand
  href: api/InscryptionAPI.Triggers.CustomTrigger.html#InscryptionAPI_Triggers_CustomTrigger_OnOtherCardDealtDamageInHand
  commentId: F:InscryptionAPI.Triggers.CustomTrigger.OnOtherCardDealtDamageInHand
  fullName: InscryptionAPI.Triggers.CustomTrigger.OnOtherCardDealtDamageInHand
  nameWithType: CustomTrigger.OnOtherCardDealtDamageInHand
- uid: InscryptionAPI.Triggers.CustomTrigger.OnOtherCardDieInHand
  name: OnOtherCardDieInHand
  href: api/InscryptionAPI.Triggers.CustomTrigger.html#InscryptionAPI_Triggers_CustomTrigger_OnOtherCardDieInHand
  commentId: F:InscryptionAPI.Triggers.CustomTrigger.OnOtherCardDieInHand
  fullName: InscryptionAPI.Triggers.CustomTrigger.OnOtherCardDieInHand
  nameWithType: CustomTrigger.OnOtherCardDieInHand
- uid: InscryptionAPI.Triggers.CustomTrigger.OnOtherCardPreDeathInHand
  name: OnOtherCardPreDeathInHand
  href: api/InscryptionAPI.Triggers.CustomTrigger.html#InscryptionAPI_Triggers_CustomTrigger_OnOtherCardPreDeathInHand
  commentId: F:InscryptionAPI.Triggers.CustomTrigger.OnOtherCardPreDeathInHand
  fullName: InscryptionAPI.Triggers.CustomTrigger.OnOtherCardPreDeathInHand
  nameWithType: CustomTrigger.OnOtherCardPreDeathInHand
- uid: InscryptionAPI.Triggers.CustomTrigger.OnOtherCardResolveInHand
  name: OnOtherCardResolveInHand
  href: api/InscryptionAPI.Triggers.CustomTrigger.html#InscryptionAPI_Triggers_CustomTrigger_OnOtherCardResolveInHand
  commentId: F:InscryptionAPI.Triggers.CustomTrigger.OnOtherCardResolveInHand
  fullName: InscryptionAPI.Triggers.CustomTrigger.OnOtherCardResolveInHand
  nameWithType: CustomTrigger.OnOtherCardResolveInHand
- uid: InscryptionAPI.Triggers.CustomTrigger.OnPostScalesChanged
  name: OnPostScalesChanged
  href: api/InscryptionAPI.Triggers.CustomTrigger.html#InscryptionAPI_Triggers_CustomTrigger_OnPostScalesChanged
  commentId: F:InscryptionAPI.Triggers.CustomTrigger.OnPostScalesChanged
  fullName: InscryptionAPI.Triggers.CustomTrigger.OnPostScalesChanged
  nameWithType: CustomTrigger.OnPostScalesChanged
- uid: InscryptionAPI.Triggers.CustomTrigger.OnPostSingularSlotAttackSlot
  name: OnPostSingularSlotAttackSlot
  href: api/InscryptionAPI.Triggers.CustomTrigger.html#InscryptionAPI_Triggers_CustomTrigger_OnPostSingularSlotAttackSlot
  commentId: F:InscryptionAPI.Triggers.CustomTrigger.OnPostSingularSlotAttackSlot
  fullName: InscryptionAPI.Triggers.CustomTrigger.OnPostSingularSlotAttackSlot
  nameWithType: CustomTrigger.OnPostSingularSlotAttackSlot
- uid: InscryptionAPI.Triggers.CustomTrigger.OnPostSlotAttackSequence
  name: OnPostSlotAttackSequence
  href: api/InscryptionAPI.Triggers.CustomTrigger.html#InscryptionAPI_Triggers_CustomTrigger_OnPostSlotAttackSequence
  commentId: F:InscryptionAPI.Triggers.CustomTrigger.OnPostSlotAttackSequence
  fullName: InscryptionAPI.Triggers.CustomTrigger.OnPostSlotAttackSequence
  nameWithType: CustomTrigger.OnPostSlotAttackSequence
- uid: InscryptionAPI.Triggers.CustomTrigger.OnPreScalesChanged
  name: OnPreScalesChanged
  href: api/InscryptionAPI.Triggers.CustomTrigger.html#InscryptionAPI_Triggers_CustomTrigger_OnPreScalesChanged
  commentId: F:InscryptionAPI.Triggers.CustomTrigger.OnPreScalesChanged
  fullName: InscryptionAPI.Triggers.CustomTrigger.OnPreScalesChanged
  nameWithType: CustomTrigger.OnPreScalesChanged
- uid: InscryptionAPI.Triggers.CustomTrigger.OnPreSlotAttackSequence
  name: OnPreSlotAttackSequence
  href: api/InscryptionAPI.Triggers.CustomTrigger.html#InscryptionAPI_Triggers_CustomTrigger_OnPreSlotAttackSequence
  commentId: F:InscryptionAPI.Triggers.CustomTrigger.OnPreSlotAttackSequence
  fullName: InscryptionAPI.Triggers.CustomTrigger.OnPreSlotAttackSequence
  nameWithType: CustomTrigger.OnPreSlotAttackSequence
- uid: InscryptionAPI.Triggers.CustomTrigger.OnTurnEndInHand
  name: OnTurnEndInHand
  href: api/InscryptionAPI.Triggers.CustomTrigger.html#InscryptionAPI_Triggers_CustomTrigger_OnTurnEndInHand
  commentId: F:InscryptionAPI.Triggers.CustomTrigger.OnTurnEndInHand
  fullName: InscryptionAPI.Triggers.CustomTrigger.OnTurnEndInHand
  nameWithType: CustomTrigger.OnTurnEndInHand
- uid: InscryptionAPI.Triggers.CustomTrigger.OnUpkeepInHand
  name: OnUpkeepInHand
  href: api/InscryptionAPI.Triggers.CustomTrigger.html#InscryptionAPI_Triggers_CustomTrigger_OnUpkeepInHand
  commentId: F:InscryptionAPI.Triggers.CustomTrigger.OnUpkeepInHand
  fullName: InscryptionAPI.Triggers.CustomTrigger.OnUpkeepInHand
  nameWithType: CustomTrigger.OnUpkeepInHand
- uid: InscryptionAPI.Triggers.CustomTriggerCoroutineAttribute
  name: CustomTriggerCoroutineAttribute
  href: api/InscryptionAPI.Triggers.CustomTriggerCoroutineAttribute.html
  commentId: T:InscryptionAPI.Triggers.CustomTriggerCoroutineAttribute
  fullName: InscryptionAPI.Triggers.CustomTriggerCoroutineAttribute
  nameWithType: CustomTriggerCoroutineAttribute
- uid: InscryptionAPI.Triggers.CustomTriggerCoroutineAttribute.#ctor(InscryptionAPI.Triggers.CustomTrigger)
  name: CustomTriggerCoroutineAttribute(CustomTrigger)
  href: api/InscryptionAPI.Triggers.CustomTriggerCoroutineAttribute.html#InscryptionAPI_Triggers_CustomTriggerCoroutineAttribute__ctor_InscryptionAPI_Triggers_CustomTrigger_
  commentId: M:InscryptionAPI.Triggers.CustomTriggerCoroutineAttribute.#ctor(InscryptionAPI.Triggers.CustomTrigger)
  fullName: InscryptionAPI.Triggers.CustomTriggerCoroutineAttribute.CustomTriggerCoroutineAttribute(InscryptionAPI.Triggers.CustomTrigger)
  nameWithType: CustomTriggerCoroutineAttribute.CustomTriggerCoroutineAttribute(CustomTrigger)
- uid: InscryptionAPI.Triggers.CustomTriggerCoroutineAttribute.#ctor(System.String,System.String)
  name: CustomTriggerCoroutineAttribute(String, String)
  href: api/InscryptionAPI.Triggers.CustomTriggerCoroutineAttribute.html#InscryptionAPI_Triggers_CustomTriggerCoroutineAttribute__ctor_System_String_System_String_
  commentId: M:InscryptionAPI.Triggers.CustomTriggerCoroutineAttribute.#ctor(System.String,System.String)
  fullName: InscryptionAPI.Triggers.CustomTriggerCoroutineAttribute.CustomTriggerCoroutineAttribute(System.String, System.String)
  nameWithType: CustomTriggerCoroutineAttribute.CustomTriggerCoroutineAttribute(String, String)
- uid: InscryptionAPI.Triggers.CustomTriggerCoroutineAttribute.#ctor*
  name: CustomTriggerCoroutineAttribute
  href: api/InscryptionAPI.Triggers.CustomTriggerCoroutineAttribute.html#InscryptionAPI_Triggers_CustomTriggerCoroutineAttribute__ctor_
  commentId: Overload:InscryptionAPI.Triggers.CustomTriggerCoroutineAttribute.#ctor
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.CustomTriggerCoroutineAttribute.CustomTriggerCoroutineAttribute
  nameWithType: CustomTriggerCoroutineAttribute.CustomTriggerCoroutineAttribute
- uid: InscryptionAPI.Triggers.CustomTriggerPatches
  name: CustomTriggerPatches
  href: api/InscryptionAPI.Triggers.CustomTriggerPatches.html
  commentId: T:InscryptionAPI.Triggers.CustomTriggerPatches
  fullName: InscryptionAPI.Triggers.CustomTriggerPatches
  nameWithType: CustomTriggerPatches
- uid: InscryptionAPI.Triggers.CustomTriggerPatches.TriggerDeathTriggers(System.Collections.IEnumerator,DiskCardGame.PlayableCard,System.Boolean,DiskCardGame.PlayableCard)
  name: TriggerDeathTriggers(IEnumerator, PlayableCard, Boolean, PlayableCard)
  href: api/InscryptionAPI.Triggers.CustomTriggerPatches.html#InscryptionAPI_Triggers_CustomTriggerPatches_TriggerDeathTriggers_System_Collections_IEnumerator_DiskCardGame_PlayableCard_System_Boolean_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Triggers.CustomTriggerPatches.TriggerDeathTriggers(System.Collections.IEnumerator,DiskCardGame.PlayableCard,System.Boolean,DiskCardGame.PlayableCard)
  fullName: InscryptionAPI.Triggers.CustomTriggerPatches.TriggerDeathTriggers(System.Collections.IEnumerator, DiskCardGame.PlayableCard, System.Boolean, DiskCardGame.PlayableCard)
  nameWithType: CustomTriggerPatches.TriggerDeathTriggers(IEnumerator, PlayableCard, Boolean, PlayableCard)
- uid: InscryptionAPI.Triggers.CustomTriggerPatches.TriggerDeathTriggers*
  name: TriggerDeathTriggers
  href: api/InscryptionAPI.Triggers.CustomTriggerPatches.html#InscryptionAPI_Triggers_CustomTriggerPatches_TriggerDeathTriggers_
  commentId: Overload:InscryptionAPI.Triggers.CustomTriggerPatches.TriggerDeathTriggers
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.CustomTriggerPatches.TriggerDeathTriggers
  nameWithType: CustomTriggerPatches.TriggerDeathTriggers
- uid: InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnAddedToHand(System.Collections.IEnumerator,DiskCardGame.PlayableCard)
  name: TriggerOnAddedToHand(IEnumerator, PlayableCard)
  href: api/InscryptionAPI.Triggers.CustomTriggerPatches.html#InscryptionAPI_Triggers_CustomTriggerPatches_TriggerOnAddedToHand_System_Collections_IEnumerator_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnAddedToHand(System.Collections.IEnumerator,DiskCardGame.PlayableCard)
  fullName: InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnAddedToHand(System.Collections.IEnumerator, DiskCardGame.PlayableCard)
  nameWithType: CustomTriggerPatches.TriggerOnAddedToHand(IEnumerator, PlayableCard)
- uid: InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnAddedToHand*
  name: TriggerOnAddedToHand
  href: api/InscryptionAPI.Triggers.CustomTriggerPatches.html#InscryptionAPI_Triggers_CustomTriggerPatches_TriggerOnAddedToHand_
  commentId: Overload:InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnAddedToHand
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnAddedToHand
  nameWithType: CustomTriggerPatches.TriggerOnAddedToHand
- uid: InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnBellRung(System.Collections.IEnumerator,System.Boolean)
  name: TriggerOnBellRung(IEnumerator, Boolean)
  href: api/InscryptionAPI.Triggers.CustomTriggerPatches.html#InscryptionAPI_Triggers_CustomTriggerPatches_TriggerOnBellRung_System_Collections_IEnumerator_System_Boolean_
  commentId: M:InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnBellRung(System.Collections.IEnumerator,System.Boolean)
  fullName: InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnBellRung(System.Collections.IEnumerator, System.Boolean)
  nameWithType: CustomTriggerPatches.TriggerOnBellRung(IEnumerator, Boolean)
- uid: InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnBellRung*
  name: TriggerOnBellRung
  href: api/InscryptionAPI.Triggers.CustomTriggerPatches.html#InscryptionAPI_Triggers_CustomTriggerPatches_TriggerOnBellRung_
  commentId: Overload:InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnBellRung
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnBellRung
  nameWithType: CustomTriggerPatches.TriggerOnBellRung
- uid: InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnOtherCardAssignedToSlotInHand(System.Collections.IEnumerator,DiskCardGame.PlayableCard,System.Boolean)
  name: TriggerOnOtherCardAssignedToSlotInHand(IEnumerator, PlayableCard, Boolean)
  href: api/InscryptionAPI.Triggers.CustomTriggerPatches.html#InscryptionAPI_Triggers_CustomTriggerPatches_TriggerOnOtherCardAssignedToSlotInHand_System_Collections_IEnumerator_DiskCardGame_PlayableCard_System_Boolean_
  commentId: M:InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnOtherCardAssignedToSlotInHand(System.Collections.IEnumerator,DiskCardGame.PlayableCard,System.Boolean)
  fullName: InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnOtherCardAssignedToSlotInHand(System.Collections.IEnumerator, DiskCardGame.PlayableCard, System.Boolean)
  nameWithType: CustomTriggerPatches.TriggerOnOtherCardAssignedToSlotInHand(IEnumerator, PlayableCard, Boolean)
- uid: InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnOtherCardAssignedToSlotInHand*
  name: TriggerOnOtherCardAssignedToSlotInHand
  href: api/InscryptionAPI.Triggers.CustomTriggerPatches.html#InscryptionAPI_Triggers_CustomTriggerPatches_TriggerOnOtherCardAssignedToSlotInHand_
  commentId: Overload:InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnOtherCardAssignedToSlotInHand
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnOtherCardAssignedToSlotInHand
  nameWithType: CustomTriggerPatches.TriggerOnOtherCardAssignedToSlotInHand
- uid: InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnOtherCardResolveInHand(System.Collections.IEnumerator,DiskCardGame.PlayableCard,System.Boolean)
  name: TriggerOnOtherCardResolveInHand(IEnumerator, PlayableCard, Boolean)
  href: api/InscryptionAPI.Triggers.CustomTriggerPatches.html#InscryptionAPI_Triggers_CustomTriggerPatches_TriggerOnOtherCardResolveInHand_System_Collections_IEnumerator_DiskCardGame_PlayableCard_System_Boolean_
  commentId: M:InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnOtherCardResolveInHand(System.Collections.IEnumerator,DiskCardGame.PlayableCard,System.Boolean)
  fullName: InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnOtherCardResolveInHand(System.Collections.IEnumerator, DiskCardGame.PlayableCard, System.Boolean)
  nameWithType: CustomTriggerPatches.TriggerOnOtherCardResolveInHand(IEnumerator, PlayableCard, Boolean)
- uid: InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnOtherCardResolveInHand*
  name: TriggerOnOtherCardResolveInHand
  href: api/InscryptionAPI.Triggers.CustomTriggerPatches.html#InscryptionAPI_Triggers_CustomTriggerPatches_TriggerOnOtherCardResolveInHand_
  commentId: Overload:InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnOtherCardResolveInHand
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnOtherCardResolveInHand
  nameWithType: CustomTriggerPatches.TriggerOnOtherCardResolveInHand
- uid: InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnPostSingularSlotAttackSlot(System.Collections.IEnumerator,DiskCardGame.CardSlot,DiskCardGame.CardSlot)
  name: TriggerOnPostSingularSlotAttackSlot(IEnumerator, CardSlot, CardSlot)
  href: api/InscryptionAPI.Triggers.CustomTriggerPatches.html#InscryptionAPI_Triggers_CustomTriggerPatches_TriggerOnPostSingularSlotAttackSlot_System_Collections_IEnumerator_DiskCardGame_CardSlot_DiskCardGame_CardSlot_
  commentId: M:InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnPostSingularSlotAttackSlot(System.Collections.IEnumerator,DiskCardGame.CardSlot,DiskCardGame.CardSlot)
  fullName: InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnPostSingularSlotAttackSlot(System.Collections.IEnumerator, DiskCardGame.CardSlot, DiskCardGame.CardSlot)
  nameWithType: CustomTriggerPatches.TriggerOnPostSingularSlotAttackSlot(IEnumerator, CardSlot, CardSlot)
- uid: InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnPostSingularSlotAttackSlot*
  name: TriggerOnPostSingularSlotAttackSlot
  href: api/InscryptionAPI.Triggers.CustomTriggerPatches.html#InscryptionAPI_Triggers_CustomTriggerPatches_TriggerOnPostSingularSlotAttackSlot_
  commentId: Overload:InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnPostSingularSlotAttackSlot
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnPostSingularSlotAttackSlot
  nameWithType: CustomTriggerPatches.TriggerOnPostSingularSlotAttackSlot
- uid: InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnScalesChanged(System.Collections.IEnumerator,System.Int32,System.Boolean)
  name: TriggerOnScalesChanged(IEnumerator, Int32, Boolean)
  href: api/InscryptionAPI.Triggers.CustomTriggerPatches.html#InscryptionAPI_Triggers_CustomTriggerPatches_TriggerOnScalesChanged_System_Collections_IEnumerator_System_Int32_System_Boolean_
  commentId: M:InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnScalesChanged(System.Collections.IEnumerator,System.Int32,System.Boolean)
  fullName: InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnScalesChanged(System.Collections.IEnumerator, System.Int32, System.Boolean)
  nameWithType: CustomTriggerPatches.TriggerOnScalesChanged(IEnumerator, Int32, Boolean)
- uid: InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnScalesChanged*
  name: TriggerOnScalesChanged
  href: api/InscryptionAPI.Triggers.CustomTriggerPatches.html#InscryptionAPI_Triggers_CustomTriggerPatches_TriggerOnScalesChanged_
  commentId: Overload:InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnScalesChanged
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnScalesChanged
  nameWithType: CustomTriggerPatches.TriggerOnScalesChanged
- uid: InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnSlotAttackSequence(System.Collections.IEnumerator,DiskCardGame.CardSlot)
  name: TriggerOnSlotAttackSequence(IEnumerator, CardSlot)
  href: api/InscryptionAPI.Triggers.CustomTriggerPatches.html#InscryptionAPI_Triggers_CustomTriggerPatches_TriggerOnSlotAttackSequence_System_Collections_IEnumerator_DiskCardGame_CardSlot_
  commentId: M:InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnSlotAttackSequence(System.Collections.IEnumerator,DiskCardGame.CardSlot)
  fullName: InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnSlotAttackSequence(System.Collections.IEnumerator, DiskCardGame.CardSlot)
  nameWithType: CustomTriggerPatches.TriggerOnSlotAttackSequence(IEnumerator, CardSlot)
- uid: InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnSlotAttackSequence*
  name: TriggerOnSlotAttackSequence
  href: api/InscryptionAPI.Triggers.CustomTriggerPatches.html#InscryptionAPI_Triggers_CustomTriggerPatches_TriggerOnSlotAttackSequence_
  commentId: Overload:InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnSlotAttackSequence
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnSlotAttackSequence
  nameWithType: CustomTriggerPatches.TriggerOnSlotAttackSequence
- uid: InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnTurnEndInHandOpponent(System.Collections.IEnumerator,DiskCardGame.TurnManager)
  name: TriggerOnTurnEndInHandOpponent(IEnumerator, TurnManager)
  href: api/InscryptionAPI.Triggers.CustomTriggerPatches.html#InscryptionAPI_Triggers_CustomTriggerPatches_TriggerOnTurnEndInHandOpponent_System_Collections_IEnumerator_DiskCardGame_TurnManager_
  commentId: M:InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnTurnEndInHandOpponent(System.Collections.IEnumerator,DiskCardGame.TurnManager)
  fullName: InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnTurnEndInHandOpponent(System.Collections.IEnumerator, DiskCardGame.TurnManager)
  nameWithType: CustomTriggerPatches.TriggerOnTurnEndInHandOpponent(IEnumerator, TurnManager)
- uid: InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnTurnEndInHandOpponent*
  name: TriggerOnTurnEndInHandOpponent
  href: api/InscryptionAPI.Triggers.CustomTriggerPatches.html#InscryptionAPI_Triggers_CustomTriggerPatches_TriggerOnTurnEndInHandOpponent_
  commentId: Overload:InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnTurnEndInHandOpponent
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnTurnEndInHandOpponent
  nameWithType: CustomTriggerPatches.TriggerOnTurnEndInHandOpponent
- uid: InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnTurnEndInHandPlayer(System.Collections.IEnumerator)
  name: TriggerOnTurnEndInHandPlayer(IEnumerator)
  href: api/InscryptionAPI.Triggers.CustomTriggerPatches.html#InscryptionAPI_Triggers_CustomTriggerPatches_TriggerOnTurnEndInHandPlayer_System_Collections_IEnumerator_
  commentId: M:InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnTurnEndInHandPlayer(System.Collections.IEnumerator)
  fullName: InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnTurnEndInHandPlayer(System.Collections.IEnumerator)
  nameWithType: CustomTriggerPatches.TriggerOnTurnEndInHandPlayer(IEnumerator)
- uid: InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnTurnEndInHandPlayer(System.Collections.IEnumerator,DiskCardGame.PlayableCard,DiskCardGame.PlayableCard)
  name: TriggerOnTurnEndInHandPlayer(IEnumerator, PlayableCard, PlayableCard)
  href: api/InscryptionAPI.Triggers.CustomTriggerPatches.html#InscryptionAPI_Triggers_CustomTriggerPatches_TriggerOnTurnEndInHandPlayer_System_Collections_IEnumerator_DiskCardGame_PlayableCard_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnTurnEndInHandPlayer(System.Collections.IEnumerator,DiskCardGame.PlayableCard,DiskCardGame.PlayableCard)
  fullName: InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnTurnEndInHandPlayer(System.Collections.IEnumerator, DiskCardGame.PlayableCard, DiskCardGame.PlayableCard)
  nameWithType: CustomTriggerPatches.TriggerOnTurnEndInHandPlayer(IEnumerator, PlayableCard, PlayableCard)
- uid: InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnTurnEndInHandPlayer*
  name: TriggerOnTurnEndInHandPlayer
  href: api/InscryptionAPI.Triggers.CustomTriggerPatches.html#InscryptionAPI_Triggers_CustomTriggerPatches_TriggerOnTurnEndInHandPlayer_
  commentId: Overload:InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnTurnEndInHandPlayer
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnTurnEndInHandPlayer
  nameWithType: CustomTriggerPatches.TriggerOnTurnEndInHandPlayer
- uid: InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnUpkeepInHand(System.Collections.IEnumerator,System.Boolean)
  name: TriggerOnUpkeepInHand(IEnumerator, Boolean)
  href: api/InscryptionAPI.Triggers.CustomTriggerPatches.html#InscryptionAPI_Triggers_CustomTriggerPatches_TriggerOnUpkeepInHand_System_Collections_IEnumerator_System_Boolean_
  commentId: M:InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnUpkeepInHand(System.Collections.IEnumerator,System.Boolean)
  fullName: InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnUpkeepInHand(System.Collections.IEnumerator, System.Boolean)
  nameWithType: CustomTriggerPatches.TriggerOnUpkeepInHand(IEnumerator, Boolean)
- uid: InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnUpkeepInHand*
  name: TriggerOnUpkeepInHand
  href: api/InscryptionAPI.Triggers.CustomTriggerPatches.html#InscryptionAPI_Triggers_CustomTriggerPatches_TriggerOnUpkeepInHand_
  commentId: Overload:InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnUpkeepInHand
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.CustomTriggerPatches.TriggerOnUpkeepInHand
  nameWithType: CustomTriggerPatches.TriggerOnUpkeepInHand
- uid: InscryptionAPI.Triggers.CustomTriggerResponderAttribute
  name: CustomTriggerResponderAttribute
  href: api/InscryptionAPI.Triggers.CustomTriggerResponderAttribute.html
  commentId: T:InscryptionAPI.Triggers.CustomTriggerResponderAttribute
  fullName: InscryptionAPI.Triggers.CustomTriggerResponderAttribute
  nameWithType: CustomTriggerResponderAttribute
- uid: InscryptionAPI.Triggers.CustomTriggerResponderAttribute.#ctor(InscryptionAPI.Triggers.CustomTrigger)
  name: CustomTriggerResponderAttribute(CustomTrigger)
  href: api/InscryptionAPI.Triggers.CustomTriggerResponderAttribute.html#InscryptionAPI_Triggers_CustomTriggerResponderAttribute__ctor_InscryptionAPI_Triggers_CustomTrigger_
  commentId: M:InscryptionAPI.Triggers.CustomTriggerResponderAttribute.#ctor(InscryptionAPI.Triggers.CustomTrigger)
  fullName: InscryptionAPI.Triggers.CustomTriggerResponderAttribute.CustomTriggerResponderAttribute(InscryptionAPI.Triggers.CustomTrigger)
  nameWithType: CustomTriggerResponderAttribute.CustomTriggerResponderAttribute(CustomTrigger)
- uid: InscryptionAPI.Triggers.CustomTriggerResponderAttribute.#ctor(System.String,System.String)
  name: CustomTriggerResponderAttribute(String, String)
  href: api/InscryptionAPI.Triggers.CustomTriggerResponderAttribute.html#InscryptionAPI_Triggers_CustomTriggerResponderAttribute__ctor_System_String_System_String_
  commentId: M:InscryptionAPI.Triggers.CustomTriggerResponderAttribute.#ctor(System.String,System.String)
  fullName: InscryptionAPI.Triggers.CustomTriggerResponderAttribute.CustomTriggerResponderAttribute(System.String, System.String)
  nameWithType: CustomTriggerResponderAttribute.CustomTriggerResponderAttribute(String, String)
- uid: InscryptionAPI.Triggers.CustomTriggerResponderAttribute.#ctor*
  name: CustomTriggerResponderAttribute
  href: api/InscryptionAPI.Triggers.CustomTriggerResponderAttribute.html#InscryptionAPI_Triggers_CustomTriggerResponderAttribute__ctor_
  commentId: Overload:InscryptionAPI.Triggers.CustomTriggerResponderAttribute.#ctor
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.CustomTriggerResponderAttribute.CustomTriggerResponderAttribute
  nameWithType: CustomTriggerResponderAttribute.CustomTriggerResponderAttribute
- uid: InscryptionCommunityPatch
  name: InscryptionCommunityPatch
  href: api/InscryptionCommunityPatch.html
  commentId: N:InscryptionCommunityPatch
  fullName: InscryptionCommunityPatch
  nameWithType: InscryptionCommunityPatch
- uid: InscryptionCommunityPatch.Card
  name: InscryptionCommunityPatch.Card
  href: api/InscryptionCommunityPatch.Card.html
  commentId: N:InscryptionCommunityPatch.Card
  fullName: InscryptionCommunityPatch.Card
  nameWithType: InscryptionCommunityPatch.Card
- uid: InscryptionCommunityPatch.Card.Act1LatchAbilityFix
  name: Act1LatchAbilityFix
  href: api/InscryptionCommunityPatch.Card.Act1LatchAbilityFix.html
  commentId: T:InscryptionCommunityPatch.Card.Act1LatchAbilityFix
  fullName: InscryptionCommunityPatch.Card.Act1LatchAbilityFix
  nameWithType: Act1LatchAbilityFix
- uid: InscryptionCommunityPatch.Card.Act1LatchAbilityFix.NoSacrificeMarker(DiskCardGame.CardSlot)
  name: NoSacrificeMarker(CardSlot)
  href: api/InscryptionCommunityPatch.Card.Act1LatchAbilityFix.html#InscryptionCommunityPatch_Card_Act1LatchAbilityFix_NoSacrificeMarker_DiskCardGame_CardSlot_
  commentId: M:InscryptionCommunityPatch.Card.Act1LatchAbilityFix.NoSacrificeMarker(DiskCardGame.CardSlot)
  fullName: InscryptionCommunityPatch.Card.Act1LatchAbilityFix.NoSacrificeMarker(DiskCardGame.CardSlot)
  nameWithType: Act1LatchAbilityFix.NoSacrificeMarker(CardSlot)
- uid: InscryptionCommunityPatch.Card.Act1LatchAbilityFix.NoSacrificeMarker*
  name: NoSacrificeMarker
  href: api/InscryptionCommunityPatch.Card.Act1LatchAbilityFix.html#InscryptionCommunityPatch_Card_Act1LatchAbilityFix_NoSacrificeMarker_
  commentId: Overload:InscryptionCommunityPatch.Card.Act1LatchAbilityFix.NoSacrificeMarker
  isSpec: "True"
  fullName: InscryptionCommunityPatch.Card.Act1LatchAbilityFix.NoSacrificeMarker
  nameWithType: Act1LatchAbilityFix.NoSacrificeMarker
- uid: InscryptionCommunityPatch.Card.Act1LatchAbilityFix.Postfix(System.Collections.IEnumerator,DiskCardGame.Latch,System.Boolean)
  name: Postfix(IEnumerator, Latch, Boolean)
  href: api/InscryptionCommunityPatch.Card.Act1LatchAbilityFix.html#InscryptionCommunityPatch_Card_Act1LatchAbilityFix_Postfix_System_Collections_IEnumerator_DiskCardGame_Latch_System_Boolean_
  commentId: M:InscryptionCommunityPatch.Card.Act1LatchAbilityFix.Postfix(System.Collections.IEnumerator,DiskCardGame.Latch,System.Boolean)
  fullName: InscryptionCommunityPatch.Card.Act1LatchAbilityFix.Postfix(System.Collections.IEnumerator, DiskCardGame.Latch, System.Boolean)
  nameWithType: Act1LatchAbilityFix.Postfix(IEnumerator, Latch, Boolean)
- uid: InscryptionCommunityPatch.Card.Act1LatchAbilityFix.Postfix*
  name: Postfix
  href: api/InscryptionCommunityPatch.Card.Act1LatchAbilityFix.html#InscryptionCommunityPatch_Card_Act1LatchAbilityFix_Postfix_
  commentId: Overload:InscryptionCommunityPatch.Card.Act1LatchAbilityFix.Postfix
  isSpec: "True"
  fullName: InscryptionCommunityPatch.Card.Act1LatchAbilityFix.Postfix
  nameWithType: Act1LatchAbilityFix.Postfix
- uid: InscryptionCommunityPatch.Card.Act1LatchAbilityFix.PrefixPassStateOnPreDeath(DiskCardGame.Latch@,DiskCardGame.Latch@)
  name: PrefixPassStateOnPreDeath(out Latch, ref Latch)
  href: api/InscryptionCommunityPatch.Card.Act1LatchAbilityFix.html#InscryptionCommunityPatch_Card_Act1LatchAbilityFix_PrefixPassStateOnPreDeath_DiskCardGame_Latch__DiskCardGame_Latch__
  commentId: M:InscryptionCommunityPatch.Card.Act1LatchAbilityFix.PrefixPassStateOnPreDeath(DiskCardGame.Latch@,DiskCardGame.Latch@)
  name.vb: PrefixPassStateOnPreDeath(ByRef Latch, ByRef Latch)
  fullName: InscryptionCommunityPatch.Card.Act1LatchAbilityFix.PrefixPassStateOnPreDeath(out DiskCardGame.Latch, ref DiskCardGame.Latch)
  fullName.vb: InscryptionCommunityPatch.Card.Act1LatchAbilityFix.PrefixPassStateOnPreDeath(ByRef DiskCardGame.Latch, ByRef DiskCardGame.Latch)
  nameWithType: Act1LatchAbilityFix.PrefixPassStateOnPreDeath(out Latch, ref Latch)
  nameWithType.vb: Act1LatchAbilityFix.PrefixPassStateOnPreDeath(ByRef Latch, ByRef Latch)
- uid: InscryptionCommunityPatch.Card.Act1LatchAbilityFix.PrefixPassStateOnPreDeath*
  name: PrefixPassStateOnPreDeath
  href: api/InscryptionCommunityPatch.Card.Act1LatchAbilityFix.html#InscryptionCommunityPatch_Card_Act1LatchAbilityFix_PrefixPassStateOnPreDeath_
  commentId: Overload:InscryptionCommunityPatch.Card.Act1LatchAbilityFix.PrefixPassStateOnPreDeath
  isSpec: "True"
  fullName: InscryptionCommunityPatch.Card.Act1LatchAbilityFix.PrefixPassStateOnPreDeath
  nameWithType: Act1LatchAbilityFix.PrefixPassStateOnPreDeath
- uid: InscryptionCommunityPatch.Card.Act1LatchAbilityFix.ReEnableSlots(System.Collections.IEnumerator,DiskCardGame.BoardManager,List{DiskCardGame.CardSlot})
  name: ReEnableSlots(IEnumerator, BoardManager, List<CardSlot>)
  href: api/InscryptionCommunityPatch.Card.Act1LatchAbilityFix.html#InscryptionCommunityPatch_Card_Act1LatchAbilityFix_ReEnableSlots_System_Collections_IEnumerator_DiskCardGame_BoardManager_List_DiskCardGame_CardSlot__
  commentId: M:InscryptionCommunityPatch.Card.Act1LatchAbilityFix.ReEnableSlots(System.Collections.IEnumerator,DiskCardGame.BoardManager,List{DiskCardGame.CardSlot})
  name.vb: ReEnableSlots(IEnumerator, BoardManager, List(Of CardSlot))
  fullName: InscryptionCommunityPatch.Card.Act1LatchAbilityFix.ReEnableSlots(System.Collections.IEnumerator, DiskCardGame.BoardManager, List<DiskCardGame.CardSlot>)
  fullName.vb: InscryptionCommunityPatch.Card.Act1LatchAbilityFix.ReEnableSlots(System.Collections.IEnumerator, DiskCardGame.BoardManager, List(Of DiskCardGame.CardSlot))
  nameWithType: Act1LatchAbilityFix.ReEnableSlots(IEnumerator, BoardManager, List<CardSlot>)
  nameWithType.vb: Act1LatchAbilityFix.ReEnableSlots(IEnumerator, BoardManager, List(Of CardSlot))
- uid: InscryptionCommunityPatch.Card.Act1LatchAbilityFix.ReEnableSlots*
  name: ReEnableSlots
  href: api/InscryptionCommunityPatch.Card.Act1LatchAbilityFix.html#InscryptionCommunityPatch_Card_Act1LatchAbilityFix_ReEnableSlots_
  commentId: Overload:InscryptionCommunityPatch.Card.Act1LatchAbilityFix.ReEnableSlots
  isSpec: "True"
  fullName: InscryptionCommunityPatch.Card.Act1LatchAbilityFix.ReEnableSlots
  nameWithType: Act1LatchAbilityFix.ReEnableSlots
- uid: InscryptionCommunityPatch.Card.ActivatedAbilityHandler3D
  name: ActivatedAbilityHandler3D
  href: api/InscryptionCommunityPatch.Card.ActivatedAbilityHandler3D.html
  commentId: T:InscryptionCommunityPatch.Card.ActivatedAbilityHandler3D
  fullName: InscryptionCommunityPatch.Card.ActivatedAbilityHandler3D
  nameWithType: ActivatedAbilityHandler3D
- uid: InscryptionCommunityPatch.Card.ActivatedAbilityHandler3D.AddInteractable(InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable)
  name: AddInteractable(ActivatedAbilityIconInteractable)
  href: api/InscryptionCommunityPatch.Card.ActivatedAbilityHandler3D.html#InscryptionCommunityPatch_Card_ActivatedAbilityHandler3D_AddInteractable_InscryptionCommunityPatch_Card_ActivatedAbilityIconInteractable_
  commentId: M:InscryptionCommunityPatch.Card.ActivatedAbilityHandler3D.AddInteractable(InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable)
  fullName: InscryptionCommunityPatch.Card.ActivatedAbilityHandler3D.AddInteractable(InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable)
  nameWithType: ActivatedAbilityHandler3D.AddInteractable(ActivatedAbilityIconInteractable)
- uid: InscryptionCommunityPatch.Card.ActivatedAbilityHandler3D.AddInteractable*
  name: AddInteractable
  href: api/InscryptionCommunityPatch.Card.ActivatedAbilityHandler3D.html#InscryptionCommunityPatch_Card_ActivatedAbilityHandler3D_AddInteractable_
  commentId: Overload:InscryptionCommunityPatch.Card.ActivatedAbilityHandler3D.AddInteractable
  isSpec: "True"
  fullName: InscryptionCommunityPatch.Card.ActivatedAbilityHandler3D.AddInteractable
  nameWithType: ActivatedAbilityHandler3D.AddInteractable
- uid: InscryptionCommunityPatch.Card.ActivatedAbilityHandler3D.OnDestroy
  name: OnDestroy()
  href: api/InscryptionCommunityPatch.Card.ActivatedAbilityHandler3D.html#InscryptionCommunityPatch_Card_ActivatedAbilityHandler3D_OnDestroy
  commentId: M:InscryptionCommunityPatch.Card.ActivatedAbilityHandler3D.OnDestroy
  fullName: InscryptionCommunityPatch.Card.ActivatedAbilityHandler3D.OnDestroy()
  nameWithType: ActivatedAbilityHandler3D.OnDestroy()
- uid: InscryptionCommunityPatch.Card.ActivatedAbilityHandler3D.OnDestroy*
  name: OnDestroy
  href: api/InscryptionCommunityPatch.Card.ActivatedAbilityHandler3D.html#InscryptionCommunityPatch_Card_ActivatedAbilityHandler3D_OnDestroy_
  commentId: Overload:InscryptionCommunityPatch.Card.ActivatedAbilityHandler3D.OnDestroy
  isSpec: "True"
  fullName: InscryptionCommunityPatch.Card.ActivatedAbilityHandler3D.OnDestroy
  nameWithType: ActivatedAbilityHandler3D.OnDestroy
- uid: InscryptionCommunityPatch.Card.ActivatedAbilityHandler3D.SetCard(DiskCardGame.PlayableCard)
  name: SetCard(PlayableCard)
  href: api/InscryptionCommunityPatch.Card.ActivatedAbilityHandler3D.html#InscryptionCommunityPatch_Card_ActivatedAbilityHandler3D_SetCard_DiskCardGame_PlayableCard_
  commentId: M:InscryptionCommunityPatch.Card.ActivatedAbilityHandler3D.SetCard(DiskCardGame.PlayableCard)
  fullName: InscryptionCommunityPatch.Card.ActivatedAbilityHandler3D.SetCard(DiskCardGame.PlayableCard)
  nameWithType: ActivatedAbilityHandler3D.SetCard(PlayableCard)
- uid: InscryptionCommunityPatch.Card.ActivatedAbilityHandler3D.SetCard*
  name: SetCard
  href: api/InscryptionCommunityPatch.Card.ActivatedAbilityHandler3D.html#InscryptionCommunityPatch_Card_ActivatedAbilityHandler3D_SetCard_
  commentId: Overload:InscryptionCommunityPatch.Card.ActivatedAbilityHandler3D.SetCard
  isSpec: "True"
  fullName: InscryptionCommunityPatch.Card.ActivatedAbilityHandler3D.SetCard
  nameWithType: ActivatedAbilityHandler3D.SetCard
- uid: InscryptionCommunityPatch.Card.ActivatedAbilityIconFix
  name: ActivatedAbilityIconFix
  href: api/InscryptionCommunityPatch.Card.ActivatedAbilityIconFix.html
  commentId: T:InscryptionCommunityPatch.Card.ActivatedAbilityIconFix
  fullName: InscryptionCommunityPatch.Card.ActivatedAbilityIconFix
  nameWithType: ActivatedAbilityIconFix
- uid: InscryptionCommunityPatch.Card.ActivatedAbilityIconFix.HasActivatedAbility(DiskCardGame.PlayableCard)
  name: HasActivatedAbility(PlayableCard)
  href: api/InscryptionCommunityPatch.Card.ActivatedAbilityIconFix.html#InscryptionCommunityPatch_Card_ActivatedAbilityIconFix_HasActivatedAbility_DiskCardGame_PlayableCard_
  commentId: M:InscryptionCommunityPatch.Card.ActivatedAbilityIconFix.HasActivatedAbility(DiskCardGame.PlayableCard)
  fullName: InscryptionCommunityPatch.Card.ActivatedAbilityIconFix.HasActivatedAbility(DiskCardGame.PlayableCard)
  nameWithType: ActivatedAbilityIconFix.HasActivatedAbility(PlayableCard)
- uid: InscryptionCommunityPatch.Card.ActivatedAbilityIconFix.HasActivatedAbility*
  name: HasActivatedAbility
  href: api/InscryptionCommunityPatch.Card.ActivatedAbilityIconFix.html#InscryptionCommunityPatch_Card_ActivatedAbilityIconFix_HasActivatedAbility_
  commentId: Overload:InscryptionCommunityPatch.Card.ActivatedAbilityIconFix.HasActivatedAbility
  isSpec: "True"
  fullName: InscryptionCommunityPatch.Card.ActivatedAbilityIconFix.HasActivatedAbility
  nameWithType: ActivatedAbilityIconFix.HasActivatedAbility
- uid: InscryptionCommunityPatch.Card.ActivatedAbilityIconFix.RespondsToResolveOnBoard_PostFix(System.Boolean@)
  name: RespondsToResolveOnBoard_PostFix(ref Boolean)
  href: api/InscryptionCommunityPatch.Card.ActivatedAbilityIconFix.html#InscryptionCommunityPatch_Card_ActivatedAbilityIconFix_RespondsToResolveOnBoard_PostFix_System_Boolean__
  commentId: M:InscryptionCommunityPatch.Card.ActivatedAbilityIconFix.RespondsToResolveOnBoard_PostFix(System.Boolean@)
  name.vb: RespondsToResolveOnBoard_PostFix(ByRef Boolean)
  fullName: InscryptionCommunityPatch.Card.ActivatedAbilityIconFix.RespondsToResolveOnBoard_PostFix(ref System.Boolean)
  fullName.vb: InscryptionCommunityPatch.Card.ActivatedAbilityIconFix.RespondsToResolveOnBoard_PostFix(ByRef System.Boolean)
  nameWithType: ActivatedAbilityIconFix.RespondsToResolveOnBoard_PostFix(ref Boolean)
  nameWithType.vb: ActivatedAbilityIconFix.RespondsToResolveOnBoard_PostFix(ByRef Boolean)
- uid: InscryptionCommunityPatch.Card.ActivatedAbilityIconFix.RespondsToResolveOnBoard_PostFix*
  name: RespondsToResolveOnBoard_PostFix
  href: api/InscryptionCommunityPatch.Card.ActivatedAbilityIconFix.html#InscryptionCommunityPatch_Card_ActivatedAbilityIconFix_RespondsToResolveOnBoard_PostFix_
  commentId: Overload:InscryptionCommunityPatch.Card.ActivatedAbilityIconFix.RespondsToResolveOnBoard_PostFix
  isSpec: "True"
  fullName: InscryptionCommunityPatch.Card.ActivatedAbilityIconFix.RespondsToResolveOnBoard_PostFix
  nameWithType: ActivatedAbilityIconFix.RespondsToResolveOnBoard_PostFix
- uid: InscryptionCommunityPatch.Card.ActivatedAbilityIconFix.UpdateInteractableIcons_PostFix(DiskCardGame.Card@)
  name: UpdateInteractableIcons_PostFix(ref Card)
  href: api/InscryptionCommunityPatch.Card.ActivatedAbilityIconFix.html#InscryptionCommunityPatch_Card_ActivatedAbilityIconFix_UpdateInteractableIcons_PostFix_DiskCardGame_Card__
  commentId: M:InscryptionCommunityPatch.Card.ActivatedAbilityIconFix.UpdateInteractableIcons_PostFix(DiskCardGame.Card@)
  name.vb: UpdateInteractableIcons_PostFix(ByRef Card)
  fullName: InscryptionCommunityPatch.Card.ActivatedAbilityIconFix.UpdateInteractableIcons_PostFix(ref DiskCardGame.Card)
  fullName.vb: InscryptionCommunityPatch.Card.ActivatedAbilityIconFix.UpdateInteractableIcons_PostFix(ByRef DiskCardGame.Card)
  nameWithType: ActivatedAbilityIconFix.UpdateInteractableIcons_PostFix(ref Card)
  nameWithType.vb: ActivatedAbilityIconFix.UpdateInteractableIcons_PostFix(ByRef Card)
- uid: InscryptionCommunityPatch.Card.ActivatedAbilityIconFix.UpdateInteractableIcons_PostFix*
  name: UpdateInteractableIcons_PostFix
  href: api/InscryptionCommunityPatch.Card.ActivatedAbilityIconFix.html#InscryptionCommunityPatch_Card_ActivatedAbilityIconFix_UpdateInteractableIcons_PostFix_
  commentId: Overload:InscryptionCommunityPatch.Card.ActivatedAbilityIconFix.UpdateInteractableIcons_PostFix
  isSpec: "True"
  fullName: InscryptionCommunityPatch.Card.ActivatedAbilityIconFix.UpdateInteractableIcons_PostFix
  nameWithType: ActivatedAbilityIconFix.UpdateInteractableIcons_PostFix
- uid: InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable
  name: ActivatedAbilityIconInteractable
  href: api/InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.html
  commentId: T:InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable
  fullName: InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable
  nameWithType: ActivatedAbilityIconInteractable
- uid: InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.Ability
  name: Ability
  href: api/InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.html#InscryptionCommunityPatch_Card_ActivatedAbilityIconInteractable_Ability
  commentId: P:InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.Ability
  fullName: InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.Ability
  nameWithType: ActivatedAbilityIconInteractable.Ability
- uid: InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.Ability*
  name: Ability
  href: api/InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.html#InscryptionCommunityPatch_Card_ActivatedAbilityIconInteractable_Ability_
  commentId: Overload:InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.Ability
  isSpec: "True"
  fullName: InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.Ability
  nameWithType: ActivatedAbilityIconInteractable.Ability
- uid: InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.AbilityAssigned
  name: AbilityAssigned
  href: api/InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.html#InscryptionCommunityPatch_Card_ActivatedAbilityIconInteractable_AbilityAssigned
  commentId: P:InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.AbilityAssigned
  fullName: InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.AbilityAssigned
  nameWithType: ActivatedAbilityIconInteractable.AbilityAssigned
- uid: InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.AbilityAssigned*
  name: AbilityAssigned
  href: api/InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.html#InscryptionCommunityPatch_Card_ActivatedAbilityIconInteractable_AbilityAssigned_
  commentId: Overload:InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.AbilityAssigned
  isSpec: "True"
  fullName: InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.AbilityAssigned
  nameWithType: ActivatedAbilityIconInteractable.AbilityAssigned
- uid: InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.AssigneAbility(DiskCardGame.Ability)
  name: AssigneAbility(Ability)
  href: api/InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.html#InscryptionCommunityPatch_Card_ActivatedAbilityIconInteractable_AssigneAbility_DiskCardGame_Ability_
  commentId: M:InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.AssigneAbility(DiskCardGame.Ability)
  fullName: InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.AssigneAbility(DiskCardGame.Ability)
  nameWithType: ActivatedAbilityIconInteractable.AssigneAbility(Ability)
- uid: InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.AssigneAbility*
  name: AssigneAbility
  href: api/InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.html#InscryptionCommunityPatch_Card_ActivatedAbilityIconInteractable_AssigneAbility_
  commentId: Overload:InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.AssigneAbility
  isSpec: "True"
  fullName: InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.AssigneAbility
  nameWithType: ActivatedAbilityIconInteractable.AssigneAbility
- uid: InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.OnCursorDrag
  name: OnCursorDrag()
  href: api/InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.html#InscryptionCommunityPatch_Card_ActivatedAbilityIconInteractable_OnCursorDrag
  commentId: M:InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.OnCursorDrag
  fullName: InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.OnCursorDrag()
  nameWithType: ActivatedAbilityIconInteractable.OnCursorDrag()
- uid: InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.OnCursorDrag*
  name: OnCursorDrag
  href: api/InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.html#InscryptionCommunityPatch_Card_ActivatedAbilityIconInteractable_OnCursorDrag_
  commentId: Overload:InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.OnCursorDrag
  isSpec: "True"
  fullName: InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.OnCursorDrag
  nameWithType: ActivatedAbilityIconInteractable.OnCursorDrag
- uid: InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.OnCursorEnter
  name: OnCursorEnter()
  href: api/InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.html#InscryptionCommunityPatch_Card_ActivatedAbilityIconInteractable_OnCursorEnter
  commentId: M:InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.OnCursorEnter
  fullName: InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.OnCursorEnter()
  nameWithType: ActivatedAbilityIconInteractable.OnCursorEnter()
- uid: InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.OnCursorEnter*
  name: OnCursorEnter
  href: api/InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.html#InscryptionCommunityPatch_Card_ActivatedAbilityIconInteractable_OnCursorEnter_
  commentId: Overload:InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.OnCursorEnter
  isSpec: "True"
  fullName: InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.OnCursorEnter
  nameWithType: ActivatedAbilityIconInteractable.OnCursorEnter
- uid: InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.OnCursorExit
  name: OnCursorExit()
  href: api/InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.html#InscryptionCommunityPatch_Card_ActivatedAbilityIconInteractable_OnCursorExit
  commentId: M:InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.OnCursorExit
  fullName: InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.OnCursorExit()
  nameWithType: ActivatedAbilityIconInteractable.OnCursorExit()
- uid: InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.OnCursorExit*
  name: OnCursorExit
  href: api/InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.html#InscryptionCommunityPatch_Card_ActivatedAbilityIconInteractable_OnCursorExit_
  commentId: Overload:InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.OnCursorExit
  isSpec: "True"
  fullName: InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.OnCursorExit
  nameWithType: ActivatedAbilityIconInteractable.OnCursorExit
- uid: InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.OnCursorSelectEnd
  name: OnCursorSelectEnd()
  href: api/InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.html#InscryptionCommunityPatch_Card_ActivatedAbilityIconInteractable_OnCursorSelectEnd
  commentId: M:InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.OnCursorSelectEnd
  fullName: InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.OnCursorSelectEnd()
  nameWithType: ActivatedAbilityIconInteractable.OnCursorSelectEnd()
- uid: InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.OnCursorSelectEnd*
  name: OnCursorSelectEnd
  href: api/InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.html#InscryptionCommunityPatch_Card_ActivatedAbilityIconInteractable_OnCursorSelectEnd_
  commentId: Overload:InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.OnCursorSelectEnd
  isSpec: "True"
  fullName: InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.OnCursorSelectEnd
  nameWithType: ActivatedAbilityIconInteractable.OnCursorSelectEnd
- uid: InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.OnCursorSelectStart
  name: OnCursorSelectStart()
  href: api/InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.html#InscryptionCommunityPatch_Card_ActivatedAbilityIconInteractable_OnCursorSelectStart
  commentId: M:InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.OnCursorSelectStart
  fullName: InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.OnCursorSelectStart()
  nameWithType: ActivatedAbilityIconInteractable.OnCursorSelectStart()
- uid: InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.OnCursorSelectStart*
  name: OnCursorSelectStart
  href: api/InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.html#InscryptionCommunityPatch_Card_ActivatedAbilityIconInteractable_OnCursorSelectStart_
  commentId: Overload:InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.OnCursorSelectStart
  isSpec: "True"
  fullName: InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.OnCursorSelectStart
  nameWithType: ActivatedAbilityIconInteractable.OnCursorSelectStart
- uid: InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.SetColor(UnityEngine.Color)
  name: SetColor(Color)
  href: api/InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.html#InscryptionCommunityPatch_Card_ActivatedAbilityIconInteractable_SetColor_UnityEngine_Color_
  commentId: M:InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.SetColor(UnityEngine.Color)
  fullName: InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.SetColor(UnityEngine.Color)
  nameWithType: ActivatedAbilityIconInteractable.SetColor(Color)
- uid: InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.SetColor*
  name: SetColor
  href: api/InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.html#InscryptionCommunityPatch_Card_ActivatedAbilityIconInteractable_SetColor_
  commentId: Overload:InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.SetColor
  isSpec: "True"
  fullName: InscryptionCommunityPatch.Card.ActivatedAbilityIconInteractable.SetColor
  nameWithType: ActivatedAbilityIconInteractable.SetColor
- uid: InscryptionCommunityPatch.Card.CommunityArtPatches
  name: CommunityArtPatches
  href: api/InscryptionCommunityPatch.Card.CommunityArtPatches.html
  commentId: T:InscryptionCommunityPatch.Card.CommunityArtPatches
  fullName: InscryptionCommunityPatch.Card.CommunityArtPatches
  nameWithType: CommunityArtPatches
- uid: InscryptionCommunityPatch.Card.CommunityArtPatches.PatchCommunityArt
  name: PatchCommunityArt()
  href: api/InscryptionCommunityPatch.Card.CommunityArtPatches.html#InscryptionCommunityPatch_Card_CommunityArtPatches_PatchCommunityArt
  commentId: M:InscryptionCommunityPatch.Card.CommunityArtPatches.PatchCommunityArt
  fullName: InscryptionCommunityPatch.Card.CommunityArtPatches.PatchCommunityArt()
  nameWithType: CommunityArtPatches.PatchCommunityArt()
- uid: InscryptionCommunityPatch.Card.CommunityArtPatches.PatchCommunityArt*
  name: PatchCommunityArt
  href: api/InscryptionCommunityPatch.Card.CommunityArtPatches.html#InscryptionCommunityPatch_Card_CommunityArtPatches_PatchCommunityArt_
  commentId: Overload:InscryptionCommunityPatch.Card.CommunityArtPatches.PatchCommunityArt
  isSpec: "True"
  fullName: InscryptionCommunityPatch.Card.CommunityArtPatches.PatchCommunityArt
  nameWithType: CommunityArtPatches.PatchCommunityArt
- uid: InscryptionCommunityPatch.Card.DefaultEvolveFix
  name: DefaultEvolveFix
  href: api/InscryptionCommunityPatch.Card.DefaultEvolveFix.html
  commentId: T:InscryptionCommunityPatch.Card.DefaultEvolveFix
  fullName: InscryptionCommunityPatch.Card.DefaultEvolveFix
  nameWithType: DefaultEvolveFix
- uid: InscryptionCommunityPatch.Card.DefaultEvolveFix.FixDefaultEvolveParamsIL(MonoMod.Cil.ILContext)
  name: FixDefaultEvolveParamsIL(ILContext)
  href: api/InscryptionCommunityPatch.Card.DefaultEvolveFix.html#InscryptionCommunityPatch_Card_DefaultEvolveFix_FixDefaultEvolveParamsIL_MonoMod_Cil_ILContext_
  commentId: M:InscryptionCommunityPatch.Card.DefaultEvolveFix.FixDefaultEvolveParamsIL(MonoMod.Cil.ILContext)
  fullName: InscryptionCommunityPatch.Card.DefaultEvolveFix.FixDefaultEvolveParamsIL(MonoMod.Cil.ILContext)
  nameWithType: DefaultEvolveFix.FixDefaultEvolveParamsIL(ILContext)
- uid: InscryptionCommunityPatch.Card.DefaultEvolveFix.FixDefaultEvolveParamsIL*
  name: FixDefaultEvolveParamsIL
  href: api/InscryptionCommunityPatch.Card.DefaultEvolveFix.html#InscryptionCommunityPatch_Card_DefaultEvolveFix_FixDefaultEvolveParamsIL_
  commentId: Overload:InscryptionCommunityPatch.Card.DefaultEvolveFix.FixDefaultEvolveParamsIL
  isSpec: "True"
  fullName: InscryptionCommunityPatch.Card.DefaultEvolveFix.FixDefaultEvolveParamsIL
  nameWithType: DefaultEvolveFix.FixDefaultEvolveParamsIL
- uid: InscryptionCommunityPatch.Card.EmpowerStackableBuffs
  name: EmpowerStackableBuffs
  href: api/InscryptionCommunityPatch.Card.EmpowerStackableBuffs.html
  commentId: T:InscryptionCommunityPatch.Card.EmpowerStackableBuffs
  fullName: InscryptionCommunityPatch.Card.EmpowerStackableBuffs
  nameWithType: EmpowerStackableBuffs
- uid: InscryptionCommunityPatch.Card.EmpowerStackableBuffs.MakeAttackBuffsStack(System.Int32@,DiskCardGame.PlayableCard@)
  name: MakeAttackBuffsStack(ref Int32, ref PlayableCard)
  href: api/InscryptionCommunityPatch.Card.EmpowerStackableBuffs.html#InscryptionCommunityPatch_Card_EmpowerStackableBuffs_MakeAttackBuffsStack_System_Int32__DiskCardGame_PlayableCard__
  commentId: M:InscryptionCommunityPatch.Card.EmpowerStackableBuffs.MakeAttackBuffsStack(System.Int32@,DiskCardGame.PlayableCard@)
  name.vb: MakeAttackBuffsStack(ByRef Int32, ByRef PlayableCard)
  fullName: InscryptionCommunityPatch.Card.EmpowerStackableBuffs.MakeAttackBuffsStack(ref System.Int32, ref DiskCardGame.PlayableCard)
  fullName.vb: InscryptionCommunityPatch.Card.EmpowerStackableBuffs.MakeAttackBuffsStack(ByRef System.Int32, ByRef DiskCardGame.PlayableCard)
  nameWithType: EmpowerStackableBuffs.MakeAttackBuffsStack(ref Int32, ref PlayableCard)
  nameWithType.vb: EmpowerStackableBuffs.MakeAttackBuffsStack(ByRef Int32, ByRef PlayableCard)
- uid: InscryptionCommunityPatch.Card.EmpowerStackableBuffs.MakeAttackBuffsStack*
  name: MakeAttackBuffsStack
  href: api/InscryptionCommunityPatch.Card.EmpowerStackableBuffs.html#InscryptionCommunityPatch_Card_EmpowerStackableBuffs_MakeAttackBuffsStack_
  commentId: Overload:InscryptionCommunityPatch.Card.EmpowerStackableBuffs.MakeAttackBuffsStack
  isSpec: "True"
  fullName: InscryptionCommunityPatch.Card.EmpowerStackableBuffs.MakeAttackBuffsStack
  nameWithType: EmpowerStackableBuffs.MakeAttackBuffsStack
- uid: InscryptionCommunityPatch.Card.MergedSigilOnBottom
  name: MergedSigilOnBottom
  href: api/InscryptionCommunityPatch.Card.MergedSigilOnBottom.html
  commentId: T:InscryptionCommunityPatch.Card.MergedSigilOnBottom
  fullName: InscryptionCommunityPatch.Card.MergedSigilOnBottom
  nameWithType: MergedSigilOnBottom
- uid: InscryptionCommunityPatch.Card.MergedSigilOnBottom.DontPlaceCardModIcons_IfShowOnBottom(DiskCardGame.CardAbilityIcons,List{DiskCardGame.AbilityIconInteractable},UnityEngine.Material)
  name: DontPlaceCardModIcons_IfShowOnBottom(CardAbilityIcons, List<AbilityIconInteractable>, Material)
  href: api/InscryptionCommunityPatch.Card.MergedSigilOnBottom.html#InscryptionCommunityPatch_Card_MergedSigilOnBottom_DontPlaceCardModIcons_IfShowOnBottom_DiskCardGame_CardAbilityIcons_List_DiskCardGame_AbilityIconInteractable__UnityEngine_Material_
  commentId: M:InscryptionCommunityPatch.Card.MergedSigilOnBottom.DontPlaceCardModIcons_IfShowOnBottom(DiskCardGame.CardAbilityIcons,List{DiskCardGame.AbilityIconInteractable},UnityEngine.Material)
  name.vb: DontPlaceCardModIcons_IfShowOnBottom(CardAbilityIcons, List(Of AbilityIconInteractable), Material)
  fullName: InscryptionCommunityPatch.Card.MergedSigilOnBottom.DontPlaceCardModIcons_IfShowOnBottom(DiskCardGame.CardAbilityIcons, List<DiskCardGame.AbilityIconInteractable>, UnityEngine.Material)
  fullName.vb: InscryptionCommunityPatch.Card.MergedSigilOnBottom.DontPlaceCardModIcons_IfShowOnBottom(DiskCardGame.CardAbilityIcons, List(Of DiskCardGame.AbilityIconInteractable), UnityEngine.Material)
  nameWithType: MergedSigilOnBottom.DontPlaceCardModIcons_IfShowOnBottom(CardAbilityIcons, List<AbilityIconInteractable>, Material)
  nameWithType.vb: MergedSigilOnBottom.DontPlaceCardModIcons_IfShowOnBottom(CardAbilityIcons, List(Of AbilityIconInteractable), Material)
- uid: InscryptionCommunityPatch.Card.MergedSigilOnBottom.DontPlaceCardModIcons_IfShowOnBottom*
  name: DontPlaceCardModIcons_IfShowOnBottom
  href: api/InscryptionCommunityPatch.Card.MergedSigilOnBottom.html#InscryptionCommunityPatch_Card_MergedSigilOnBottom_DontPlaceCardModIcons_IfShowOnBottom_
  commentId: Overload:InscryptionCommunityPatch.Card.MergedSigilOnBottom.DontPlaceCardModIcons_IfShowOnBottom
  isSpec: "True"
  fullName: InscryptionCommunityPatch.Card.MergedSigilOnBottom.DontPlaceCardModIcons_IfShowOnBottom
  nameWithType: MergedSigilOnBottom.DontPlaceCardModIcons_IfShowOnBottom
- uid: InscryptionCommunityPatch.Card.MergedSigilOnBottom.MoveMergeIconsToDefaultGroup_IfShowOnBottom(List{DiskCardGame.Ability},List{DiskCardGame.Ability})
  name: MoveMergeIconsToDefaultGroup_IfShowOnBottom(List<Ability>, List<Ability>)
  href: api/InscryptionCommunityPatch.Card.MergedSigilOnBottom.html#InscryptionCommunityPatch_Card_MergedSigilOnBottom_MoveMergeIconsToDefaultGroup_IfShowOnBottom_List_DiskCardGame_Ability__List_DiskCardGame_Ability__
  commentId: M:InscryptionCommunityPatch.Card.MergedSigilOnBottom.MoveMergeIconsToDefaultGroup_IfShowOnBottom(List{DiskCardGame.Ability},List{DiskCardGame.Ability})
  name.vb: MoveMergeIconsToDefaultGroup_IfShowOnBottom(List(Of Ability), List(Of Ability))
  fullName: InscryptionCommunityPatch.Card.MergedSigilOnBottom.MoveMergeIconsToDefaultGroup_IfShowOnBottom(List<DiskCardGame.Ability>, List<DiskCardGame.Ability>)
  fullName.vb: InscryptionCommunityPatch.Card.MergedSigilOnBottom.MoveMergeIconsToDefaultGroup_IfShowOnBottom(List(Of DiskCardGame.Ability), List(Of DiskCardGame.Ability))
  nameWithType: MergedSigilOnBottom.MoveMergeIconsToDefaultGroup_IfShowOnBottom(List<Ability>, List<Ability>)
  nameWithType.vb: MergedSigilOnBottom.MoveMergeIconsToDefaultGroup_IfShowOnBottom(List(Of Ability), List(Of Ability))
- uid: InscryptionCommunityPatch.Card.MergedSigilOnBottom.MoveMergeIconsToDefaultGroup_IfShowOnBottom*
  name: MoveMergeIconsToDefaultGroup_IfShowOnBottom
  href: api/InscryptionCommunityPatch.Card.MergedSigilOnBottom.html#InscryptionCommunityPatch_Card_MergedSigilOnBottom_MoveMergeIconsToDefaultGroup_IfShowOnBottom_
  commentId: Overload:InscryptionCommunityPatch.Card.MergedSigilOnBottom.MoveMergeIconsToDefaultGroup_IfShowOnBottom
  isSpec: "True"
  fullName: InscryptionCommunityPatch.Card.MergedSigilOnBottom.MoveMergeIconsToDefaultGroup_IfShowOnBottom
  nameWithType: MergedSigilOnBottom.MoveMergeIconsToDefaultGroup_IfShowOnBottom
- uid: InscryptionCommunityPatch.Card.MergedSigilOnBottom.RepositionAndRetextureMergedIcons_IfShowOnBottom(UnityEngine.Texture@,DiskCardGame.CardInfo@,DiskCardGame.AbilityInfo@,DiskCardGame.AbilityIconInteractable@)
  name: RepositionAndRetextureMergedIcons_IfShowOnBottom(ref Texture, ref CardInfo, ref AbilityInfo, ref AbilityIconInteractable)
  href: api/InscryptionCommunityPatch.Card.MergedSigilOnBottom.html#InscryptionCommunityPatch_Card_MergedSigilOnBottom_RepositionAndRetextureMergedIcons_IfShowOnBottom_UnityEngine_Texture__DiskCardGame_CardInfo__DiskCardGame_AbilityInfo__DiskCardGame_AbilityIconInteractable__
  commentId: M:InscryptionCommunityPatch.Card.MergedSigilOnBottom.RepositionAndRetextureMergedIcons_IfShowOnBottom(UnityEngine.Texture@,DiskCardGame.CardInfo@,DiskCardGame.AbilityInfo@,DiskCardGame.AbilityIconInteractable@)
  name.vb: RepositionAndRetextureMergedIcons_IfShowOnBottom(ByRef Texture, ByRef CardInfo, ByRef AbilityInfo, ByRef AbilityIconInteractable)
  fullName: InscryptionCommunityPatch.Card.MergedSigilOnBottom.RepositionAndRetextureMergedIcons_IfShowOnBottom(ref UnityEngine.Texture, ref DiskCardGame.CardInfo, ref DiskCardGame.AbilityInfo, ref DiskCardGame.AbilityIconInteractable)
  fullName.vb: InscryptionCommunityPatch.Card.MergedSigilOnBottom.RepositionAndRetextureMergedIcons_IfShowOnBottom(ByRef UnityEngine.Texture, ByRef DiskCardGame.CardInfo, ByRef DiskCardGame.AbilityInfo, ByRef DiskCardGame.AbilityIconInteractable)
  nameWithType: MergedSigilOnBottom.RepositionAndRetextureMergedIcons_IfShowOnBottom(ref Texture, ref CardInfo, ref AbilityInfo, ref AbilityIconInteractable)
  nameWithType.vb: MergedSigilOnBottom.RepositionAndRetextureMergedIcons_IfShowOnBottom(ByRef Texture, ByRef CardInfo, ByRef AbilityInfo, ByRef AbilityIconInteractable)
- uid: InscryptionCommunityPatch.Card.MergedSigilOnBottom.RepositionAndRetextureMergedIcons_IfShowOnBottom*
  name: RepositionAndRetextureMergedIcons_IfShowOnBottom
  href: api/InscryptionCommunityPatch.Card.MergedSigilOnBottom.html#InscryptionCommunityPatch_Card_MergedSigilOnBottom_RepositionAndRetextureMergedIcons_IfShowOnBottom_
  commentId: Overload:InscryptionCommunityPatch.Card.MergedSigilOnBottom.RepositionAndRetextureMergedIcons_IfShowOnBottom
  isSpec: "True"
  fullName: InscryptionCommunityPatch.Card.MergedSigilOnBottom.RepositionAndRetextureMergedIcons_IfShowOnBottom
  nameWithType: MergedSigilOnBottom.RepositionAndRetextureMergedIcons_IfShowOnBottom
- uid: InscryptionCommunityPatch.Card.Part1CardCostRender
  name: Part1CardCostRender
  href: api/InscryptionCommunityPatch.Card.Part1CardCostRender.html
  commentId: T:InscryptionCommunityPatch.Card.Part1CardCostRender
  fullName: InscryptionCommunityPatch.Card.Part1CardCostRender
  nameWithType: Part1CardCostRender
- uid: InscryptionCommunityPatch.Card.Part1CardCostRender.CombineCostTextures(List{UnityEngine.Texture2D})
  name: CombineCostTextures(List<Texture2D>)
  href: api/InscryptionCommunityPatch.Card.Part1CardCostRender.html#InscryptionCommunityPatch_Card_Part1CardCostRender_CombineCostTextures_List_UnityEngine_Texture2D__
  commentId: M:InscryptionCommunityPatch.Card.Part1CardCostRender.CombineCostTextures(List{UnityEngine.Texture2D})
  name.vb: CombineCostTextures(List(Of Texture2D))
  fullName: InscryptionCommunityPatch.Card.Part1CardCostRender.CombineCostTextures(List<UnityEngine.Texture2D>)
  fullName.vb: InscryptionCommunityPatch.Card.Part1CardCostRender.CombineCostTextures(List(Of UnityEngine.Texture2D))
  nameWithType: Part1CardCostRender.CombineCostTextures(List<Texture2D>)
  nameWithType.vb: Part1CardCostRender.CombineCostTextures(List(Of Texture2D))
- uid: InscryptionCommunityPatch.Card.Part1CardCostRender.CombineCostTextures*
  name: CombineCostTextures
  href: api/InscryptionCommunityPatch.Card.Part1CardCostRender.html#InscryptionCommunityPatch_Card_Part1CardCostRender_CombineCostTextures_
  commentId: Overload:InscryptionCommunityPatch.Card.Part1CardCostRender.CombineCostTextures
  isSpec: "True"
  fullName: InscryptionCommunityPatch.Card.Part1CardCostRender.CombineCostTextures
  nameWithType: Part1CardCostRender.CombineCostTextures
- uid: InscryptionCommunityPatch.Card.Part1CardCostRender.CombineMoxTextures(List{UnityEngine.Texture2D})
  name: CombineMoxTextures(List<Texture2D>)
  href: api/InscryptionCommunityPatch.Card.Part1CardCostRender.html#InscryptionCommunityPatch_Card_Part1CardCostRender_CombineMoxTextures_List_UnityEngine_Texture2D__
  commentId: M:InscryptionCommunityPatch.Card.Part1CardCostRender.CombineMoxTextures(List{UnityEngine.Texture2D})
  name.vb: CombineMoxTextures(List(Of Texture2D))
  fullName: InscryptionCommunityPatch.Card.Part1CardCostRender.CombineMoxTextures(List<UnityEngine.Texture2D>)
  fullName.vb: InscryptionCommunityPatch.Card.Part1CardCostRender.CombineMoxTextures(List(Of UnityEngine.Texture2D))
  nameWithType: Part1CardCostRender.CombineMoxTextures(List<Texture2D>)
  nameWithType.vb: Part1CardCostRender.CombineMoxTextures(List(Of Texture2D))
- uid: InscryptionCommunityPatch.Card.Part1CardCostRender.CombineMoxTextures*
  name: CombineMoxTextures
  href: api/InscryptionCommunityPatch.Card.Part1CardCostRender.html#InscryptionCommunityPatch_Card_Part1CardCostRender_CombineMoxTextures_
  commentId: Overload:InscryptionCommunityPatch.Card.Part1CardCostRender.CombineMoxTextures
  isSpec: "True"
  fullName: InscryptionCommunityPatch.Card.Part1CardCostRender.CombineMoxTextures
  nameWithType: Part1CardCostRender.CombineMoxTextures
- uid: InscryptionCommunityPatch.Card.Part1CardCostRender.COST_OFFSET
  name: COST_OFFSET
  href: api/InscryptionCommunityPatch.Card.Part1CardCostRender.html#InscryptionCommunityPatch_Card_Part1CardCostRender_COST_OFFSET
  commentId: F:InscryptionCommunityPatch.Card.Part1CardCostRender.COST_OFFSET
  fullName: InscryptionCommunityPatch.Card.Part1CardCostRender.COST_OFFSET
  nameWithType: Part1CardCostRender.COST_OFFSET
- uid: InscryptionCommunityPatch.Card.Part1CardCostRender.MOX_OFFSET
  name: MOX_OFFSET
  href: api/InscryptionCommunityPatch.Card.Part1CardCostRender.html#InscryptionCommunityPatch_Card_Part1CardCostRender_MOX_OFFSET
  commentId: F:InscryptionCommunityPatch.Card.Part1CardCostRender.MOX_OFFSET
  fullName: InscryptionCommunityPatch.Card.Part1CardCostRender.MOX_OFFSET
  nameWithType: Part1CardCostRender.MOX_OFFSET
- uid: InscryptionCommunityPatch.Card.Part1CardCostRender.Part1CardCostDisplayerPatch(UnityEngine.Sprite@,DiskCardGame.CardInfo@,DiskCardGame.CardDisplayer@)
  name: Part1CardCostDisplayerPatch(ref Sprite, ref CardInfo, ref CardDisplayer)
  href: api/InscryptionCommunityPatch.Card.Part1CardCostRender.html#InscryptionCommunityPatch_Card_Part1CardCostRender_Part1CardCostDisplayerPatch_UnityEngine_Sprite__DiskCardGame_CardInfo__DiskCardGame_CardDisplayer__
  commentId: M:InscryptionCommunityPatch.Card.Part1CardCostRender.Part1CardCostDisplayerPatch(UnityEngine.Sprite@,DiskCardGame.CardInfo@,DiskCardGame.CardDisplayer@)
  name.vb: Part1CardCostDisplayerPatch(ByRef Sprite, ByRef CardInfo, ByRef CardDisplayer)
  fullName: InscryptionCommunityPatch.Card.Part1CardCostRender.Part1CardCostDisplayerPatch(ref UnityEngine.Sprite, ref DiskCardGame.CardInfo, ref DiskCardGame.CardDisplayer)
  fullName.vb: InscryptionCommunityPatch.Card.Part1CardCostRender.Part1CardCostDisplayerPatch(ByRef UnityEngine.Sprite, ByRef DiskCardGame.CardInfo, ByRef DiskCardGame.CardDisplayer)
  nameWithType: Part1CardCostRender.Part1CardCostDisplayerPatch(ref Sprite, ref CardInfo, ref CardDisplayer)
  nameWithType.vb: Part1CardCostRender.Part1CardCostDisplayerPatch(ByRef Sprite, ByRef CardInfo, ByRef CardDisplayer)
- uid: InscryptionCommunityPatch.Card.Part1CardCostRender.Part1CardCostDisplayerPatch*
  name: Part1CardCostDisplayerPatch
  href: api/InscryptionCommunityPatch.Card.Part1CardCostRender.html#InscryptionCommunityPatch_Card_Part1CardCostRender_Part1CardCostDisplayerPatch_
  commentId: Overload:InscryptionCommunityPatch.Card.Part1CardCostRender.Part1CardCostDisplayerPatch
  isSpec: "True"
  fullName: InscryptionCommunityPatch.Card.Part1CardCostRender.Part1CardCostDisplayerPatch
  nameWithType: Part1CardCostRender.Part1CardCostDisplayerPatch
- uid: InscryptionCommunityPatch.Card.Part1CardCostRender.Part1SpriteFinal(DiskCardGame.CardInfo)
  name: Part1SpriteFinal(CardInfo)
  href: api/InscryptionCommunityPatch.Card.Part1CardCostRender.html#InscryptionCommunityPatch_Card_Part1CardCostRender_Part1SpriteFinal_DiskCardGame_CardInfo_
  commentId: M:InscryptionCommunityPatch.Card.Part1CardCostRender.Part1SpriteFinal(DiskCardGame.CardInfo)
  fullName: InscryptionCommunityPatch.Card.Part1CardCostRender.Part1SpriteFinal(DiskCardGame.CardInfo)
  nameWithType: Part1CardCostRender.Part1SpriteFinal(CardInfo)
- uid: InscryptionCommunityPatch.Card.Part1CardCostRender.Part1SpriteFinal*
  name: Part1SpriteFinal
  href: api/InscryptionCommunityPatch.Card.Part1CardCostRender.html#InscryptionCommunityPatch_Card_Part1CardCostRender_Part1SpriteFinal_
  commentId: Overload:InscryptionCommunityPatch.Card.Part1CardCostRender.Part1SpriteFinal
  isSpec: "True"
  fullName: InscryptionCommunityPatch.Card.Part1CardCostRender.Part1SpriteFinal
  nameWithType: Part1CardCostRender.Part1SpriteFinal
- uid: InscryptionCommunityPatch.Card.Part1CardCostRender.UpdateCardCost
  name: UpdateCardCost
  href: api/InscryptionCommunityPatch.Card.Part1CardCostRender.html#InscryptionCommunityPatch_Card_Part1CardCostRender_UpdateCardCost
  commentId: E:InscryptionCommunityPatch.Card.Part1CardCostRender.UpdateCardCost
  fullName: InscryptionCommunityPatch.Card.Part1CardCostRender.UpdateCardCost
  nameWithType: Part1CardCostRender.UpdateCardCost
- uid: InscryptionCommunityPatch.Card.Part2CardCostRender
  name: Part2CardCostRender
  href: api/InscryptionCommunityPatch.Card.Part2CardCostRender.html
  commentId: T:InscryptionCommunityPatch.Card.Part2CardCostRender
  fullName: InscryptionCommunityPatch.Card.Part2CardCostRender
  nameWithType: Part2CardCostRender
- uid: InscryptionCommunityPatch.Card.Part2CardCostRender.CombineIconAndCount(System.Int32,UnityEngine.Texture2D)
  name: CombineIconAndCount(Int32, Texture2D)
  href: api/InscryptionCommunityPatch.Card.Part2CardCostRender.html#InscryptionCommunityPatch_Card_Part2CardCostRender_CombineIconAndCount_System_Int32_UnityEngine_Texture2D_
  commentId: M:InscryptionCommunityPatch.Card.Part2CardCostRender.CombineIconAndCount(System.Int32,UnityEngine.Texture2D)
  fullName: InscryptionCommunityPatch.Card.Part2CardCostRender.CombineIconAndCount(System.Int32, UnityEngine.Texture2D)
  nameWithType: Part2CardCostRender.CombineIconAndCount(Int32, Texture2D)
- uid: InscryptionCommunityPatch.Card.Part2CardCostRender.CombineIconAndCount*
  name: CombineIconAndCount
  href: api/InscryptionCommunityPatch.Card.Part2CardCostRender.html#InscryptionCommunityPatch_Card_Part2CardCostRender_CombineIconAndCount_
  commentId: Overload:InscryptionCommunityPatch.Card.Part2CardCostRender.CombineIconAndCount
  isSpec: "True"
  fullName: InscryptionCommunityPatch.Card.Part2CardCostRender.CombineIconAndCount
  nameWithType: Part2CardCostRender.CombineIconAndCount
- uid: InscryptionCommunityPatch.Card.Part2CardCostRender.Part2CardCostDisplayerPatch(UnityEngine.Sprite@,DiskCardGame.CardInfo@,DiskCardGame.CardDisplayer@)
  name: Part2CardCostDisplayerPatch(ref Sprite, ref CardInfo, ref CardDisplayer)
  href: api/InscryptionCommunityPatch.Card.Part2CardCostRender.html#InscryptionCommunityPatch_Card_Part2CardCostRender_Part2CardCostDisplayerPatch_UnityEngine_Sprite__DiskCardGame_CardInfo__DiskCardGame_CardDisplayer__
  commentId: M:InscryptionCommunityPatch.Card.Part2CardCostRender.Part2CardCostDisplayerPatch(UnityEngine.Sprite@,DiskCardGame.CardInfo@,DiskCardGame.CardDisplayer@)
  name.vb: Part2CardCostDisplayerPatch(ByRef Sprite, ByRef CardInfo, ByRef CardDisplayer)
  fullName: InscryptionCommunityPatch.Card.Part2CardCostRender.Part2CardCostDisplayerPatch(ref UnityEngine.Sprite, ref DiskCardGame.CardInfo, ref DiskCardGame.CardDisplayer)
  fullName.vb: InscryptionCommunityPatch.Card.Part2CardCostRender.Part2CardCostDisplayerPatch(ByRef UnityEngine.Sprite, ByRef DiskCardGame.CardInfo, ByRef DiskCardGame.CardDisplayer)
  nameWithType: Part2CardCostRender.Part2CardCostDisplayerPatch(ref Sprite, ref CardInfo, ref CardDisplayer)
  nameWithType.vb: Part2CardCostRender.Part2CardCostDisplayerPatch(ByRef Sprite, ByRef CardInfo, ByRef CardDisplayer)
- uid: InscryptionCommunityPatch.Card.Part2CardCostRender.Part2CardCostDisplayerPatch*
  name: Part2CardCostDisplayerPatch
  href: api/InscryptionCommunityPatch.Card.Part2CardCostRender.html#InscryptionCommunityPatch_Card_Part2CardCostRender_Part2CardCostDisplayerPatch_
  commentId: Overload:InscryptionCommunityPatch.Card.Part2CardCostRender.Part2CardCostDisplayerPatch
  isSpec: "True"
  fullName: InscryptionCommunityPatch.Card.Part2CardCostRender.Part2CardCostDisplayerPatch
  nameWithType: Part2CardCostRender.Part2CardCostDisplayerPatch
- uid: InscryptionCommunityPatch.Card.Part2CardCostRender.Part2SpriteFinal(DiskCardGame.CardInfo)
  name: Part2SpriteFinal(CardInfo)
  href: api/InscryptionCommunityPatch.Card.Part2CardCostRender.html#InscryptionCommunityPatch_Card_Part2CardCostRender_Part2SpriteFinal_DiskCardGame_CardInfo_
  commentId: M:InscryptionCommunityPatch.Card.Part2CardCostRender.Part2SpriteFinal(DiskCardGame.CardInfo)
  fullName: InscryptionCommunityPatch.Card.Part2CardCostRender.Part2SpriteFinal(DiskCardGame.CardInfo)
  nameWithType: Part2CardCostRender.Part2SpriteFinal(CardInfo)
- uid: InscryptionCommunityPatch.Card.Part2CardCostRender.Part2SpriteFinal*
  name: Part2SpriteFinal
  href: api/InscryptionCommunityPatch.Card.Part2CardCostRender.html#InscryptionCommunityPatch_Card_Part2CardCostRender_Part2SpriteFinal_
  commentId: Overload:InscryptionCommunityPatch.Card.Part2CardCostRender.Part2SpriteFinal
  isSpec: "True"
  fullName: InscryptionCommunityPatch.Card.Part2CardCostRender.Part2SpriteFinal
  nameWithType: Part2CardCostRender.Part2SpriteFinal
- uid: InscryptionCommunityPatch.Card.Part2CardCostRender.UpdateCardCost
  name: UpdateCardCost
  href: api/InscryptionCommunityPatch.Card.Part2CardCostRender.html#InscryptionCommunityPatch_Card_Part2CardCostRender_UpdateCardCost
  commentId: E:InscryptionCommunityPatch.Card.Part2CardCostRender.UpdateCardCost
  fullName: InscryptionCommunityPatch.Card.Part2CardCostRender.UpdateCardCost
  nameWithType: Part2CardCostRender.UpdateCardCost
- uid: InscryptionCommunityPatch.Card.RenderAdditionalSigils
  name: RenderAdditionalSigils
  href: api/InscryptionCommunityPatch.Card.RenderAdditionalSigils.html
  commentId: T:InscryptionCommunityPatch.Card.RenderAdditionalSigils
  fullName: InscryptionCommunityPatch.Card.RenderAdditionalSigils
  nameWithType: RenderAdditionalSigils
- uid: InscryptionCommunityPatch.Card.RenderAdditionalSigils.UpdateCamera(DiskCardGame.CardRenderCamera@)
  name: UpdateCamera(ref CardRenderCamera)
  href: api/InscryptionCommunityPatch.Card.RenderAdditionalSigils.html#InscryptionCommunityPatch_Card_RenderAdditionalSigils_UpdateCamera_DiskCardGame_CardRenderCamera__
  commentId: M:InscryptionCommunityPatch.Card.RenderAdditionalSigils.UpdateCamera(DiskCardGame.CardRenderCamera@)
  name.vb: UpdateCamera(ByRef CardRenderCamera)
  fullName: InscryptionCommunityPatch.Card.RenderAdditionalSigils.UpdateCamera(ref DiskCardGame.CardRenderCamera)
  fullName.vb: InscryptionCommunityPatch.Card.RenderAdditionalSigils.UpdateCamera(ByRef DiskCardGame.CardRenderCamera)
  nameWithType: RenderAdditionalSigils.UpdateCamera(ref CardRenderCamera)
  nameWithType.vb: RenderAdditionalSigils.UpdateCamera(ByRef CardRenderCamera)
- uid: InscryptionCommunityPatch.Card.RenderAdditionalSigils.UpdateCamera*
  name: UpdateCamera
  href: api/InscryptionCommunityPatch.Card.RenderAdditionalSigils.html#InscryptionCommunityPatch_Card_RenderAdditionalSigils_UpdateCamera_
  commentId: Overload:InscryptionCommunityPatch.Card.RenderAdditionalSigils.UpdateCamera
  isSpec: "True"
  fullName: InscryptionCommunityPatch.Card.RenderAdditionalSigils.UpdateCamera
  nameWithType: RenderAdditionalSigils.UpdateCamera
- uid: InscryptionCommunityPatch.Card.RenderAdditionalSigils.UpdateCardDisplayer(DiskCardGame.CardDisplayer3D@)
  name: UpdateCardDisplayer(ref CardDisplayer3D)
  href: api/InscryptionCommunityPatch.Card.RenderAdditionalSigils.html#InscryptionCommunityPatch_Card_RenderAdditionalSigils_UpdateCardDisplayer_DiskCardGame_CardDisplayer3D__
  commentId: M:InscryptionCommunityPatch.Card.RenderAdditionalSigils.UpdateCardDisplayer(DiskCardGame.CardDisplayer3D@)
  name.vb: UpdateCardDisplayer(ByRef CardDisplayer3D)
  fullName: InscryptionCommunityPatch.Card.RenderAdditionalSigils.UpdateCardDisplayer(ref DiskCardGame.CardDisplayer3D)
  fullName.vb: InscryptionCommunityPatch.Card.RenderAdditionalSigils.UpdateCardDisplayer(ByRef DiskCardGame.CardDisplayer3D)
  nameWithType: RenderAdditionalSigils.UpdateCardDisplayer(ref CardDisplayer3D)
  nameWithType.vb: RenderAdditionalSigils.UpdateCardDisplayer(ByRef CardDisplayer3D)
- uid: InscryptionCommunityPatch.Card.RenderAdditionalSigils.UpdateCardDisplayer*
  name: UpdateCardDisplayer
  href: api/InscryptionCommunityPatch.Card.RenderAdditionalSigils.html#InscryptionCommunityPatch_Card_RenderAdditionalSigils_UpdateCardDisplayer_
  commentId: Overload:InscryptionCommunityPatch.Card.RenderAdditionalSigils.UpdateCardDisplayer
  isSpec: "True"
  fullName: InscryptionCommunityPatch.Card.RenderAdditionalSigils.UpdateCardDisplayer
  nameWithType: RenderAdditionalSigils.UpdateCardDisplayer
- uid: InscryptionCommunityPatch.Card.RenderAdditionalSigils.UpdateLiveRenderedCard(DiskCardGame.Card@)
  name: UpdateLiveRenderedCard(ref Card)
  href: api/InscryptionCommunityPatch.Card.RenderAdditionalSigils.html#InscryptionCommunityPatch_Card_RenderAdditionalSigils_UpdateLiveRenderedCard_DiskCardGame_Card__
  commentId: M:InscryptionCommunityPatch.Card.RenderAdditionalSigils.UpdateLiveRenderedCard(DiskCardGame.Card@)
  name.vb: UpdateLiveRenderedCard(ByRef Card)
  fullName: InscryptionCommunityPatch.Card.RenderAdditionalSigils.UpdateLiveRenderedCard(ref DiskCardGame.Card)
  fullName.vb: InscryptionCommunityPatch.Card.RenderAdditionalSigils.UpdateLiveRenderedCard(ByRef DiskCardGame.Card)
  nameWithType: RenderAdditionalSigils.UpdateLiveRenderedCard(ref Card)
  nameWithType.vb: RenderAdditionalSigils.UpdateLiveRenderedCard(ByRef Card)
- uid: InscryptionCommunityPatch.Card.RenderAdditionalSigils.UpdateLiveRenderedCard*
  name: UpdateLiveRenderedCard
  href: api/InscryptionCommunityPatch.Card.RenderAdditionalSigils.html#InscryptionCommunityPatch_Card_RenderAdditionalSigils_UpdateLiveRenderedCard_
  commentId: Overload:InscryptionCommunityPatch.Card.RenderAdditionalSigils.UpdateLiveRenderedCard
  isSpec: "True"
  fullName: InscryptionCommunityPatch.Card.RenderAdditionalSigils.UpdateLiveRenderedCard
  nameWithType: RenderAdditionalSigils.UpdateLiveRenderedCard
- uid: InscryptionCommunityPatch.Card.StackAbilityIcons
  name: StackAbilityIcons
  href: api/InscryptionCommunityPatch.Card.StackAbilityIcons.html
  commentId: T:InscryptionCommunityPatch.Card.StackAbilityIcons
  fullName: InscryptionCommunityPatch.Card.StackAbilityIcons
  nameWithType: StackAbilityIcons
- uid: InscryptionCommunityPatch.Card.StackAbilityIcons.AddIconNumber(DiskCardGame.Ability,DiskCardGame.CardInfo,DiskCardGame.PlayableCard,DiskCardGame.AbilityIconInteractable@)
  name: AddIconNumber(Ability, CardInfo, PlayableCard, ref AbilityIconInteractable)
  href: api/InscryptionCommunityPatch.Card.StackAbilityIcons.html#InscryptionCommunityPatch_Card_StackAbilityIcons_AddIconNumber_DiskCardGame_Ability_DiskCardGame_CardInfo_DiskCardGame_PlayableCard_DiskCardGame_AbilityIconInteractable__
  commentId: M:InscryptionCommunityPatch.Card.StackAbilityIcons.AddIconNumber(DiskCardGame.Ability,DiskCardGame.CardInfo,DiskCardGame.PlayableCard,DiskCardGame.AbilityIconInteractable@)
  name.vb: AddIconNumber(Ability, CardInfo, PlayableCard, ByRef AbilityIconInteractable)
  fullName: InscryptionCommunityPatch.Card.StackAbilityIcons.AddIconNumber(DiskCardGame.Ability, DiskCardGame.CardInfo, DiskCardGame.PlayableCard, ref DiskCardGame.AbilityIconInteractable)
  fullName.vb: InscryptionCommunityPatch.Card.StackAbilityIcons.AddIconNumber(DiskCardGame.Ability, DiskCardGame.CardInfo, DiskCardGame.PlayableCard, ByRef DiskCardGame.AbilityIconInteractable)
  nameWithType: StackAbilityIcons.AddIconNumber(Ability, CardInfo, PlayableCard, ref AbilityIconInteractable)
  nameWithType.vb: StackAbilityIcons.AddIconNumber(Ability, CardInfo, PlayableCard, ByRef AbilityIconInteractable)
- uid: InscryptionCommunityPatch.Card.StackAbilityIcons.AddIconNumber*
  name: AddIconNumber
  href: api/InscryptionCommunityPatch.Card.StackAbilityIcons.html#InscryptionCommunityPatch_Card_StackAbilityIcons_AddIconNumber_
  commentId: Overload:InscryptionCommunityPatch.Card.StackAbilityIcons.AddIconNumber
  isSpec: "True"
  fullName: InscryptionCommunityPatch.Card.StackAbilityIcons.AddIconNumber
  nameWithType: StackAbilityIcons.AddIconNumber
- uid: InscryptionCommunityPatch.Card.StackAbilityIcons.ClearStackableIcons(List{DiskCardGame.Ability}@)
  name: ClearStackableIcons(ref List<Ability>)
  href: api/InscryptionCommunityPatch.Card.StackAbilityIcons.html#InscryptionCommunityPatch_Card_StackAbilityIcons_ClearStackableIcons_List_DiskCardGame_Ability___
  commentId: M:InscryptionCommunityPatch.Card.StackAbilityIcons.ClearStackableIcons(List{DiskCardGame.Ability}@)
  name.vb: ClearStackableIcons(ByRef List(Of Ability))
  fullName: InscryptionCommunityPatch.Card.StackAbilityIcons.ClearStackableIcons(ref List<DiskCardGame.Ability>)
  fullName.vb: InscryptionCommunityPatch.Card.StackAbilityIcons.ClearStackableIcons(ByRef List(Of DiskCardGame.Ability))
  nameWithType: StackAbilityIcons.ClearStackableIcons(ref List<Ability>)
  nameWithType.vb: StackAbilityIcons.ClearStackableIcons(ByRef List(Of Ability))
- uid: InscryptionCommunityPatch.Card.StackAbilityIcons.ClearStackableIcons*
  name: ClearStackableIcons
  href: api/InscryptionCommunityPatch.Card.StackAbilityIcons.html#InscryptionCommunityPatch_Card_StackAbilityIcons_ClearStackableIcons_
  commentId: Overload:InscryptionCommunityPatch.Card.StackAbilityIcons.ClearStackableIcons
  isSpec: "True"
  fullName: InscryptionCommunityPatch.Card.StackAbilityIcons.ClearStackableIcons
  nameWithType: StackAbilityIcons.ClearStackableIcons
- uid: InscryptionCommunityPatch.Card.StackAbilityIcons.GetStackedGBCDescriptionLocalized(System.String@)
  name: GetStackedGBCDescriptionLocalized(ref String)
  href: api/InscryptionCommunityPatch.Card.StackAbilityIcons.html#InscryptionCommunityPatch_Card_StackAbilityIcons_GetStackedGBCDescriptionLocalized_System_String__
  commentId: M:InscryptionCommunityPatch.Card.StackAbilityIcons.GetStackedGBCDescriptionLocalized(System.String@)
  name.vb: GetStackedGBCDescriptionLocalized(ByRef String)
  fullName: InscryptionCommunityPatch.Card.StackAbilityIcons.GetStackedGBCDescriptionLocalized(ref System.String)
  fullName.vb: InscryptionCommunityPatch.Card.StackAbilityIcons.GetStackedGBCDescriptionLocalized(ByRef System.String)
  nameWithType: StackAbilityIcons.GetStackedGBCDescriptionLocalized(ref String)
  nameWithType.vb: StackAbilityIcons.GetStackedGBCDescriptionLocalized(ByRef String)
- uid: InscryptionCommunityPatch.Card.StackAbilityIcons.GetStackedGBCDescriptionLocalized*
  name: GetStackedGBCDescriptionLocalized
  href: api/InscryptionCommunityPatch.Card.StackAbilityIcons.html#InscryptionCommunityPatch_Card_StackAbilityIcons_GetStackedGBCDescriptionLocalized_
  commentId: Overload:InscryptionCommunityPatch.Card.StackAbilityIcons.GetStackedGBCDescriptionLocalized
  isSpec: "True"
  fullName: InscryptionCommunityPatch.Card.StackAbilityIcons.GetStackedGBCDescriptionLocalized
  nameWithType: StackAbilityIcons.GetStackedGBCDescriptionLocalized
- uid: InscryptionCommunityPatch.Card.StackAbilityIcons.PatchPixelCardStacks(GBC.PixelCardAbilityIcons@,List{DiskCardGame.Ability},DiskCardGame.PlayableCard)
  name: PatchPixelCardStacks(ref PixelCardAbilityIcons, List<Ability>, PlayableCard)
  href: api/InscryptionCommunityPatch.Card.StackAbilityIcons.html#InscryptionCommunityPatch_Card_StackAbilityIcons_PatchPixelCardStacks_GBC_PixelCardAbilityIcons__List_DiskCardGame_Ability__DiskCardGame_PlayableCard_
  commentId: M:InscryptionCommunityPatch.Card.StackAbilityIcons.PatchPixelCardStacks(GBC.PixelCardAbilityIcons@,List{DiskCardGame.Ability},DiskCardGame.PlayableCard)
  name.vb: PatchPixelCardStacks(ByRef PixelCardAbilityIcons, List(Of Ability), PlayableCard)
  fullName: InscryptionCommunityPatch.Card.StackAbilityIcons.PatchPixelCardStacks(ref GBC.PixelCardAbilityIcons, List<DiskCardGame.Ability>, DiskCardGame.PlayableCard)
  fullName.vb: InscryptionCommunityPatch.Card.StackAbilityIcons.PatchPixelCardStacks(ByRef GBC.PixelCardAbilityIcons, List(Of DiskCardGame.Ability), DiskCardGame.PlayableCard)
  nameWithType: StackAbilityIcons.PatchPixelCardStacks(ref PixelCardAbilityIcons, List<Ability>, PlayableCard)
  nameWithType.vb: StackAbilityIcons.PatchPixelCardStacks(ByRef PixelCardAbilityIcons, List(Of Ability), PlayableCard)
- uid: InscryptionCommunityPatch.Card.StackAbilityIcons.PatchPixelCardStacks*
  name: PatchPixelCardStacks
  href: api/InscryptionCommunityPatch.Card.StackAbilityIcons.html#InscryptionCommunityPatch_Card_StackAbilityIcons_PatchPixelCardStacks_
  commentId: Overload:InscryptionCommunityPatch.Card.StackAbilityIcons.PatchPixelCardStacks
  isSpec: "True"
  fullName: InscryptionCommunityPatch.Card.StackAbilityIcons.PatchPixelCardStacks
  nameWithType: StackAbilityIcons.PatchPixelCardStacks
- uid: InscryptionCommunityPatch.Card.StackAbilityIcons.StackDescription(System.String)
  name: StackDescription(String)
  href: api/InscryptionCommunityPatch.Card.StackAbilityIcons.html#InscryptionCommunityPatch_Card_StackAbilityIcons_StackDescription_System_String_
  commentId: M:InscryptionCommunityPatch.Card.StackAbilityIcons.StackDescription(System.String)
  fullName: InscryptionCommunityPatch.Card.StackAbilityIcons.StackDescription(System.String)
  nameWithType: StackAbilityIcons.StackDescription(String)
- uid: InscryptionCommunityPatch.Card.StackAbilityIcons.StackDescription*
  name: StackDescription
  href: api/InscryptionCommunityPatch.Card.StackAbilityIcons.html#InscryptionCommunityPatch_Card_StackAbilityIcons_StackDescription_
  commentId: Overload:InscryptionCommunityPatch.Card.StackAbilityIcons.StackDescription
  isSpec: "True"
  fullName: InscryptionCommunityPatch.Card.StackAbilityIcons.StackDescription
  nameWithType: StackAbilityIcons.StackDescription
- uid: InscryptionCommunityPatch.PatchPlugin
  name: PatchPlugin
  href: api/InscryptionCommunityPatch.PatchPlugin.html
  commentId: T:InscryptionCommunityPatch.PatchPlugin
  fullName: InscryptionCommunityPatch.PatchPlugin
  nameWithType: PatchPlugin
- uid: InscryptionCommunityPatch.PatchPlugin.Awake
  name: Awake()
  href: api/InscryptionCommunityPatch.PatchPlugin.html#InscryptionCommunityPatch_PatchPlugin_Awake
  commentId: M:InscryptionCommunityPatch.PatchPlugin.Awake
  fullName: InscryptionCommunityPatch.PatchPlugin.Awake()
  nameWithType: PatchPlugin.Awake()
- uid: InscryptionCommunityPatch.PatchPlugin.Awake*
  name: Awake
  href: api/InscryptionCommunityPatch.PatchPlugin.html#InscryptionCommunityPatch_PatchPlugin_Awake_
  commentId: Overload:InscryptionCommunityPatch.PatchPlugin.Awake
  isSpec: "True"
  fullName: InscryptionCommunityPatch.PatchPlugin.Awake
  nameWithType: PatchPlugin.Awake
- uid: InscryptionCommunityPatch.PatchPlugin.ModGUID
  name: ModGUID
  href: api/InscryptionCommunityPatch.PatchPlugin.html#InscryptionCommunityPatch_PatchPlugin_ModGUID
  commentId: F:InscryptionCommunityPatch.PatchPlugin.ModGUID
  fullName: InscryptionCommunityPatch.PatchPlugin.ModGUID
  nameWithType: PatchPlugin.ModGUID
- uid: InscryptionCommunityPatch.PatchPlugin.ModName
  name: ModName
  href: api/InscryptionCommunityPatch.PatchPlugin.html#InscryptionCommunityPatch_PatchPlugin_ModName
  commentId: F:InscryptionCommunityPatch.PatchPlugin.ModName
  fullName: InscryptionCommunityPatch.PatchPlugin.ModName
  nameWithType: PatchPlugin.ModName
- uid: InscryptionCommunityPatch.PatchPlugin.ModVer
  name: ModVer
  href: api/InscryptionCommunityPatch.PatchPlugin.html#InscryptionCommunityPatch_PatchPlugin_ModVer
  commentId: F:InscryptionCommunityPatch.PatchPlugin.ModVer
  fullName: InscryptionCommunityPatch.PatchPlugin.ModVer
  nameWithType: PatchPlugin.ModVer
- uid: InscryptionCommunityPatch.PatchPlugin.OnDisable
  name: OnDisable()
  href: api/InscryptionCommunityPatch.PatchPlugin.html#InscryptionCommunityPatch_PatchPlugin_OnDisable
  commentId: M:InscryptionCommunityPatch.PatchPlugin.OnDisable
  fullName: InscryptionCommunityPatch.PatchPlugin.OnDisable()
  nameWithType: PatchPlugin.OnDisable()
- uid: InscryptionCommunityPatch.PatchPlugin.OnDisable*
  name: OnDisable
  href: api/InscryptionCommunityPatch.PatchPlugin.html#InscryptionCommunityPatch_PatchPlugin_OnDisable_
  commentId: Overload:InscryptionCommunityPatch.PatchPlugin.OnDisable
  isSpec: "True"
  fullName: InscryptionCommunityPatch.PatchPlugin.OnDisable
  nameWithType: PatchPlugin.OnDisable
- uid: InscryptionCommunityPatch.PatchPlugin.OnEnable
  name: OnEnable()
  href: api/InscryptionCommunityPatch.PatchPlugin.html#InscryptionCommunityPatch_PatchPlugin_OnEnable
  commentId: M:InscryptionCommunityPatch.PatchPlugin.OnEnable
  fullName: InscryptionCommunityPatch.PatchPlugin.OnEnable()
  nameWithType: PatchPlugin.OnEnable()
- uid: InscryptionCommunityPatch.PatchPlugin.OnEnable*
  name: OnEnable
  href: api/InscryptionCommunityPatch.PatchPlugin.html#InscryptionCommunityPatch_PatchPlugin_OnEnable_
  commentId: Overload:InscryptionCommunityPatch.PatchPlugin.OnEnable
  isSpec: "True"
  fullName: InscryptionCommunityPatch.PatchPlugin.OnEnable
  nameWithType: PatchPlugin.OnEnable
- uid: InscryptionCommunityPatch.PatchPlugin.OnSceneLoaded(UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.LoadSceneMode)
  name: OnSceneLoaded(Scene, LoadSceneMode)
  href: api/InscryptionCommunityPatch.PatchPlugin.html#InscryptionCommunityPatch_PatchPlugin_OnSceneLoaded_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_LoadSceneMode_
  commentId: M:InscryptionCommunityPatch.PatchPlugin.OnSceneLoaded(UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.LoadSceneMode)
  fullName: InscryptionCommunityPatch.PatchPlugin.OnSceneLoaded(UnityEngine.SceneManagement.Scene, UnityEngine.SceneManagement.LoadSceneMode)
  nameWithType: PatchPlugin.OnSceneLoaded(Scene, LoadSceneMode)
- uid: InscryptionCommunityPatch.PatchPlugin.OnSceneLoaded*
  name: OnSceneLoaded
  href: api/InscryptionCommunityPatch.PatchPlugin.html#InscryptionCommunityPatch_PatchPlugin_OnSceneLoaded_
  commentId: Overload:InscryptionCommunityPatch.PatchPlugin.OnSceneLoaded
  isSpec: "True"
  fullName: InscryptionCommunityPatch.PatchPlugin.OnSceneLoaded
  nameWithType: PatchPlugin.OnSceneLoaded
- uid: InscryptionCommunityPatch.ResourceManagers
  name: InscryptionCommunityPatch.ResourceManagers
  href: api/InscryptionCommunityPatch.ResourceManagers.html
  commentId: N:InscryptionCommunityPatch.ResourceManagers
  fullName: InscryptionCommunityPatch.ResourceManagers
  nameWithType: InscryptionCommunityPatch.ResourceManagers
- uid: InscryptionCommunityPatch.ResourceManagers.ActOneConduitManager
  name: ActOneConduitManager
  href: api/InscryptionCommunityPatch.ResourceManagers.ActOneConduitManager.html
  commentId: T:InscryptionCommunityPatch.ResourceManagers.ActOneConduitManager
  fullName: InscryptionCommunityPatch.ResourceManagers.ActOneConduitManager
  nameWithType: ActOneConduitManager
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone
  name: EnergyDrone
  href: api/InscryptionCommunityPatch.ResourceManagers.EnergyDrone.html
  commentId: T:InscryptionCommunityPatch.ResourceManagers.EnergyDrone
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone
  nameWithType: EnergyDrone
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.CurrentSceneCanHaveEnergyDrone
  name: CurrentSceneCanHaveEnergyDrone
  href: api/InscryptionCommunityPatch.ResourceManagers.EnergyDrone.html#InscryptionCommunityPatch_ResourceManagers_EnergyDrone_CurrentSceneCanHaveEnergyDrone
  commentId: P:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.CurrentSceneCanHaveEnergyDrone
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.CurrentSceneCanHaveEnergyDrone
  nameWithType: EnergyDrone.CurrentSceneCanHaveEnergyDrone
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.CurrentSceneCanHaveEnergyDrone*
  name: CurrentSceneCanHaveEnergyDrone
  href: api/InscryptionCommunityPatch.ResourceManagers.EnergyDrone.html#InscryptionCommunityPatch_ResourceManagers_EnergyDrone_CurrentSceneCanHaveEnergyDrone_
  commentId: Overload:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.CurrentSceneCanHaveEnergyDrone
  isSpec: "True"
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.CurrentSceneCanHaveEnergyDrone
  nameWithType: EnergyDrone.CurrentSceneCanHaveEnergyDrone
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.EnergyConfigInfo
  name: EnergyDrone.EnergyConfigInfo
  href: api/InscryptionCommunityPatch.ResourceManagers.EnergyDrone.EnergyConfigInfo.html
  commentId: T:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.EnergyConfigInfo
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.EnergyConfigInfo
  nameWithType: EnergyDrone.EnergyConfigInfo
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.EnergyConfigInfo.ConfigDrone
  name: ConfigDrone
  href: api/InscryptionCommunityPatch.ResourceManagers.EnergyDrone.EnergyConfigInfo.html#InscryptionCommunityPatch_ResourceManagers_EnergyDrone_EnergyConfigInfo_ConfigDrone
  commentId: P:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.EnergyConfigInfo.ConfigDrone
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.EnergyConfigInfo.ConfigDrone
  nameWithType: EnergyDrone.EnergyConfigInfo.ConfigDrone
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.EnergyConfigInfo.ConfigDrone*
  name: ConfigDrone
  href: api/InscryptionCommunityPatch.ResourceManagers.EnergyDrone.EnergyConfigInfo.html#InscryptionCommunityPatch_ResourceManagers_EnergyDrone_EnergyConfigInfo_ConfigDrone_
  commentId: Overload:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.EnergyConfigInfo.ConfigDrone
  isSpec: "True"
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.EnergyConfigInfo.ConfigDrone
  nameWithType: EnergyDrone.EnergyConfigInfo.ConfigDrone
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.EnergyConfigInfo.ConfigDroneMox
  name: ConfigDroneMox
  href: api/InscryptionCommunityPatch.ResourceManagers.EnergyDrone.EnergyConfigInfo.html#InscryptionCommunityPatch_ResourceManagers_EnergyDrone_EnergyConfigInfo_ConfigDroneMox
  commentId: P:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.EnergyConfigInfo.ConfigDroneMox
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.EnergyConfigInfo.ConfigDroneMox
  nameWithType: EnergyDrone.EnergyConfigInfo.ConfigDroneMox
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.EnergyConfigInfo.ConfigDroneMox*
  name: ConfigDroneMox
  href: api/InscryptionCommunityPatch.ResourceManagers.EnergyDrone.EnergyConfigInfo.html#InscryptionCommunityPatch_ResourceManagers_EnergyDrone_EnergyConfigInfo_ConfigDroneMox_
  commentId: Overload:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.EnergyConfigInfo.ConfigDroneMox
  isSpec: "True"
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.EnergyConfigInfo.ConfigDroneMox
  nameWithType: EnergyDrone.EnergyConfigInfo.ConfigDroneMox
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.EnergyConfigInfo.ConfigEnergy
  name: ConfigEnergy
  href: api/InscryptionCommunityPatch.ResourceManagers.EnergyDrone.EnergyConfigInfo.html#InscryptionCommunityPatch_ResourceManagers_EnergyDrone_EnergyConfigInfo_ConfigEnergy
  commentId: P:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.EnergyConfigInfo.ConfigEnergy
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.EnergyConfigInfo.ConfigEnergy
  nameWithType: EnergyDrone.EnergyConfigInfo.ConfigEnergy
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.EnergyConfigInfo.ConfigEnergy*
  name: ConfigEnergy
  href: api/InscryptionCommunityPatch.ResourceManagers.EnergyDrone.EnergyConfigInfo.html#InscryptionCommunityPatch_ResourceManagers_EnergyDrone_EnergyConfigInfo_ConfigEnergy_
  commentId: Overload:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.EnergyConfigInfo.ConfigEnergy
  isSpec: "True"
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.EnergyConfigInfo.ConfigEnergy
  nameWithType: EnergyDrone.EnergyConfigInfo.ConfigEnergy
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.EnergyConfigInfo.ConfigMox
  name: ConfigMox
  href: api/InscryptionCommunityPatch.ResourceManagers.EnergyDrone.EnergyConfigInfo.html#InscryptionCommunityPatch_ResourceManagers_EnergyDrone_EnergyConfigInfo_ConfigMox
  commentId: P:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.EnergyConfigInfo.ConfigMox
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.EnergyConfigInfo.ConfigMox
  nameWithType: EnergyDrone.EnergyConfigInfo.ConfigMox
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.EnergyConfigInfo.ConfigMox*
  name: ConfigMox
  href: api/InscryptionCommunityPatch.ResourceManagers.EnergyDrone.EnergyConfigInfo.html#InscryptionCommunityPatch_ResourceManagers_EnergyDrone_EnergyConfigInfo_ConfigMox_
  commentId: Overload:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.EnergyConfigInfo.ConfigMox
  isSpec: "True"
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.EnergyConfigInfo.ConfigMox
  nameWithType: EnergyDrone.EnergyConfigInfo.ConfigMox
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.Part1ResourcesManager_CleanUp(DiskCardGame.Part1ResourcesManager)
  name: Part1ResourcesManager_CleanUp(Part1ResourcesManager)
  href: api/InscryptionCommunityPatch.ResourceManagers.EnergyDrone.html#InscryptionCommunityPatch_ResourceManagers_EnergyDrone_Part1ResourcesManager_CleanUp_DiskCardGame_Part1ResourcesManager_
  commentId: M:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.Part1ResourcesManager_CleanUp(DiskCardGame.Part1ResourcesManager)
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.Part1ResourcesManager_CleanUp(DiskCardGame.Part1ResourcesManager)
  nameWithType: EnergyDrone.Part1ResourcesManager_CleanUp(Part1ResourcesManager)
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.Part1ResourcesManager_CleanUp*
  name: Part1ResourcesManager_CleanUp
  href: api/InscryptionCommunityPatch.ResourceManagers.EnergyDrone.html#InscryptionCommunityPatch_ResourceManagers_EnergyDrone_Part1ResourcesManager_CleanUp_
  commentId: Overload:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.Part1ResourcesManager_CleanUp
  isSpec: "True"
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.Part1ResourcesManager_CleanUp
  nameWithType: EnergyDrone.Part1ResourcesManager_CleanUp
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.PoolHasEnergy
  name: PoolHasEnergy
  href: api/InscryptionCommunityPatch.ResourceManagers.EnergyDrone.html#InscryptionCommunityPatch_ResourceManagers_EnergyDrone_PoolHasEnergy
  commentId: P:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.PoolHasEnergy
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.PoolHasEnergy
  nameWithType: EnergyDrone.PoolHasEnergy
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.PoolHasEnergy*
  name: PoolHasEnergy
  href: api/InscryptionCommunityPatch.ResourceManagers.EnergyDrone.html#InscryptionCommunityPatch_ResourceManagers_EnergyDrone_PoolHasEnergy_
  commentId: Overload:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.PoolHasEnergy
  isSpec: "True"
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.PoolHasEnergy
  nameWithType: EnergyDrone.PoolHasEnergy
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.PoolHasGems
  name: PoolHasGems
  href: api/InscryptionCommunityPatch.ResourceManagers.EnergyDrone.html#InscryptionCommunityPatch_ResourceManagers_EnergyDrone_PoolHasGems
  commentId: P:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.PoolHasGems
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.PoolHasGems
  nameWithType: EnergyDrone.PoolHasGems
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.PoolHasGems*
  name: PoolHasGems
  href: api/InscryptionCommunityPatch.ResourceManagers.EnergyDrone.html#InscryptionCommunityPatch_ResourceManagers_EnergyDrone_PoolHasGems_
  commentId: Overload:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.PoolHasGems
  isSpec: "True"
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.PoolHasGems
  nameWithType: EnergyDrone.PoolHasGems
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourceDrone_SetOnBoard(DiskCardGame.ResourceDrone,System.Boolean)
  name: ResourceDrone_SetOnBoard(ResourceDrone, Boolean)
  href: api/InscryptionCommunityPatch.ResourceManagers.EnergyDrone.html#InscryptionCommunityPatch_ResourceManagers_EnergyDrone_ResourceDrone_SetOnBoard_DiskCardGame_ResourceDrone_System_Boolean_
  commentId: M:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourceDrone_SetOnBoard(DiskCardGame.ResourceDrone,System.Boolean)
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourceDrone_SetOnBoard(DiskCardGame.ResourceDrone, System.Boolean)
  nameWithType: EnergyDrone.ResourceDrone_SetOnBoard(ResourceDrone, Boolean)
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourceDrone_SetOnBoard*
  name: ResourceDrone_SetOnBoard
  href: api/InscryptionCommunityPatch.ResourceManagers.EnergyDrone.html#InscryptionCommunityPatch_ResourceManagers_EnergyDrone_ResourceDrone_SetOnBoard_
  commentId: Overload:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourceDrone_SetOnBoard
  isSpec: "True"
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourceDrone_SetOnBoard
  nameWithType: EnergyDrone.ResourceDrone_SetOnBoard
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_SetGemOnImmediate(DiskCardGame.GemType,System.Boolean,DiskCardGame.ResourcesManager)
  name: ResourcesManager_SetGemOnImmediate(GemType, Boolean, ResourcesManager)
  href: api/InscryptionCommunityPatch.ResourceManagers.EnergyDrone.html#InscryptionCommunityPatch_ResourceManagers_EnergyDrone_ResourcesManager_SetGemOnImmediate_DiskCardGame_GemType_System_Boolean_DiskCardGame_ResourcesManager_
  commentId: M:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_SetGemOnImmediate(DiskCardGame.GemType,System.Boolean,DiskCardGame.ResourcesManager)
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_SetGemOnImmediate(DiskCardGame.GemType, System.Boolean, DiskCardGame.ResourcesManager)
  nameWithType: EnergyDrone.ResourcesManager_SetGemOnImmediate(GemType, Boolean, ResourcesManager)
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_SetGemOnImmediate*
  name: ResourcesManager_SetGemOnImmediate
  href: api/InscryptionCommunityPatch.ResourceManagers.EnergyDrone.html#InscryptionCommunityPatch_ResourceManagers_EnergyDrone_ResourcesManager_SetGemOnImmediate_
  commentId: Overload:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_SetGemOnImmediate
  isSpec: "True"
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_SetGemOnImmediate
  nameWithType: EnergyDrone.ResourcesManager_SetGemOnImmediate
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_Setup(DiskCardGame.ResourcesManager)
  name: ResourcesManager_Setup(ResourcesManager)
  href: api/InscryptionCommunityPatch.ResourceManagers.EnergyDrone.html#InscryptionCommunityPatch_ResourceManagers_EnergyDrone_ResourcesManager_Setup_DiskCardGame_ResourcesManager_
  commentId: M:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_Setup(DiskCardGame.ResourcesManager)
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_Setup(DiskCardGame.ResourcesManager)
  nameWithType: EnergyDrone.ResourcesManager_Setup(ResourcesManager)
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_Setup*
  name: ResourcesManager_Setup
  href: api/InscryptionCommunityPatch.ResourceManagers.EnergyDrone.html#InscryptionCommunityPatch_ResourceManagers_EnergyDrone_ResourcesManager_Setup_
  commentId: Overload:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_Setup
  isSpec: "True"
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_Setup
  nameWithType: EnergyDrone.ResourcesManager_Setup
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowAddEnergy(System.Collections.IEnumerator,System.Int32,DiskCardGame.ResourcesManager)
  name: ResourcesManager_ShowAddEnergy(IEnumerator, Int32, ResourcesManager)
  href: api/InscryptionCommunityPatch.ResourceManagers.EnergyDrone.html#InscryptionCommunityPatch_ResourceManagers_EnergyDrone_ResourcesManager_ShowAddEnergy_System_Collections_IEnumerator_System_Int32_DiskCardGame_ResourcesManager_
  commentId: M:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowAddEnergy(System.Collections.IEnumerator,System.Int32,DiskCardGame.ResourcesManager)
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowAddEnergy(System.Collections.IEnumerator, System.Int32, DiskCardGame.ResourcesManager)
  nameWithType: EnergyDrone.ResourcesManager_ShowAddEnergy(IEnumerator, Int32, ResourcesManager)
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowAddEnergy*
  name: ResourcesManager_ShowAddEnergy
  href: api/InscryptionCommunityPatch.ResourceManagers.EnergyDrone.html#InscryptionCommunityPatch_ResourceManagers_EnergyDrone_ResourcesManager_ShowAddEnergy_
  commentId: Overload:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowAddEnergy
  isSpec: "True"
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowAddEnergy
  nameWithType: EnergyDrone.ResourcesManager_ShowAddEnergy
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowAddGem(System.Collections.IEnumerator,DiskCardGame.GemType,DiskCardGame.ResourcesManager)
  name: ResourcesManager_ShowAddGem(IEnumerator, GemType, ResourcesManager)
  href: api/InscryptionCommunityPatch.ResourceManagers.EnergyDrone.html#InscryptionCommunityPatch_ResourceManagers_EnergyDrone_ResourcesManager_ShowAddGem_System_Collections_IEnumerator_DiskCardGame_GemType_DiskCardGame_ResourcesManager_
  commentId: M:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowAddGem(System.Collections.IEnumerator,DiskCardGame.GemType,DiskCardGame.ResourcesManager)
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowAddGem(System.Collections.IEnumerator, DiskCardGame.GemType, DiskCardGame.ResourcesManager)
  nameWithType: EnergyDrone.ResourcesManager_ShowAddGem(IEnumerator, GemType, ResourcesManager)
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowAddGem*
  name: ResourcesManager_ShowAddGem
  href: api/InscryptionCommunityPatch.ResourceManagers.EnergyDrone.html#InscryptionCommunityPatch_ResourceManagers_EnergyDrone_ResourcesManager_ShowAddGem_
  commentId: Overload:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowAddGem
  isSpec: "True"
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowAddGem
  nameWithType: EnergyDrone.ResourcesManager_ShowAddGem
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowAddMaxEnergy(System.Collections.IEnumerator,DiskCardGame.ResourcesManager)
  name: ResourcesManager_ShowAddMaxEnergy(IEnumerator, ResourcesManager)
  href: api/InscryptionCommunityPatch.ResourceManagers.EnergyDrone.html#InscryptionCommunityPatch_ResourceManagers_EnergyDrone_ResourcesManager_ShowAddMaxEnergy_System_Collections_IEnumerator_DiskCardGame_ResourcesManager_
  commentId: M:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowAddMaxEnergy(System.Collections.IEnumerator,DiskCardGame.ResourcesManager)
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowAddMaxEnergy(System.Collections.IEnumerator, DiskCardGame.ResourcesManager)
  nameWithType: EnergyDrone.ResourcesManager_ShowAddMaxEnergy(IEnumerator, ResourcesManager)
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowAddMaxEnergy*
  name: ResourcesManager_ShowAddMaxEnergy
  href: api/InscryptionCommunityPatch.ResourceManagers.EnergyDrone.html#InscryptionCommunityPatch_ResourceManagers_EnergyDrone_ResourcesManager_ShowAddMaxEnergy_
  commentId: Overload:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowAddMaxEnergy
  isSpec: "True"
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowAddMaxEnergy
  nameWithType: EnergyDrone.ResourcesManager_ShowAddMaxEnergy
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowLoseGem(System.Collections.IEnumerator,DiskCardGame.GemType,DiskCardGame.ResourcesManager)
  name: ResourcesManager_ShowLoseGem(IEnumerator, GemType, ResourcesManager)
  href: api/InscryptionCommunityPatch.ResourceManagers.EnergyDrone.html#InscryptionCommunityPatch_ResourceManagers_EnergyDrone_ResourcesManager_ShowLoseGem_System_Collections_IEnumerator_DiskCardGame_GemType_DiskCardGame_ResourcesManager_
  commentId: M:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowLoseGem(System.Collections.IEnumerator,DiskCardGame.GemType,DiskCardGame.ResourcesManager)
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowLoseGem(System.Collections.IEnumerator, DiskCardGame.GemType, DiskCardGame.ResourcesManager)
  nameWithType: EnergyDrone.ResourcesManager_ShowLoseGem(IEnumerator, GemType, ResourcesManager)
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowLoseGem*
  name: ResourcesManager_ShowLoseGem
  href: api/InscryptionCommunityPatch.ResourceManagers.EnergyDrone.html#InscryptionCommunityPatch_ResourceManagers_EnergyDrone_ResourcesManager_ShowLoseGem_
  commentId: Overload:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowLoseGem
  isSpec: "True"
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowLoseGem
  nameWithType: EnergyDrone.ResourcesManager_ShowLoseGem
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowSpendEnergy(System.Collections.IEnumerator,System.Int32,DiskCardGame.ResourcesManager)
  name: ResourcesManager_ShowSpendEnergy(IEnumerator, Int32, ResourcesManager)
  href: api/InscryptionCommunityPatch.ResourceManagers.EnergyDrone.html#InscryptionCommunityPatch_ResourceManagers_EnergyDrone_ResourcesManager_ShowSpendEnergy_System_Collections_IEnumerator_System_Int32_DiskCardGame_ResourcesManager_
  commentId: M:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowSpendEnergy(System.Collections.IEnumerator,System.Int32,DiskCardGame.ResourcesManager)
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowSpendEnergy(System.Collections.IEnumerator, System.Int32, DiskCardGame.ResourcesManager)
  nameWithType: EnergyDrone.ResourcesManager_ShowSpendEnergy(IEnumerator, Int32, ResourcesManager)
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowSpendEnergy*
  name: ResourcesManager_ShowSpendEnergy
  href: api/InscryptionCommunityPatch.ResourceManagers.EnergyDrone.html#InscryptionCommunityPatch_ResourceManagers_EnergyDrone_ResourcesManager_ShowSpendEnergy_
  commentId: Overload:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowSpendEnergy
  isSpec: "True"
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowSpendEnergy
  nameWithType: EnergyDrone.ResourcesManager_ShowSpendEnergy
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.SceneCanHaveEnergyDrone(System.String)
  name: SceneCanHaveEnergyDrone(String)
  href: api/InscryptionCommunityPatch.ResourceManagers.EnergyDrone.html#InscryptionCommunityPatch_ResourceManagers_EnergyDrone_SceneCanHaveEnergyDrone_System_String_
  commentId: M:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.SceneCanHaveEnergyDrone(System.String)
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.SceneCanHaveEnergyDrone(System.String)
  nameWithType: EnergyDrone.SceneCanHaveEnergyDrone(String)
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.SceneCanHaveEnergyDrone*
  name: SceneCanHaveEnergyDrone
  href: api/InscryptionCommunityPatch.ResourceManagers.EnergyDrone.html#InscryptionCommunityPatch_ResourceManagers_EnergyDrone_SceneCanHaveEnergyDrone_
  commentId: Overload:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.SceneCanHaveEnergyDrone
  isSpec: "True"
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.SceneCanHaveEnergyDrone
  nameWithType: EnergyDrone.SceneCanHaveEnergyDrone
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.TurnManager_UpkeepPhase(System.Collections.IEnumerator,System.Boolean)
  name: TurnManager_UpkeepPhase(IEnumerator, Boolean)
  href: api/InscryptionCommunityPatch.ResourceManagers.EnergyDrone.html#InscryptionCommunityPatch_ResourceManagers_EnergyDrone_TurnManager_UpkeepPhase_System_Collections_IEnumerator_System_Boolean_
  commentId: M:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.TurnManager_UpkeepPhase(System.Collections.IEnumerator,System.Boolean)
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.TurnManager_UpkeepPhase(System.Collections.IEnumerator, System.Boolean)
  nameWithType: EnergyDrone.TurnManager_UpkeepPhase(IEnumerator, Boolean)
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.TurnManager_UpkeepPhase*
  name: TurnManager_UpkeepPhase
  href: api/InscryptionCommunityPatch.ResourceManagers.EnergyDrone.html#InscryptionCommunityPatch_ResourceManagers_EnergyDrone_TurnManager_UpkeepPhase_
  commentId: Overload:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.TurnManager_UpkeepPhase
  isSpec: "True"
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.TurnManager_UpkeepPhase
  nameWithType: EnergyDrone.TurnManager_UpkeepPhase
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ZoneConfigs
  name: ZoneConfigs
  href: api/InscryptionCommunityPatch.ResourceManagers.EnergyDrone.html#InscryptionCommunityPatch_ResourceManagers_EnergyDrone_ZoneConfigs
  commentId: F:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ZoneConfigs
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ZoneConfigs
  nameWithType: EnergyDrone.ZoneConfigs
- uid: InscryptionCommunityPatch.Tests
  name: InscryptionCommunityPatch.Tests
  href: api/InscryptionCommunityPatch.Tests.html
  commentId: N:InscryptionCommunityPatch.Tests
  fullName: InscryptionCommunityPatch.Tests
  nameWithType: InscryptionCommunityPatch.Tests
- uid: InscryptionCommunityPatch.Tests.ExecuteCommunityPatchTests
  name: ExecuteCommunityPatchTests
  href: api/InscryptionCommunityPatch.Tests.ExecuteCommunityPatchTests.html
  commentId: T:InscryptionCommunityPatch.Tests.ExecuteCommunityPatchTests
  fullName: InscryptionCommunityPatch.Tests.ExecuteCommunityPatchTests
  nameWithType: ExecuteCommunityPatchTests
- uid: InscryptionCommunityPatch.Tests.ExecuteCommunityPatchTests.PrepareForTests
  name: PrepareForTests()
  href: api/InscryptionCommunityPatch.Tests.ExecuteCommunityPatchTests.html#InscryptionCommunityPatch_Tests_ExecuteCommunityPatchTests_PrepareForTests
  commentId: M:InscryptionCommunityPatch.Tests.ExecuteCommunityPatchTests.PrepareForTests
  fullName: InscryptionCommunityPatch.Tests.ExecuteCommunityPatchTests.PrepareForTests()
  nameWithType: ExecuteCommunityPatchTests.PrepareForTests()
- uid: InscryptionCommunityPatch.Tests.ExecuteCommunityPatchTests.PrepareForTests*
  name: PrepareForTests
  href: api/InscryptionCommunityPatch.Tests.ExecuteCommunityPatchTests.html#InscryptionCommunityPatch_Tests_ExecuteCommunityPatchTests_PrepareForTests_
  commentId: Overload:InscryptionCommunityPatch.Tests.ExecuteCommunityPatchTests.PrepareForTests
  isSpec: "True"
  fullName: InscryptionCommunityPatch.Tests.ExecuteCommunityPatchTests.PrepareForTests
  nameWithType: ExecuteCommunityPatchTests.PrepareForTests
- uid: InscryptionCommunityPatch.Tests.ExecuteCommunityPatchTests.StartRunInTestMode(DiskCardGame.AscensionSaveData@)
  name: StartRunInTestMode(ref AscensionSaveData)
  href: api/InscryptionCommunityPatch.Tests.ExecuteCommunityPatchTests.html#InscryptionCommunityPatch_Tests_ExecuteCommunityPatchTests_StartRunInTestMode_DiskCardGame_AscensionSaveData__
  commentId: M:InscryptionCommunityPatch.Tests.ExecuteCommunityPatchTests.StartRunInTestMode(DiskCardGame.AscensionSaveData@)
  name.vb: StartRunInTestMode(ByRef AscensionSaveData)
  fullName: InscryptionCommunityPatch.Tests.ExecuteCommunityPatchTests.StartRunInTestMode(ref DiskCardGame.AscensionSaveData)
  fullName.vb: InscryptionCommunityPatch.Tests.ExecuteCommunityPatchTests.StartRunInTestMode(ByRef DiskCardGame.AscensionSaveData)
  nameWithType: ExecuteCommunityPatchTests.StartRunInTestMode(ref AscensionSaveData)
  nameWithType.vb: ExecuteCommunityPatchTests.StartRunInTestMode(ByRef AscensionSaveData)
- uid: InscryptionCommunityPatch.Tests.ExecuteCommunityPatchTests.StartRunInTestMode*
  name: StartRunInTestMode
  href: api/InscryptionCommunityPatch.Tests.ExecuteCommunityPatchTests.html#InscryptionCommunityPatch_Tests_ExecuteCommunityPatchTests_StartRunInTestMode_
  commentId: Overload:InscryptionCommunityPatch.Tests.ExecuteCommunityPatchTests.StartRunInTestMode
  isSpec: "True"
  fullName: InscryptionCommunityPatch.Tests.ExecuteCommunityPatchTests.StartRunInTestMode
  nameWithType: ExecuteCommunityPatchTests.StartRunInTestMode
