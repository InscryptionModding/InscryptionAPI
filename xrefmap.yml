### YamlMime:XRefMap
sorted: true
references:
- uid: InscryptionAPI
  name: InscryptionAPI
  href: api/InscryptionAPI.html
  commentId: N:InscryptionAPI
  fullName: InscryptionAPI
  nameWithType: InscryptionAPI
- uid: InscryptionAPI.Ascension
  name: InscryptionAPI.Ascension
  href: api/InscryptionAPI.Ascension.html
  commentId: N:InscryptionAPI.Ascension
  fullName: InscryptionAPI.Ascension
  nameWithType: InscryptionAPI.Ascension
- uid: InscryptionAPI.Ascension.AscensionChallengePaginator
  name: AscensionChallengePaginator
  href: api/InscryptionAPI.Ascension.AscensionChallengePaginator.html
  commentId: T:InscryptionAPI.Ascension.AscensionChallengePaginator
  fullName: InscryptionAPI.Ascension.AscensionChallengePaginator
  nameWithType: AscensionChallengePaginator
- uid: InscryptionAPI.Ascension.AscensionChallengePaginator.bottomRow
  name: bottomRow
  href: api/InscryptionAPI.Ascension.AscensionChallengePaginator.html#InscryptionAPI_Ascension_AscensionChallengePaginator_bottomRow
  commentId: F:InscryptionAPI.Ascension.AscensionChallengePaginator.bottomRow
  fullName: InscryptionAPI.Ascension.AscensionChallengePaginator.bottomRow
  nameWithType: AscensionChallengePaginator.bottomRow
- uid: InscryptionAPI.Ascension.AscensionChallengePaginator.challengePageIndex
  name: challengePageIndex
  href: api/InscryptionAPI.Ascension.AscensionChallengePaginator.html#InscryptionAPI_Ascension_AscensionChallengePaginator_challengePageIndex
  commentId: F:InscryptionAPI.Ascension.AscensionChallengePaginator.challengePageIndex
  fullName: InscryptionAPI.Ascension.AscensionChallengePaginator.challengePageIndex
  nameWithType: AscensionChallengePaginator.challengePageIndex
- uid: InscryptionAPI.Ascension.AscensionChallengePaginator.ChallengePageLeft(DiskCardGame.MainInputInteractable)
  name: ChallengePageLeft(MainInputInteractable)
  href: api/InscryptionAPI.Ascension.AscensionChallengePaginator.html#InscryptionAPI_Ascension_AscensionChallengePaginator_ChallengePageLeft_DiskCardGame_MainInputInteractable_
  commentId: M:InscryptionAPI.Ascension.AscensionChallengePaginator.ChallengePageLeft(DiskCardGame.MainInputInteractable)
  fullName: InscryptionAPI.Ascension.AscensionChallengePaginator.ChallengePageLeft(DiskCardGame.MainInputInteractable)
  nameWithType: AscensionChallengePaginator.ChallengePageLeft(MainInputInteractable)
- uid: InscryptionAPI.Ascension.AscensionChallengePaginator.ChallengePageLeft*
  name: ChallengePageLeft
  href: api/InscryptionAPI.Ascension.AscensionChallengePaginator.html#InscryptionAPI_Ascension_AscensionChallengePaginator_ChallengePageLeft_
  commentId: Overload:InscryptionAPI.Ascension.AscensionChallengePaginator.ChallengePageLeft
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionChallengePaginator.ChallengePageLeft
  nameWithType: AscensionChallengePaginator.ChallengePageLeft
- uid: InscryptionAPI.Ascension.AscensionChallengePaginator.ChallengePageRight(DiskCardGame.MainInputInteractable)
  name: ChallengePageRight(MainInputInteractable)
  href: api/InscryptionAPI.Ascension.AscensionChallengePaginator.html#InscryptionAPI_Ascension_AscensionChallengePaginator_ChallengePageRight_DiskCardGame_MainInputInteractable_
  commentId: M:InscryptionAPI.Ascension.AscensionChallengePaginator.ChallengePageRight(DiskCardGame.MainInputInteractable)
  fullName: InscryptionAPI.Ascension.AscensionChallengePaginator.ChallengePageRight(DiskCardGame.MainInputInteractable)
  nameWithType: AscensionChallengePaginator.ChallengePageRight(MainInputInteractable)
- uid: InscryptionAPI.Ascension.AscensionChallengePaginator.ChallengePageRight*
  name: ChallengePageRight
  href: api/InscryptionAPI.Ascension.AscensionChallengePaginator.html#InscryptionAPI_Ascension_AscensionChallengePaginator_ChallengePageRight_
  commentId: Overload:InscryptionAPI.Ascension.AscensionChallengePaginator.ChallengePageRight
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionChallengePaginator.ChallengePageRight
  nameWithType: AscensionChallengePaginator.ChallengePageRight
- uid: InscryptionAPI.Ascension.AscensionChallengePaginator.CHALLENGES_PER_ROW
  name: CHALLENGES_PER_ROW
  href: api/InscryptionAPI.Ascension.AscensionChallengePaginator.html#InscryptionAPI_Ascension_AscensionChallengePaginator_CHALLENGES_PER_ROW
  commentId: F:InscryptionAPI.Ascension.AscensionChallengePaginator.CHALLENGES_PER_ROW
  fullName: InscryptionAPI.Ascension.AscensionChallengePaginator.CHALLENGES_PER_ROW
  nameWithType: AscensionChallengePaginator.CHALLENGES_PER_ROW
- uid: InscryptionAPI.Ascension.AscensionChallengePaginator.extraIcon
  name: extraIcon
  href: api/InscryptionAPI.Ascension.AscensionChallengePaginator.html#InscryptionAPI_Ascension_AscensionChallengePaginator_extraIcon
  commentId: F:InscryptionAPI.Ascension.AscensionChallengePaginator.extraIcon
  fullName: InscryptionAPI.Ascension.AscensionChallengePaginator.extraIcon
  nameWithType: AscensionChallengePaginator.extraIcon
- uid: InscryptionAPI.Ascension.AscensionChallengePaginator.GeneratePages
  name: GeneratePages()
  href: api/InscryptionAPI.Ascension.AscensionChallengePaginator.html#InscryptionAPI_Ascension_AscensionChallengePaginator_GeneratePages
  commentId: M:InscryptionAPI.Ascension.AscensionChallengePaginator.GeneratePages
  fullName: InscryptionAPI.Ascension.AscensionChallengePaginator.GeneratePages()
  nameWithType: AscensionChallengePaginator.GeneratePages()
- uid: InscryptionAPI.Ascension.AscensionChallengePaginator.GeneratePages*
  name: GeneratePages
  href: api/InscryptionAPI.Ascension.AscensionChallengePaginator.html#InscryptionAPI_Ascension_AscensionChallengePaginator_GeneratePages_
  commentId: Overload:InscryptionAPI.Ascension.AscensionChallengePaginator.GeneratePages
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionChallengePaginator.GeneratePages
  nameWithType: AscensionChallengePaginator.GeneratePages
- uid: InscryptionAPI.Ascension.AscensionChallengePaginator.OnEnable
  name: OnEnable()
  href: api/InscryptionAPI.Ascension.AscensionChallengePaginator.html#InscryptionAPI_Ascension_AscensionChallengePaginator_OnEnable
  commentId: M:InscryptionAPI.Ascension.AscensionChallengePaginator.OnEnable
  fullName: InscryptionAPI.Ascension.AscensionChallengePaginator.OnEnable()
  nameWithType: AscensionChallengePaginator.OnEnable()
- uid: InscryptionAPI.Ascension.AscensionChallengePaginator.OnEnable*
  name: OnEnable
  href: api/InscryptionAPI.Ascension.AscensionChallengePaginator.html#InscryptionAPI_Ascension_AscensionChallengePaginator_OnEnable_
  commentId: Overload:InscryptionAPI.Ascension.AscensionChallengePaginator.OnEnable
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionChallengePaginator.OnEnable
  nameWithType: AscensionChallengePaginator.OnEnable
- uid: InscryptionAPI.Ascension.AscensionChallengePaginator.pages
  name: pages
  href: api/InscryptionAPI.Ascension.AscensionChallengePaginator.html#InscryptionAPI_Ascension_AscensionChallengePaginator_pages
  commentId: F:InscryptionAPI.Ascension.AscensionChallengePaginator.pages
  fullName: InscryptionAPI.Ascension.AscensionChallengePaginator.pages
  nameWithType: AscensionChallengePaginator.pages
- uid: InscryptionAPI.Ascension.AscensionChallengePaginator.showExtraIcon
  name: showExtraIcon
  href: api/InscryptionAPI.Ascension.AscensionChallengePaginator.html#InscryptionAPI_Ascension_AscensionChallengePaginator_showExtraIcon
  commentId: F:InscryptionAPI.Ascension.AscensionChallengePaginator.showExtraIcon
  fullName: InscryptionAPI.Ascension.AscensionChallengePaginator.showExtraIcon
  nameWithType: AscensionChallengePaginator.showExtraIcon
- uid: InscryptionAPI.Ascension.AscensionChallengePaginator.ShowVisibleChallenges
  name: ShowVisibleChallenges()
  href: api/InscryptionAPI.Ascension.AscensionChallengePaginator.html#InscryptionAPI_Ascension_AscensionChallengePaginator_ShowVisibleChallenges
  commentId: M:InscryptionAPI.Ascension.AscensionChallengePaginator.ShowVisibleChallenges
  fullName: InscryptionAPI.Ascension.AscensionChallengePaginator.ShowVisibleChallenges()
  nameWithType: AscensionChallengePaginator.ShowVisibleChallenges()
- uid: InscryptionAPI.Ascension.AscensionChallengePaginator.ShowVisibleChallenges*
  name: ShowVisibleChallenges
  href: api/InscryptionAPI.Ascension.AscensionChallengePaginator.html#InscryptionAPI_Ascension_AscensionChallengePaginator_ShowVisibleChallenges_
  commentId: Overload:InscryptionAPI.Ascension.AscensionChallengePaginator.ShowVisibleChallenges
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionChallengePaginator.ShowVisibleChallenges
  nameWithType: AscensionChallengePaginator.ShowVisibleChallenges
- uid: InscryptionAPI.Ascension.AscensionChallengePaginator.topRow
  name: topRow
  href: api/InscryptionAPI.Ascension.AscensionChallengePaginator.html#InscryptionAPI_Ascension_AscensionChallengePaginator_topRow
  commentId: F:InscryptionAPI.Ascension.AscensionChallengePaginator.topRow
  fullName: InscryptionAPI.Ascension.AscensionChallengePaginator.topRow
  nameWithType: AscensionChallengePaginator.topRow
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase
  name: AscensionRunSetupScreenBase
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html
  commentId: T:InscryptionAPI.Ascension.AscensionRunSetupScreenBase
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase
  nameWithType: AscensionRunSetupScreenBase
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.backButton
  name: backButton
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_backButton
  commentId: F:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.backButton
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.backButton
  nameWithType: AscensionRunSetupScreenBase.backButton
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.BuildPaginators(UnityEngine.Transform,System.Boolean)
  name: BuildPaginators(Transform, Boolean)
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_BuildPaginators_UnityEngine_Transform_System_Boolean_
  commentId: M:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.BuildPaginators(UnityEngine.Transform,System.Boolean)
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.BuildPaginators(UnityEngine.Transform, System.Boolean)
  nameWithType: AscensionRunSetupScreenBase.BuildPaginators(Transform, Boolean)
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.BuildPaginators*
  name: BuildPaginators
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_BuildPaginators_
  commentId: Overload:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.BuildPaginators
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.BuildPaginators
  nameWithType: AscensionRunSetupScreenBase.BuildPaginators
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.BuildScreen(Type,DiskCardGame.AscensionMenuScreens.Screen,DiskCardGame.AscensionMenuScreens.Screen)
  name: BuildScreen(Type, AscensionMenuScreens.Screen, AscensionMenuScreens.Screen)
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_BuildScreen_Type_DiskCardGame_AscensionMenuScreens_Screen_DiskCardGame_AscensionMenuScreens_Screen_
  commentId: M:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.BuildScreen(Type,DiskCardGame.AscensionMenuScreens.Screen,DiskCardGame.AscensionMenuScreens.Screen)
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.BuildScreen(Type, DiskCardGame.AscensionMenuScreens.Screen, DiskCardGame.AscensionMenuScreens.Screen)
  nameWithType: AscensionRunSetupScreenBase.BuildScreen(Type, AscensionMenuScreens.Screen, AscensionMenuScreens.Screen)
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.BuildScreen*
  name: BuildScreen
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_BuildScreen_
  commentId: Overload:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.BuildScreen
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.BuildScreen
  nameWithType: AscensionRunSetupScreenBase.BuildScreen
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.CardClicked(GBC.PixelSelectableCard)
  name: CardClicked(PixelSelectableCard)
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_CardClicked_GBC_PixelSelectableCard_
  commentId: M:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.CardClicked(GBC.PixelSelectableCard)
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.CardClicked(GBC.PixelSelectableCard)
  nameWithType: AscensionRunSetupScreenBase.CardClicked(PixelSelectableCard)
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.CardClicked*
  name: CardClicked
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_CardClicked_
  commentId: Overload:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.CardClicked
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.CardClicked
  nameWithType: AscensionRunSetupScreenBase.CardClicked
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.CardCursorEntered(GBC.PixelSelectableCard)
  name: CardCursorEntered(PixelSelectableCard)
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_CardCursorEntered_GBC_PixelSelectableCard_
  commentId: M:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.CardCursorEntered(GBC.PixelSelectableCard)
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.CardCursorEntered(GBC.PixelSelectableCard)
  nameWithType: AscensionRunSetupScreenBase.CardCursorEntered(PixelSelectableCard)
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.CardCursorEntered*
  name: CardCursorEntered
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_CardCursorEntered_
  commentId: Overload:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.CardCursorEntered
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.CardCursorEntered
  nameWithType: AscensionRunSetupScreenBase.CardCursorEntered
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.cardInfoLines
  name: cardInfoLines
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_cardInfoLines
  commentId: F:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.cardInfoLines
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.cardInfoLines
  nameWithType: AscensionRunSetupScreenBase.cardInfoLines
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.cardPanel
  name: cardPanel
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_cardPanel
  commentId: F:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.cardPanel
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.cardPanel
  nameWithType: AscensionRunSetupScreenBase.cardPanel
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.cards
  name: cards
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_cards
  commentId: F:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.cards
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.cards
  nameWithType: AscensionRunSetupScreenBase.cards
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.CENTER_DASHES
  name: CENTER_DASHES
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_CENTER_DASHES
  commentId: F:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.CENTER_DASHES
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.CENTER_DASHES
  nameWithType: AscensionRunSetupScreenBase.CENTER_DASHES
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.challengeFooterLines
  name: challengeFooterLines
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_challengeFooterLines
  commentId: F:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.challengeFooterLines
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.challengeFooterLines
  nameWithType: AscensionRunSetupScreenBase.challengeFooterLines
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.challengeHeaderDisplay
  name: challengeHeaderDisplay
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_challengeHeaderDisplay
  commentId: F:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.challengeHeaderDisplay
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.challengeHeaderDisplay
  nameWithType: AscensionRunSetupScreenBase.challengeHeaderDisplay
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.ClearCardInfo(System.Boolean)
  name: ClearCardInfo(Boolean)
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_ClearCardInfo_System_Boolean_
  commentId: M:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.ClearCardInfo(System.Boolean)
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.ClearCardInfo(System.Boolean)
  nameWithType: AscensionRunSetupScreenBase.ClearCardInfo(Boolean)
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.ClearCardInfo*
  name: ClearCardInfo
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_ClearCardInfo_
  commentId: Overload:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.ClearCardInfo
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.ClearCardInfo
  nameWithType: AscensionRunSetupScreenBase.ClearCardInfo
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.ClearMessage
  name: ClearMessage()
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_ClearMessage
  commentId: M:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.ClearMessage
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.ClearMessage()
  nameWithType: AscensionRunSetupScreenBase.ClearMessage()
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.ClearMessage*
  name: ClearMessage
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_ClearMessage_
  commentId: Overload:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.ClearMessage
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.ClearMessage
  nameWithType: AscensionRunSetupScreenBase.ClearMessage
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.continueButton
  name: continueButton
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_continueButton
  commentId: F:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.continueButton
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.continueButton
  nameWithType: AscensionRunSetupScreenBase.continueButton
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.DisplayCardInfo(DiskCardGame.CardInfo,System.String,System.String,System.Boolean)
  name: DisplayCardInfo(CardInfo, String, String, Boolean)
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_DisplayCardInfo_DiskCardGame_CardInfo_System_String_System_String_System_Boolean_
  commentId: M:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.DisplayCardInfo(DiskCardGame.CardInfo,System.String,System.String,System.Boolean)
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.DisplayCardInfo(DiskCardGame.CardInfo, System.String, System.String, System.Boolean)
  nameWithType: AscensionRunSetupScreenBase.DisplayCardInfo(CardInfo, String, String, Boolean)
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.DisplayCardInfo*
  name: DisplayCardInfo
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_DisplayCardInfo_
  commentId: Overload:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.DisplayCardInfo
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.DisplayCardInfo
  nameWithType: AscensionRunSetupScreenBase.DisplayCardInfo
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.DisplayChallengeInfo(DiskCardGame.AscensionChallenge,System.Boolean)
  name: DisplayChallengeInfo(AscensionChallenge, Boolean)
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_DisplayChallengeInfo_DiskCardGame_AscensionChallenge_System_Boolean_
  commentId: M:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.DisplayChallengeInfo(DiskCardGame.AscensionChallenge,System.Boolean)
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.DisplayChallengeInfo(DiskCardGame.AscensionChallenge, System.Boolean)
  nameWithType: AscensionRunSetupScreenBase.DisplayChallengeInfo(AscensionChallenge, Boolean)
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.DisplayChallengeInfo(System.String,System.Int32,System.Boolean)
  name: DisplayChallengeInfo(String, Int32, Boolean)
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_DisplayChallengeInfo_System_String_System_Int32_System_Boolean_
  commentId: M:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.DisplayChallengeInfo(System.String,System.Int32,System.Boolean)
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.DisplayChallengeInfo(System.String, System.Int32, System.Boolean)
  nameWithType: AscensionRunSetupScreenBase.DisplayChallengeInfo(String, Int32, Boolean)
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.DisplayChallengeInfo*
  name: DisplayChallengeInfo
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_DisplayChallengeInfo_
  commentId: Overload:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.DisplayChallengeInfo
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.DisplayChallengeInfo
  nameWithType: AscensionRunSetupScreenBase.DisplayChallengeInfo
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.DisplayMessage(System.String)
  name: DisplayMessage(String)
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_DisplayMessage_System_String_
  commentId: M:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.DisplayMessage(System.String)
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.DisplayMessage(System.String)
  nameWithType: AscensionRunSetupScreenBase.DisplayMessage(String)
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.DisplayMessage*
  name: DisplayMessage
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_DisplayMessage_
  commentId: Overload:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.DisplayMessage
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.DisplayMessage
  nameWithType: AscensionRunSetupScreenBase.DisplayMessage
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.FULL_DASHES
  name: FULL_DASHES
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_FULL_DASHES
  commentId: F:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.FULL_DASHES
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.FULL_DASHES
  nameWithType: AscensionRunSetupScreenBase.FULL_DASHES
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.headerText
  name: headerText
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_headerText
  commentId: P:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.headerText
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.headerText
  nameWithType: AscensionRunSetupScreenBase.headerText
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.headerText*
  name: headerText
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_headerText_
  commentId: Overload:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.headerText
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.headerText
  nameWithType: AscensionRunSetupScreenBase.headerText
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.InitializeScreen(UnityEngine.GameObject)
  name: InitializeScreen(GameObject)
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_InitializeScreen_UnityEngine_GameObject_
  commentId: M:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.InitializeScreen(UnityEngine.GameObject)
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.InitializeScreen(UnityEngine.GameObject)
  nameWithType: AscensionRunSetupScreenBase.InitializeScreen(GameObject)
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.InitializeScreen*
  name: InitializeScreen
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_InitializeScreen_
  commentId: Overload:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.InitializeScreen
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.InitializeScreen
  nameWithType: AscensionRunSetupScreenBase.InitializeScreen
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.leftButton
  name: leftButton
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_leftButton
  commentId: F:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.leftButton
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.leftButton
  nameWithType: AscensionRunSetupScreenBase.leftButton
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.LeftButtonClicked(DiskCardGame.MainInputInteractable)
  name: LeftButtonClicked(MainInputInteractable)
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_LeftButtonClicked_DiskCardGame_MainInputInteractable_
  commentId: M:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.LeftButtonClicked(DiskCardGame.MainInputInteractable)
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.LeftButtonClicked(DiskCardGame.MainInputInteractable)
  nameWithType: AscensionRunSetupScreenBase.LeftButtonClicked(MainInputInteractable)
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.LeftButtonClicked*
  name: LeftButtonClicked
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_LeftButtonClicked_
  commentId: Overload:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.LeftButtonClicked
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.LeftButtonClicked
  nameWithType: AscensionRunSetupScreenBase.LeftButtonClicked
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.OnEnable
  name: OnEnable()
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_OnEnable
  commentId: M:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.OnEnable
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.OnEnable()
  nameWithType: AscensionRunSetupScreenBase.OnEnable()
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.OnEnable*
  name: OnEnable
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_OnEnable_
  commentId: Overload:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.OnEnable
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.OnEnable
  nameWithType: AscensionRunSetupScreenBase.OnEnable
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.rightButton
  name: rightButton
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_rightButton
  commentId: F:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.rightButton
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.rightButton
  nameWithType: AscensionRunSetupScreenBase.rightButton
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.RightButtonClicked(DiskCardGame.MainInputInteractable)
  name: RightButtonClicked(MainInputInteractable)
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_RightButtonClicked_DiskCardGame_MainInputInteractable_
  commentId: M:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.RightButtonClicked(DiskCardGame.MainInputInteractable)
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.RightButtonClicked(DiskCardGame.MainInputInteractable)
  nameWithType: AscensionRunSetupScreenBase.RightButtonClicked(MainInputInteractable)
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.RightButtonClicked*
  name: RightButtonClicked
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_RightButtonClicked_
  commentId: Overload:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.RightButtonClicked
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.RightButtonClicked
  nameWithType: AscensionRunSetupScreenBase.RightButtonClicked
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.screenTitle
  name: screenTitle
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_screenTitle
  commentId: F:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.screenTitle
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.screenTitle
  nameWithType: AscensionRunSetupScreenBase.screenTitle
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.secondaryInfoDisplayer
  name: secondaryInfoDisplayer
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_secondaryInfoDisplayer
  commentId: F:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.secondaryInfoDisplayer
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.secondaryInfoDisplayer
  nameWithType: AscensionRunSetupScreenBase.secondaryInfoDisplayer
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.showCardDisplayer
  name: showCardDisplayer
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_showCardDisplayer
  commentId: P:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.showCardDisplayer
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.showCardDisplayer
  nameWithType: AscensionRunSetupScreenBase.showCardDisplayer
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.showCardDisplayer*
  name: showCardDisplayer
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_showCardDisplayer_
  commentId: Overload:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.showCardDisplayer
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.showCardDisplayer
  nameWithType: AscensionRunSetupScreenBase.showCardDisplayer
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.showCardPanel
  name: showCardPanel
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_showCardPanel
  commentId: P:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.showCardPanel
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.showCardPanel
  nameWithType: AscensionRunSetupScreenBase.showCardPanel
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.showCardPanel*
  name: showCardPanel
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_showCardPanel_
  commentId: Overload:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.showCardPanel
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.showCardPanel
  nameWithType: AscensionRunSetupScreenBase.showCardPanel
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.ShowCards(List{DiskCardGame.CardInfo})
  name: ShowCards(List<CardInfo>)
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_ShowCards_List_DiskCardGame_CardInfo__
  commentId: M:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.ShowCards(List{DiskCardGame.CardInfo})
  name.vb: ShowCards(List(Of CardInfo))
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.ShowCards(List<DiskCardGame.CardInfo>)
  fullName.vb: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.ShowCards(List(Of DiskCardGame.CardInfo))
  nameWithType: AscensionRunSetupScreenBase.ShowCards(List<CardInfo>)
  nameWithType.vb: AscensionRunSetupScreenBase.ShowCards(List(Of CardInfo))
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.ShowCards*
  name: ShowCards
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_ShowCards_
  commentId: Overload:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.ShowCards
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.ShowCards
  nameWithType: AscensionRunSetupScreenBase.ShowCards
- uid: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.transitionController
  name: transitionController
  href: api/InscryptionAPI.Ascension.AscensionRunSetupScreenBase.html#InscryptionAPI_Ascension_AscensionRunSetupScreenBase_transitionController
  commentId: F:InscryptionAPI.Ascension.AscensionRunSetupScreenBase.transitionController
  fullName: InscryptionAPI.Ascension.AscensionRunSetupScreenBase.transitionController
  nameWithType: AscensionRunSetupScreenBase.transitionController
- uid: InscryptionAPI.Ascension.AscensionScreenManager
  name: AscensionScreenManager
  href: api/InscryptionAPI.Ascension.AscensionScreenManager.html
  commentId: T:InscryptionAPI.Ascension.AscensionScreenManager
  fullName: InscryptionAPI.Ascension.AscensionScreenManager
  nameWithType: AscensionScreenManager
- uid: InscryptionAPI.Ascension.AscensionScreenManager.InitializeAllScreens
  name: InitializeAllScreens()
  href: api/InscryptionAPI.Ascension.AscensionScreenManager.html#InscryptionAPI_Ascension_AscensionScreenManager_InitializeAllScreens
  commentId: M:InscryptionAPI.Ascension.AscensionScreenManager.InitializeAllScreens
  fullName: InscryptionAPI.Ascension.AscensionScreenManager.InitializeAllScreens()
  nameWithType: AscensionScreenManager.InitializeAllScreens()
- uid: InscryptionAPI.Ascension.AscensionScreenManager.InitializeAllScreens*
  name: InitializeAllScreens
  href: api/InscryptionAPI.Ascension.AscensionScreenManager.html#InscryptionAPI_Ascension_AscensionScreenManager_InitializeAllScreens_
  commentId: Overload:InscryptionAPI.Ascension.AscensionScreenManager.InitializeAllScreens
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionScreenManager.InitializeAllScreens
  nameWithType: AscensionScreenManager.InitializeAllScreens
- uid: InscryptionAPI.Ascension.AscensionScreenManager.RegisterScreen*
  name: RegisterScreen
  href: api/InscryptionAPI.Ascension.AscensionScreenManager.html#InscryptionAPI_Ascension_AscensionScreenManager_RegisterScreen_
  commentId: Overload:InscryptionAPI.Ascension.AscensionScreenManager.RegisterScreen
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionScreenManager.RegisterScreen
  nameWithType: AscensionScreenManager.RegisterScreen
- uid: InscryptionAPI.Ascension.AscensionScreenManager.RegisterScreen``1
  name: RegisterScreen<T>()
  href: api/InscryptionAPI.Ascension.AscensionScreenManager.html#InscryptionAPI_Ascension_AscensionScreenManager_RegisterScreen__1
  commentId: M:InscryptionAPI.Ascension.AscensionScreenManager.RegisterScreen``1
  name.vb: RegisterScreen(Of T)()
  fullName: InscryptionAPI.Ascension.AscensionScreenManager.RegisterScreen<T>()
  fullName.vb: InscryptionAPI.Ascension.AscensionScreenManager.RegisterScreen(Of T)()
  nameWithType: AscensionScreenManager.RegisterScreen<T>()
  nameWithType.vb: AscensionScreenManager.RegisterScreen(Of T)()
- uid: InscryptionAPI.Ascension.AscensionScreenSort
  name: AscensionScreenSort
  href: api/InscryptionAPI.Ascension.AscensionScreenSort.html
  commentId: T:InscryptionAPI.Ascension.AscensionScreenSort
  fullName: InscryptionAPI.Ascension.AscensionScreenSort
  nameWithType: AscensionScreenSort
- uid: InscryptionAPI.Ascension.AscensionScreenSort.#ctor(InscryptionAPI.Ascension.AscensionScreenSort.Direction)
  name: AscensionScreenSort(AscensionScreenSort.Direction)
  href: api/InscryptionAPI.Ascension.AscensionScreenSort.html#InscryptionAPI_Ascension_AscensionScreenSort__ctor_InscryptionAPI_Ascension_AscensionScreenSort_Direction_
  commentId: M:InscryptionAPI.Ascension.AscensionScreenSort.#ctor(InscryptionAPI.Ascension.AscensionScreenSort.Direction)
  fullName: InscryptionAPI.Ascension.AscensionScreenSort.AscensionScreenSort(InscryptionAPI.Ascension.AscensionScreenSort.Direction)
  nameWithType: AscensionScreenSort.AscensionScreenSort(AscensionScreenSort.Direction)
- uid: InscryptionAPI.Ascension.AscensionScreenSort.#ctor*
  name: AscensionScreenSort
  href: api/InscryptionAPI.Ascension.AscensionScreenSort.html#InscryptionAPI_Ascension_AscensionScreenSort__ctor_
  commentId: Overload:InscryptionAPI.Ascension.AscensionScreenSort.#ctor
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.AscensionScreenSort.AscensionScreenSort
  nameWithType: AscensionScreenSort.AscensionScreenSort
- uid: InscryptionAPI.Ascension.AscensionScreenSort.Direction
  name: AscensionScreenSort.Direction
  href: api/InscryptionAPI.Ascension.AscensionScreenSort.Direction.html
  commentId: T:InscryptionAPI.Ascension.AscensionScreenSort.Direction
  fullName: InscryptionAPI.Ascension.AscensionScreenSort.Direction
  nameWithType: AscensionScreenSort.Direction
- uid: InscryptionAPI.Ascension.AscensionScreenSort.Direction.NoPreference
  name: NoPreference
  href: api/InscryptionAPI.Ascension.AscensionScreenSort.Direction.html#InscryptionAPI_Ascension_AscensionScreenSort_Direction_NoPreference
  commentId: F:InscryptionAPI.Ascension.AscensionScreenSort.Direction.NoPreference
  fullName: InscryptionAPI.Ascension.AscensionScreenSort.Direction.NoPreference
  nameWithType: AscensionScreenSort.Direction.NoPreference
- uid: InscryptionAPI.Ascension.AscensionScreenSort.Direction.PrefersEnd
  name: PrefersEnd
  href: api/InscryptionAPI.Ascension.AscensionScreenSort.Direction.html#InscryptionAPI_Ascension_AscensionScreenSort_Direction_PrefersEnd
  commentId: F:InscryptionAPI.Ascension.AscensionScreenSort.Direction.PrefersEnd
  fullName: InscryptionAPI.Ascension.AscensionScreenSort.Direction.PrefersEnd
  nameWithType: AscensionScreenSort.Direction.PrefersEnd
- uid: InscryptionAPI.Ascension.AscensionScreenSort.Direction.PrefersStart
  name: PrefersStart
  href: api/InscryptionAPI.Ascension.AscensionScreenSort.Direction.html#InscryptionAPI_Ascension_AscensionScreenSort_Direction_PrefersStart
  commentId: F:InscryptionAPI.Ascension.AscensionScreenSort.Direction.PrefersStart
  fullName: InscryptionAPI.Ascension.AscensionScreenSort.Direction.PrefersStart
  nameWithType: AscensionScreenSort.Direction.PrefersStart
- uid: InscryptionAPI.Ascension.AscensionScreenSort.Direction.RequiresEnd
  name: RequiresEnd
  href: api/InscryptionAPI.Ascension.AscensionScreenSort.Direction.html#InscryptionAPI_Ascension_AscensionScreenSort_Direction_RequiresEnd
  commentId: F:InscryptionAPI.Ascension.AscensionScreenSort.Direction.RequiresEnd
  fullName: InscryptionAPI.Ascension.AscensionScreenSort.Direction.RequiresEnd
  nameWithType: AscensionScreenSort.Direction.RequiresEnd
- uid: InscryptionAPI.Ascension.AscensionScreenSort.Direction.RequiresStart
  name: RequiresStart
  href: api/InscryptionAPI.Ascension.AscensionScreenSort.Direction.html#InscryptionAPI_Ascension_AscensionScreenSort_Direction_RequiresStart
  commentId: F:InscryptionAPI.Ascension.AscensionScreenSort.Direction.RequiresStart
  fullName: InscryptionAPI.Ascension.AscensionScreenSort.Direction.RequiresStart
  nameWithType: AscensionScreenSort.Direction.RequiresStart
- uid: InscryptionAPI.Ascension.AscensionScreenSort.preferredDirection
  name: preferredDirection
  href: api/InscryptionAPI.Ascension.AscensionScreenSort.html#InscryptionAPI_Ascension_AscensionScreenSort_preferredDirection
  commentId: F:InscryptionAPI.Ascension.AscensionScreenSort.preferredDirection
  fullName: InscryptionAPI.Ascension.AscensionScreenSort.preferredDirection
  nameWithType: AscensionScreenSort.preferredDirection
- uid: InscryptionAPI.Ascension.ChallengeManager
  name: ChallengeManager
  href: api/InscryptionAPI.Ascension.ChallengeManager.html
  commentId: T:InscryptionAPI.Ascension.ChallengeManager
  fullName: InscryptionAPI.Ascension.ChallengeManager
  nameWithType: ChallengeManager
- uid: InscryptionAPI.Ascension.ChallengeManager.Add(System.String,DiskCardGame.AscensionChallengeInfo,System.Int32,System.Boolean)
  name: Add(String, AscensionChallengeInfo, Int32, Boolean)
  href: api/InscryptionAPI.Ascension.ChallengeManager.html#InscryptionAPI_Ascension_ChallengeManager_Add_System_String_DiskCardGame_AscensionChallengeInfo_System_Int32_System_Boolean_
  commentId: M:InscryptionAPI.Ascension.ChallengeManager.Add(System.String,DiskCardGame.AscensionChallengeInfo,System.Int32,System.Boolean)
  fullName: InscryptionAPI.Ascension.ChallengeManager.Add(System.String, DiskCardGame.AscensionChallengeInfo, System.Int32, System.Boolean)
  nameWithType: ChallengeManager.Add(String, AscensionChallengeInfo, Int32, Boolean)
- uid: InscryptionAPI.Ascension.ChallengeManager.Add(System.String,System.String,System.String,System.Int32,UnityEngine.Texture2D,UnityEngine.Texture2D,System.Int32,System.Boolean)
  name: Add(String, String, String, Int32, Texture2D, Texture2D, Int32, Boolean)
  href: api/InscryptionAPI.Ascension.ChallengeManager.html#InscryptionAPI_Ascension_ChallengeManager_Add_System_String_System_String_System_String_System_Int32_UnityEngine_Texture2D_UnityEngine_Texture2D_System_Int32_System_Boolean_
  commentId: M:InscryptionAPI.Ascension.ChallengeManager.Add(System.String,System.String,System.String,System.Int32,UnityEngine.Texture2D,UnityEngine.Texture2D,System.Int32,System.Boolean)
  fullName: InscryptionAPI.Ascension.ChallengeManager.Add(System.String, System.String, System.String, System.Int32, UnityEngine.Texture2D, UnityEngine.Texture2D, System.Int32, System.Boolean)
  nameWithType: ChallengeManager.Add(String, String, String, Int32, Texture2D, Texture2D, Int32, Boolean)
- uid: InscryptionAPI.Ascension.ChallengeManager.Add*
  name: Add
  href: api/InscryptionAPI.Ascension.ChallengeManager.html#InscryptionAPI_Ascension_ChallengeManager_Add_
  commentId: Overload:InscryptionAPI.Ascension.ChallengeManager.Add
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.ChallengeManager.Add
  nameWithType: ChallengeManager.Add
- uid: InscryptionAPI.Ascension.ChallengeManager.AllInfo
  name: AllInfo
  href: api/InscryptionAPI.Ascension.ChallengeManager.html#InscryptionAPI_Ascension_ChallengeManager_AllInfo
  commentId: F:InscryptionAPI.Ascension.ChallengeManager.AllInfo
  fullName: InscryptionAPI.Ascension.ChallengeManager.AllInfo
  nameWithType: ChallengeManager.AllInfo
- uid: InscryptionAPI.Ascension.ChallengeManager.BaseGameChallenges
  name: BaseGameChallenges
  href: api/InscryptionAPI.Ascension.ChallengeManager.html#InscryptionAPI_Ascension_ChallengeManager_BaseGameChallenges
  commentId: F:InscryptionAPI.Ascension.ChallengeManager.BaseGameChallenges
  fullName: InscryptionAPI.Ascension.ChallengeManager.BaseGameChallenges
  nameWithType: ChallengeManager.BaseGameChallenges
- uid: InscryptionAPI.Ascension.ChallengeManager.IsStackable(DiskCardGame.AscensionChallenge)
  name: IsStackable(AscensionChallenge)
  href: api/InscryptionAPI.Ascension.ChallengeManager.html#InscryptionAPI_Ascension_ChallengeManager_IsStackable_DiskCardGame_AscensionChallenge_
  commentId: M:InscryptionAPI.Ascension.ChallengeManager.IsStackable(DiskCardGame.AscensionChallenge)
  fullName: InscryptionAPI.Ascension.ChallengeManager.IsStackable(DiskCardGame.AscensionChallenge)
  nameWithType: ChallengeManager.IsStackable(AscensionChallenge)
- uid: InscryptionAPI.Ascension.ChallengeManager.IsStackable*
  name: IsStackable
  href: api/InscryptionAPI.Ascension.ChallengeManager.html#InscryptionAPI_Ascension_ChallengeManager_IsStackable_
  commentId: Overload:InscryptionAPI.Ascension.ChallengeManager.IsStackable
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.ChallengeManager.IsStackable
  nameWithType: ChallengeManager.IsStackable
- uid: InscryptionAPI.Ascension.ChallengeManager.ModifyChallenges
  name: ModifyChallenges
  href: api/InscryptionAPI.Ascension.ChallengeManager.html#InscryptionAPI_Ascension_ChallengeManager_ModifyChallenges
  commentId: E:InscryptionAPI.Ascension.ChallengeManager.ModifyChallenges
  fullName: InscryptionAPI.Ascension.ChallengeManager.ModifyChallenges
  nameWithType: ChallengeManager.ModifyChallenges
- uid: InscryptionAPI.Ascension.ChallengeManager.SyncChallengeList
  name: SyncChallengeList()
  href: api/InscryptionAPI.Ascension.ChallengeManager.html#InscryptionAPI_Ascension_ChallengeManager_SyncChallengeList
  commentId: M:InscryptionAPI.Ascension.ChallengeManager.SyncChallengeList
  fullName: InscryptionAPI.Ascension.ChallengeManager.SyncChallengeList()
  nameWithType: ChallengeManager.SyncChallengeList()
- uid: InscryptionAPI.Ascension.ChallengeManager.SyncChallengeList*
  name: SyncChallengeList
  href: api/InscryptionAPI.Ascension.ChallengeManager.html#InscryptionAPI_Ascension_ChallengeManager_SyncChallengeList_
  commentId: Overload:InscryptionAPI.Ascension.ChallengeManager.SyncChallengeList
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.ChallengeManager.SyncChallengeList
  nameWithType: ChallengeManager.SyncChallengeList
- uid: InscryptionAPI.Ascension.StarterDeckManager
  name: StarterDeckManager
  href: api/InscryptionAPI.Ascension.StarterDeckManager.html
  commentId: T:InscryptionAPI.Ascension.StarterDeckManager
  fullName: InscryptionAPI.Ascension.StarterDeckManager
  nameWithType: StarterDeckManager
- uid: InscryptionAPI.Ascension.StarterDeckManager.Add(System.String,DiskCardGame.StarterDeckInfo,System.Int32)
  name: Add(String, StarterDeckInfo, Int32)
  href: api/InscryptionAPI.Ascension.StarterDeckManager.html#InscryptionAPI_Ascension_StarterDeckManager_Add_System_String_DiskCardGame_StarterDeckInfo_System_Int32_
  commentId: M:InscryptionAPI.Ascension.StarterDeckManager.Add(System.String,DiskCardGame.StarterDeckInfo,System.Int32)
  fullName: InscryptionAPI.Ascension.StarterDeckManager.Add(System.String, DiskCardGame.StarterDeckInfo, System.Int32)
  nameWithType: StarterDeckManager.Add(String, StarterDeckInfo, Int32)
- uid: InscryptionAPI.Ascension.StarterDeckManager.Add*
  name: Add
  href: api/InscryptionAPI.Ascension.StarterDeckManager.html#InscryptionAPI_Ascension_StarterDeckManager_Add_
  commentId: Overload:InscryptionAPI.Ascension.StarterDeckManager.Add
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.StarterDeckManager.Add
  nameWithType: StarterDeckManager.Add
- uid: InscryptionAPI.Ascension.StarterDeckManager.AllDeckInfos
  name: AllDeckInfos
  href: api/InscryptionAPI.Ascension.StarterDeckManager.html#InscryptionAPI_Ascension_StarterDeckManager_AllDeckInfos
  commentId: F:InscryptionAPI.Ascension.StarterDeckManager.AllDeckInfos
  fullName: InscryptionAPI.Ascension.StarterDeckManager.AllDeckInfos
  nameWithType: StarterDeckManager.AllDeckInfos
- uid: InscryptionAPI.Ascension.StarterDeckManager.AllDecks
  name: AllDecks
  href: api/InscryptionAPI.Ascension.StarterDeckManager.html#InscryptionAPI_Ascension_StarterDeckManager_AllDecks
  commentId: F:InscryptionAPI.Ascension.StarterDeckManager.AllDecks
  fullName: InscryptionAPI.Ascension.StarterDeckManager.AllDecks
  nameWithType: StarterDeckManager.AllDecks
- uid: InscryptionAPI.Ascension.StarterDeckManager.BaseGameDecks
  name: BaseGameDecks
  href: api/InscryptionAPI.Ascension.StarterDeckManager.html#InscryptionAPI_Ascension_StarterDeckManager_BaseGameDecks
  commentId: F:InscryptionAPI.Ascension.StarterDeckManager.BaseGameDecks
  fullName: InscryptionAPI.Ascension.StarterDeckManager.BaseGameDecks
  nameWithType: StarterDeckManager.BaseGameDecks
- uid: InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck
  name: StarterDeckManager.FullStarterDeck
  href: api/InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck.html
  commentId: T:InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck
  fullName: InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck
  nameWithType: StarterDeckManager.FullStarterDeck
- uid: InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck.CardNames
  name: CardNames
  href: api/InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck.html#InscryptionAPI_Ascension_StarterDeckManager_FullStarterDeck_CardNames
  commentId: P:InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck.CardNames
  fullName: InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck.CardNames
  nameWithType: StarterDeckManager.FullStarterDeck.CardNames
- uid: InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck.CardNames*
  name: CardNames
  href: api/InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck.html#InscryptionAPI_Ascension_StarterDeckManager_FullStarterDeck_CardNames_
  commentId: Overload:InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck.CardNames
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck.CardNames
  nameWithType: StarterDeckManager.FullStarterDeck.CardNames
- uid: InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck.Info
  name: Info
  href: api/InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck.html#InscryptionAPI_Ascension_StarterDeckManager_FullStarterDeck_Info
  commentId: P:InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck.Info
  fullName: InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck.Info
  nameWithType: StarterDeckManager.FullStarterDeck.Info
- uid: InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck.Info*
  name: Info
  href: api/InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck.html#InscryptionAPI_Ascension_StarterDeckManager_FullStarterDeck_Info_
  commentId: Overload:InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck.Info
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck.Info
  nameWithType: StarterDeckManager.FullStarterDeck.Info
- uid: InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck.UnlockLevel
  name: UnlockLevel
  href: api/InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck.html#InscryptionAPI_Ascension_StarterDeckManager_FullStarterDeck_UnlockLevel
  commentId: P:InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck.UnlockLevel
  fullName: InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck.UnlockLevel
  nameWithType: StarterDeckManager.FullStarterDeck.UnlockLevel
- uid: InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck.UnlockLevel*
  name: UnlockLevel
  href: api/InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck.html#InscryptionAPI_Ascension_StarterDeckManager_FullStarterDeck_UnlockLevel_
  commentId: Overload:InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck.UnlockLevel
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck.UnlockLevel
  nameWithType: StarterDeckManager.FullStarterDeck.UnlockLevel
- uid: InscryptionAPI.Ascension.StarterDeckManager.ModifyDeckList
  name: ModifyDeckList
  href: api/InscryptionAPI.Ascension.StarterDeckManager.html#InscryptionAPI_Ascension_StarterDeckManager_ModifyDeckList
  commentId: E:InscryptionAPI.Ascension.StarterDeckManager.ModifyDeckList
  fullName: InscryptionAPI.Ascension.StarterDeckManager.ModifyDeckList
  nameWithType: StarterDeckManager.ModifyDeckList
- uid: InscryptionAPI.Ascension.StarterDeckManager.New(System.String,System.String,System.String,System.String[],System.Int32)
  name: New(String, String, String, String[], Int32)
  href: api/InscryptionAPI.Ascension.StarterDeckManager.html#InscryptionAPI_Ascension_StarterDeckManager_New_System_String_System_String_System_String_System_String___System_Int32_
  commentId: M:InscryptionAPI.Ascension.StarterDeckManager.New(System.String,System.String,System.String,System.String[],System.Int32)
  name.vb: New(String, String, String, String(), Int32)
  fullName: InscryptionAPI.Ascension.StarterDeckManager.New(System.String, System.String, System.String, System.String[], System.Int32)
  fullName.vb: InscryptionAPI.Ascension.StarterDeckManager.New(System.String, System.String, System.String, System.String(), System.Int32)
  nameWithType: StarterDeckManager.New(String, String, String, String[], Int32)
  nameWithType.vb: StarterDeckManager.New(String, String, String, String(), Int32)
- uid: InscryptionAPI.Ascension.StarterDeckManager.New(System.String,System.String,UnityEngine.Texture2D,System.String[],System.Int32)
  name: New(String, String, Texture2D, String[], Int32)
  href: api/InscryptionAPI.Ascension.StarterDeckManager.html#InscryptionAPI_Ascension_StarterDeckManager_New_System_String_System_String_UnityEngine_Texture2D_System_String___System_Int32_
  commentId: M:InscryptionAPI.Ascension.StarterDeckManager.New(System.String,System.String,UnityEngine.Texture2D,System.String[],System.Int32)
  name.vb: New(String, String, Texture2D, String(), Int32)
  fullName: InscryptionAPI.Ascension.StarterDeckManager.New(System.String, System.String, UnityEngine.Texture2D, System.String[], System.Int32)
  fullName.vb: InscryptionAPI.Ascension.StarterDeckManager.New(System.String, System.String, UnityEngine.Texture2D, System.String(), System.Int32)
  nameWithType: StarterDeckManager.New(String, String, Texture2D, String[], Int32)
  nameWithType.vb: StarterDeckManager.New(String, String, Texture2D, String(), Int32)
- uid: InscryptionAPI.Ascension.StarterDeckManager.New*
  name: New
  href: api/InscryptionAPI.Ascension.StarterDeckManager.html#InscryptionAPI_Ascension_StarterDeckManager_New_
  commentId: Overload:InscryptionAPI.Ascension.StarterDeckManager.New
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.StarterDeckManager.New
  nameWithType: StarterDeckManager.New
- uid: InscryptionAPI.Ascension.StarterDeckManager.SyncDeckList
  name: SyncDeckList()
  href: api/InscryptionAPI.Ascension.StarterDeckManager.html#InscryptionAPI_Ascension_StarterDeckManager_SyncDeckList
  commentId: M:InscryptionAPI.Ascension.StarterDeckManager.SyncDeckList
  fullName: InscryptionAPI.Ascension.StarterDeckManager.SyncDeckList()
  nameWithType: StarterDeckManager.SyncDeckList()
- uid: InscryptionAPI.Ascension.StarterDeckManager.SyncDeckList*
  name: SyncDeckList
  href: api/InscryptionAPI.Ascension.StarterDeckManager.html#InscryptionAPI_Ascension_StarterDeckManager_SyncDeckList_
  commentId: Overload:InscryptionAPI.Ascension.StarterDeckManager.SyncDeckList
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.StarterDeckManager.SyncDeckList
  nameWithType: StarterDeckManager.SyncDeckList
- uid: InscryptionAPI.Ascension.StarterDeckPaginator
  name: StarterDeckPaginator
  href: api/InscryptionAPI.Ascension.StarterDeckPaginator.html
  commentId: T:InscryptionAPI.Ascension.StarterDeckPaginator
  fullName: InscryptionAPI.Ascension.StarterDeckPaginator
  nameWithType: StarterDeckPaginator
- uid: InscryptionAPI.Ascension.StarterDeckPaginator.AddPage(List{DiskCardGame.StarterDeckInfo})
  name: AddPage(List<StarterDeckInfo>)
  href: api/InscryptionAPI.Ascension.StarterDeckPaginator.html#InscryptionAPI_Ascension_StarterDeckPaginator_AddPage_List_DiskCardGame_StarterDeckInfo__
  commentId: M:InscryptionAPI.Ascension.StarterDeckPaginator.AddPage(List{DiskCardGame.StarterDeckInfo})
  name.vb: AddPage(List(Of StarterDeckInfo))
  fullName: InscryptionAPI.Ascension.StarterDeckPaginator.AddPage(List<DiskCardGame.StarterDeckInfo>)
  fullName.vb: InscryptionAPI.Ascension.StarterDeckPaginator.AddPage(List(Of DiskCardGame.StarterDeckInfo))
  nameWithType: StarterDeckPaginator.AddPage(List<StarterDeckInfo>)
  nameWithType.vb: StarterDeckPaginator.AddPage(List(Of StarterDeckInfo))
- uid: InscryptionAPI.Ascension.StarterDeckPaginator.AddPage*
  name: AddPage
  href: api/InscryptionAPI.Ascension.StarterDeckPaginator.html#InscryptionAPI_Ascension_StarterDeckPaginator_AddPage_
  commentId: Overload:InscryptionAPI.Ascension.StarterDeckPaginator.AddPage
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.StarterDeckPaginator.AddPage
  nameWithType: StarterDeckPaginator.AddPage
- uid: InscryptionAPI.Ascension.StarterDeckPaginator.leftArrow
  name: leftArrow
  href: api/InscryptionAPI.Ascension.StarterDeckPaginator.html#InscryptionAPI_Ascension_StarterDeckPaginator_leftArrow
  commentId: F:InscryptionAPI.Ascension.StarterDeckPaginator.leftArrow
  fullName: InscryptionAPI.Ascension.StarterDeckPaginator.leftArrow
  nameWithType: StarterDeckPaginator.leftArrow
- uid: InscryptionAPI.Ascension.StarterDeckPaginator.LoadPage(List{DiskCardGame.StarterDeckInfo})
  name: LoadPage(List<StarterDeckInfo>)
  href: api/InscryptionAPI.Ascension.StarterDeckPaginator.html#InscryptionAPI_Ascension_StarterDeckPaginator_LoadPage_List_DiskCardGame_StarterDeckInfo__
  commentId: M:InscryptionAPI.Ascension.StarterDeckPaginator.LoadPage(List{DiskCardGame.StarterDeckInfo})
  name.vb: LoadPage(List(Of StarterDeckInfo))
  fullName: InscryptionAPI.Ascension.StarterDeckPaginator.LoadPage(List<DiskCardGame.StarterDeckInfo>)
  fullName.vb: InscryptionAPI.Ascension.StarterDeckPaginator.LoadPage(List(Of DiskCardGame.StarterDeckInfo))
  nameWithType: StarterDeckPaginator.LoadPage(List<StarterDeckInfo>)
  nameWithType.vb: StarterDeckPaginator.LoadPage(List(Of StarterDeckInfo))
- uid: InscryptionAPI.Ascension.StarterDeckPaginator.LoadPage*
  name: LoadPage
  href: api/InscryptionAPI.Ascension.StarterDeckPaginator.html#InscryptionAPI_Ascension_StarterDeckPaginator_LoadPage_
  commentId: Overload:InscryptionAPI.Ascension.StarterDeckPaginator.LoadPage
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.StarterDeckPaginator.LoadPage
  nameWithType: StarterDeckPaginator.LoadPage
- uid: InscryptionAPI.Ascension.StarterDeckPaginator.NextPage
  name: NextPage()
  href: api/InscryptionAPI.Ascension.StarterDeckPaginator.html#InscryptionAPI_Ascension_StarterDeckPaginator_NextPage
  commentId: M:InscryptionAPI.Ascension.StarterDeckPaginator.NextPage
  fullName: InscryptionAPI.Ascension.StarterDeckPaginator.NextPage()
  nameWithType: StarterDeckPaginator.NextPage()
- uid: InscryptionAPI.Ascension.StarterDeckPaginator.NextPage*
  name: NextPage
  href: api/InscryptionAPI.Ascension.StarterDeckPaginator.html#InscryptionAPI_Ascension_StarterDeckPaginator_NextPage_
  commentId: Overload:InscryptionAPI.Ascension.StarterDeckPaginator.NextPage
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.StarterDeckPaginator.NextPage
  nameWithType: StarterDeckPaginator.NextPage
- uid: InscryptionAPI.Ascension.StarterDeckPaginator.OnEnable
  name: OnEnable()
  href: api/InscryptionAPI.Ascension.StarterDeckPaginator.html#InscryptionAPI_Ascension_StarterDeckPaginator_OnEnable
  commentId: M:InscryptionAPI.Ascension.StarterDeckPaginator.OnEnable
  fullName: InscryptionAPI.Ascension.StarterDeckPaginator.OnEnable()
  nameWithType: StarterDeckPaginator.OnEnable()
- uid: InscryptionAPI.Ascension.StarterDeckPaginator.OnEnable*
  name: OnEnable
  href: api/InscryptionAPI.Ascension.StarterDeckPaginator.html#InscryptionAPI_Ascension_StarterDeckPaginator_OnEnable_
  commentId: Overload:InscryptionAPI.Ascension.StarterDeckPaginator.OnEnable
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.StarterDeckPaginator.OnEnable
  nameWithType: StarterDeckPaginator.OnEnable
- uid: InscryptionAPI.Ascension.StarterDeckPaginator.pageIndex
  name: pageIndex
  href: api/InscryptionAPI.Ascension.StarterDeckPaginator.html#InscryptionAPI_Ascension_StarterDeckPaginator_pageIndex
  commentId: F:InscryptionAPI.Ascension.StarterDeckPaginator.pageIndex
  fullName: InscryptionAPI.Ascension.StarterDeckPaginator.pageIndex
  nameWithType: StarterDeckPaginator.pageIndex
- uid: InscryptionAPI.Ascension.StarterDeckPaginator.pageLength
  name: pageLength
  href: api/InscryptionAPI.Ascension.StarterDeckPaginator.html#InscryptionAPI_Ascension_StarterDeckPaginator_pageLength
  commentId: F:InscryptionAPI.Ascension.StarterDeckPaginator.pageLength
  fullName: InscryptionAPI.Ascension.StarterDeckPaginator.pageLength
  nameWithType: StarterDeckPaginator.pageLength
- uid: InscryptionAPI.Ascension.StarterDeckPaginator.pages
  name: pages
  href: api/InscryptionAPI.Ascension.StarterDeckPaginator.html#InscryptionAPI_Ascension_StarterDeckPaginator_pages
  commentId: F:InscryptionAPI.Ascension.StarterDeckPaginator.pages
  fullName: InscryptionAPI.Ascension.StarterDeckPaginator.pages
  nameWithType: StarterDeckPaginator.pages
- uid: InscryptionAPI.Ascension.StarterDeckPaginator.PreviousPage
  name: PreviousPage()
  href: api/InscryptionAPI.Ascension.StarterDeckPaginator.html#InscryptionAPI_Ascension_StarterDeckPaginator_PreviousPage
  commentId: M:InscryptionAPI.Ascension.StarterDeckPaginator.PreviousPage
  fullName: InscryptionAPI.Ascension.StarterDeckPaginator.PreviousPage()
  nameWithType: StarterDeckPaginator.PreviousPage()
- uid: InscryptionAPI.Ascension.StarterDeckPaginator.PreviousPage*
  name: PreviousPage
  href: api/InscryptionAPI.Ascension.StarterDeckPaginator.html#InscryptionAPI_Ascension_StarterDeckPaginator_PreviousPage_
  commentId: Overload:InscryptionAPI.Ascension.StarterDeckPaginator.PreviousPage
  isSpec: "True"
  fullName: InscryptionAPI.Ascension.StarterDeckPaginator.PreviousPage
  nameWithType: StarterDeckPaginator.PreviousPage
- uid: InscryptionAPI.Ascension.StarterDeckPaginator.rightArrow
  name: rightArrow
  href: api/InscryptionAPI.Ascension.StarterDeckPaginator.html#InscryptionAPI_Ascension_StarterDeckPaginator_rightArrow
  commentId: F:InscryptionAPI.Ascension.StarterDeckPaginator.rightArrow
  fullName: InscryptionAPI.Ascension.StarterDeckPaginator.rightArrow
  nameWithType: StarterDeckPaginator.rightArrow
- uid: InscryptionAPI.Ascension.StarterDeckPaginator.screen
  name: screen
  href: api/InscryptionAPI.Ascension.StarterDeckPaginator.html#InscryptionAPI_Ascension_StarterDeckPaginator_screen
  commentId: F:InscryptionAPI.Ascension.StarterDeckPaginator.screen
  fullName: InscryptionAPI.Ascension.StarterDeckPaginator.screen
  nameWithType: StarterDeckPaginator.screen
- uid: InscryptionAPI.Boons
  name: InscryptionAPI.Boons
  href: api/InscryptionAPI.Boons.html
  commentId: N:InscryptionAPI.Boons
  fullName: InscryptionAPI.Boons
  nameWithType: InscryptionAPI.Boons
- uid: InscryptionAPI.Boons.BoonBehaviour
  name: BoonBehaviour
  href: api/InscryptionAPI.Boons.BoonBehaviour.html
  commentId: T:InscryptionAPI.Boons.BoonBehaviour
  fullName: InscryptionAPI.Boons.BoonBehaviour
  nameWithType: BoonBehaviour
- uid: InscryptionAPI.Boons.BoonBehaviour.AnyInstancesOfType(DiskCardGame.BoonData.Type)
  name: AnyInstancesOfType(BoonData.Type)
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_AnyInstancesOfType_DiskCardGame_BoonData_Type_
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.AnyInstancesOfType(DiskCardGame.BoonData.Type)
  fullName: InscryptionAPI.Boons.BoonBehaviour.AnyInstancesOfType(DiskCardGame.BoonData.Type)
  nameWithType: BoonBehaviour.AnyInstancesOfType(BoonData.Type)
- uid: InscryptionAPI.Boons.BoonBehaviour.AnyInstancesOfType*
  name: AnyInstancesOfType
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_AnyInstancesOfType_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.AnyInstancesOfType
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.AnyInstancesOfType
  nameWithType: BoonBehaviour.AnyInstancesOfType
- uid: InscryptionAPI.Boons.BoonBehaviour.boon
  name: boon
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_boon
  commentId: P:InscryptionAPI.Boons.BoonBehaviour.boon
  fullName: InscryptionAPI.Boons.BoonBehaviour.boon
  nameWithType: BoonBehaviour.boon
- uid: InscryptionAPI.Boons.BoonBehaviour.boon*
  name: boon
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_boon_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.boon
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.boon
  nameWithType: BoonBehaviour.boon
- uid: InscryptionAPI.Boons.BoonBehaviour.CountInstancesOfType(DiskCardGame.BoonData.Type)
  name: CountInstancesOfType(BoonData.Type)
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_CountInstancesOfType_DiskCardGame_BoonData_Type_
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.CountInstancesOfType(DiskCardGame.BoonData.Type)
  fullName: InscryptionAPI.Boons.BoonBehaviour.CountInstancesOfType(DiskCardGame.BoonData.Type)
  nameWithType: BoonBehaviour.CountInstancesOfType(BoonData.Type)
- uid: InscryptionAPI.Boons.BoonBehaviour.CountInstancesOfType*
  name: CountInstancesOfType
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_CountInstancesOfType_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.CountInstancesOfType
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.CountInstancesOfType
  nameWithType: BoonBehaviour.CountInstancesOfType
- uid: InscryptionAPI.Boons.BoonBehaviour.FindInstancesOfType(DiskCardGame.BoonData.Type)
  name: FindInstancesOfType(BoonData.Type)
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_FindInstancesOfType_DiskCardGame_BoonData_Type_
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.FindInstancesOfType(DiskCardGame.BoonData.Type)
  fullName: InscryptionAPI.Boons.BoonBehaviour.FindInstancesOfType(DiskCardGame.BoonData.Type)
  nameWithType: BoonBehaviour.FindInstancesOfType(BoonData.Type)
- uid: InscryptionAPI.Boons.BoonBehaviour.FindInstancesOfType*
  name: FindInstancesOfType
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_FindInstancesOfType_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.FindInstancesOfType
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.FindInstancesOfType
  nameWithType: BoonBehaviour.FindInstancesOfType
- uid: InscryptionAPI.Boons.BoonBehaviour.instanceNumber
  name: instanceNumber
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_instanceNumber
  commentId: P:InscryptionAPI.Boons.BoonBehaviour.instanceNumber
  fullName: InscryptionAPI.Boons.BoonBehaviour.instanceNumber
  nameWithType: BoonBehaviour.instanceNumber
- uid: InscryptionAPI.Boons.BoonBehaviour.instanceNumber*
  name: instanceNumber
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_instanceNumber_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.instanceNumber
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.instanceNumber
  nameWithType: BoonBehaviour.instanceNumber
- uid: InscryptionAPI.Boons.BoonBehaviour.OnDestroy
  name: OnDestroy()
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_OnDestroy
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.OnDestroy
  fullName: InscryptionAPI.Boons.BoonBehaviour.OnDestroy()
  nameWithType: BoonBehaviour.OnDestroy()
- uid: InscryptionAPI.Boons.BoonBehaviour.OnDestroy*
  name: OnDestroy
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_OnDestroy_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.OnDestroy
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.OnDestroy
  nameWithType: BoonBehaviour.OnDestroy
- uid: InscryptionAPI.Boons.BoonBehaviour.OnPostBattleCleanup
  name: OnPostBattleCleanup()
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_OnPostBattleCleanup
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.OnPostBattleCleanup
  fullName: InscryptionAPI.Boons.BoonBehaviour.OnPostBattleCleanup()
  nameWithType: BoonBehaviour.OnPostBattleCleanup()
- uid: InscryptionAPI.Boons.BoonBehaviour.OnPostBattleCleanup*
  name: OnPostBattleCleanup
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_OnPostBattleCleanup_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.OnPostBattleCleanup
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.OnPostBattleCleanup
  nameWithType: BoonBehaviour.OnPostBattleCleanup
- uid: InscryptionAPI.Boons.BoonBehaviour.OnPostBoonActivation
  name: OnPostBoonActivation()
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_OnPostBoonActivation
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.OnPostBoonActivation
  fullName: InscryptionAPI.Boons.BoonBehaviour.OnPostBoonActivation()
  nameWithType: BoonBehaviour.OnPostBoonActivation()
- uid: InscryptionAPI.Boons.BoonBehaviour.OnPostBoonActivation*
  name: OnPostBoonActivation
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_OnPostBoonActivation_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.OnPostBoonActivation
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.OnPostBoonActivation
  nameWithType: BoonBehaviour.OnPostBoonActivation
- uid: InscryptionAPI.Boons.BoonBehaviour.OnPreBattleCleanup
  name: OnPreBattleCleanup()
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_OnPreBattleCleanup
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.OnPreBattleCleanup
  fullName: InscryptionAPI.Boons.BoonBehaviour.OnPreBattleCleanup()
  nameWithType: BoonBehaviour.OnPreBattleCleanup()
- uid: InscryptionAPI.Boons.BoonBehaviour.OnPreBattleCleanup*
  name: OnPreBattleCleanup
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_OnPreBattleCleanup_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.OnPreBattleCleanup
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.OnPreBattleCleanup
  nameWithType: BoonBehaviour.OnPreBattleCleanup
- uid: InscryptionAPI.Boons.BoonBehaviour.OnPreBoonActivation
  name: OnPreBoonActivation()
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_OnPreBoonActivation
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.OnPreBoonActivation
  fullName: InscryptionAPI.Boons.BoonBehaviour.OnPreBoonActivation()
  nameWithType: BoonBehaviour.OnPreBoonActivation()
- uid: InscryptionAPI.Boons.BoonBehaviour.OnPreBoonActivation*
  name: OnPreBoonActivation
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_OnPreBoonActivation_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.OnPreBoonActivation
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.OnPreBoonActivation
  nameWithType: BoonBehaviour.OnPreBoonActivation
- uid: InscryptionAPI.Boons.BoonBehaviour.PlayBoonAnimation
  name: PlayBoonAnimation()
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_PlayBoonAnimation
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.PlayBoonAnimation
  fullName: InscryptionAPI.Boons.BoonBehaviour.PlayBoonAnimation()
  nameWithType: BoonBehaviour.PlayBoonAnimation()
- uid: InscryptionAPI.Boons.BoonBehaviour.PlayBoonAnimation*
  name: PlayBoonAnimation
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_PlayBoonAnimation_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.PlayBoonAnimation
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.PlayBoonAnimation
  nameWithType: BoonBehaviour.PlayBoonAnimation
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToPostBattleCleanup
  name: RespondsToPostBattleCleanup()
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondsToPostBattleCleanup
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondsToPostBattleCleanup
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToPostBattleCleanup()
  nameWithType: BoonBehaviour.RespondsToPostBattleCleanup()
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToPostBattleCleanup*
  name: RespondsToPostBattleCleanup
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondsToPostBattleCleanup_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondsToPostBattleCleanup
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToPostBattleCleanup
  nameWithType: BoonBehaviour.RespondsToPostBattleCleanup
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToPostBoonActivation
  name: RespondsToPostBoonActivation()
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondsToPostBoonActivation
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondsToPostBoonActivation
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToPostBoonActivation()
  nameWithType: BoonBehaviour.RespondsToPostBoonActivation()
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToPostBoonActivation*
  name: RespondsToPostBoonActivation
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondsToPostBoonActivation_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondsToPostBoonActivation
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToPostBoonActivation
  nameWithType: BoonBehaviour.RespondsToPostBoonActivation
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToPreBattleCleanup
  name: RespondsToPreBattleCleanup()
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondsToPreBattleCleanup
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondsToPreBattleCleanup
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToPreBattleCleanup()
  nameWithType: BoonBehaviour.RespondsToPreBattleCleanup()
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToPreBattleCleanup*
  name: RespondsToPreBattleCleanup
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondsToPreBattleCleanup_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondsToPreBattleCleanup
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToPreBattleCleanup
  nameWithType: BoonBehaviour.RespondsToPreBattleCleanup
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToPreBoonActivation
  name: RespondsToPreBoonActivation()
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondsToPreBoonActivation
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondsToPreBoonActivation
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToPreBoonActivation()
  nameWithType: BoonBehaviour.RespondsToPreBoonActivation()
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToPreBoonActivation*
  name: RespondsToPreBoonActivation
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_RespondsToPreBoonActivation_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondsToPreBoonActivation
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToPreBoonActivation
  nameWithType: BoonBehaviour.RespondsToPreBoonActivation
- uid: InscryptionAPI.Boons.BoonBehaviour.Start
  name: Start()
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_Start
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.Start
  fullName: InscryptionAPI.Boons.BoonBehaviour.Start()
  nameWithType: BoonBehaviour.Start()
- uid: InscryptionAPI.Boons.BoonBehaviour.Start*
  name: Start
  href: api/InscryptionAPI.Boons.BoonBehaviour.html#InscryptionAPI_Boons_BoonBehaviour_Start_
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.Start
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonBehaviour.Start
  nameWithType: BoonBehaviour.Start
- uid: InscryptionAPI.Boons.BoonManager
  name: BoonManager
  href: api/InscryptionAPI.Boons.BoonManager.html
  commentId: T:InscryptionAPI.Boons.BoonManager
  fullName: InscryptionAPI.Boons.BoonManager
  nameWithType: BoonManager
- uid: InscryptionAPI.Boons.BoonManager.AllBoonsCopy
  name: AllBoonsCopy
  href: api/InscryptionAPI.Boons.BoonManager.html#InscryptionAPI_Boons_BoonManager_AllBoonsCopy
  commentId: P:InscryptionAPI.Boons.BoonManager.AllBoonsCopy
  fullName: InscryptionAPI.Boons.BoonManager.AllBoonsCopy
  nameWithType: BoonManager.AllBoonsCopy
- uid: InscryptionAPI.Boons.BoonManager.AllBoonsCopy*
  name: AllBoonsCopy
  href: api/InscryptionAPI.Boons.BoonManager.html#InscryptionAPI_Boons_BoonManager_AllBoonsCopy_
  commentId: Overload:InscryptionAPI.Boons.BoonManager.AllBoonsCopy
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonManager.AllBoonsCopy
  nameWithType: BoonManager.AllBoonsCopy
- uid: InscryptionAPI.Boons.BoonManager.BaseGameBoons
  name: BaseGameBoons
  href: api/InscryptionAPI.Boons.BoonManager.html#InscryptionAPI_Boons_BoonManager_BaseGameBoons
  commentId: F:InscryptionAPI.Boons.BoonManager.BaseGameBoons
  fullName: InscryptionAPI.Boons.BoonManager.BaseGameBoons
  nameWithType: BoonManager.BaseGameBoons
- uid: InscryptionAPI.Boons.BoonManager.FullBoon
  name: BoonManager.FullBoon
  href: api/InscryptionAPI.Boons.BoonManager.FullBoon.html
  commentId: T:InscryptionAPI.Boons.BoonManager.FullBoon
  fullName: InscryptionAPI.Boons.BoonManager.FullBoon
  nameWithType: BoonManager.FullBoon
- uid: InscryptionAPI.Boons.BoonManager.FullBoon.appearInRulebook
  name: appearInRulebook
  href: api/InscryptionAPI.Boons.BoonManager.FullBoon.html#InscryptionAPI_Boons_BoonManager_FullBoon_appearInRulebook
  commentId: F:InscryptionAPI.Boons.BoonManager.FullBoon.appearInRulebook
  fullName: InscryptionAPI.Boons.BoonManager.FullBoon.appearInRulebook
  nameWithType: BoonManager.FullBoon.appearInRulebook
- uid: InscryptionAPI.Boons.BoonManager.FullBoon.boon
  name: boon
  href: api/InscryptionAPI.Boons.BoonManager.FullBoon.html#InscryptionAPI_Boons_BoonManager_FullBoon_boon
  commentId: F:InscryptionAPI.Boons.BoonManager.FullBoon.boon
  fullName: InscryptionAPI.Boons.BoonManager.FullBoon.boon
  nameWithType: BoonManager.FullBoon.boon
- uid: InscryptionAPI.Boons.BoonManager.FullBoon.boonHandlerType
  name: boonHandlerType
  href: api/InscryptionAPI.Boons.BoonManager.FullBoon.html#InscryptionAPI_Boons_BoonManager_FullBoon_boonHandlerType
  commentId: F:InscryptionAPI.Boons.BoonManager.FullBoon.boonHandlerType
  fullName: InscryptionAPI.Boons.BoonManager.FullBoon.boonHandlerType
  nameWithType: BoonManager.FullBoon.boonHandlerType
- uid: InscryptionAPI.Boons.BoonManager.FullBoon.stacks
  name: stacks
  href: api/InscryptionAPI.Boons.BoonManager.FullBoon.html#InscryptionAPI_Boons_BoonManager_FullBoon_stacks
  commentId: F:InscryptionAPI.Boons.BoonManager.FullBoon.stacks
  fullName: InscryptionAPI.Boons.BoonManager.FullBoon.stacks
  nameWithType: BoonManager.FullBoon.stacks
- uid: InscryptionAPI.Boons.BoonManager.New(System.String,System.String,Type,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean)
  name: New(String, String, Type, String, String, String, Boolean, Boolean, Boolean)
  href: api/InscryptionAPI.Boons.BoonManager.html#InscryptionAPI_Boons_BoonManager_New_System_String_System_String_Type_System_String_System_String_System_String_System_Boolean_System_Boolean_System_Boolean_
  commentId: M:InscryptionAPI.Boons.BoonManager.New(System.String,System.String,Type,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean)
  fullName: InscryptionAPI.Boons.BoonManager.New(System.String, System.String, Type, System.String, System.String, System.String, System.Boolean, System.Boolean, System.Boolean)
  nameWithType: BoonManager.New(String, String, Type, String, String, String, Boolean, Boolean, Boolean)
- uid: InscryptionAPI.Boons.BoonManager.New(System.String,System.String,Type,System.String,UnityEngine.Texture,UnityEngine.Texture,System.Boolean,System.Boolean,System.Boolean)
  name: New(String, String, Type, String, Texture, Texture, Boolean, Boolean, Boolean)
  href: api/InscryptionAPI.Boons.BoonManager.html#InscryptionAPI_Boons_BoonManager_New_System_String_System_String_Type_System_String_UnityEngine_Texture_UnityEngine_Texture_System_Boolean_System_Boolean_System_Boolean_
  commentId: M:InscryptionAPI.Boons.BoonManager.New(System.String,System.String,Type,System.String,UnityEngine.Texture,UnityEngine.Texture,System.Boolean,System.Boolean,System.Boolean)
  fullName: InscryptionAPI.Boons.BoonManager.New(System.String, System.String, Type, System.String, UnityEngine.Texture, UnityEngine.Texture, System.Boolean, System.Boolean, System.Boolean)
  nameWithType: BoonManager.New(String, String, Type, String, Texture, Texture, Boolean, Boolean, Boolean)
- uid: InscryptionAPI.Boons.BoonManager.New*
  name: New
  href: api/InscryptionAPI.Boons.BoonManager.html#InscryptionAPI_Boons_BoonManager_New_
  commentId: Overload:InscryptionAPI.Boons.BoonManager.New
  isSpec: "True"
  fullName: InscryptionAPI.Boons.BoonManager.New
  nameWithType: BoonManager.New
- uid: InscryptionAPI.Boons.BoonManager.New``1(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean)
  name: New<T>(String, String, String, String, String, Boolean, Boolean, Boolean)
  href: api/InscryptionAPI.Boons.BoonManager.html#InscryptionAPI_Boons_BoonManager_New__1_System_String_System_String_System_String_System_String_System_String_System_Boolean_System_Boolean_System_Boolean_
  commentId: M:InscryptionAPI.Boons.BoonManager.New``1(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean)
  name.vb: New(Of T)(String, String, String, String, String, Boolean, Boolean, Boolean)
  fullName: InscryptionAPI.Boons.BoonManager.New<T>(System.String, System.String, System.String, System.String, System.String, System.Boolean, System.Boolean, System.Boolean)
  fullName.vb: InscryptionAPI.Boons.BoonManager.New(Of T)(System.String, System.String, System.String, System.String, System.String, System.Boolean, System.Boolean, System.Boolean)
  nameWithType: BoonManager.New<T>(String, String, String, String, String, Boolean, Boolean, Boolean)
  nameWithType.vb: BoonManager.New(Of T)(String, String, String, String, String, Boolean, Boolean, Boolean)
- uid: InscryptionAPI.Boons.BoonManager.New``1(System.String,System.String,System.String,UnityEngine.Texture,UnityEngine.Texture,System.Boolean,System.Boolean,System.Boolean)
  name: New<T>(String, String, String, Texture, Texture, Boolean, Boolean, Boolean)
  href: api/InscryptionAPI.Boons.BoonManager.html#InscryptionAPI_Boons_BoonManager_New__1_System_String_System_String_System_String_UnityEngine_Texture_UnityEngine_Texture_System_Boolean_System_Boolean_System_Boolean_
  commentId: M:InscryptionAPI.Boons.BoonManager.New``1(System.String,System.String,System.String,UnityEngine.Texture,UnityEngine.Texture,System.Boolean,System.Boolean,System.Boolean)
  name.vb: New(Of T)(String, String, String, Texture, Texture, Boolean, Boolean, Boolean)
  fullName: InscryptionAPI.Boons.BoonManager.New<T>(System.String, System.String, System.String, UnityEngine.Texture, UnityEngine.Texture, System.Boolean, System.Boolean, System.Boolean)
  fullName.vb: InscryptionAPI.Boons.BoonManager.New(Of T)(System.String, System.String, System.String, UnityEngine.Texture, UnityEngine.Texture, System.Boolean, System.Boolean, System.Boolean)
  nameWithType: BoonManager.New<T>(String, String, String, Texture, Texture, Boolean, Boolean, Boolean)
  nameWithType.vb: BoonManager.New(Of T)(String, String, String, Texture, Texture, Boolean, Boolean, Boolean)
- uid: InscryptionAPI.Boons.DeckInfoExtensions
  name: DeckInfoExtensions
  href: api/InscryptionAPI.Boons.DeckInfoExtensions.html
  commentId: T:InscryptionAPI.Boons.DeckInfoExtensions
  fullName: InscryptionAPI.Boons.DeckInfoExtensions
  nameWithType: DeckInfoExtensions
- uid: InscryptionAPI.Boons.DeckInfoExtensions.RemoveAllBoonsOfType(DiskCardGame.DeckInfo,DiskCardGame.BoonData.Type)
  name: RemoveAllBoonsOfType(DeckInfo, BoonData.Type)
  href: api/InscryptionAPI.Boons.DeckInfoExtensions.html#InscryptionAPI_Boons_DeckInfoExtensions_RemoveAllBoonsOfType_DiskCardGame_DeckInfo_DiskCardGame_BoonData_Type_
  commentId: M:InscryptionAPI.Boons.DeckInfoExtensions.RemoveAllBoonsOfType(DiskCardGame.DeckInfo,DiskCardGame.BoonData.Type)
  fullName: InscryptionAPI.Boons.DeckInfoExtensions.RemoveAllBoonsOfType(DiskCardGame.DeckInfo, DiskCardGame.BoonData.Type)
  nameWithType: DeckInfoExtensions.RemoveAllBoonsOfType(DeckInfo, BoonData.Type)
- uid: InscryptionAPI.Boons.DeckInfoExtensions.RemoveAllBoonsOfType*
  name: RemoveAllBoonsOfType
  href: api/InscryptionAPI.Boons.DeckInfoExtensions.html#InscryptionAPI_Boons_DeckInfoExtensions_RemoveAllBoonsOfType_
  commentId: Overload:InscryptionAPI.Boons.DeckInfoExtensions.RemoveAllBoonsOfType
  isSpec: "True"
  fullName: InscryptionAPI.Boons.DeckInfoExtensions.RemoveAllBoonsOfType
  nameWithType: DeckInfoExtensions.RemoveAllBoonsOfType
- uid: InscryptionAPI.Boons.DeckInfoExtensions.RemoveBoon(DiskCardGame.DeckInfo,DiskCardGame.BoonData.Type)
  name: RemoveBoon(DeckInfo, BoonData.Type)
  href: api/InscryptionAPI.Boons.DeckInfoExtensions.html#InscryptionAPI_Boons_DeckInfoExtensions_RemoveBoon_DiskCardGame_DeckInfo_DiskCardGame_BoonData_Type_
  commentId: M:InscryptionAPI.Boons.DeckInfoExtensions.RemoveBoon(DiskCardGame.DeckInfo,DiskCardGame.BoonData.Type)
  fullName: InscryptionAPI.Boons.DeckInfoExtensions.RemoveBoon(DiskCardGame.DeckInfo, DiskCardGame.BoonData.Type)
  nameWithType: DeckInfoExtensions.RemoveBoon(DeckInfo, BoonData.Type)
- uid: InscryptionAPI.Boons.DeckInfoExtensions.RemoveBoon*
  name: RemoveBoon
  href: api/InscryptionAPI.Boons.DeckInfoExtensions.html#InscryptionAPI_Boons_DeckInfoExtensions_RemoveBoon_
  commentId: Overload:InscryptionAPI.Boons.DeckInfoExtensions.RemoveBoon
  isSpec: "True"
  fullName: InscryptionAPI.Boons.DeckInfoExtensions.RemoveBoon
  nameWithType: DeckInfoExtensions.RemoveBoon
- uid: InscryptionAPI.Card
  name: InscryptionAPI.Card
  href: api/InscryptionAPI.Card.html
  commentId: N:InscryptionAPI.Card
  fullName: InscryptionAPI.Card
  nameWithType: InscryptionAPI.Card
- uid: InscryptionAPI.Card.AbilityExtensions
  name: AbilityExtensions
  href: api/InscryptionAPI.Card.AbilityExtensions.html
  commentId: T:InscryptionAPI.Card.AbilityExtensions
  fullName: InscryptionAPI.Card.AbilityExtensions
  nameWithType: AbilityExtensions
- uid: InscryptionAPI.Card.AbilityExtensions.AbilityByID(IEnumerable{DiskCardGame.AbilityInfo},DiskCardGame.Ability)
  name: AbilityByID(IEnumerable<AbilityInfo>, Ability)
  href: api/InscryptionAPI.Card.AbilityExtensions.html#InscryptionAPI_Card_AbilityExtensions_AbilityByID_IEnumerable_DiskCardGame_AbilityInfo__DiskCardGame_Ability_
  commentId: M:InscryptionAPI.Card.AbilityExtensions.AbilityByID(IEnumerable{DiskCardGame.AbilityInfo},DiskCardGame.Ability)
  name.vb: AbilityByID(IEnumerable(Of AbilityInfo), Ability)
  fullName: InscryptionAPI.Card.AbilityExtensions.AbilityByID(IEnumerable<DiskCardGame.AbilityInfo>, DiskCardGame.Ability)
  fullName.vb: InscryptionAPI.Card.AbilityExtensions.AbilityByID(IEnumerable(Of DiskCardGame.AbilityInfo), DiskCardGame.Ability)
  nameWithType: AbilityExtensions.AbilityByID(IEnumerable<AbilityInfo>, Ability)
  nameWithType.vb: AbilityExtensions.AbilityByID(IEnumerable(Of AbilityInfo), Ability)
- uid: InscryptionAPI.Card.AbilityExtensions.AbilityByID(IEnumerable{InscryptionAPI.Card.AbilityManager.FullAbility},DiskCardGame.Ability)
  name: AbilityByID(IEnumerable<AbilityManager.FullAbility>, Ability)
  href: api/InscryptionAPI.Card.AbilityExtensions.html#InscryptionAPI_Card_AbilityExtensions_AbilityByID_IEnumerable_InscryptionAPI_Card_AbilityManager_FullAbility__DiskCardGame_Ability_
  commentId: M:InscryptionAPI.Card.AbilityExtensions.AbilityByID(IEnumerable{InscryptionAPI.Card.AbilityManager.FullAbility},DiskCardGame.Ability)
  name.vb: AbilityByID(IEnumerable(Of AbilityManager.FullAbility), Ability)
  fullName: InscryptionAPI.Card.AbilityExtensions.AbilityByID(IEnumerable<InscryptionAPI.Card.AbilityManager.FullAbility>, DiskCardGame.Ability)
  fullName.vb: InscryptionAPI.Card.AbilityExtensions.AbilityByID(IEnumerable(Of InscryptionAPI.Card.AbilityManager.FullAbility), DiskCardGame.Ability)
  nameWithType: AbilityExtensions.AbilityByID(IEnumerable<AbilityManager.FullAbility>, Ability)
  nameWithType.vb: AbilityExtensions.AbilityByID(IEnumerable(Of AbilityManager.FullAbility), Ability)
- uid: InscryptionAPI.Card.AbilityExtensions.AbilityByID*
  name: AbilityByID
  href: api/InscryptionAPI.Card.AbilityExtensions.html#InscryptionAPI_Card_AbilityExtensions_AbilityByID_
  commentId: Overload:InscryptionAPI.Card.AbilityExtensions.AbilityByID
  isSpec: "True"
  fullName: InscryptionAPI.Card.AbilityExtensions.AbilityByID
  nameWithType: AbilityExtensions.AbilityByID
- uid: InscryptionAPI.Card.AbilityExtensions.AddMetaCategories(DiskCardGame.AbilityInfo,DiskCardGame.AbilityMetaCategory[])
  name: AddMetaCategories(AbilityInfo, AbilityMetaCategory[])
  href: api/InscryptionAPI.Card.AbilityExtensions.html#InscryptionAPI_Card_AbilityExtensions_AddMetaCategories_DiskCardGame_AbilityInfo_DiskCardGame_AbilityMetaCategory___
  commentId: M:InscryptionAPI.Card.AbilityExtensions.AddMetaCategories(DiskCardGame.AbilityInfo,DiskCardGame.AbilityMetaCategory[])
  name.vb: AddMetaCategories(AbilityInfo, AbilityMetaCategory())
  fullName: InscryptionAPI.Card.AbilityExtensions.AddMetaCategories(DiskCardGame.AbilityInfo, DiskCardGame.AbilityMetaCategory[])
  fullName.vb: InscryptionAPI.Card.AbilityExtensions.AddMetaCategories(DiskCardGame.AbilityInfo, DiskCardGame.AbilityMetaCategory())
  nameWithType: AbilityExtensions.AddMetaCategories(AbilityInfo, AbilityMetaCategory[])
  nameWithType.vb: AbilityExtensions.AddMetaCategories(AbilityInfo, AbilityMetaCategory())
- uid: InscryptionAPI.Card.AbilityExtensions.AddMetaCategories(DiskCardGame.StatIconInfo,DiskCardGame.AbilityMetaCategory[])
  name: AddMetaCategories(StatIconInfo, AbilityMetaCategory[])
  href: api/InscryptionAPI.Card.AbilityExtensions.html#InscryptionAPI_Card_AbilityExtensions_AddMetaCategories_DiskCardGame_StatIconInfo_DiskCardGame_AbilityMetaCategory___
  commentId: M:InscryptionAPI.Card.AbilityExtensions.AddMetaCategories(DiskCardGame.StatIconInfo,DiskCardGame.AbilityMetaCategory[])
  name.vb: AddMetaCategories(StatIconInfo, AbilityMetaCategory())
  fullName: InscryptionAPI.Card.AbilityExtensions.AddMetaCategories(DiskCardGame.StatIconInfo, DiskCardGame.AbilityMetaCategory[])
  fullName.vb: InscryptionAPI.Card.AbilityExtensions.AddMetaCategories(DiskCardGame.StatIconInfo, DiskCardGame.AbilityMetaCategory())
  nameWithType: AbilityExtensions.AddMetaCategories(StatIconInfo, AbilityMetaCategory[])
  nameWithType.vb: AbilityExtensions.AddMetaCategories(StatIconInfo, AbilityMetaCategory())
- uid: InscryptionAPI.Card.AbilityExtensions.AddMetaCategories*
  name: AddMetaCategories
  href: api/InscryptionAPI.Card.AbilityExtensions.html#InscryptionAPI_Card_AbilityExtensions_AddMetaCategories_
  commentId: Overload:InscryptionAPI.Card.AbilityExtensions.AddMetaCategories
  isSpec: "True"
  fullName: InscryptionAPI.Card.AbilityExtensions.AddMetaCategories
  nameWithType: AbilityExtensions.AddMetaCategories
- uid: InscryptionAPI.Card.AbilityExtensions.SetCustomFlippedTexture(DiskCardGame.AbilityInfo,UnityEngine.Texture2D)
  name: SetCustomFlippedTexture(AbilityInfo, Texture2D)
  href: api/InscryptionAPI.Card.AbilityExtensions.html#InscryptionAPI_Card_AbilityExtensions_SetCustomFlippedTexture_DiskCardGame_AbilityInfo_UnityEngine_Texture2D_
  commentId: M:InscryptionAPI.Card.AbilityExtensions.SetCustomFlippedTexture(DiskCardGame.AbilityInfo,UnityEngine.Texture2D)
  fullName: InscryptionAPI.Card.AbilityExtensions.SetCustomFlippedTexture(DiskCardGame.AbilityInfo, UnityEngine.Texture2D)
  nameWithType: AbilityExtensions.SetCustomFlippedTexture(AbilityInfo, Texture2D)
- uid: InscryptionAPI.Card.AbilityExtensions.SetCustomFlippedTexture(InscryptionAPI.Card.AbilityManager.FullAbility,UnityEngine.Texture2D)
  name: SetCustomFlippedTexture(AbilityManager.FullAbility, Texture2D)
  href: api/InscryptionAPI.Card.AbilityExtensions.html#InscryptionAPI_Card_AbilityExtensions_SetCustomFlippedTexture_InscryptionAPI_Card_AbilityManager_FullAbility_UnityEngine_Texture2D_
  commentId: M:InscryptionAPI.Card.AbilityExtensions.SetCustomFlippedTexture(InscryptionAPI.Card.AbilityManager.FullAbility,UnityEngine.Texture2D)
  fullName: InscryptionAPI.Card.AbilityExtensions.SetCustomFlippedTexture(InscryptionAPI.Card.AbilityManager.FullAbility, UnityEngine.Texture2D)
  nameWithType: AbilityExtensions.SetCustomFlippedTexture(AbilityManager.FullAbility, Texture2D)
- uid: InscryptionAPI.Card.AbilityExtensions.SetCustomFlippedTexture*
  name: SetCustomFlippedTexture
  href: api/InscryptionAPI.Card.AbilityExtensions.html#InscryptionAPI_Card_AbilityExtensions_SetCustomFlippedTexture_
  commentId: Overload:InscryptionAPI.Card.AbilityExtensions.SetCustomFlippedTexture
  isSpec: "True"
  fullName: InscryptionAPI.Card.AbilityExtensions.SetCustomFlippedTexture
  nameWithType: AbilityExtensions.SetCustomFlippedTexture
- uid: InscryptionAPI.Card.AbilityExtensions.SetDefaultPart1Ability(DiskCardGame.AbilityInfo)
  name: SetDefaultPart1Ability(AbilityInfo)
  href: api/InscryptionAPI.Card.AbilityExtensions.html#InscryptionAPI_Card_AbilityExtensions_SetDefaultPart1Ability_DiskCardGame_AbilityInfo_
  commentId: M:InscryptionAPI.Card.AbilityExtensions.SetDefaultPart1Ability(DiskCardGame.AbilityInfo)
  fullName: InscryptionAPI.Card.AbilityExtensions.SetDefaultPart1Ability(DiskCardGame.AbilityInfo)
  nameWithType: AbilityExtensions.SetDefaultPart1Ability(AbilityInfo)
- uid: InscryptionAPI.Card.AbilityExtensions.SetDefaultPart1Ability(DiskCardGame.StatIconInfo)
  name: SetDefaultPart1Ability(StatIconInfo)
  href: api/InscryptionAPI.Card.AbilityExtensions.html#InscryptionAPI_Card_AbilityExtensions_SetDefaultPart1Ability_DiskCardGame_StatIconInfo_
  commentId: M:InscryptionAPI.Card.AbilityExtensions.SetDefaultPart1Ability(DiskCardGame.StatIconInfo)
  fullName: InscryptionAPI.Card.AbilityExtensions.SetDefaultPart1Ability(DiskCardGame.StatIconInfo)
  nameWithType: AbilityExtensions.SetDefaultPart1Ability(StatIconInfo)
- uid: InscryptionAPI.Card.AbilityExtensions.SetDefaultPart1Ability*
  name: SetDefaultPart1Ability
  href: api/InscryptionAPI.Card.AbilityExtensions.html#InscryptionAPI_Card_AbilityExtensions_SetDefaultPart1Ability_
  commentId: Overload:InscryptionAPI.Card.AbilityExtensions.SetDefaultPart1Ability
  isSpec: "True"
  fullName: InscryptionAPI.Card.AbilityExtensions.SetDefaultPart1Ability
  nameWithType: AbilityExtensions.SetDefaultPart1Ability
- uid: InscryptionAPI.Card.AbilityExtensions.SetDefaultPart3Ability(DiskCardGame.AbilityInfo)
  name: SetDefaultPart3Ability(AbilityInfo)
  href: api/InscryptionAPI.Card.AbilityExtensions.html#InscryptionAPI_Card_AbilityExtensions_SetDefaultPart3Ability_DiskCardGame_AbilityInfo_
  commentId: M:InscryptionAPI.Card.AbilityExtensions.SetDefaultPart3Ability(DiskCardGame.AbilityInfo)
  fullName: InscryptionAPI.Card.AbilityExtensions.SetDefaultPart3Ability(DiskCardGame.AbilityInfo)
  nameWithType: AbilityExtensions.SetDefaultPart3Ability(AbilityInfo)
- uid: InscryptionAPI.Card.AbilityExtensions.SetDefaultPart3Ability(DiskCardGame.StatIconInfo)
  name: SetDefaultPart3Ability(StatIconInfo)
  href: api/InscryptionAPI.Card.AbilityExtensions.html#InscryptionAPI_Card_AbilityExtensions_SetDefaultPart3Ability_DiskCardGame_StatIconInfo_
  commentId: M:InscryptionAPI.Card.AbilityExtensions.SetDefaultPart3Ability(DiskCardGame.StatIconInfo)
  fullName: InscryptionAPI.Card.AbilityExtensions.SetDefaultPart3Ability(DiskCardGame.StatIconInfo)
  nameWithType: AbilityExtensions.SetDefaultPart3Ability(StatIconInfo)
- uid: InscryptionAPI.Card.AbilityExtensions.SetDefaultPart3Ability*
  name: SetDefaultPart3Ability
  href: api/InscryptionAPI.Card.AbilityExtensions.html#InscryptionAPI_Card_AbilityExtensions_SetDefaultPart3Ability_
  commentId: Overload:InscryptionAPI.Card.AbilityExtensions.SetDefaultPart3Ability
  isSpec: "True"
  fullName: InscryptionAPI.Card.AbilityExtensions.SetDefaultPart3Ability
  nameWithType: AbilityExtensions.SetDefaultPart3Ability
- uid: InscryptionAPI.Card.AbilityExtensions.SetIcon(DiskCardGame.AbilityInfo,UnityEngine.Texture2D)
  name: SetIcon(AbilityInfo, Texture2D)
  href: api/InscryptionAPI.Card.AbilityExtensions.html#InscryptionAPI_Card_AbilityExtensions_SetIcon_DiskCardGame_AbilityInfo_UnityEngine_Texture2D_
  commentId: M:InscryptionAPI.Card.AbilityExtensions.SetIcon(DiskCardGame.AbilityInfo,UnityEngine.Texture2D)
  fullName: InscryptionAPI.Card.AbilityExtensions.SetIcon(DiskCardGame.AbilityInfo, UnityEngine.Texture2D)
  nameWithType: AbilityExtensions.SetIcon(AbilityInfo, Texture2D)
- uid: InscryptionAPI.Card.AbilityExtensions.SetIcon(DiskCardGame.StatIconInfo,System.String,System.Nullable{UnityEngine.FilterMode})
  name: SetIcon(StatIconInfo, String, Nullable<FilterMode>)
  href: api/InscryptionAPI.Card.AbilityExtensions.html#InscryptionAPI_Card_AbilityExtensions_SetIcon_DiskCardGame_StatIconInfo_System_String_System_Nullable_UnityEngine_FilterMode__
  commentId: M:InscryptionAPI.Card.AbilityExtensions.SetIcon(DiskCardGame.StatIconInfo,System.String,System.Nullable{UnityEngine.FilterMode})
  name.vb: SetIcon(StatIconInfo, String, Nullable(Of FilterMode))
  fullName: InscryptionAPI.Card.AbilityExtensions.SetIcon(DiskCardGame.StatIconInfo, System.String, System.Nullable<UnityEngine.FilterMode>)
  fullName.vb: InscryptionAPI.Card.AbilityExtensions.SetIcon(DiskCardGame.StatIconInfo, System.String, System.Nullable(Of UnityEngine.FilterMode))
  nameWithType: AbilityExtensions.SetIcon(StatIconInfo, String, Nullable<FilterMode>)
  nameWithType.vb: AbilityExtensions.SetIcon(StatIconInfo, String, Nullable(Of FilterMode))
- uid: InscryptionAPI.Card.AbilityExtensions.SetIcon(DiskCardGame.StatIconInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  name: SetIcon(StatIconInfo, Texture2D, Nullable<FilterMode>)
  href: api/InscryptionAPI.Card.AbilityExtensions.html#InscryptionAPI_Card_AbilityExtensions_SetIcon_DiskCardGame_StatIconInfo_UnityEngine_Texture2D_System_Nullable_UnityEngine_FilterMode__
  commentId: M:InscryptionAPI.Card.AbilityExtensions.SetIcon(DiskCardGame.StatIconInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  name.vb: SetIcon(StatIconInfo, Texture2D, Nullable(Of FilterMode))
  fullName: InscryptionAPI.Card.AbilityExtensions.SetIcon(DiskCardGame.StatIconInfo, UnityEngine.Texture2D, System.Nullable<UnityEngine.FilterMode>)
  fullName.vb: InscryptionAPI.Card.AbilityExtensions.SetIcon(DiskCardGame.StatIconInfo, UnityEngine.Texture2D, System.Nullable(Of UnityEngine.FilterMode))
  nameWithType: AbilityExtensions.SetIcon(StatIconInfo, Texture2D, Nullable<FilterMode>)
  nameWithType.vb: AbilityExtensions.SetIcon(StatIconInfo, Texture2D, Nullable(Of FilterMode))
- uid: InscryptionAPI.Card.AbilityExtensions.SetIcon(InscryptionAPI.Card.AbilityManager.FullAbility,UnityEngine.Texture2D)
  name: SetIcon(AbilityManager.FullAbility, Texture2D)
  href: api/InscryptionAPI.Card.AbilityExtensions.html#InscryptionAPI_Card_AbilityExtensions_SetIcon_InscryptionAPI_Card_AbilityManager_FullAbility_UnityEngine_Texture2D_
  commentId: M:InscryptionAPI.Card.AbilityExtensions.SetIcon(InscryptionAPI.Card.AbilityManager.FullAbility,UnityEngine.Texture2D)
  fullName: InscryptionAPI.Card.AbilityExtensions.SetIcon(InscryptionAPI.Card.AbilityManager.FullAbility, UnityEngine.Texture2D)
  nameWithType: AbilityExtensions.SetIcon(AbilityManager.FullAbility, Texture2D)
- uid: InscryptionAPI.Card.AbilityExtensions.SetIcon*
  name: SetIcon
  href: api/InscryptionAPI.Card.AbilityExtensions.html#InscryptionAPI_Card_AbilityExtensions_SetIcon_
  commentId: Overload:InscryptionAPI.Card.AbilityExtensions.SetIcon
  isSpec: "True"
  fullName: InscryptionAPI.Card.AbilityExtensions.SetIcon
  nameWithType: AbilityExtensions.SetIcon
- uid: InscryptionAPI.Card.AbilityExtensions.SetPixelAbilityIcon(DiskCardGame.AbilityInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  name: SetPixelAbilityIcon(AbilityInfo, Texture2D, Nullable<FilterMode>)
  href: api/InscryptionAPI.Card.AbilityExtensions.html#InscryptionAPI_Card_AbilityExtensions_SetPixelAbilityIcon_DiskCardGame_AbilityInfo_UnityEngine_Texture2D_System_Nullable_UnityEngine_FilterMode__
  commentId: M:InscryptionAPI.Card.AbilityExtensions.SetPixelAbilityIcon(DiskCardGame.AbilityInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  name.vb: SetPixelAbilityIcon(AbilityInfo, Texture2D, Nullable(Of FilterMode))
  fullName: InscryptionAPI.Card.AbilityExtensions.SetPixelAbilityIcon(DiskCardGame.AbilityInfo, UnityEngine.Texture2D, System.Nullable<UnityEngine.FilterMode>)
  fullName.vb: InscryptionAPI.Card.AbilityExtensions.SetPixelAbilityIcon(DiskCardGame.AbilityInfo, UnityEngine.Texture2D, System.Nullable(Of UnityEngine.FilterMode))
  nameWithType: AbilityExtensions.SetPixelAbilityIcon(AbilityInfo, Texture2D, Nullable<FilterMode>)
  nameWithType.vb: AbilityExtensions.SetPixelAbilityIcon(AbilityInfo, Texture2D, Nullable(Of FilterMode))
- uid: InscryptionAPI.Card.AbilityExtensions.SetPixelAbilityIcon*
  name: SetPixelAbilityIcon
  href: api/InscryptionAPI.Card.AbilityExtensions.html#InscryptionAPI_Card_AbilityExtensions_SetPixelAbilityIcon_
  commentId: Overload:InscryptionAPI.Card.AbilityExtensions.SetPixelAbilityIcon
  isSpec: "True"
  fullName: InscryptionAPI.Card.AbilityExtensions.SetPixelAbilityIcon
  nameWithType: AbilityExtensions.SetPixelAbilityIcon
- uid: InscryptionAPI.Card.AbilityExtensions.SetPixelIcon(DiskCardGame.StatIconInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  name: SetPixelIcon(StatIconInfo, Texture2D, Nullable<FilterMode>)
  href: api/InscryptionAPI.Card.AbilityExtensions.html#InscryptionAPI_Card_AbilityExtensions_SetPixelIcon_DiskCardGame_StatIconInfo_UnityEngine_Texture2D_System_Nullable_UnityEngine_FilterMode__
  commentId: M:InscryptionAPI.Card.AbilityExtensions.SetPixelIcon(DiskCardGame.StatIconInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  name.vb: SetPixelIcon(StatIconInfo, Texture2D, Nullable(Of FilterMode))
  fullName: InscryptionAPI.Card.AbilityExtensions.SetPixelIcon(DiskCardGame.StatIconInfo, UnityEngine.Texture2D, System.Nullable<UnityEngine.FilterMode>)
  fullName.vb: InscryptionAPI.Card.AbilityExtensions.SetPixelIcon(DiskCardGame.StatIconInfo, UnityEngine.Texture2D, System.Nullable(Of UnityEngine.FilterMode))
  nameWithType: AbilityExtensions.SetPixelIcon(StatIconInfo, Texture2D, Nullable<FilterMode>)
  nameWithType.vb: AbilityExtensions.SetPixelIcon(StatIconInfo, Texture2D, Nullable(Of FilterMode))
- uid: InscryptionAPI.Card.AbilityExtensions.SetPixelIcon*
  name: SetPixelIcon
  href: api/InscryptionAPI.Card.AbilityExtensions.html#InscryptionAPI_Card_AbilityExtensions_SetPixelIcon_
  commentId: Overload:InscryptionAPI.Card.AbilityExtensions.SetPixelIcon
  isSpec: "True"
  fullName: InscryptionAPI.Card.AbilityExtensions.SetPixelIcon
  nameWithType: AbilityExtensions.SetPixelIcon
- uid: InscryptionAPI.Card.AbilityManager
  name: AbilityManager
  href: api/InscryptionAPI.Card.AbilityManager.html
  commentId: T:InscryptionAPI.Card.AbilityManager
  fullName: InscryptionAPI.Card.AbilityManager
  nameWithType: AbilityManager
- uid: InscryptionAPI.Card.AbilityManager.Add(System.String,DiskCardGame.AbilityInfo,Type,UnityEngine.Texture)
  name: Add(String, AbilityInfo, Type, Texture)
  href: api/InscryptionAPI.Card.AbilityManager.html#InscryptionAPI_Card_AbilityManager_Add_System_String_DiskCardGame_AbilityInfo_Type_UnityEngine_Texture_
  commentId: M:InscryptionAPI.Card.AbilityManager.Add(System.String,DiskCardGame.AbilityInfo,Type,UnityEngine.Texture)
  fullName: InscryptionAPI.Card.AbilityManager.Add(System.String, DiskCardGame.AbilityInfo, Type, UnityEngine.Texture)
  nameWithType: AbilityManager.Add(String, AbilityInfo, Type, Texture)
- uid: InscryptionAPI.Card.AbilityManager.Add*
  name: Add
  href: api/InscryptionAPI.Card.AbilityManager.html#InscryptionAPI_Card_AbilityManager_Add_
  commentId: Overload:InscryptionAPI.Card.AbilityManager.Add
  isSpec: "True"
  fullName: InscryptionAPI.Card.AbilityManager.Add
  nameWithType: AbilityManager.Add
- uid: InscryptionAPI.Card.AbilityManager.AllAbilities
  name: AllAbilities
  href: api/InscryptionAPI.Card.AbilityManager.html#InscryptionAPI_Card_AbilityManager_AllAbilities
  commentId: P:InscryptionAPI.Card.AbilityManager.AllAbilities
  fullName: InscryptionAPI.Card.AbilityManager.AllAbilities
  nameWithType: AbilityManager.AllAbilities
- uid: InscryptionAPI.Card.AbilityManager.AllAbilities*
  name: AllAbilities
  href: api/InscryptionAPI.Card.AbilityManager.html#InscryptionAPI_Card_AbilityManager_AllAbilities_
  commentId: Overload:InscryptionAPI.Card.AbilityManager.AllAbilities
  isSpec: "True"
  fullName: InscryptionAPI.Card.AbilityManager.AllAbilities
  nameWithType: AbilityManager.AllAbilities
- uid: InscryptionAPI.Card.AbilityManager.AllAbilityInfos
  name: AllAbilityInfos
  href: api/InscryptionAPI.Card.AbilityManager.html#InscryptionAPI_Card_AbilityManager_AllAbilityInfos
  commentId: P:InscryptionAPI.Card.AbilityManager.AllAbilityInfos
  fullName: InscryptionAPI.Card.AbilityManager.AllAbilityInfos
  nameWithType: AbilityManager.AllAbilityInfos
- uid: InscryptionAPI.Card.AbilityManager.AllAbilityInfos*
  name: AllAbilityInfos
  href: api/InscryptionAPI.Card.AbilityManager.html#InscryptionAPI_Card_AbilityManager_AllAbilityInfos_
  commentId: Overload:InscryptionAPI.Card.AbilityManager.AllAbilityInfos
  isSpec: "True"
  fullName: InscryptionAPI.Card.AbilityManager.AllAbilityInfos
  nameWithType: AbilityManager.AllAbilityInfos
- uid: InscryptionAPI.Card.AbilityManager.BaseGameAbilities
  name: BaseGameAbilities
  href: api/InscryptionAPI.Card.AbilityManager.html#InscryptionAPI_Card_AbilityManager_BaseGameAbilities
  commentId: F:InscryptionAPI.Card.AbilityManager.BaseGameAbilities
  fullName: InscryptionAPI.Card.AbilityManager.BaseGameAbilities
  nameWithType: AbilityManager.BaseGameAbilities
- uid: InscryptionAPI.Card.AbilityManager.FullAbility
  name: AbilityManager.FullAbility
  href: api/InscryptionAPI.Card.AbilityManager.FullAbility.html
  commentId: T:InscryptionAPI.Card.AbilityManager.FullAbility
  fullName: InscryptionAPI.Card.AbilityManager.FullAbility
  nameWithType: AbilityManager.FullAbility
- uid: InscryptionAPI.Card.AbilityManager.FullAbility.#ctor(DiskCardGame.Ability,DiskCardGame.AbilityInfo,Type,UnityEngine.Texture)
  name: FullAbility(Ability, AbilityInfo, Type, Texture)
  href: api/InscryptionAPI.Card.AbilityManager.FullAbility.html#InscryptionAPI_Card_AbilityManager_FullAbility__ctor_DiskCardGame_Ability_DiskCardGame_AbilityInfo_Type_UnityEngine_Texture_
  commentId: M:InscryptionAPI.Card.AbilityManager.FullAbility.#ctor(DiskCardGame.Ability,DiskCardGame.AbilityInfo,Type,UnityEngine.Texture)
  fullName: InscryptionAPI.Card.AbilityManager.FullAbility.FullAbility(DiskCardGame.Ability, DiskCardGame.AbilityInfo, Type, UnityEngine.Texture)
  nameWithType: AbilityManager.FullAbility.FullAbility(Ability, AbilityInfo, Type, Texture)
- uid: InscryptionAPI.Card.AbilityManager.FullAbility.#ctor*
  name: FullAbility
  href: api/InscryptionAPI.Card.AbilityManager.FullAbility.html#InscryptionAPI_Card_AbilityManager_FullAbility__ctor_
  commentId: Overload:InscryptionAPI.Card.AbilityManager.FullAbility.#ctor
  isSpec: "True"
  fullName: InscryptionAPI.Card.AbilityManager.FullAbility.FullAbility
  nameWithType: AbilityManager.FullAbility.FullAbility
- uid: InscryptionAPI.Card.AbilityManager.FullAbility.AbilityBehavior
  name: AbilityBehavior
  href: api/InscryptionAPI.Card.AbilityManager.FullAbility.html#InscryptionAPI_Card_AbilityManager_FullAbility_AbilityBehavior
  commentId: F:InscryptionAPI.Card.AbilityManager.FullAbility.AbilityBehavior
  fullName: InscryptionAPI.Card.AbilityManager.FullAbility.AbilityBehavior
  nameWithType: AbilityManager.FullAbility.AbilityBehavior
- uid: InscryptionAPI.Card.AbilityManager.FullAbility.Clone
  name: Clone()
  href: api/InscryptionAPI.Card.AbilityManager.FullAbility.html#InscryptionAPI_Card_AbilityManager_FullAbility_Clone
  commentId: M:InscryptionAPI.Card.AbilityManager.FullAbility.Clone
  fullName: InscryptionAPI.Card.AbilityManager.FullAbility.Clone()
  nameWithType: AbilityManager.FullAbility.Clone()
- uid: InscryptionAPI.Card.AbilityManager.FullAbility.Clone*
  name: Clone
  href: api/InscryptionAPI.Card.AbilityManager.FullAbility.html#InscryptionAPI_Card_AbilityManager_FullAbility_Clone_
  commentId: Overload:InscryptionAPI.Card.AbilityManager.FullAbility.Clone
  isSpec: "True"
  fullName: InscryptionAPI.Card.AbilityManager.FullAbility.Clone
  nameWithType: AbilityManager.FullAbility.Clone
- uid: InscryptionAPI.Card.AbilityManager.FullAbility.CustomFlippedTexture
  name: CustomFlippedTexture
  href: api/InscryptionAPI.Card.AbilityManager.FullAbility.html#InscryptionAPI_Card_AbilityManager_FullAbility_CustomFlippedTexture
  commentId: P:InscryptionAPI.Card.AbilityManager.FullAbility.CustomFlippedTexture
  fullName: InscryptionAPI.Card.AbilityManager.FullAbility.CustomFlippedTexture
  nameWithType: AbilityManager.FullAbility.CustomFlippedTexture
- uid: InscryptionAPI.Card.AbilityManager.FullAbility.CustomFlippedTexture*
  name: CustomFlippedTexture
  href: api/InscryptionAPI.Card.AbilityManager.FullAbility.html#InscryptionAPI_Card_AbilityManager_FullAbility_CustomFlippedTexture_
  commentId: Overload:InscryptionAPI.Card.AbilityManager.FullAbility.CustomFlippedTexture
  isSpec: "True"
  fullName: InscryptionAPI.Card.AbilityManager.FullAbility.CustomFlippedTexture
  nameWithType: AbilityManager.FullAbility.CustomFlippedTexture
- uid: InscryptionAPI.Card.AbilityManager.FullAbility.Id
  name: Id
  href: api/InscryptionAPI.Card.AbilityManager.FullAbility.html#InscryptionAPI_Card_AbilityManager_FullAbility_Id
  commentId: F:InscryptionAPI.Card.AbilityManager.FullAbility.Id
  fullName: InscryptionAPI.Card.AbilityManager.FullAbility.Id
  nameWithType: AbilityManager.FullAbility.Id
- uid: InscryptionAPI.Card.AbilityManager.FullAbility.Info
  name: Info
  href: api/InscryptionAPI.Card.AbilityManager.FullAbility.html#InscryptionAPI_Card_AbilityManager_FullAbility_Info
  commentId: F:InscryptionAPI.Card.AbilityManager.FullAbility.Info
  fullName: InscryptionAPI.Card.AbilityManager.FullAbility.Info
  nameWithType: AbilityManager.FullAbility.Info
- uid: InscryptionAPI.Card.AbilityManager.FullAbility.Texture
  name: Texture
  href: api/InscryptionAPI.Card.AbilityManager.FullAbility.html#InscryptionAPI_Card_AbilityManager_FullAbility_Texture
  commentId: P:InscryptionAPI.Card.AbilityManager.FullAbility.Texture
  fullName: InscryptionAPI.Card.AbilityManager.FullAbility.Texture
  nameWithType: AbilityManager.FullAbility.Texture
- uid: InscryptionAPI.Card.AbilityManager.FullAbility.Texture*
  name: Texture
  href: api/InscryptionAPI.Card.AbilityManager.FullAbility.html#InscryptionAPI_Card_AbilityManager_FullAbility_Texture_
  commentId: Overload:InscryptionAPI.Card.AbilityManager.FullAbility.Texture
  isSpec: "True"
  fullName: InscryptionAPI.Card.AbilityManager.FullAbility.Texture
  nameWithType: AbilityManager.FullAbility.Texture
- uid: InscryptionAPI.Card.AbilityManager.ModifyAbilityList
  name: ModifyAbilityList
  href: api/InscryptionAPI.Card.AbilityManager.html#InscryptionAPI_Card_AbilityManager_ModifyAbilityList
  commentId: E:InscryptionAPI.Card.AbilityManager.ModifyAbilityList
  fullName: InscryptionAPI.Card.AbilityManager.ModifyAbilityList
  nameWithType: AbilityManager.ModifyAbilityList
- uid: InscryptionAPI.Card.AbilityManager.New(System.String,System.String,System.String,Type,System.String)
  name: New(String, String, String, Type, String)
  href: api/InscryptionAPI.Card.AbilityManager.html#InscryptionAPI_Card_AbilityManager_New_System_String_System_String_System_String_Type_System_String_
  commentId: M:InscryptionAPI.Card.AbilityManager.New(System.String,System.String,System.String,Type,System.String)
  fullName: InscryptionAPI.Card.AbilityManager.New(System.String, System.String, System.String, Type, System.String)
  nameWithType: AbilityManager.New(String, String, String, Type, String)
- uid: InscryptionAPI.Card.AbilityManager.New(System.String,System.String,System.String,Type,UnityEngine.Texture)
  name: New(String, String, String, Type, Texture)
  href: api/InscryptionAPI.Card.AbilityManager.html#InscryptionAPI_Card_AbilityManager_New_System_String_System_String_System_String_Type_UnityEngine_Texture_
  commentId: M:InscryptionAPI.Card.AbilityManager.New(System.String,System.String,System.String,Type,UnityEngine.Texture)
  fullName: InscryptionAPI.Card.AbilityManager.New(System.String, System.String, System.String, Type, UnityEngine.Texture)
  nameWithType: AbilityManager.New(String, String, String, Type, Texture)
- uid: InscryptionAPI.Card.AbilityManager.New*
  name: New
  href: api/InscryptionAPI.Card.AbilityManager.html#InscryptionAPI_Card_AbilityManager_New_
  commentId: Overload:InscryptionAPI.Card.AbilityManager.New
  isSpec: "True"
  fullName: InscryptionAPI.Card.AbilityManager.New
  nameWithType: AbilityManager.New
- uid: InscryptionAPI.Card.AbilityManager.OriginalLoadAbilityIcon(System.String,System.Boolean,System.Boolean)
  name: OriginalLoadAbilityIcon(String, Boolean, Boolean)
  href: api/InscryptionAPI.Card.AbilityManager.html#InscryptionAPI_Card_AbilityManager_OriginalLoadAbilityIcon_System_String_System_Boolean_System_Boolean_
  commentId: M:InscryptionAPI.Card.AbilityManager.OriginalLoadAbilityIcon(System.String,System.Boolean,System.Boolean)
  fullName: InscryptionAPI.Card.AbilityManager.OriginalLoadAbilityIcon(System.String, System.Boolean, System.Boolean)
  nameWithType: AbilityManager.OriginalLoadAbilityIcon(String, Boolean, Boolean)
- uid: InscryptionAPI.Card.AbilityManager.OriginalLoadAbilityIcon*
  name: OriginalLoadAbilityIcon
  href: api/InscryptionAPI.Card.AbilityManager.html#InscryptionAPI_Card_AbilityManager_OriginalLoadAbilityIcon_
  commentId: Overload:InscryptionAPI.Card.AbilityManager.OriginalLoadAbilityIcon
  isSpec: "True"
  fullName: InscryptionAPI.Card.AbilityManager.OriginalLoadAbilityIcon
  nameWithType: AbilityManager.OriginalLoadAbilityIcon
- uid: InscryptionAPI.Card.AbilityManager.Remove(DiskCardGame.Ability)
  name: Remove(Ability)
  href: api/InscryptionAPI.Card.AbilityManager.html#InscryptionAPI_Card_AbilityManager_Remove_DiskCardGame_Ability_
  commentId: M:InscryptionAPI.Card.AbilityManager.Remove(DiskCardGame.Ability)
  fullName: InscryptionAPI.Card.AbilityManager.Remove(DiskCardGame.Ability)
  nameWithType: AbilityManager.Remove(Ability)
- uid: InscryptionAPI.Card.AbilityManager.Remove(InscryptionAPI.Card.AbilityManager.FullAbility)
  name: Remove(AbilityManager.FullAbility)
  href: api/InscryptionAPI.Card.AbilityManager.html#InscryptionAPI_Card_AbilityManager_Remove_InscryptionAPI_Card_AbilityManager_FullAbility_
  commentId: M:InscryptionAPI.Card.AbilityManager.Remove(InscryptionAPI.Card.AbilityManager.FullAbility)
  fullName: InscryptionAPI.Card.AbilityManager.Remove(InscryptionAPI.Card.AbilityManager.FullAbility)
  nameWithType: AbilityManager.Remove(AbilityManager.FullAbility)
- uid: InscryptionAPI.Card.AbilityManager.Remove*
  name: Remove
  href: api/InscryptionAPI.Card.AbilityManager.html#InscryptionAPI_Card_AbilityManager_Remove_
  commentId: Overload:InscryptionAPI.Card.AbilityManager.Remove
  isSpec: "True"
  fullName: InscryptionAPI.Card.AbilityManager.Remove
  nameWithType: AbilityManager.Remove
- uid: InscryptionAPI.Card.AbilityManager.SyncAbilityList
  name: SyncAbilityList()
  href: api/InscryptionAPI.Card.AbilityManager.html#InscryptionAPI_Card_AbilityManager_SyncAbilityList
  commentId: M:InscryptionAPI.Card.AbilityManager.SyncAbilityList
  fullName: InscryptionAPI.Card.AbilityManager.SyncAbilityList()
  nameWithType: AbilityManager.SyncAbilityList()
- uid: InscryptionAPI.Card.AbilityManager.SyncAbilityList*
  name: SyncAbilityList
  href: api/InscryptionAPI.Card.AbilityManager.html#InscryptionAPI_Card_AbilityManager_SyncAbilityList_
  commentId: Overload:InscryptionAPI.Card.AbilityManager.SyncAbilityList
  isSpec: "True"
  fullName: InscryptionAPI.Card.AbilityManager.SyncAbilityList
  nameWithType: AbilityManager.SyncAbilityList
- uid: InscryptionAPI.Card.CardAppearanceBehaviourManager
  name: CardAppearanceBehaviourManager
  href: api/InscryptionAPI.Card.CardAppearanceBehaviourManager.html
  commentId: T:InscryptionAPI.Card.CardAppearanceBehaviourManager
  fullName: InscryptionAPI.Card.CardAppearanceBehaviourManager
  nameWithType: CardAppearanceBehaviourManager
- uid: InscryptionAPI.Card.CardAppearanceBehaviourManager.Add(System.String,System.String,Type)
  name: Add(String, String, Type)
  href: api/InscryptionAPI.Card.CardAppearanceBehaviourManager.html#InscryptionAPI_Card_CardAppearanceBehaviourManager_Add_System_String_System_String_Type_
  commentId: M:InscryptionAPI.Card.CardAppearanceBehaviourManager.Add(System.String,System.String,Type)
  fullName: InscryptionAPI.Card.CardAppearanceBehaviourManager.Add(System.String, System.String, Type)
  nameWithType: CardAppearanceBehaviourManager.Add(String, String, Type)
- uid: InscryptionAPI.Card.CardAppearanceBehaviourManager.Add*
  name: Add
  href: api/InscryptionAPI.Card.CardAppearanceBehaviourManager.html#InscryptionAPI_Card_CardAppearanceBehaviourManager_Add_
  commentId: Overload:InscryptionAPI.Card.CardAppearanceBehaviourManager.Add
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardAppearanceBehaviourManager.Add
  nameWithType: CardAppearanceBehaviourManager.Add
- uid: InscryptionAPI.Card.CardAppearanceBehaviourManager.AllAppearances
  name: AllAppearances
  href: api/InscryptionAPI.Card.CardAppearanceBehaviourManager.html#InscryptionAPI_Card_CardAppearanceBehaviourManager_AllAppearances
  commentId: P:InscryptionAPI.Card.CardAppearanceBehaviourManager.AllAppearances
  fullName: InscryptionAPI.Card.CardAppearanceBehaviourManager.AllAppearances
  nameWithType: CardAppearanceBehaviourManager.AllAppearances
- uid: InscryptionAPI.Card.CardAppearanceBehaviourManager.AllAppearances*
  name: AllAppearances
  href: api/InscryptionAPI.Card.CardAppearanceBehaviourManager.html#InscryptionAPI_Card_CardAppearanceBehaviourManager_AllAppearances_
  commentId: Overload:InscryptionAPI.Card.CardAppearanceBehaviourManager.AllAppearances
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardAppearanceBehaviourManager.AllAppearances
  nameWithType: CardAppearanceBehaviourManager.AllAppearances
- uid: InscryptionAPI.Card.CardAppearanceBehaviourManager.BaseGameAppearances
  name: BaseGameAppearances
  href: api/InscryptionAPI.Card.CardAppearanceBehaviourManager.html#InscryptionAPI_Card_CardAppearanceBehaviourManager_BaseGameAppearances
  commentId: F:InscryptionAPI.Card.CardAppearanceBehaviourManager.BaseGameAppearances
  fullName: InscryptionAPI.Card.CardAppearanceBehaviourManager.BaseGameAppearances
  nameWithType: CardAppearanceBehaviourManager.BaseGameAppearances
- uid: InscryptionAPI.Card.CardAppearanceBehaviourManager.FullCardAppearanceBehaviour
  name: CardAppearanceBehaviourManager.FullCardAppearanceBehaviour
  href: api/InscryptionAPI.Card.CardAppearanceBehaviourManager.FullCardAppearanceBehaviour.html
  commentId: T:InscryptionAPI.Card.CardAppearanceBehaviourManager.FullCardAppearanceBehaviour
  fullName: InscryptionAPI.Card.CardAppearanceBehaviourManager.FullCardAppearanceBehaviour
  nameWithType: CardAppearanceBehaviourManager.FullCardAppearanceBehaviour
- uid: InscryptionAPI.Card.CardAppearanceBehaviourManager.FullCardAppearanceBehaviour.#ctor(DiskCardGame.CardAppearanceBehaviour.Appearance,Type)
  name: FullCardAppearanceBehaviour(CardAppearanceBehaviour.Appearance, Type)
  href: api/InscryptionAPI.Card.CardAppearanceBehaviourManager.FullCardAppearanceBehaviour.html#InscryptionAPI_Card_CardAppearanceBehaviourManager_FullCardAppearanceBehaviour__ctor_DiskCardGame_CardAppearanceBehaviour_Appearance_Type_
  commentId: M:InscryptionAPI.Card.CardAppearanceBehaviourManager.FullCardAppearanceBehaviour.#ctor(DiskCardGame.CardAppearanceBehaviour.Appearance,Type)
  fullName: InscryptionAPI.Card.CardAppearanceBehaviourManager.FullCardAppearanceBehaviour.FullCardAppearanceBehaviour(DiskCardGame.CardAppearanceBehaviour.Appearance, Type)
  nameWithType: CardAppearanceBehaviourManager.FullCardAppearanceBehaviour.FullCardAppearanceBehaviour(CardAppearanceBehaviour.Appearance, Type)
- uid: InscryptionAPI.Card.CardAppearanceBehaviourManager.FullCardAppearanceBehaviour.#ctor*
  name: FullCardAppearanceBehaviour
  href: api/InscryptionAPI.Card.CardAppearanceBehaviourManager.FullCardAppearanceBehaviour.html#InscryptionAPI_Card_CardAppearanceBehaviourManager_FullCardAppearanceBehaviour__ctor_
  commentId: Overload:InscryptionAPI.Card.CardAppearanceBehaviourManager.FullCardAppearanceBehaviour.#ctor
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardAppearanceBehaviourManager.FullCardAppearanceBehaviour.FullCardAppearanceBehaviour
  nameWithType: CardAppearanceBehaviourManager.FullCardAppearanceBehaviour.FullCardAppearanceBehaviour
- uid: InscryptionAPI.Card.CardAppearanceBehaviourManager.FullCardAppearanceBehaviour.AppearanceBehaviour
  name: AppearanceBehaviour
  href: api/InscryptionAPI.Card.CardAppearanceBehaviourManager.FullCardAppearanceBehaviour.html#InscryptionAPI_Card_CardAppearanceBehaviourManager_FullCardAppearanceBehaviour_AppearanceBehaviour
  commentId: F:InscryptionAPI.Card.CardAppearanceBehaviourManager.FullCardAppearanceBehaviour.AppearanceBehaviour
  fullName: InscryptionAPI.Card.CardAppearanceBehaviourManager.FullCardAppearanceBehaviour.AppearanceBehaviour
  nameWithType: CardAppearanceBehaviourManager.FullCardAppearanceBehaviour.AppearanceBehaviour
- uid: InscryptionAPI.Card.CardAppearanceBehaviourManager.FullCardAppearanceBehaviour.Id
  name: Id
  href: api/InscryptionAPI.Card.CardAppearanceBehaviourManager.FullCardAppearanceBehaviour.html#InscryptionAPI_Card_CardAppearanceBehaviourManager_FullCardAppearanceBehaviour_Id
  commentId: F:InscryptionAPI.Card.CardAppearanceBehaviourManager.FullCardAppearanceBehaviour.Id
  fullName: InscryptionAPI.Card.CardAppearanceBehaviourManager.FullCardAppearanceBehaviour.Id
  nameWithType: CardAppearanceBehaviourManager.FullCardAppearanceBehaviour.Id
- uid: InscryptionAPI.Card.CardAppearanceBehaviourManager.Remove(DiskCardGame.CardAppearanceBehaviour.Appearance)
  name: Remove(CardAppearanceBehaviour.Appearance)
  href: api/InscryptionAPI.Card.CardAppearanceBehaviourManager.html#InscryptionAPI_Card_CardAppearanceBehaviourManager_Remove_DiskCardGame_CardAppearanceBehaviour_Appearance_
  commentId: M:InscryptionAPI.Card.CardAppearanceBehaviourManager.Remove(DiskCardGame.CardAppearanceBehaviour.Appearance)
  fullName: InscryptionAPI.Card.CardAppearanceBehaviourManager.Remove(DiskCardGame.CardAppearanceBehaviour.Appearance)
  nameWithType: CardAppearanceBehaviourManager.Remove(CardAppearanceBehaviour.Appearance)
- uid: InscryptionAPI.Card.CardAppearanceBehaviourManager.Remove(InscryptionAPI.Card.CardAppearanceBehaviourManager.FullCardAppearanceBehaviour)
  name: Remove(CardAppearanceBehaviourManager.FullCardAppearanceBehaviour)
  href: api/InscryptionAPI.Card.CardAppearanceBehaviourManager.html#InscryptionAPI_Card_CardAppearanceBehaviourManager_Remove_InscryptionAPI_Card_CardAppearanceBehaviourManager_FullCardAppearanceBehaviour_
  commentId: M:InscryptionAPI.Card.CardAppearanceBehaviourManager.Remove(InscryptionAPI.Card.CardAppearanceBehaviourManager.FullCardAppearanceBehaviour)
  fullName: InscryptionAPI.Card.CardAppearanceBehaviourManager.Remove(InscryptionAPI.Card.CardAppearanceBehaviourManager.FullCardAppearanceBehaviour)
  nameWithType: CardAppearanceBehaviourManager.Remove(CardAppearanceBehaviourManager.FullCardAppearanceBehaviour)
- uid: InscryptionAPI.Card.CardAppearanceBehaviourManager.Remove*
  name: Remove
  href: api/InscryptionAPI.Card.CardAppearanceBehaviourManager.html#InscryptionAPI_Card_CardAppearanceBehaviourManager_Remove_
  commentId: Overload:InscryptionAPI.Card.CardAppearanceBehaviourManager.Remove
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardAppearanceBehaviourManager.Remove
  nameWithType: CardAppearanceBehaviourManager.Remove
- uid: InscryptionAPI.Card.CardExtensions
  name: CardExtensions
  href: api/InscryptionAPI.Card.CardExtensions.html
  commentId: T:InscryptionAPI.Card.CardExtensions
  fullName: InscryptionAPI.Card.CardExtensions
  nameWithType: CardExtensions
- uid: InscryptionAPI.Card.CardExtensions.AddAbilities(DiskCardGame.CardInfo,DiskCardGame.Ability[])
  name: AddAbilities(CardInfo, Ability[])
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_AddAbilities_DiskCardGame_CardInfo_DiskCardGame_Ability___
  commentId: M:InscryptionAPI.Card.CardExtensions.AddAbilities(DiskCardGame.CardInfo,DiskCardGame.Ability[])
  name.vb: AddAbilities(CardInfo, Ability())
  fullName: InscryptionAPI.Card.CardExtensions.AddAbilities(DiskCardGame.CardInfo, DiskCardGame.Ability[])
  fullName.vb: InscryptionAPI.Card.CardExtensions.AddAbilities(DiskCardGame.CardInfo, DiskCardGame.Ability())
  nameWithType: CardExtensions.AddAbilities(CardInfo, Ability[])
  nameWithType.vb: CardExtensions.AddAbilities(CardInfo, Ability())
- uid: InscryptionAPI.Card.CardExtensions.AddAbilities*
  name: AddAbilities
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_AddAbilities_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.AddAbilities
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.AddAbilities
  nameWithType: CardExtensions.AddAbilities
- uid: InscryptionAPI.Card.CardExtensions.AddAppearances(DiskCardGame.CardInfo,DiskCardGame.CardAppearanceBehaviour.Appearance[])
  name: AddAppearances(CardInfo, CardAppearanceBehaviour.Appearance[])
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_AddAppearances_DiskCardGame_CardInfo_DiskCardGame_CardAppearanceBehaviour_Appearance___
  commentId: M:InscryptionAPI.Card.CardExtensions.AddAppearances(DiskCardGame.CardInfo,DiskCardGame.CardAppearanceBehaviour.Appearance[])
  name.vb: AddAppearances(CardInfo, CardAppearanceBehaviour.Appearance())
  fullName: InscryptionAPI.Card.CardExtensions.AddAppearances(DiskCardGame.CardInfo, DiskCardGame.CardAppearanceBehaviour.Appearance[])
  fullName.vb: InscryptionAPI.Card.CardExtensions.AddAppearances(DiskCardGame.CardInfo, DiskCardGame.CardAppearanceBehaviour.Appearance())
  nameWithType: CardExtensions.AddAppearances(CardInfo, CardAppearanceBehaviour.Appearance[])
  nameWithType.vb: CardExtensions.AddAppearances(CardInfo, CardAppearanceBehaviour.Appearance())
- uid: InscryptionAPI.Card.CardExtensions.AddAppearances*
  name: AddAppearances
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_AddAppearances_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.AddAppearances
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.AddAppearances
  nameWithType: CardExtensions.AddAppearances
- uid: InscryptionAPI.Card.CardExtensions.AddDecal(DiskCardGame.CardInfo,System.String[])
  name: AddDecal(CardInfo, String[])
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_AddDecal_DiskCardGame_CardInfo_System_String___
  commentId: M:InscryptionAPI.Card.CardExtensions.AddDecal(DiskCardGame.CardInfo,System.String[])
  name.vb: AddDecal(CardInfo, String())
  fullName: InscryptionAPI.Card.CardExtensions.AddDecal(DiskCardGame.CardInfo, System.String[])
  fullName.vb: InscryptionAPI.Card.CardExtensions.AddDecal(DiskCardGame.CardInfo, System.String())
  nameWithType: CardExtensions.AddDecal(CardInfo, String[])
  nameWithType.vb: CardExtensions.AddDecal(CardInfo, String())
- uid: InscryptionAPI.Card.CardExtensions.AddDecal(DiskCardGame.CardInfo,UnityEngine.Texture[])
  name: AddDecal(CardInfo, Texture[])
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_AddDecal_DiskCardGame_CardInfo_UnityEngine_Texture___
  commentId: M:InscryptionAPI.Card.CardExtensions.AddDecal(DiskCardGame.CardInfo,UnityEngine.Texture[])
  name.vb: AddDecal(CardInfo, Texture())
  fullName: InscryptionAPI.Card.CardExtensions.AddDecal(DiskCardGame.CardInfo, UnityEngine.Texture[])
  fullName.vb: InscryptionAPI.Card.CardExtensions.AddDecal(DiskCardGame.CardInfo, UnityEngine.Texture())
  nameWithType: CardExtensions.AddDecal(CardInfo, Texture[])
  nameWithType.vb: CardExtensions.AddDecal(CardInfo, Texture())
- uid: InscryptionAPI.Card.CardExtensions.AddDecal*
  name: AddDecal
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_AddDecal_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.AddDecal
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.AddDecal
  nameWithType: CardExtensions.AddDecal
- uid: InscryptionAPI.Card.CardExtensions.AddMetaCategories(DiskCardGame.CardInfo,DiskCardGame.CardMetaCategory[])
  name: AddMetaCategories(CardInfo, CardMetaCategory[])
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_AddMetaCategories_DiskCardGame_CardInfo_DiskCardGame_CardMetaCategory___
  commentId: M:InscryptionAPI.Card.CardExtensions.AddMetaCategories(DiskCardGame.CardInfo,DiskCardGame.CardMetaCategory[])
  name.vb: AddMetaCategories(CardInfo, CardMetaCategory())
  fullName: InscryptionAPI.Card.CardExtensions.AddMetaCategories(DiskCardGame.CardInfo, DiskCardGame.CardMetaCategory[])
  fullName.vb: InscryptionAPI.Card.CardExtensions.AddMetaCategories(DiskCardGame.CardInfo, DiskCardGame.CardMetaCategory())
  nameWithType: CardExtensions.AddMetaCategories(CardInfo, CardMetaCategory[])
  nameWithType.vb: CardExtensions.AddMetaCategories(CardInfo, CardMetaCategory())
- uid: InscryptionAPI.Card.CardExtensions.AddMetaCategories*
  name: AddMetaCategories
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_AddMetaCategories_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.AddMetaCategories
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.AddMetaCategories
  nameWithType: CardExtensions.AddMetaCategories
- uid: InscryptionAPI.Card.CardExtensions.AddSpecialAbilities(DiskCardGame.CardInfo,DiskCardGame.SpecialTriggeredAbility[])
  name: AddSpecialAbilities(CardInfo, SpecialTriggeredAbility[])
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_AddSpecialAbilities_DiskCardGame_CardInfo_DiskCardGame_SpecialTriggeredAbility___
  commentId: M:InscryptionAPI.Card.CardExtensions.AddSpecialAbilities(DiskCardGame.CardInfo,DiskCardGame.SpecialTriggeredAbility[])
  name.vb: AddSpecialAbilities(CardInfo, SpecialTriggeredAbility())
  fullName: InscryptionAPI.Card.CardExtensions.AddSpecialAbilities(DiskCardGame.CardInfo, DiskCardGame.SpecialTriggeredAbility[])
  fullName.vb: InscryptionAPI.Card.CardExtensions.AddSpecialAbilities(DiskCardGame.CardInfo, DiskCardGame.SpecialTriggeredAbility())
  nameWithType: CardExtensions.AddSpecialAbilities(CardInfo, SpecialTriggeredAbility[])
  nameWithType.vb: CardExtensions.AddSpecialAbilities(CardInfo, SpecialTriggeredAbility())
- uid: InscryptionAPI.Card.CardExtensions.AddSpecialAbilities*
  name: AddSpecialAbilities
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_AddSpecialAbilities_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.AddSpecialAbilities
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.AddSpecialAbilities
  nameWithType: CardExtensions.AddSpecialAbilities
- uid: InscryptionAPI.Card.CardExtensions.AddTraits(DiskCardGame.CardInfo,DiskCardGame.Trait[])
  name: AddTraits(CardInfo, Trait[])
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_AddTraits_DiskCardGame_CardInfo_DiskCardGame_Trait___
  commentId: M:InscryptionAPI.Card.CardExtensions.AddTraits(DiskCardGame.CardInfo,DiskCardGame.Trait[])
  name.vb: AddTraits(CardInfo, Trait())
  fullName: InscryptionAPI.Card.CardExtensions.AddTraits(DiskCardGame.CardInfo, DiskCardGame.Trait[])
  fullName.vb: InscryptionAPI.Card.CardExtensions.AddTraits(DiskCardGame.CardInfo, DiskCardGame.Trait())
  nameWithType: CardExtensions.AddTraits(CardInfo, Trait[])
  nameWithType.vb: CardExtensions.AddTraits(CardInfo, Trait())
- uid: InscryptionAPI.Card.CardExtensions.AddTraits*
  name: AddTraits
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_AddTraits_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.AddTraits
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.AddTraits
  nameWithType: CardExtensions.AddTraits
- uid: InscryptionAPI.Card.CardExtensions.AddTribes(DiskCardGame.CardInfo,DiskCardGame.Tribe[])
  name: AddTribes(CardInfo, Tribe[])
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_AddTribes_DiskCardGame_CardInfo_DiskCardGame_Tribe___
  commentId: M:InscryptionAPI.Card.CardExtensions.AddTribes(DiskCardGame.CardInfo,DiskCardGame.Tribe[])
  name.vb: AddTribes(CardInfo, Tribe())
  fullName: InscryptionAPI.Card.CardExtensions.AddTribes(DiskCardGame.CardInfo, DiskCardGame.Tribe[])
  fullName.vb: InscryptionAPI.Card.CardExtensions.AddTribes(DiskCardGame.CardInfo, DiskCardGame.Tribe())
  nameWithType: CardExtensions.AddTribes(CardInfo, Tribe[])
  nameWithType.vb: CardExtensions.AddTribes(CardInfo, Tribe())
- uid: InscryptionAPI.Card.CardExtensions.AddTribes*
  name: AddTribes
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_AddTribes_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.AddTribes
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.AddTribes
  nameWithType: CardExtensions.AddTribes
- uid: InscryptionAPI.Card.CardExtensions.AllAbilities(DiskCardGame.PlayableCard)
  name: AllAbilities(PlayableCard)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_AllAbilities_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Card.CardExtensions.AllAbilities(DiskCardGame.PlayableCard)
  fullName: InscryptionAPI.Card.CardExtensions.AllAbilities(DiskCardGame.PlayableCard)
  nameWithType: CardExtensions.AllAbilities(PlayableCard)
- uid: InscryptionAPI.Card.CardExtensions.AllAbilities*
  name: AllAbilities
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_AllAbilities_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.AllAbilities
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.AllAbilities
  nameWithType: CardExtensions.AllAbilities
- uid: InscryptionAPI.Card.CardExtensions.AllSpecialAbilities(DiskCardGame.PlayableCard)
  name: AllSpecialAbilities(PlayableCard)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_AllSpecialAbilities_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Card.CardExtensions.AllSpecialAbilities(DiskCardGame.PlayableCard)
  fullName: InscryptionAPI.Card.CardExtensions.AllSpecialAbilities(DiskCardGame.PlayableCard)
  nameWithType: CardExtensions.AllSpecialAbilities(PlayableCard)
- uid: InscryptionAPI.Card.CardExtensions.AllSpecialAbilities*
  name: AllSpecialAbilities
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_AllSpecialAbilities_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.AllSpecialAbilities
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.AllSpecialAbilities
  nameWithType: CardExtensions.AllSpecialAbilities
- uid: InscryptionAPI.Card.CardExtensions.CardByName(System.Collections.IEnumerable{DiskCardGame.CardInfo},System.String)
  name: CardByName(IEnumerable<CardInfo>, String)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_CardByName_System_Collections_IEnumerable_DiskCardGame_CardInfo__System_String_
  commentId: M:InscryptionAPI.Card.CardExtensions.CardByName(System.Collections.IEnumerable{DiskCardGame.CardInfo},System.String)
  name.vb: CardByName(IEnumerable(Of CardInfo), String)
  fullName: InscryptionAPI.Card.CardExtensions.CardByName(System.Collections.IEnumerable<DiskCardGame.CardInfo>, System.String)
  fullName.vb: InscryptionAPI.Card.CardExtensions.CardByName(System.Collections.IEnumerable(Of DiskCardGame.CardInfo), System.String)
  nameWithType: CardExtensions.CardByName(IEnumerable<CardInfo>, String)
  nameWithType.vb: CardExtensions.CardByName(IEnumerable(Of CardInfo), String)
- uid: InscryptionAPI.Card.CardExtensions.CardByName*
  name: CardByName
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_CardByName_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.CardByName
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.CardByName
  nameWithType: CardExtensions.CardByName
- uid: InscryptionAPI.Card.CardExtensions.CreateBlueprint(DiskCardGame.CardInfo)
  name: CreateBlueprint(CardInfo)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_CreateBlueprint_DiskCardGame_CardInfo_
  commentId: M:InscryptionAPI.Card.CardExtensions.CreateBlueprint(DiskCardGame.CardInfo)
  fullName: InscryptionAPI.Card.CardExtensions.CreateBlueprint(DiskCardGame.CardInfo)
  nameWithType: CardExtensions.CreateBlueprint(CardInfo)
- uid: InscryptionAPI.Card.CardExtensions.CreateBlueprint*
  name: CreateBlueprint
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_CreateBlueprint_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.CreateBlueprint
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.CreateBlueprint
  nameWithType: CardExtensions.CreateBlueprint
- uid: InscryptionAPI.Card.CardExtensions.GetAbilitiesFromAllMods(DiskCardGame.PlayableCard)
  name: GetAbilitiesFromAllMods(PlayableCard)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_GetAbilitiesFromAllMods_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Card.CardExtensions.GetAbilitiesFromAllMods(DiskCardGame.PlayableCard)
  fullName: InscryptionAPI.Card.CardExtensions.GetAbilitiesFromAllMods(DiskCardGame.PlayableCard)
  nameWithType: CardExtensions.GetAbilitiesFromAllMods(PlayableCard)
- uid: InscryptionAPI.Card.CardExtensions.GetAbilitiesFromAllMods*
  name: GetAbilitiesFromAllMods
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_GetAbilitiesFromAllMods_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.GetAbilitiesFromAllMods
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.GetAbilitiesFromAllMods
  nameWithType: CardExtensions.GetAbilitiesFromAllMods
- uid: InscryptionAPI.Card.CardExtensions.GetExtendedProperty(DiskCardGame.CardInfo,System.String)
  name: GetExtendedProperty(CardInfo, String)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_GetExtendedProperty_DiskCardGame_CardInfo_System_String_
  commentId: M:InscryptionAPI.Card.CardExtensions.GetExtendedProperty(DiskCardGame.CardInfo,System.String)
  fullName: InscryptionAPI.Card.CardExtensions.GetExtendedProperty(DiskCardGame.CardInfo, System.String)
  nameWithType: CardExtensions.GetExtendedProperty(CardInfo, String)
- uid: InscryptionAPI.Card.CardExtensions.GetExtendedProperty*
  name: GetExtendedProperty
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_GetExtendedProperty_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.GetExtendedProperty
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.GetExtendedProperty
  nameWithType: CardExtensions.GetExtendedProperty
- uid: InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsBool(DiskCardGame.CardInfo,System.String)
  name: GetExtendedPropertyAsBool(CardInfo, String)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_GetExtendedPropertyAsBool_DiskCardGame_CardInfo_System_String_
  commentId: M:InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsBool(DiskCardGame.CardInfo,System.String)
  fullName: InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsBool(DiskCardGame.CardInfo, System.String)
  nameWithType: CardExtensions.GetExtendedPropertyAsBool(CardInfo, String)
- uid: InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsBool*
  name: GetExtendedPropertyAsBool
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_GetExtendedPropertyAsBool_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsBool
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsBool
  nameWithType: CardExtensions.GetExtendedPropertyAsBool
- uid: InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsFloat(DiskCardGame.CardInfo,System.String)
  name: GetExtendedPropertyAsFloat(CardInfo, String)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_GetExtendedPropertyAsFloat_DiskCardGame_CardInfo_System_String_
  commentId: M:InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsFloat(DiskCardGame.CardInfo,System.String)
  fullName: InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsFloat(DiskCardGame.CardInfo, System.String)
  nameWithType: CardExtensions.GetExtendedPropertyAsFloat(CardInfo, String)
- uid: InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsFloat*
  name: GetExtendedPropertyAsFloat
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_GetExtendedPropertyAsFloat_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsFloat
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsFloat
  nameWithType: CardExtensions.GetExtendedPropertyAsFloat
- uid: InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsInt(DiskCardGame.CardInfo,System.String)
  name: GetExtendedPropertyAsInt(CardInfo, String)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_GetExtendedPropertyAsInt_DiskCardGame_CardInfo_System_String_
  commentId: M:InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsInt(DiskCardGame.CardInfo,System.String)
  fullName: InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsInt(DiskCardGame.CardInfo, System.String)
  nameWithType: CardExtensions.GetExtendedPropertyAsInt(CardInfo, String)
- uid: InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsInt*
  name: GetExtendedPropertyAsInt
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_GetExtendedPropertyAsInt_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsInt
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsInt
  nameWithType: CardExtensions.GetExtendedPropertyAsInt
- uid: InscryptionAPI.Card.CardExtensions.GetModPrefix(DiskCardGame.CardInfo)
  name: GetModPrefix(CardInfo)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_GetModPrefix_DiskCardGame_CardInfo_
  commentId: M:InscryptionAPI.Card.CardExtensions.GetModPrefix(DiskCardGame.CardInfo)
  fullName: InscryptionAPI.Card.CardExtensions.GetModPrefix(DiskCardGame.CardInfo)
  nameWithType: CardExtensions.GetModPrefix(CardInfo)
- uid: InscryptionAPI.Card.CardExtensions.GetModPrefix*
  name: GetModPrefix
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_GetModPrefix_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.GetModPrefix
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.GetModPrefix
  nameWithType: CardExtensions.GetModPrefix
- uid: InscryptionAPI.Card.CardExtensions.GetModTag(DiskCardGame.CardInfo)
  name: GetModTag(CardInfo)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_GetModTag_DiskCardGame_CardInfo_
  commentId: M:InscryptionAPI.Card.CardExtensions.GetModTag(DiskCardGame.CardInfo)
  fullName: InscryptionAPI.Card.CardExtensions.GetModTag(DiskCardGame.CardInfo)
  nameWithType: CardExtensions.GetModTag(CardInfo)
- uid: InscryptionAPI.Card.CardExtensions.GetModTag*
  name: GetModTag
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_GetModTag_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.GetModTag
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.GetModTag
  nameWithType: CardExtensions.GetModTag
- uid: InscryptionAPI.Card.CardExtensions.HasOpposingCard(DiskCardGame.PlayableCard)
  name: HasOpposingCard(PlayableCard)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_HasOpposingCard_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Card.CardExtensions.HasOpposingCard(DiskCardGame.PlayableCard)
  fullName: InscryptionAPI.Card.CardExtensions.HasOpposingCard(DiskCardGame.PlayableCard)
  nameWithType: CardExtensions.HasOpposingCard(PlayableCard)
- uid: InscryptionAPI.Card.CardExtensions.HasOpposingCard*
  name: HasOpposingCard
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_HasOpposingCard_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.HasOpposingCard
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.HasOpposingCard
  nameWithType: CardExtensions.HasOpposingCard
- uid: InscryptionAPI.Card.CardExtensions.HasSpecialAbility(DiskCardGame.CardInfo,DiskCardGame.SpecialTriggeredAbility)
  name: HasSpecialAbility(CardInfo, SpecialTriggeredAbility)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_HasSpecialAbility_DiskCardGame_CardInfo_DiskCardGame_SpecialTriggeredAbility_
  commentId: M:InscryptionAPI.Card.CardExtensions.HasSpecialAbility(DiskCardGame.CardInfo,DiskCardGame.SpecialTriggeredAbility)
  fullName: InscryptionAPI.Card.CardExtensions.HasSpecialAbility(DiskCardGame.CardInfo, DiskCardGame.SpecialTriggeredAbility)
  nameWithType: CardExtensions.HasSpecialAbility(CardInfo, SpecialTriggeredAbility)
- uid: InscryptionAPI.Card.CardExtensions.HasSpecialAbility(DiskCardGame.PlayableCard,DiskCardGame.SpecialTriggeredAbility)
  name: HasSpecialAbility(PlayableCard, SpecialTriggeredAbility)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_HasSpecialAbility_DiskCardGame_PlayableCard_DiskCardGame_SpecialTriggeredAbility_
  commentId: M:InscryptionAPI.Card.CardExtensions.HasSpecialAbility(DiskCardGame.PlayableCard,DiskCardGame.SpecialTriggeredAbility)
  fullName: InscryptionAPI.Card.CardExtensions.HasSpecialAbility(DiskCardGame.PlayableCard, DiskCardGame.SpecialTriggeredAbility)
  nameWithType: CardExtensions.HasSpecialAbility(PlayableCard, SpecialTriggeredAbility)
- uid: InscryptionAPI.Card.CardExtensions.HasSpecialAbility*
  name: HasSpecialAbility
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_HasSpecialAbility_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.HasSpecialAbility
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.HasSpecialAbility
  nameWithType: CardExtensions.HasSpecialAbility
- uid: InscryptionAPI.Card.CardExtensions.HasTrait(DiskCardGame.PlayableCard,DiskCardGame.Trait)
  name: HasTrait(PlayableCard, Trait)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_HasTrait_DiskCardGame_PlayableCard_DiskCardGame_Trait_
  commentId: M:InscryptionAPI.Card.CardExtensions.HasTrait(DiskCardGame.PlayableCard,DiskCardGame.Trait)
  fullName: InscryptionAPI.Card.CardExtensions.HasTrait(DiskCardGame.PlayableCard, DiskCardGame.Trait)
  nameWithType: CardExtensions.HasTrait(PlayableCard, Trait)
- uid: InscryptionAPI.Card.CardExtensions.HasTrait*
  name: HasTrait
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_HasTrait_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.HasTrait
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.HasTrait
  nameWithType: CardExtensions.HasTrait
- uid: InscryptionAPI.Card.CardExtensions.IsBaseGameCard(DiskCardGame.CardInfo)
  name: IsBaseGameCard(CardInfo)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_IsBaseGameCard_DiskCardGame_CardInfo_
  commentId: M:InscryptionAPI.Card.CardExtensions.IsBaseGameCard(DiskCardGame.CardInfo)
  fullName: InscryptionAPI.Card.CardExtensions.IsBaseGameCard(DiskCardGame.CardInfo)
  nameWithType: CardExtensions.IsBaseGameCard(CardInfo)
- uid: InscryptionAPI.Card.CardExtensions.IsBaseGameCard*
  name: IsBaseGameCard
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_IsBaseGameCard_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.IsBaseGameCard
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.IsBaseGameCard
  nameWithType: CardExtensions.IsBaseGameCard
- uid: InscryptionAPI.Card.CardExtensions.IsNotOfTribe(DiskCardGame.CardInfo,DiskCardGame.Tribe)
  name: IsNotOfTribe(CardInfo, Tribe)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_IsNotOfTribe_DiskCardGame_CardInfo_DiskCardGame_Tribe_
  commentId: M:InscryptionAPI.Card.CardExtensions.IsNotOfTribe(DiskCardGame.CardInfo,DiskCardGame.Tribe)
  fullName: InscryptionAPI.Card.CardExtensions.IsNotOfTribe(DiskCardGame.CardInfo, DiskCardGame.Tribe)
  nameWithType: CardExtensions.IsNotOfTribe(CardInfo, Tribe)
- uid: InscryptionAPI.Card.CardExtensions.IsNotOfTribe(DiskCardGame.PlayableCard,DiskCardGame.Tribe)
  name: IsNotOfTribe(PlayableCard, Tribe)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_IsNotOfTribe_DiskCardGame_PlayableCard_DiskCardGame_Tribe_
  commentId: M:InscryptionAPI.Card.CardExtensions.IsNotOfTribe(DiskCardGame.PlayableCard,DiskCardGame.Tribe)
  fullName: InscryptionAPI.Card.CardExtensions.IsNotOfTribe(DiskCardGame.PlayableCard, DiskCardGame.Tribe)
  nameWithType: CardExtensions.IsNotOfTribe(PlayableCard, Tribe)
- uid: InscryptionAPI.Card.CardExtensions.IsNotOfTribe*
  name: IsNotOfTribe
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_IsNotOfTribe_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.IsNotOfTribe
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.IsNotOfTribe
  nameWithType: CardExtensions.IsNotOfTribe
- uid: InscryptionAPI.Card.CardExtensions.IsOfTribe(DiskCardGame.PlayableCard,DiskCardGame.Tribe)
  name: IsOfTribe(PlayableCard, Tribe)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_IsOfTribe_DiskCardGame_PlayableCard_DiskCardGame_Tribe_
  commentId: M:InscryptionAPI.Card.CardExtensions.IsOfTribe(DiskCardGame.PlayableCard,DiskCardGame.Tribe)
  fullName: InscryptionAPI.Card.CardExtensions.IsOfTribe(DiskCardGame.PlayableCard, DiskCardGame.Tribe)
  nameWithType: CardExtensions.IsOfTribe(PlayableCard, Tribe)
- uid: InscryptionAPI.Card.CardExtensions.IsOfTribe*
  name: IsOfTribe
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_IsOfTribe_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.IsOfTribe
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.IsOfTribe
  nameWithType: CardExtensions.IsOfTribe
- uid: InscryptionAPI.Card.CardExtensions.IsPlayerCard(DiskCardGame.PlayableCard)
  name: IsPlayerCard(PlayableCard)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_IsPlayerCard_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Card.CardExtensions.IsPlayerCard(DiskCardGame.PlayableCard)
  fullName: InscryptionAPI.Card.CardExtensions.IsPlayerCard(DiskCardGame.PlayableCard)
  nameWithType: CardExtensions.IsPlayerCard(PlayableCard)
- uid: InscryptionAPI.Card.CardExtensions.IsPlayerCard*
  name: IsPlayerCard
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_IsPlayerCard_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.IsPlayerCard
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.IsPlayerCard
  nameWithType: CardExtensions.IsPlayerCard
- uid: InscryptionAPI.Card.CardExtensions.LacksAbility(DiskCardGame.CardInfo,DiskCardGame.Ability)
  name: LacksAbility(CardInfo, Ability)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_LacksAbility_DiskCardGame_CardInfo_DiskCardGame_Ability_
  commentId: M:InscryptionAPI.Card.CardExtensions.LacksAbility(DiskCardGame.CardInfo,DiskCardGame.Ability)
  fullName: InscryptionAPI.Card.CardExtensions.LacksAbility(DiskCardGame.CardInfo, DiskCardGame.Ability)
  nameWithType: CardExtensions.LacksAbility(CardInfo, Ability)
- uid: InscryptionAPI.Card.CardExtensions.LacksAbility(DiskCardGame.PlayableCard,DiskCardGame.Ability)
  name: LacksAbility(PlayableCard, Ability)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_LacksAbility_DiskCardGame_PlayableCard_DiskCardGame_Ability_
  commentId: M:InscryptionAPI.Card.CardExtensions.LacksAbility(DiskCardGame.PlayableCard,DiskCardGame.Ability)
  fullName: InscryptionAPI.Card.CardExtensions.LacksAbility(DiskCardGame.PlayableCard, DiskCardGame.Ability)
  nameWithType: CardExtensions.LacksAbility(PlayableCard, Ability)
- uid: InscryptionAPI.Card.CardExtensions.LacksAbility*
  name: LacksAbility
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_LacksAbility_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.LacksAbility
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.LacksAbility
  nameWithType: CardExtensions.LacksAbility
- uid: InscryptionAPI.Card.CardExtensions.LacksSpecialAbility(DiskCardGame.CardInfo,DiskCardGame.SpecialTriggeredAbility)
  name: LacksSpecialAbility(CardInfo, SpecialTriggeredAbility)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_LacksSpecialAbility_DiskCardGame_CardInfo_DiskCardGame_SpecialTriggeredAbility_
  commentId: M:InscryptionAPI.Card.CardExtensions.LacksSpecialAbility(DiskCardGame.CardInfo,DiskCardGame.SpecialTriggeredAbility)
  fullName: InscryptionAPI.Card.CardExtensions.LacksSpecialAbility(DiskCardGame.CardInfo, DiskCardGame.SpecialTriggeredAbility)
  nameWithType: CardExtensions.LacksSpecialAbility(CardInfo, SpecialTriggeredAbility)
- uid: InscryptionAPI.Card.CardExtensions.LacksSpecialAbility(DiskCardGame.PlayableCard,DiskCardGame.SpecialTriggeredAbility)
  name: LacksSpecialAbility(PlayableCard, SpecialTriggeredAbility)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_LacksSpecialAbility_DiskCardGame_PlayableCard_DiskCardGame_SpecialTriggeredAbility_
  commentId: M:InscryptionAPI.Card.CardExtensions.LacksSpecialAbility(DiskCardGame.PlayableCard,DiskCardGame.SpecialTriggeredAbility)
  fullName: InscryptionAPI.Card.CardExtensions.LacksSpecialAbility(DiskCardGame.PlayableCard, DiskCardGame.SpecialTriggeredAbility)
  nameWithType: CardExtensions.LacksSpecialAbility(PlayableCard, SpecialTriggeredAbility)
- uid: InscryptionAPI.Card.CardExtensions.LacksSpecialAbility*
  name: LacksSpecialAbility
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_LacksSpecialAbility_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.LacksSpecialAbility
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.LacksSpecialAbility
  nameWithType: CardExtensions.LacksSpecialAbility
- uid: InscryptionAPI.Card.CardExtensions.LacksTrait(DiskCardGame.CardInfo,DiskCardGame.Trait)
  name: LacksTrait(CardInfo, Trait)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_LacksTrait_DiskCardGame_CardInfo_DiskCardGame_Trait_
  commentId: M:InscryptionAPI.Card.CardExtensions.LacksTrait(DiskCardGame.CardInfo,DiskCardGame.Trait)
  fullName: InscryptionAPI.Card.CardExtensions.LacksTrait(DiskCardGame.CardInfo, DiskCardGame.Trait)
  nameWithType: CardExtensions.LacksTrait(CardInfo, Trait)
- uid: InscryptionAPI.Card.CardExtensions.LacksTrait(DiskCardGame.PlayableCard,DiskCardGame.Trait)
  name: LacksTrait(PlayableCard, Trait)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_LacksTrait_DiskCardGame_PlayableCard_DiskCardGame_Trait_
  commentId: M:InscryptionAPI.Card.CardExtensions.LacksTrait(DiskCardGame.PlayableCard,DiskCardGame.Trait)
  fullName: InscryptionAPI.Card.CardExtensions.LacksTrait(DiskCardGame.PlayableCard, DiskCardGame.Trait)
  nameWithType: CardExtensions.LacksTrait(PlayableCard, Trait)
- uid: InscryptionAPI.Card.CardExtensions.LacksTrait*
  name: LacksTrait
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_LacksTrait_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.LacksTrait
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.LacksTrait
  nameWithType: CardExtensions.LacksTrait
- uid: InscryptionAPI.Card.CardExtensions.NotDead(DiskCardGame.PlayableCard)
  name: NotDead(PlayableCard)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_NotDead_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Card.CardExtensions.NotDead(DiskCardGame.PlayableCard)
  fullName: InscryptionAPI.Card.CardExtensions.NotDead(DiskCardGame.PlayableCard)
  nameWithType: CardExtensions.NotDead(PlayableCard)
- uid: InscryptionAPI.Card.CardExtensions.NotDead*
  name: NotDead
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_NotDead_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.NotDead
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.NotDead
  nameWithType: CardExtensions.NotDead
- uid: InscryptionAPI.Card.CardExtensions.OpposingCard(DiskCardGame.PlayableCard)
  name: OpposingCard(PlayableCard)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_OpposingCard_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Card.CardExtensions.OpposingCard(DiskCardGame.PlayableCard)
  fullName: InscryptionAPI.Card.CardExtensions.OpposingCard(DiskCardGame.PlayableCard)
  nameWithType: CardExtensions.OpposingCard(PlayableCard)
- uid: InscryptionAPI.Card.CardExtensions.OpposingCard*
  name: OpposingCard
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_OpposingCard_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.OpposingCard
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.OpposingCard
  nameWithType: CardExtensions.OpposingCard
- uid: InscryptionAPI.Card.CardExtensions.OpposingSlot(DiskCardGame.PlayableCard)
  name: OpposingSlot(PlayableCard)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_OpposingSlot_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Card.CardExtensions.OpposingSlot(DiskCardGame.PlayableCard)
  fullName: InscryptionAPI.Card.CardExtensions.OpposingSlot(DiskCardGame.PlayableCard)
  nameWithType: CardExtensions.OpposingSlot(PlayableCard)
- uid: InscryptionAPI.Card.CardExtensions.OpposingSlot*
  name: OpposingSlot
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_OpposingSlot_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.OpposingSlot
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.OpposingSlot
  nameWithType: CardExtensions.OpposingSlot
- uid: InscryptionAPI.Card.CardExtensions.OtherCardIsOnSameSide(DiskCardGame.PlayableCard,DiskCardGame.PlayableCard)
  name: OtherCardIsOnSameSide(PlayableCard, PlayableCard)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_OtherCardIsOnSameSide_DiskCardGame_PlayableCard_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Card.CardExtensions.OtherCardIsOnSameSide(DiskCardGame.PlayableCard,DiskCardGame.PlayableCard)
  fullName: InscryptionAPI.Card.CardExtensions.OtherCardIsOnSameSide(DiskCardGame.PlayableCard, DiskCardGame.PlayableCard)
  nameWithType: CardExtensions.OtherCardIsOnSameSide(PlayableCard, PlayableCard)
- uid: InscryptionAPI.Card.CardExtensions.OtherCardIsOnSameSide*
  name: OtherCardIsOnSameSide
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_OtherCardIsOnSameSide_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.OtherCardIsOnSameSide
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.OtherCardIsOnSameSide
  nameWithType: CardExtensions.OtherCardIsOnSameSide
- uid: InscryptionAPI.Card.CardExtensions.SetAltPortrait(DiskCardGame.CardInfo,System.String)
  name: SetAltPortrait(CardInfo, String)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetAltPortrait_DiskCardGame_CardInfo_System_String_
  commentId: M:InscryptionAPI.Card.CardExtensions.SetAltPortrait(DiskCardGame.CardInfo,System.String)
  fullName: InscryptionAPI.Card.CardExtensions.SetAltPortrait(DiskCardGame.CardInfo, System.String)
  nameWithType: CardExtensions.SetAltPortrait(CardInfo, String)
- uid: InscryptionAPI.Card.CardExtensions.SetAltPortrait(DiskCardGame.CardInfo,UnityEngine.Sprite)
  name: SetAltPortrait(CardInfo, Sprite)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetAltPortrait_DiskCardGame_CardInfo_UnityEngine_Sprite_
  commentId: M:InscryptionAPI.Card.CardExtensions.SetAltPortrait(DiskCardGame.CardInfo,UnityEngine.Sprite)
  fullName: InscryptionAPI.Card.CardExtensions.SetAltPortrait(DiskCardGame.CardInfo, UnityEngine.Sprite)
  nameWithType: CardExtensions.SetAltPortrait(CardInfo, Sprite)
- uid: InscryptionAPI.Card.CardExtensions.SetAltPortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  name: SetAltPortrait(CardInfo, Texture2D, Nullable<FilterMode>)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetAltPortrait_DiskCardGame_CardInfo_UnityEngine_Texture2D_System_Nullable_UnityEngine_FilterMode__
  commentId: M:InscryptionAPI.Card.CardExtensions.SetAltPortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  name.vb: SetAltPortrait(CardInfo, Texture2D, Nullable(Of FilterMode))
  fullName: InscryptionAPI.Card.CardExtensions.SetAltPortrait(DiskCardGame.CardInfo, UnityEngine.Texture2D, System.Nullable<UnityEngine.FilterMode>)
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetAltPortrait(DiskCardGame.CardInfo, UnityEngine.Texture2D, System.Nullable(Of UnityEngine.FilterMode))
  nameWithType: CardExtensions.SetAltPortrait(CardInfo, Texture2D, Nullable<FilterMode>)
  nameWithType.vb: CardExtensions.SetAltPortrait(CardInfo, Texture2D, Nullable(Of FilterMode))
- uid: InscryptionAPI.Card.CardExtensions.SetAltPortrait*
  name: SetAltPortrait
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetAltPortrait_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetAltPortrait
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetAltPortrait
  nameWithType: CardExtensions.SetAltPortrait
- uid: InscryptionAPI.Card.CardExtensions.SetBaseAttackAndHealth(DiskCardGame.CardInfo,System.Nullable{System.Int32},System.Nullable{System.Int32})
  name: SetBaseAttackAndHealth(CardInfo, Nullable<Int32>, Nullable<Int32>)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetBaseAttackAndHealth_DiskCardGame_CardInfo_System_Nullable_System_Int32__System_Nullable_System_Int32__
  commentId: M:InscryptionAPI.Card.CardExtensions.SetBaseAttackAndHealth(DiskCardGame.CardInfo,System.Nullable{System.Int32},System.Nullable{System.Int32})
  name.vb: SetBaseAttackAndHealth(CardInfo, Nullable(Of Int32), Nullable(Of Int32))
  fullName: InscryptionAPI.Card.CardExtensions.SetBaseAttackAndHealth(DiskCardGame.CardInfo, System.Nullable<System.Int32>, System.Nullable<System.Int32>)
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetBaseAttackAndHealth(DiskCardGame.CardInfo, System.Nullable(Of System.Int32), System.Nullable(Of System.Int32))
  nameWithType: CardExtensions.SetBaseAttackAndHealth(CardInfo, Nullable<Int32>, Nullable<Int32>)
  nameWithType.vb: CardExtensions.SetBaseAttackAndHealth(CardInfo, Nullable(Of Int32), Nullable(Of Int32))
- uid: InscryptionAPI.Card.CardExtensions.SetBaseAttackAndHealth*
  name: SetBaseAttackAndHealth
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetBaseAttackAndHealth_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetBaseAttackAndHealth
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetBaseAttackAndHealth
  nameWithType: CardExtensions.SetBaseAttackAndHealth
- uid: InscryptionAPI.Card.CardExtensions.SetBasic(DiskCardGame.CardInfo,System.String,System.Int32,System.Int32,System.String)
  name: SetBasic(CardInfo, String, Int32, Int32, String)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetBasic_DiskCardGame_CardInfo_System_String_System_Int32_System_Int32_System_String_
  commentId: M:InscryptionAPI.Card.CardExtensions.SetBasic(DiskCardGame.CardInfo,System.String,System.Int32,System.Int32,System.String)
  fullName: InscryptionAPI.Card.CardExtensions.SetBasic(DiskCardGame.CardInfo, System.String, System.Int32, System.Int32, System.String)
  nameWithType: CardExtensions.SetBasic(CardInfo, String, Int32, Int32, String)
- uid: InscryptionAPI.Card.CardExtensions.SetBasic*
  name: SetBasic
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetBasic_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetBasic
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetBasic
  nameWithType: CardExtensions.SetBasic
- uid: InscryptionAPI.Card.CardExtensions.SetBloodCost(DiskCardGame.CardInfo,System.Nullable{System.Int32})
  name: SetBloodCost(CardInfo, Nullable<Int32>)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetBloodCost_DiskCardGame_CardInfo_System_Nullable_System_Int32__
  commentId: M:InscryptionAPI.Card.CardExtensions.SetBloodCost(DiskCardGame.CardInfo,System.Nullable{System.Int32})
  name.vb: SetBloodCost(CardInfo, Nullable(Of Int32))
  fullName: InscryptionAPI.Card.CardExtensions.SetBloodCost(DiskCardGame.CardInfo, System.Nullable<System.Int32>)
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetBloodCost(DiskCardGame.CardInfo, System.Nullable(Of System.Int32))
  nameWithType: CardExtensions.SetBloodCost(CardInfo, Nullable<Int32>)
  nameWithType.vb: CardExtensions.SetBloodCost(CardInfo, Nullable(Of Int32))
- uid: InscryptionAPI.Card.CardExtensions.SetBloodCost*
  name: SetBloodCost
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetBloodCost_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetBloodCost
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetBloodCost
  nameWithType: CardExtensions.SetBloodCost
- uid: InscryptionAPI.Card.CardExtensions.SetBonesCost(DiskCardGame.CardInfo,System.Nullable{System.Int32})
  name: SetBonesCost(CardInfo, Nullable<Int32>)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetBonesCost_DiskCardGame_CardInfo_System_Nullable_System_Int32__
  commentId: M:InscryptionAPI.Card.CardExtensions.SetBonesCost(DiskCardGame.CardInfo,System.Nullable{System.Int32})
  name.vb: SetBonesCost(CardInfo, Nullable(Of Int32))
  fullName: InscryptionAPI.Card.CardExtensions.SetBonesCost(DiskCardGame.CardInfo, System.Nullable<System.Int32>)
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetBonesCost(DiskCardGame.CardInfo, System.Nullable(Of System.Int32))
  nameWithType: CardExtensions.SetBonesCost(CardInfo, Nullable<Int32>)
  nameWithType.vb: CardExtensions.SetBonesCost(CardInfo, Nullable(Of Int32))
- uid: InscryptionAPI.Card.CardExtensions.SetBonesCost*
  name: SetBonesCost
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetBonesCost_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetBonesCost
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetBonesCost
  nameWithType: CardExtensions.SetBonesCost
- uid: InscryptionAPI.Card.CardExtensions.SetCost(DiskCardGame.CardInfo,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},List{DiskCardGame.GemType})
  name: SetCost(CardInfo, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, List<GemType>)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetCost_DiskCardGame_CardInfo_System_Nullable_System_Int32__System_Nullable_System_Int32__System_Nullable_System_Int32__List_DiskCardGame_GemType__
  commentId: M:InscryptionAPI.Card.CardExtensions.SetCost(DiskCardGame.CardInfo,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},List{DiskCardGame.GemType})
  name.vb: SetCost(CardInfo, Nullable(Of Int32), Nullable(Of Int32), Nullable(Of Int32), List(Of GemType))
  fullName: InscryptionAPI.Card.CardExtensions.SetCost(DiskCardGame.CardInfo, System.Nullable<System.Int32>, System.Nullable<System.Int32>, System.Nullable<System.Int32>, List<DiskCardGame.GemType>)
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetCost(DiskCardGame.CardInfo, System.Nullable(Of System.Int32), System.Nullable(Of System.Int32), System.Nullable(Of System.Int32), List(Of DiskCardGame.GemType))
  nameWithType: CardExtensions.SetCost(CardInfo, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, List<GemType>)
  nameWithType.vb: CardExtensions.SetCost(CardInfo, Nullable(Of Int32), Nullable(Of Int32), Nullable(Of Int32), List(Of GemType))
- uid: InscryptionAPI.Card.CardExtensions.SetCost*
  name: SetCost
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetCost_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetCost
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetCost
  nameWithType: CardExtensions.SetCost
- uid: InscryptionAPI.Card.CardExtensions.SetDefaultPart1Card(DiskCardGame.CardInfo)
  name: SetDefaultPart1Card(CardInfo)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetDefaultPart1Card_DiskCardGame_CardInfo_
  commentId: M:InscryptionAPI.Card.CardExtensions.SetDefaultPart1Card(DiskCardGame.CardInfo)
  fullName: InscryptionAPI.Card.CardExtensions.SetDefaultPart1Card(DiskCardGame.CardInfo)
  nameWithType: CardExtensions.SetDefaultPart1Card(CardInfo)
- uid: InscryptionAPI.Card.CardExtensions.SetDefaultPart1Card*
  name: SetDefaultPart1Card
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetDefaultPart1Card_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetDefaultPart1Card
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetDefaultPart1Card
  nameWithType: CardExtensions.SetDefaultPart1Card
- uid: InscryptionAPI.Card.CardExtensions.SetDefaultPart3Card(DiskCardGame.CardInfo)
  name: SetDefaultPart3Card(CardInfo)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetDefaultPart3Card_DiskCardGame_CardInfo_
  commentId: M:InscryptionAPI.Card.CardExtensions.SetDefaultPart3Card(DiskCardGame.CardInfo)
  fullName: InscryptionAPI.Card.CardExtensions.SetDefaultPart3Card(DiskCardGame.CardInfo)
  nameWithType: CardExtensions.SetDefaultPart3Card(CardInfo)
- uid: InscryptionAPI.Card.CardExtensions.SetDefaultPart3Card*
  name: SetDefaultPart3Card
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetDefaultPart3Card_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetDefaultPart3Card
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetDefaultPart3Card
  nameWithType: CardExtensions.SetDefaultPart3Card
- uid: InscryptionAPI.Card.CardExtensions.SetDisplayedName(DiskCardGame.CardInfo,System.String)
  name: SetDisplayedName(CardInfo, String)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetDisplayedName_DiskCardGame_CardInfo_System_String_
  commentId: M:InscryptionAPI.Card.CardExtensions.SetDisplayedName(DiskCardGame.CardInfo,System.String)
  fullName: InscryptionAPI.Card.CardExtensions.SetDisplayedName(DiskCardGame.CardInfo, System.String)
  nameWithType: CardExtensions.SetDisplayedName(CardInfo, String)
- uid: InscryptionAPI.Card.CardExtensions.SetDisplayedName*
  name: SetDisplayedName
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetDisplayedName_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetDisplayedName
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetDisplayedName
  nameWithType: CardExtensions.SetDisplayedName
- uid: InscryptionAPI.Card.CardExtensions.SetEmissiveAltPortrait(DiskCardGame.CardInfo,System.String)
  name: SetEmissiveAltPortrait(CardInfo, String)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetEmissiveAltPortrait_DiskCardGame_CardInfo_System_String_
  commentId: M:InscryptionAPI.Card.CardExtensions.SetEmissiveAltPortrait(DiskCardGame.CardInfo,System.String)
  fullName: InscryptionAPI.Card.CardExtensions.SetEmissiveAltPortrait(DiskCardGame.CardInfo, System.String)
  nameWithType: CardExtensions.SetEmissiveAltPortrait(CardInfo, String)
- uid: InscryptionAPI.Card.CardExtensions.SetEmissiveAltPortrait(DiskCardGame.CardInfo,UnityEngine.Sprite)
  name: SetEmissiveAltPortrait(CardInfo, Sprite)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetEmissiveAltPortrait_DiskCardGame_CardInfo_UnityEngine_Sprite_
  commentId: M:InscryptionAPI.Card.CardExtensions.SetEmissiveAltPortrait(DiskCardGame.CardInfo,UnityEngine.Sprite)
  fullName: InscryptionAPI.Card.CardExtensions.SetEmissiveAltPortrait(DiskCardGame.CardInfo, UnityEngine.Sprite)
  nameWithType: CardExtensions.SetEmissiveAltPortrait(CardInfo, Sprite)
- uid: InscryptionAPI.Card.CardExtensions.SetEmissiveAltPortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  name: SetEmissiveAltPortrait(CardInfo, Texture2D, Nullable<FilterMode>)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetEmissiveAltPortrait_DiskCardGame_CardInfo_UnityEngine_Texture2D_System_Nullable_UnityEngine_FilterMode__
  commentId: M:InscryptionAPI.Card.CardExtensions.SetEmissiveAltPortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  name.vb: SetEmissiveAltPortrait(CardInfo, Texture2D, Nullable(Of FilterMode))
  fullName: InscryptionAPI.Card.CardExtensions.SetEmissiveAltPortrait(DiskCardGame.CardInfo, UnityEngine.Texture2D, System.Nullable<UnityEngine.FilterMode>)
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetEmissiveAltPortrait(DiskCardGame.CardInfo, UnityEngine.Texture2D, System.Nullable(Of UnityEngine.FilterMode))
  nameWithType: CardExtensions.SetEmissiveAltPortrait(CardInfo, Texture2D, Nullable<FilterMode>)
  nameWithType.vb: CardExtensions.SetEmissiveAltPortrait(CardInfo, Texture2D, Nullable(Of FilterMode))
- uid: InscryptionAPI.Card.CardExtensions.SetEmissiveAltPortrait*
  name: SetEmissiveAltPortrait
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetEmissiveAltPortrait_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetEmissiveAltPortrait
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetEmissiveAltPortrait
  nameWithType: CardExtensions.SetEmissiveAltPortrait
- uid: InscryptionAPI.Card.CardExtensions.SetEmissivePortrait(DiskCardGame.CardInfo,System.String)
  name: SetEmissivePortrait(CardInfo, String)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetEmissivePortrait_DiskCardGame_CardInfo_System_String_
  commentId: M:InscryptionAPI.Card.CardExtensions.SetEmissivePortrait(DiskCardGame.CardInfo,System.String)
  fullName: InscryptionAPI.Card.CardExtensions.SetEmissivePortrait(DiskCardGame.CardInfo, System.String)
  nameWithType: CardExtensions.SetEmissivePortrait(CardInfo, String)
- uid: InscryptionAPI.Card.CardExtensions.SetEmissivePortrait(DiskCardGame.CardInfo,UnityEngine.Sprite)
  name: SetEmissivePortrait(CardInfo, Sprite)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetEmissivePortrait_DiskCardGame_CardInfo_UnityEngine_Sprite_
  commentId: M:InscryptionAPI.Card.CardExtensions.SetEmissivePortrait(DiskCardGame.CardInfo,UnityEngine.Sprite)
  fullName: InscryptionAPI.Card.CardExtensions.SetEmissivePortrait(DiskCardGame.CardInfo, UnityEngine.Sprite)
  nameWithType: CardExtensions.SetEmissivePortrait(CardInfo, Sprite)
- uid: InscryptionAPI.Card.CardExtensions.SetEmissivePortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  name: SetEmissivePortrait(CardInfo, Texture2D, Nullable<FilterMode>)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetEmissivePortrait_DiskCardGame_CardInfo_UnityEngine_Texture2D_System_Nullable_UnityEngine_FilterMode__
  commentId: M:InscryptionAPI.Card.CardExtensions.SetEmissivePortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  name.vb: SetEmissivePortrait(CardInfo, Texture2D, Nullable(Of FilterMode))
  fullName: InscryptionAPI.Card.CardExtensions.SetEmissivePortrait(DiskCardGame.CardInfo, UnityEngine.Texture2D, System.Nullable<UnityEngine.FilterMode>)
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetEmissivePortrait(DiskCardGame.CardInfo, UnityEngine.Texture2D, System.Nullable(Of UnityEngine.FilterMode))
  nameWithType: CardExtensions.SetEmissivePortrait(CardInfo, Texture2D, Nullable<FilterMode>)
  nameWithType.vb: CardExtensions.SetEmissivePortrait(CardInfo, Texture2D, Nullable(Of FilterMode))
- uid: InscryptionAPI.Card.CardExtensions.SetEmissivePortrait*
  name: SetEmissivePortrait
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetEmissivePortrait_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetEmissivePortrait
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetEmissivePortrait
  nameWithType: CardExtensions.SetEmissivePortrait
- uid: InscryptionAPI.Card.CardExtensions.SetEnergyCost(DiskCardGame.CardInfo,System.Nullable{System.Int32})
  name: SetEnergyCost(CardInfo, Nullable<Int32>)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetEnergyCost_DiskCardGame_CardInfo_System_Nullable_System_Int32__
  commentId: M:InscryptionAPI.Card.CardExtensions.SetEnergyCost(DiskCardGame.CardInfo,System.Nullable{System.Int32})
  name.vb: SetEnergyCost(CardInfo, Nullable(Of Int32))
  fullName: InscryptionAPI.Card.CardExtensions.SetEnergyCost(DiskCardGame.CardInfo, System.Nullable<System.Int32>)
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetEnergyCost(DiskCardGame.CardInfo, System.Nullable(Of System.Int32))
  nameWithType: CardExtensions.SetEnergyCost(CardInfo, Nullable<Int32>)
  nameWithType.vb: CardExtensions.SetEnergyCost(CardInfo, Nullable(Of Int32))
- uid: InscryptionAPI.Card.CardExtensions.SetEnergyCost*
  name: SetEnergyCost
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetEnergyCost_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetEnergyCost
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetEnergyCost
  nameWithType: CardExtensions.SetEnergyCost
- uid: InscryptionAPI.Card.CardExtensions.SetEvolve(DiskCardGame.CardInfo,DiskCardGame.CardInfo,System.Int32,System.Collections.IEnumerable{DiskCardGame.CardModificationInfo})
  name: SetEvolve(CardInfo, CardInfo, Int32, IEnumerable<CardModificationInfo>)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetEvolve_DiskCardGame_CardInfo_DiskCardGame_CardInfo_System_Int32_System_Collections_IEnumerable_DiskCardGame_CardModificationInfo__
  commentId: M:InscryptionAPI.Card.CardExtensions.SetEvolve(DiskCardGame.CardInfo,DiskCardGame.CardInfo,System.Int32,System.Collections.IEnumerable{DiskCardGame.CardModificationInfo})
  name.vb: SetEvolve(CardInfo, CardInfo, Int32, IEnumerable(Of CardModificationInfo))
  fullName: InscryptionAPI.Card.CardExtensions.SetEvolve(DiskCardGame.CardInfo, DiskCardGame.CardInfo, System.Int32, System.Collections.IEnumerable<DiskCardGame.CardModificationInfo>)
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetEvolve(DiskCardGame.CardInfo, DiskCardGame.CardInfo, System.Int32, System.Collections.IEnumerable(Of DiskCardGame.CardModificationInfo))
  nameWithType: CardExtensions.SetEvolve(CardInfo, CardInfo, Int32, IEnumerable<CardModificationInfo>)
  nameWithType.vb: CardExtensions.SetEvolve(CardInfo, CardInfo, Int32, IEnumerable(Of CardModificationInfo))
- uid: InscryptionAPI.Card.CardExtensions.SetEvolve(DiskCardGame.CardInfo,System.String,System.Int32,System.Collections.IEnumerable{DiskCardGame.CardModificationInfo})
  name: SetEvolve(CardInfo, String, Int32, IEnumerable<CardModificationInfo>)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetEvolve_DiskCardGame_CardInfo_System_String_System_Int32_System_Collections_IEnumerable_DiskCardGame_CardModificationInfo__
  commentId: M:InscryptionAPI.Card.CardExtensions.SetEvolve(DiskCardGame.CardInfo,System.String,System.Int32,System.Collections.IEnumerable{DiskCardGame.CardModificationInfo})
  name.vb: SetEvolve(CardInfo, String, Int32, IEnumerable(Of CardModificationInfo))
  fullName: InscryptionAPI.Card.CardExtensions.SetEvolve(DiskCardGame.CardInfo, System.String, System.Int32, System.Collections.IEnumerable<DiskCardGame.CardModificationInfo>)
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetEvolve(DiskCardGame.CardInfo, System.String, System.Int32, System.Collections.IEnumerable(Of DiskCardGame.CardModificationInfo))
  nameWithType: CardExtensions.SetEvolve(CardInfo, String, Int32, IEnumerable<CardModificationInfo>)
  nameWithType.vb: CardExtensions.SetEvolve(CardInfo, String, Int32, IEnumerable(Of CardModificationInfo))
- uid: InscryptionAPI.Card.CardExtensions.SetEvolve*
  name: SetEvolve
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetEvolve_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetEvolve
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetEvolve
  nameWithType: CardExtensions.SetEvolve
- uid: InscryptionAPI.Card.CardExtensions.SetExtendedProperty(DiskCardGame.CardInfo,System.String,System.Object)
  name: SetExtendedProperty(CardInfo, String, Object)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetExtendedProperty_DiskCardGame_CardInfo_System_String_System_Object_
  commentId: M:InscryptionAPI.Card.CardExtensions.SetExtendedProperty(DiskCardGame.CardInfo,System.String,System.Object)
  fullName: InscryptionAPI.Card.CardExtensions.SetExtendedProperty(DiskCardGame.CardInfo, System.String, System.Object)
  nameWithType: CardExtensions.SetExtendedProperty(CardInfo, String, Object)
- uid: InscryptionAPI.Card.CardExtensions.SetExtendedProperty*
  name: SetExtendedProperty
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetExtendedProperty_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetExtendedProperty
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetExtendedProperty
  nameWithType: CardExtensions.SetExtendedProperty
- uid: InscryptionAPI.Card.CardExtensions.SetGBCPlayable(DiskCardGame.CardInfo,CardTemple)
  name: SetGBCPlayable(CardInfo, CardTemple)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetGBCPlayable_DiskCardGame_CardInfo_CardTemple_
  commentId: M:InscryptionAPI.Card.CardExtensions.SetGBCPlayable(DiskCardGame.CardInfo,CardTemple)
  fullName: InscryptionAPI.Card.CardExtensions.SetGBCPlayable(DiskCardGame.CardInfo, CardTemple)
  nameWithType: CardExtensions.SetGBCPlayable(CardInfo, CardTemple)
- uid: InscryptionAPI.Card.CardExtensions.SetGBCPlayable*
  name: SetGBCPlayable
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetGBCPlayable_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetGBCPlayable
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetGBCPlayable
  nameWithType: CardExtensions.SetGBCPlayable
- uid: InscryptionAPI.Card.CardExtensions.SetGemsCost(DiskCardGame.CardInfo,List{DiskCardGame.GemType})
  name: SetGemsCost(CardInfo, List<GemType>)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetGemsCost_DiskCardGame_CardInfo_List_DiskCardGame_GemType__
  commentId: M:InscryptionAPI.Card.CardExtensions.SetGemsCost(DiskCardGame.CardInfo,List{DiskCardGame.GemType})
  name.vb: SetGemsCost(CardInfo, List(Of GemType))
  fullName: InscryptionAPI.Card.CardExtensions.SetGemsCost(DiskCardGame.CardInfo, List<DiskCardGame.GemType>)
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetGemsCost(DiskCardGame.CardInfo, List(Of DiskCardGame.GemType))
  nameWithType: CardExtensions.SetGemsCost(CardInfo, List<GemType>)
  nameWithType.vb: CardExtensions.SetGemsCost(CardInfo, List(Of GemType))
- uid: InscryptionAPI.Card.CardExtensions.SetGemsCost*
  name: SetGemsCost
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetGemsCost_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetGemsCost
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetGemsCost
  nameWithType: CardExtensions.SetGemsCost
- uid: InscryptionAPI.Card.CardExtensions.SetIceCube(DiskCardGame.CardInfo,DiskCardGame.CardInfo,System.Collections.IEnumerable{DiskCardGame.CardModificationInfo})
  name: SetIceCube(CardInfo, CardInfo, IEnumerable<CardModificationInfo>)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetIceCube_DiskCardGame_CardInfo_DiskCardGame_CardInfo_System_Collections_IEnumerable_DiskCardGame_CardModificationInfo__
  commentId: M:InscryptionAPI.Card.CardExtensions.SetIceCube(DiskCardGame.CardInfo,DiskCardGame.CardInfo,System.Collections.IEnumerable{DiskCardGame.CardModificationInfo})
  name.vb: SetIceCube(CardInfo, CardInfo, IEnumerable(Of CardModificationInfo))
  fullName: InscryptionAPI.Card.CardExtensions.SetIceCube(DiskCardGame.CardInfo, DiskCardGame.CardInfo, System.Collections.IEnumerable<DiskCardGame.CardModificationInfo>)
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetIceCube(DiskCardGame.CardInfo, DiskCardGame.CardInfo, System.Collections.IEnumerable(Of DiskCardGame.CardModificationInfo))
  nameWithType: CardExtensions.SetIceCube(CardInfo, CardInfo, IEnumerable<CardModificationInfo>)
  nameWithType.vb: CardExtensions.SetIceCube(CardInfo, CardInfo, IEnumerable(Of CardModificationInfo))
- uid: InscryptionAPI.Card.CardExtensions.SetIceCube(DiskCardGame.CardInfo,System.String,System.Collections.IEnumerable{DiskCardGame.CardModificationInfo})
  name: SetIceCube(CardInfo, String, IEnumerable<CardModificationInfo>)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetIceCube_DiskCardGame_CardInfo_System_String_System_Collections_IEnumerable_DiskCardGame_CardModificationInfo__
  commentId: M:InscryptionAPI.Card.CardExtensions.SetIceCube(DiskCardGame.CardInfo,System.String,System.Collections.IEnumerable{DiskCardGame.CardModificationInfo})
  name.vb: SetIceCube(CardInfo, String, IEnumerable(Of CardModificationInfo))
  fullName: InscryptionAPI.Card.CardExtensions.SetIceCube(DiskCardGame.CardInfo, System.String, System.Collections.IEnumerable<DiskCardGame.CardModificationInfo>)
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetIceCube(DiskCardGame.CardInfo, System.String, System.Collections.IEnumerable(Of DiskCardGame.CardModificationInfo))
  nameWithType: CardExtensions.SetIceCube(CardInfo, String, IEnumerable<CardModificationInfo>)
  nameWithType.vb: CardExtensions.SetIceCube(CardInfo, String, IEnumerable(Of CardModificationInfo))
- uid: InscryptionAPI.Card.CardExtensions.SetIceCube*
  name: SetIceCube
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetIceCube_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetIceCube
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetIceCube
  nameWithType: CardExtensions.SetIceCube
- uid: InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.CardInfo,System.String)
  name: SetLostTailPortrait(CardInfo, String)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetLostTailPortrait_DiskCardGame_CardInfo_System_String_
  commentId: M:InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.CardInfo,System.String)
  fullName: InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.CardInfo, System.String)
  nameWithType: CardExtensions.SetLostTailPortrait(CardInfo, String)
- uid: InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  name: SetLostTailPortrait(CardInfo, Texture2D, Nullable<FilterMode>)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetLostTailPortrait_DiskCardGame_CardInfo_UnityEngine_Texture2D_System_Nullable_UnityEngine_FilterMode__
  commentId: M:InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  name.vb: SetLostTailPortrait(CardInfo, Texture2D, Nullable(Of FilterMode))
  fullName: InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.CardInfo, UnityEngine.Texture2D, System.Nullable<UnityEngine.FilterMode>)
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.CardInfo, UnityEngine.Texture2D, System.Nullable(Of UnityEngine.FilterMode))
  nameWithType: CardExtensions.SetLostTailPortrait(CardInfo, Texture2D, Nullable<FilterMode>)
  nameWithType.vb: CardExtensions.SetLostTailPortrait(CardInfo, Texture2D, Nullable(Of FilterMode))
- uid: InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.TailParams,System.String,DiskCardGame.CardInfo)
  name: SetLostTailPortrait(TailParams, String, CardInfo)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetLostTailPortrait_DiskCardGame_TailParams_System_String_DiskCardGame_CardInfo_
  commentId: M:InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.TailParams,System.String,DiskCardGame.CardInfo)
  fullName: InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.TailParams, System.String, DiskCardGame.CardInfo)
  nameWithType: CardExtensions.SetLostTailPortrait(TailParams, String, CardInfo)
- uid: InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.TailParams,UnityEngine.Sprite,DiskCardGame.CardInfo)
  name: SetLostTailPortrait(TailParams, Sprite, CardInfo)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetLostTailPortrait_DiskCardGame_TailParams_UnityEngine_Sprite_DiskCardGame_CardInfo_
  commentId: M:InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.TailParams,UnityEngine.Sprite,DiskCardGame.CardInfo)
  fullName: InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.TailParams, UnityEngine.Sprite, DiskCardGame.CardInfo)
  nameWithType: CardExtensions.SetLostTailPortrait(TailParams, Sprite, CardInfo)
- uid: InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.TailParams,UnityEngine.Texture2D,DiskCardGame.CardInfo,System.Nullable{UnityEngine.FilterMode})
  name: SetLostTailPortrait(TailParams, Texture2D, CardInfo, Nullable<FilterMode>)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetLostTailPortrait_DiskCardGame_TailParams_UnityEngine_Texture2D_DiskCardGame_CardInfo_System_Nullable_UnityEngine_FilterMode__
  commentId: M:InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.TailParams,UnityEngine.Texture2D,DiskCardGame.CardInfo,System.Nullable{UnityEngine.FilterMode})
  name.vb: SetLostTailPortrait(TailParams, Texture2D, CardInfo, Nullable(Of FilterMode))
  fullName: InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.TailParams, UnityEngine.Texture2D, DiskCardGame.CardInfo, System.Nullable<UnityEngine.FilterMode>)
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.TailParams, UnityEngine.Texture2D, DiskCardGame.CardInfo, System.Nullable(Of UnityEngine.FilterMode))
  nameWithType: CardExtensions.SetLostTailPortrait(TailParams, Texture2D, CardInfo, Nullable<FilterMode>)
  nameWithType.vb: CardExtensions.SetLostTailPortrait(TailParams, Texture2D, CardInfo, Nullable(Of FilterMode))
- uid: InscryptionAPI.Card.CardExtensions.SetLostTailPortrait*
  name: SetLostTailPortrait
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetLostTailPortrait_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetLostTailPortrait
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetLostTailPortrait
  nameWithType: CardExtensions.SetLostTailPortrait
- uid: InscryptionAPI.Card.CardExtensions.SetName(DiskCardGame.CardInfo,System.String,System.String)
  name: SetName(CardInfo, String, String)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetName_DiskCardGame_CardInfo_System_String_System_String_
  commentId: M:InscryptionAPI.Card.CardExtensions.SetName(DiskCardGame.CardInfo,System.String,System.String)
  fullName: InscryptionAPI.Card.CardExtensions.SetName(DiskCardGame.CardInfo, System.String, System.String)
  nameWithType: CardExtensions.SetName(CardInfo, String, String)
- uid: InscryptionAPI.Card.CardExtensions.SetName*
  name: SetName
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetName_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetName
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetName
  nameWithType: CardExtensions.SetName
- uid: InscryptionAPI.Card.CardExtensions.SetNames(DiskCardGame.CardInfo,System.String,System.String,System.String)
  name: SetNames(CardInfo, String, String, String)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetNames_DiskCardGame_CardInfo_System_String_System_String_System_String_
  commentId: M:InscryptionAPI.Card.CardExtensions.SetNames(DiskCardGame.CardInfo,System.String,System.String,System.String)
  fullName: InscryptionAPI.Card.CardExtensions.SetNames(DiskCardGame.CardInfo, System.String, System.String, System.String)
  nameWithType: CardExtensions.SetNames(CardInfo, String, String, String)
- uid: InscryptionAPI.Card.CardExtensions.SetNames*
  name: SetNames
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetNames_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetNames
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetNames
  nameWithType: CardExtensions.SetNames
- uid: InscryptionAPI.Card.CardExtensions.SetPixelPortrait(DiskCardGame.CardInfo,System.String)
  name: SetPixelPortrait(CardInfo, String)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetPixelPortrait_DiskCardGame_CardInfo_System_String_
  commentId: M:InscryptionAPI.Card.CardExtensions.SetPixelPortrait(DiskCardGame.CardInfo,System.String)
  fullName: InscryptionAPI.Card.CardExtensions.SetPixelPortrait(DiskCardGame.CardInfo, System.String)
  nameWithType: CardExtensions.SetPixelPortrait(CardInfo, String)
- uid: InscryptionAPI.Card.CardExtensions.SetPixelPortrait(DiskCardGame.CardInfo,UnityEngine.Sprite)
  name: SetPixelPortrait(CardInfo, Sprite)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetPixelPortrait_DiskCardGame_CardInfo_UnityEngine_Sprite_
  commentId: M:InscryptionAPI.Card.CardExtensions.SetPixelPortrait(DiskCardGame.CardInfo,UnityEngine.Sprite)
  fullName: InscryptionAPI.Card.CardExtensions.SetPixelPortrait(DiskCardGame.CardInfo, UnityEngine.Sprite)
  nameWithType: CardExtensions.SetPixelPortrait(CardInfo, Sprite)
- uid: InscryptionAPI.Card.CardExtensions.SetPixelPortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  name: SetPixelPortrait(CardInfo, Texture2D, Nullable<FilterMode>)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetPixelPortrait_DiskCardGame_CardInfo_UnityEngine_Texture2D_System_Nullable_UnityEngine_FilterMode__
  commentId: M:InscryptionAPI.Card.CardExtensions.SetPixelPortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  name.vb: SetPixelPortrait(CardInfo, Texture2D, Nullable(Of FilterMode))
  fullName: InscryptionAPI.Card.CardExtensions.SetPixelPortrait(DiskCardGame.CardInfo, UnityEngine.Texture2D, System.Nullable<UnityEngine.FilterMode>)
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetPixelPortrait(DiskCardGame.CardInfo, UnityEngine.Texture2D, System.Nullable(Of UnityEngine.FilterMode))
  nameWithType: CardExtensions.SetPixelPortrait(CardInfo, Texture2D, Nullable<FilterMode>)
  nameWithType.vb: CardExtensions.SetPixelPortrait(CardInfo, Texture2D, Nullable(Of FilterMode))
- uid: InscryptionAPI.Card.CardExtensions.SetPixelPortrait*
  name: SetPixelPortrait
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetPixelPortrait_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetPixelPortrait
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetPixelPortrait
  nameWithType: CardExtensions.SetPixelPortrait
- uid: InscryptionAPI.Card.CardExtensions.SetPortrait(DiskCardGame.CardInfo,System.String)
  name: SetPortrait(CardInfo, String)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetPortrait_DiskCardGame_CardInfo_System_String_
  commentId: M:InscryptionAPI.Card.CardExtensions.SetPortrait(DiskCardGame.CardInfo,System.String)
  fullName: InscryptionAPI.Card.CardExtensions.SetPortrait(DiskCardGame.CardInfo, System.String)
  nameWithType: CardExtensions.SetPortrait(CardInfo, String)
- uid: InscryptionAPI.Card.CardExtensions.SetPortrait(DiskCardGame.CardInfo,UnityEngine.Sprite)
  name: SetPortrait(CardInfo, Sprite)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetPortrait_DiskCardGame_CardInfo_UnityEngine_Sprite_
  commentId: M:InscryptionAPI.Card.CardExtensions.SetPortrait(DiskCardGame.CardInfo,UnityEngine.Sprite)
  fullName: InscryptionAPI.Card.CardExtensions.SetPortrait(DiskCardGame.CardInfo, UnityEngine.Sprite)
  nameWithType: CardExtensions.SetPortrait(CardInfo, Sprite)
- uid: InscryptionAPI.Card.CardExtensions.SetPortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  name: SetPortrait(CardInfo, Texture2D, Nullable<FilterMode>)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetPortrait_DiskCardGame_CardInfo_UnityEngine_Texture2D_System_Nullable_UnityEngine_FilterMode__
  commentId: M:InscryptionAPI.Card.CardExtensions.SetPortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  name.vb: SetPortrait(CardInfo, Texture2D, Nullable(Of FilterMode))
  fullName: InscryptionAPI.Card.CardExtensions.SetPortrait(DiskCardGame.CardInfo, UnityEngine.Texture2D, System.Nullable<UnityEngine.FilterMode>)
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetPortrait(DiskCardGame.CardInfo, UnityEngine.Texture2D, System.Nullable(Of UnityEngine.FilterMode))
  nameWithType: CardExtensions.SetPortrait(CardInfo, Texture2D, Nullable<FilterMode>)
  nameWithType.vb: CardExtensions.SetPortrait(CardInfo, Texture2D, Nullable(Of FilterMode))
- uid: InscryptionAPI.Card.CardExtensions.SetPortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  name: SetPortrait(CardInfo, Texture2D, Texture2D, Nullable<FilterMode>)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetPortrait_DiskCardGame_CardInfo_UnityEngine_Texture2D_UnityEngine_Texture2D_System_Nullable_UnityEngine_FilterMode__
  commentId: M:InscryptionAPI.Card.CardExtensions.SetPortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  name.vb: SetPortrait(CardInfo, Texture2D, Texture2D, Nullable(Of FilterMode))
  fullName: InscryptionAPI.Card.CardExtensions.SetPortrait(DiskCardGame.CardInfo, UnityEngine.Texture2D, UnityEngine.Texture2D, System.Nullable<UnityEngine.FilterMode>)
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetPortrait(DiskCardGame.CardInfo, UnityEngine.Texture2D, UnityEngine.Texture2D, System.Nullable(Of UnityEngine.FilterMode))
  nameWithType: CardExtensions.SetPortrait(CardInfo, Texture2D, Texture2D, Nullable<FilterMode>)
  nameWithType.vb: CardExtensions.SetPortrait(CardInfo, Texture2D, Texture2D, Nullable(Of FilterMode))
- uid: InscryptionAPI.Card.CardExtensions.SetPortrait*
  name: SetPortrait
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetPortrait_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetPortrait
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetPortrait
  nameWithType: CardExtensions.SetPortrait
- uid: InscryptionAPI.Card.CardExtensions.SetPortraitAndEmission(DiskCardGame.CardInfo,System.String,System.String)
  name: SetPortraitAndEmission(CardInfo, String, String)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetPortraitAndEmission_DiskCardGame_CardInfo_System_String_System_String_
  commentId: M:InscryptionAPI.Card.CardExtensions.SetPortraitAndEmission(DiskCardGame.CardInfo,System.String,System.String)
  fullName: InscryptionAPI.Card.CardExtensions.SetPortraitAndEmission(DiskCardGame.CardInfo, System.String, System.String)
  nameWithType: CardExtensions.SetPortraitAndEmission(CardInfo, String, String)
- uid: InscryptionAPI.Card.CardExtensions.SetPortraitAndEmission(DiskCardGame.CardInfo,UnityEngine.Sprite,UnityEngine.Sprite)
  name: SetPortraitAndEmission(CardInfo, Sprite, Sprite)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetPortraitAndEmission_DiskCardGame_CardInfo_UnityEngine_Sprite_UnityEngine_Sprite_
  commentId: M:InscryptionAPI.Card.CardExtensions.SetPortraitAndEmission(DiskCardGame.CardInfo,UnityEngine.Sprite,UnityEngine.Sprite)
  fullName: InscryptionAPI.Card.CardExtensions.SetPortraitAndEmission(DiskCardGame.CardInfo, UnityEngine.Sprite, UnityEngine.Sprite)
  nameWithType: CardExtensions.SetPortraitAndEmission(CardInfo, Sprite, Sprite)
- uid: InscryptionAPI.Card.CardExtensions.SetPortraitAndEmission(DiskCardGame.CardInfo,UnityEngine.Texture2D,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  name: SetPortraitAndEmission(CardInfo, Texture2D, Texture2D, Nullable<FilterMode>)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetPortraitAndEmission_DiskCardGame_CardInfo_UnityEngine_Texture2D_UnityEngine_Texture2D_System_Nullable_UnityEngine_FilterMode__
  commentId: M:InscryptionAPI.Card.CardExtensions.SetPortraitAndEmission(DiskCardGame.CardInfo,UnityEngine.Texture2D,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  name.vb: SetPortraitAndEmission(CardInfo, Texture2D, Texture2D, Nullable(Of FilterMode))
  fullName: InscryptionAPI.Card.CardExtensions.SetPortraitAndEmission(DiskCardGame.CardInfo, UnityEngine.Texture2D, UnityEngine.Texture2D, System.Nullable<UnityEngine.FilterMode>)
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetPortraitAndEmission(DiskCardGame.CardInfo, UnityEngine.Texture2D, UnityEngine.Texture2D, System.Nullable(Of UnityEngine.FilterMode))
  nameWithType: CardExtensions.SetPortraitAndEmission(CardInfo, Texture2D, Texture2D, Nullable<FilterMode>)
  nameWithType.vb: CardExtensions.SetPortraitAndEmission(CardInfo, Texture2D, Texture2D, Nullable(Of FilterMode))
- uid: InscryptionAPI.Card.CardExtensions.SetPortraitAndEmission*
  name: SetPortraitAndEmission
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetPortraitAndEmission_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetPortraitAndEmission
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetPortraitAndEmission
  nameWithType: CardExtensions.SetPortraitAndEmission
- uid: InscryptionAPI.Card.CardExtensions.SetRare(DiskCardGame.CardInfo)
  name: SetRare(CardInfo)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetRare_DiskCardGame_CardInfo_
  commentId: M:InscryptionAPI.Card.CardExtensions.SetRare(DiskCardGame.CardInfo)
  fullName: InscryptionAPI.Card.CardExtensions.SetRare(DiskCardGame.CardInfo)
  nameWithType: CardExtensions.SetRare(CardInfo)
- uid: InscryptionAPI.Card.CardExtensions.SetRare*
  name: SetRare
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetRare_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetRare
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetRare
  nameWithType: CardExtensions.SetRare
- uid: InscryptionAPI.Card.CardExtensions.SetSpecialAbilities(DiskCardGame.CardInfo,DiskCardGame.SpecialTriggeredAbility[])
  name: SetSpecialAbilities(CardInfo, SpecialTriggeredAbility[])
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetSpecialAbilities_DiskCardGame_CardInfo_DiskCardGame_SpecialTriggeredAbility___
  commentId: M:InscryptionAPI.Card.CardExtensions.SetSpecialAbilities(DiskCardGame.CardInfo,DiskCardGame.SpecialTriggeredAbility[])
  name.vb: SetSpecialAbilities(CardInfo, SpecialTriggeredAbility())
  fullName: InscryptionAPI.Card.CardExtensions.SetSpecialAbilities(DiskCardGame.CardInfo, DiskCardGame.SpecialTriggeredAbility[])
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetSpecialAbilities(DiskCardGame.CardInfo, DiskCardGame.SpecialTriggeredAbility())
  nameWithType: CardExtensions.SetSpecialAbilities(CardInfo, SpecialTriggeredAbility[])
  nameWithType.vb: CardExtensions.SetSpecialAbilities(CardInfo, SpecialTriggeredAbility())
- uid: InscryptionAPI.Card.CardExtensions.SetSpecialAbilities*
  name: SetSpecialAbilities
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetSpecialAbilities_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetSpecialAbilities
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetSpecialAbilities
  nameWithType: CardExtensions.SetSpecialAbilities
- uid: InscryptionAPI.Card.CardExtensions.SetStatIcon(DiskCardGame.CardInfo,DiskCardGame.SpecialStatIcon)
  name: SetStatIcon(CardInfo, SpecialStatIcon)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetStatIcon_DiskCardGame_CardInfo_DiskCardGame_SpecialStatIcon_
  commentId: M:InscryptionAPI.Card.CardExtensions.SetStatIcon(DiskCardGame.CardInfo,DiskCardGame.SpecialStatIcon)
  fullName: InscryptionAPI.Card.CardExtensions.SetStatIcon(DiskCardGame.CardInfo, DiskCardGame.SpecialStatIcon)
  nameWithType: CardExtensions.SetStatIcon(CardInfo, SpecialStatIcon)
- uid: InscryptionAPI.Card.CardExtensions.SetStatIcon*
  name: SetStatIcon
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetStatIcon_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetStatIcon
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetStatIcon
  nameWithType: CardExtensions.SetStatIcon
- uid: InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo,DiskCardGame.CardInfo,System.Collections.IEnumerable{DiskCardGame.CardModificationInfo})
  name: SetTail(CardInfo, CardInfo, IEnumerable<CardModificationInfo>)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetTail_DiskCardGame_CardInfo_DiskCardGame_CardInfo_System_Collections_IEnumerable_DiskCardGame_CardModificationInfo__
  commentId: M:InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo,DiskCardGame.CardInfo,System.Collections.IEnumerable{DiskCardGame.CardModificationInfo})
  name.vb: SetTail(CardInfo, CardInfo, IEnumerable(Of CardModificationInfo))
  fullName: InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo, DiskCardGame.CardInfo, System.Collections.IEnumerable<DiskCardGame.CardModificationInfo>)
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo, DiskCardGame.CardInfo, System.Collections.IEnumerable(Of DiskCardGame.CardModificationInfo))
  nameWithType: CardExtensions.SetTail(CardInfo, CardInfo, IEnumerable<CardModificationInfo>)
  nameWithType.vb: CardExtensions.SetTail(CardInfo, CardInfo, IEnumerable(Of CardModificationInfo))
- uid: InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo,DiskCardGame.CardInfo,UnityEngine.Sprite,System.Collections.IEnumerable{DiskCardGame.CardModificationInfo})
  name: SetTail(CardInfo, CardInfo, Sprite, IEnumerable<CardModificationInfo>)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetTail_DiskCardGame_CardInfo_DiskCardGame_CardInfo_UnityEngine_Sprite_System_Collections_IEnumerable_DiskCardGame_CardModificationInfo__
  commentId: M:InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo,DiskCardGame.CardInfo,UnityEngine.Sprite,System.Collections.IEnumerable{DiskCardGame.CardModificationInfo})
  name.vb: SetTail(CardInfo, CardInfo, Sprite, IEnumerable(Of CardModificationInfo))
  fullName: InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo, DiskCardGame.CardInfo, UnityEngine.Sprite, System.Collections.IEnumerable<DiskCardGame.CardModificationInfo>)
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo, DiskCardGame.CardInfo, UnityEngine.Sprite, System.Collections.IEnumerable(Of DiskCardGame.CardModificationInfo))
  nameWithType: CardExtensions.SetTail(CardInfo, CardInfo, Sprite, IEnumerable<CardModificationInfo>)
  nameWithType.vb: CardExtensions.SetTail(CardInfo, CardInfo, Sprite, IEnumerable(Of CardModificationInfo))
- uid: InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo,DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode},System.Collections.IEnumerable{DiskCardGame.CardModificationInfo})
  name: SetTail(CardInfo, CardInfo, Texture2D, Nullable<FilterMode>, IEnumerable<CardModificationInfo>)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetTail_DiskCardGame_CardInfo_DiskCardGame_CardInfo_UnityEngine_Texture2D_System_Nullable_UnityEngine_FilterMode__System_Collections_IEnumerable_DiskCardGame_CardModificationInfo__
  commentId: M:InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo,DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode},System.Collections.IEnumerable{DiskCardGame.CardModificationInfo})
  name.vb: SetTail(CardInfo, CardInfo, Texture2D, Nullable(Of FilterMode), IEnumerable(Of CardModificationInfo))
  fullName: InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo, DiskCardGame.CardInfo, UnityEngine.Texture2D, System.Nullable<UnityEngine.FilterMode>, System.Collections.IEnumerable<DiskCardGame.CardModificationInfo>)
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo, DiskCardGame.CardInfo, UnityEngine.Texture2D, System.Nullable(Of UnityEngine.FilterMode), System.Collections.IEnumerable(Of DiskCardGame.CardModificationInfo))
  nameWithType: CardExtensions.SetTail(CardInfo, CardInfo, Texture2D, Nullable<FilterMode>, IEnumerable<CardModificationInfo>)
  nameWithType.vb: CardExtensions.SetTail(CardInfo, CardInfo, Texture2D, Nullable(Of FilterMode), IEnumerable(Of CardModificationInfo))
- uid: InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo,System.String,System.Collections.IEnumerable{DiskCardGame.CardModificationInfo})
  name: SetTail(CardInfo, String, IEnumerable<CardModificationInfo>)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetTail_DiskCardGame_CardInfo_System_String_System_Collections_IEnumerable_DiskCardGame_CardModificationInfo__
  commentId: M:InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo,System.String,System.Collections.IEnumerable{DiskCardGame.CardModificationInfo})
  name.vb: SetTail(CardInfo, String, IEnumerable(Of CardModificationInfo))
  fullName: InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo, System.String, System.Collections.IEnumerable<DiskCardGame.CardModificationInfo>)
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo, System.String, System.Collections.IEnumerable(Of DiskCardGame.CardModificationInfo))
  nameWithType: CardExtensions.SetTail(CardInfo, String, IEnumerable<CardModificationInfo>)
  nameWithType.vb: CardExtensions.SetTail(CardInfo, String, IEnumerable(Of CardModificationInfo))
- uid: InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo,System.String,System.String,System.Collections.IEnumerable{DiskCardGame.CardModificationInfo})
  name: SetTail(CardInfo, String, String, IEnumerable<CardModificationInfo>)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetTail_DiskCardGame_CardInfo_System_String_System_String_System_Collections_IEnumerable_DiskCardGame_CardModificationInfo__
  commentId: M:InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo,System.String,System.String,System.Collections.IEnumerable{DiskCardGame.CardModificationInfo})
  name.vb: SetTail(CardInfo, String, String, IEnumerable(Of CardModificationInfo))
  fullName: InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo, System.String, System.String, System.Collections.IEnumerable<DiskCardGame.CardModificationInfo>)
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo, System.String, System.String, System.Collections.IEnumerable(Of DiskCardGame.CardModificationInfo))
  nameWithType: CardExtensions.SetTail(CardInfo, String, String, IEnumerable<CardModificationInfo>)
  nameWithType.vb: CardExtensions.SetTail(CardInfo, String, String, IEnumerable(Of CardModificationInfo))
- uid: InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo,System.String,UnityEngine.Sprite,System.Collections.IEnumerable{DiskCardGame.CardModificationInfo})
  name: SetTail(CardInfo, String, Sprite, IEnumerable<CardModificationInfo>)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetTail_DiskCardGame_CardInfo_System_String_UnityEngine_Sprite_System_Collections_IEnumerable_DiskCardGame_CardModificationInfo__
  commentId: M:InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo,System.String,UnityEngine.Sprite,System.Collections.IEnumerable{DiskCardGame.CardModificationInfo})
  name.vb: SetTail(CardInfo, String, Sprite, IEnumerable(Of CardModificationInfo))
  fullName: InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo, System.String, UnityEngine.Sprite, System.Collections.IEnumerable<DiskCardGame.CardModificationInfo>)
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo, System.String, UnityEngine.Sprite, System.Collections.IEnumerable(Of DiskCardGame.CardModificationInfo))
  nameWithType: CardExtensions.SetTail(CardInfo, String, Sprite, IEnumerable<CardModificationInfo>)
  nameWithType.vb: CardExtensions.SetTail(CardInfo, String, Sprite, IEnumerable(Of CardModificationInfo))
- uid: InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo,System.String,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode},System.Collections.IEnumerable{DiskCardGame.CardModificationInfo})
  name: SetTail(CardInfo, String, Texture2D, Nullable<FilterMode>, IEnumerable<CardModificationInfo>)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetTail_DiskCardGame_CardInfo_System_String_UnityEngine_Texture2D_System_Nullable_UnityEngine_FilterMode__System_Collections_IEnumerable_DiskCardGame_CardModificationInfo__
  commentId: M:InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo,System.String,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode},System.Collections.IEnumerable{DiskCardGame.CardModificationInfo})
  name.vb: SetTail(CardInfo, String, Texture2D, Nullable(Of FilterMode), IEnumerable(Of CardModificationInfo))
  fullName: InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo, System.String, UnityEngine.Texture2D, System.Nullable<UnityEngine.FilterMode>, System.Collections.IEnumerable<DiskCardGame.CardModificationInfo>)
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo, System.String, UnityEngine.Texture2D, System.Nullable(Of UnityEngine.FilterMode), System.Collections.IEnumerable(Of DiskCardGame.CardModificationInfo))
  nameWithType: CardExtensions.SetTail(CardInfo, String, Texture2D, Nullable<FilterMode>, IEnumerable<CardModificationInfo>)
  nameWithType.vb: CardExtensions.SetTail(CardInfo, String, Texture2D, Nullable(Of FilterMode), IEnumerable(Of CardModificationInfo))
- uid: InscryptionAPI.Card.CardExtensions.SetTail*
  name: SetTail
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetTail_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetTail
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetTail
  nameWithType: CardExtensions.SetTail
- uid: InscryptionAPI.Card.CardExtensions.SetTerrain(DiskCardGame.CardInfo)
  name: SetTerrain(CardInfo)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetTerrain_DiskCardGame_CardInfo_
  commentId: M:InscryptionAPI.Card.CardExtensions.SetTerrain(DiskCardGame.CardInfo)
  fullName: InscryptionAPI.Card.CardExtensions.SetTerrain(DiskCardGame.CardInfo)
  nameWithType: CardExtensions.SetTerrain(CardInfo)
- uid: InscryptionAPI.Card.CardExtensions.SetTerrain*
  name: SetTerrain
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetTerrain_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetTerrain
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetTerrain
  nameWithType: CardExtensions.SetTerrain
- uid: InscryptionAPI.Card.CardExtensions.SetTraits(DiskCardGame.CardInfo,DiskCardGame.Trait[])
  name: SetTraits(CardInfo, Trait[])
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetTraits_DiskCardGame_CardInfo_DiskCardGame_Trait___
  commentId: M:InscryptionAPI.Card.CardExtensions.SetTraits(DiskCardGame.CardInfo,DiskCardGame.Trait[])
  name.vb: SetTraits(CardInfo, Trait())
  fullName: InscryptionAPI.Card.CardExtensions.SetTraits(DiskCardGame.CardInfo, DiskCardGame.Trait[])
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetTraits(DiskCardGame.CardInfo, DiskCardGame.Trait())
  nameWithType: CardExtensions.SetTraits(CardInfo, Trait[])
  nameWithType.vb: CardExtensions.SetTraits(CardInfo, Trait())
- uid: InscryptionAPI.Card.CardExtensions.SetTraits*
  name: SetTraits
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetTraits_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetTraits
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetTraits
  nameWithType: CardExtensions.SetTraits
- uid: InscryptionAPI.Card.CardExtensions.SetTribes(DiskCardGame.CardInfo,DiskCardGame.Tribe[])
  name: SetTribes(CardInfo, Tribe[])
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetTribes_DiskCardGame_CardInfo_DiskCardGame_Tribe___
  commentId: M:InscryptionAPI.Card.CardExtensions.SetTribes(DiskCardGame.CardInfo,DiskCardGame.Tribe[])
  name.vb: SetTribes(CardInfo, Tribe())
  fullName: InscryptionAPI.Card.CardExtensions.SetTribes(DiskCardGame.CardInfo, DiskCardGame.Tribe[])
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetTribes(DiskCardGame.CardInfo, DiskCardGame.Tribe())
  nameWithType: CardExtensions.SetTribes(CardInfo, Tribe[])
  nameWithType.vb: CardExtensions.SetTribes(CardInfo, Tribe())
- uid: InscryptionAPI.Card.CardExtensions.SetTribes*
  name: SetTribes
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SetTribes_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetTribes
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SetTribes
  nameWithType: CardExtensions.SetTribes
- uid: InscryptionAPI.Card.CardExtensions.SpawnInHand(DiskCardGame.CardInfo,List{DiskCardGame.CardModificationInfo},UnityEngine.Vector3,System.Single,Action{DiskCardGame.PlayableCard})
  name: SpawnInHand(CardInfo, List<CardModificationInfo>, Vector3, Single, Action<PlayableCard>)
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SpawnInHand_DiskCardGame_CardInfo_List_DiskCardGame_CardModificationInfo__UnityEngine_Vector3_System_Single_Action_DiskCardGame_PlayableCard__
  commentId: M:InscryptionAPI.Card.CardExtensions.SpawnInHand(DiskCardGame.CardInfo,List{DiskCardGame.CardModificationInfo},UnityEngine.Vector3,System.Single,Action{DiskCardGame.PlayableCard})
  name.vb: SpawnInHand(CardInfo, List(Of CardModificationInfo), Vector3, Single, Action(Of PlayableCard))
  fullName: InscryptionAPI.Card.CardExtensions.SpawnInHand(DiskCardGame.CardInfo, List<DiskCardGame.CardModificationInfo>, UnityEngine.Vector3, System.Single, Action<DiskCardGame.PlayableCard>)
  fullName.vb: InscryptionAPI.Card.CardExtensions.SpawnInHand(DiskCardGame.CardInfo, List(Of DiskCardGame.CardModificationInfo), UnityEngine.Vector3, System.Single, Action(Of DiskCardGame.PlayableCard))
  nameWithType: CardExtensions.SpawnInHand(CardInfo, List<CardModificationInfo>, Vector3, Single, Action<PlayableCard>)
  nameWithType.vb: CardExtensions.SpawnInHand(CardInfo, List(Of CardModificationInfo), Vector3, Single, Action(Of PlayableCard))
- uid: InscryptionAPI.Card.CardExtensions.SpawnInHand*
  name: SpawnInHand
  href: api/InscryptionAPI.Card.CardExtensions.html#InscryptionAPI_Card_CardExtensions_SpawnInHand_
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SpawnInHand
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardExtensions.SpawnInHand
  nameWithType: CardExtensions.SpawnInHand
- uid: InscryptionAPI.Card.CardManager
  name: CardManager
  href: api/InscryptionAPI.Card.CardManager.html
  commentId: T:InscryptionAPI.Card.CardManager
  fullName: InscryptionAPI.Card.CardManager
  nameWithType: CardManager
- uid: InscryptionAPI.Card.CardManager.Add(System.String,DiskCardGame.CardInfo)
  name: Add(String, CardInfo)
  href: api/InscryptionAPI.Card.CardManager.html#InscryptionAPI_Card_CardManager_Add_System_String_DiskCardGame_CardInfo_
  commentId: M:InscryptionAPI.Card.CardManager.Add(System.String,DiskCardGame.CardInfo)
  fullName: InscryptionAPI.Card.CardManager.Add(System.String, DiskCardGame.CardInfo)
  nameWithType: CardManager.Add(String, CardInfo)
- uid: InscryptionAPI.Card.CardManager.Add*
  name: Add
  href: api/InscryptionAPI.Card.CardManager.html#InscryptionAPI_Card_CardManager_Add_
  commentId: Overload:InscryptionAPI.Card.CardManager.Add
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardManager.Add
  nameWithType: CardManager.Add
- uid: InscryptionAPI.Card.CardManager.AllCardsCopy
  name: AllCardsCopy
  href: api/InscryptionAPI.Card.CardManager.html#InscryptionAPI_Card_CardManager_AllCardsCopy
  commentId: P:InscryptionAPI.Card.CardManager.AllCardsCopy
  fullName: InscryptionAPI.Card.CardManager.AllCardsCopy
  nameWithType: CardManager.AllCardsCopy
- uid: InscryptionAPI.Card.CardManager.AllCardsCopy*
  name: AllCardsCopy
  href: api/InscryptionAPI.Card.CardManager.html#InscryptionAPI_Card_CardManager_AllCardsCopy_
  commentId: Overload:InscryptionAPI.Card.CardManager.AllCardsCopy
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardManager.AllCardsCopy
  nameWithType: CardManager.AllCardsCopy
- uid: InscryptionAPI.Card.CardManager.BaseGameCards
  name: BaseGameCards
  href: api/InscryptionAPI.Card.CardManager.html#InscryptionAPI_Card_CardManager_BaseGameCards
  commentId: F:InscryptionAPI.Card.CardManager.BaseGameCards
  fullName: InscryptionAPI.Card.CardManager.BaseGameCards
  nameWithType: CardManager.BaseGameCards
- uid: InscryptionAPI.Card.CardManager.GetExtendedClass*
  name: GetExtendedClass
  href: api/InscryptionAPI.Card.CardManager.html#InscryptionAPI_Card_CardManager_GetExtendedClass_
  commentId: Overload:InscryptionAPI.Card.CardManager.GetExtendedClass
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardManager.GetExtendedClass
  nameWithType: CardManager.GetExtendedClass
- uid: InscryptionAPI.Card.CardManager.GetExtendedClass``1(DiskCardGame.CardInfo)
  name: GetExtendedClass<T>(CardInfo)
  href: api/InscryptionAPI.Card.CardManager.html#InscryptionAPI_Card_CardManager_GetExtendedClass__1_DiskCardGame_CardInfo_
  commentId: M:InscryptionAPI.Card.CardManager.GetExtendedClass``1(DiskCardGame.CardInfo)
  name.vb: GetExtendedClass(Of T)(CardInfo)
  fullName: InscryptionAPI.Card.CardManager.GetExtendedClass<T>(DiskCardGame.CardInfo)
  fullName.vb: InscryptionAPI.Card.CardManager.GetExtendedClass(Of T)(DiskCardGame.CardInfo)
  nameWithType: CardManager.GetExtendedClass<T>(CardInfo)
  nameWithType.vb: CardManager.GetExtendedClass(Of T)(CardInfo)
- uid: InscryptionAPI.Card.CardManager.ModifyCardList
  name: ModifyCardList
  href: api/InscryptionAPI.Card.CardManager.html#InscryptionAPI_Card_CardManager_ModifyCardList
  commentId: E:InscryptionAPI.Card.CardManager.ModifyCardList
  fullName: InscryptionAPI.Card.CardManager.ModifyCardList
  nameWithType: CardManager.ModifyCardList
- uid: InscryptionAPI.Card.CardManager.New(System.String,System.String,System.String,System.Int32,System.Int32,System.String)
  name: New(String, String, String, Int32, Int32, String)
  href: api/InscryptionAPI.Card.CardManager.html#InscryptionAPI_Card_CardManager_New_System_String_System_String_System_String_System_Int32_System_Int32_System_String_
  commentId: M:InscryptionAPI.Card.CardManager.New(System.String,System.String,System.String,System.Int32,System.Int32,System.String)
  fullName: InscryptionAPI.Card.CardManager.New(System.String, System.String, System.String, System.Int32, System.Int32, System.String)
  nameWithType: CardManager.New(String, String, String, Int32, Int32, String)
- uid: InscryptionAPI.Card.CardManager.New*
  name: New
  href: api/InscryptionAPI.Card.CardManager.html#InscryptionAPI_Card_CardManager_New_
  commentId: Overload:InscryptionAPI.Card.CardManager.New
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardManager.New
  nameWithType: CardManager.New
- uid: InscryptionAPI.Card.CardManager.Remove(DiskCardGame.CardInfo)
  name: Remove(CardInfo)
  href: api/InscryptionAPI.Card.CardManager.html#InscryptionAPI_Card_CardManager_Remove_DiskCardGame_CardInfo_
  commentId: M:InscryptionAPI.Card.CardManager.Remove(DiskCardGame.CardInfo)
  fullName: InscryptionAPI.Card.CardManager.Remove(DiskCardGame.CardInfo)
  nameWithType: CardManager.Remove(CardInfo)
- uid: InscryptionAPI.Card.CardManager.Remove*
  name: Remove
  href: api/InscryptionAPI.Card.CardManager.html#InscryptionAPI_Card_CardManager_Remove_
  commentId: Overload:InscryptionAPI.Card.CardManager.Remove
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardManager.Remove
  nameWithType: CardManager.Remove
- uid: InscryptionAPI.Card.CardManager.SyncCardList
  name: SyncCardList()
  href: api/InscryptionAPI.Card.CardManager.html#InscryptionAPI_Card_CardManager_SyncCardList
  commentId: M:InscryptionAPI.Card.CardManager.SyncCardList
  fullName: InscryptionAPI.Card.CardManager.SyncCardList()
  nameWithType: CardManager.SyncCardList()
- uid: InscryptionAPI.Card.CardManager.SyncCardList*
  name: SyncCardList
  href: api/InscryptionAPI.Card.CardManager.html#InscryptionAPI_Card_CardManager_SyncCardList_
  commentId: Overload:InscryptionAPI.Card.CardManager.SyncCardList
  isSpec: "True"
  fullName: InscryptionAPI.Card.CardManager.SyncCardList
  nameWithType: CardManager.SyncCardList
- uid: InscryptionAPI.Card.ExtendedAbilityBehaviour
  name: ExtendedAbilityBehaviour
  href: api/InscryptionAPI.Card.ExtendedAbilityBehaviour.html
  commentId: T:InscryptionAPI.Card.ExtendedAbilityBehaviour
  fullName: InscryptionAPI.Card.ExtendedAbilityBehaviour
  nameWithType: ExtendedAbilityBehaviour
- uid: InscryptionAPI.Card.ExtendedAbilityBehaviour.GetOpposingSlots(List{DiskCardGame.CardSlot},List{DiskCardGame.CardSlot})
  name: GetOpposingSlots(List<CardSlot>, List<CardSlot>)
  href: api/InscryptionAPI.Card.ExtendedAbilityBehaviour.html#InscryptionAPI_Card_ExtendedAbilityBehaviour_GetOpposingSlots_List_DiskCardGame_CardSlot__List_DiskCardGame_CardSlot__
  commentId: M:InscryptionAPI.Card.ExtendedAbilityBehaviour.GetOpposingSlots(List{DiskCardGame.CardSlot},List{DiskCardGame.CardSlot})
  name.vb: GetOpposingSlots(List(Of CardSlot), List(Of CardSlot))
  fullName: InscryptionAPI.Card.ExtendedAbilityBehaviour.GetOpposingSlots(List<DiskCardGame.CardSlot>, List<DiskCardGame.CardSlot>)
  fullName.vb: InscryptionAPI.Card.ExtendedAbilityBehaviour.GetOpposingSlots(List(Of DiskCardGame.CardSlot), List(Of DiskCardGame.CardSlot))
  nameWithType: ExtendedAbilityBehaviour.GetOpposingSlots(List<CardSlot>, List<CardSlot>)
  nameWithType.vb: ExtendedAbilityBehaviour.GetOpposingSlots(List(Of CardSlot), List(Of CardSlot))
- uid: InscryptionAPI.Card.ExtendedAbilityBehaviour.GetOpposingSlots*
  name: GetOpposingSlots
  href: api/InscryptionAPI.Card.ExtendedAbilityBehaviour.html#InscryptionAPI_Card_ExtendedAbilityBehaviour_GetOpposingSlots_
  commentId: Overload:InscryptionAPI.Card.ExtendedAbilityBehaviour.GetOpposingSlots
  isSpec: "True"
  fullName: InscryptionAPI.Card.ExtendedAbilityBehaviour.GetOpposingSlots
  nameWithType: ExtendedAbilityBehaviour.GetOpposingSlots
- uid: InscryptionAPI.Card.ExtendedAbilityBehaviour.GetPassiveAttackBuff(DiskCardGame.PlayableCard)
  name: GetPassiveAttackBuff(PlayableCard)
  href: api/InscryptionAPI.Card.ExtendedAbilityBehaviour.html#InscryptionAPI_Card_ExtendedAbilityBehaviour_GetPassiveAttackBuff_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Card.ExtendedAbilityBehaviour.GetPassiveAttackBuff(DiskCardGame.PlayableCard)
  fullName: InscryptionAPI.Card.ExtendedAbilityBehaviour.GetPassiveAttackBuff(DiskCardGame.PlayableCard)
  nameWithType: ExtendedAbilityBehaviour.GetPassiveAttackBuff(PlayableCard)
- uid: InscryptionAPI.Card.ExtendedAbilityBehaviour.GetPassiveAttackBuff*
  name: GetPassiveAttackBuff
  href: api/InscryptionAPI.Card.ExtendedAbilityBehaviour.html#InscryptionAPI_Card_ExtendedAbilityBehaviour_GetPassiveAttackBuff_
  commentId: Overload:InscryptionAPI.Card.ExtendedAbilityBehaviour.GetPassiveAttackBuff
  isSpec: "True"
  fullName: InscryptionAPI.Card.ExtendedAbilityBehaviour.GetPassiveAttackBuff
  nameWithType: ExtendedAbilityBehaviour.GetPassiveAttackBuff
- uid: InscryptionAPI.Card.ExtendedAbilityBehaviour.GetPassiveAttackBuffs
  name: GetPassiveAttackBuffs()
  href: api/InscryptionAPI.Card.ExtendedAbilityBehaviour.html#InscryptionAPI_Card_ExtendedAbilityBehaviour_GetPassiveAttackBuffs
  commentId: M:InscryptionAPI.Card.ExtendedAbilityBehaviour.GetPassiveAttackBuffs
  fullName: InscryptionAPI.Card.ExtendedAbilityBehaviour.GetPassiveAttackBuffs()
  nameWithType: ExtendedAbilityBehaviour.GetPassiveAttackBuffs()
- uid: InscryptionAPI.Card.ExtendedAbilityBehaviour.GetPassiveAttackBuffs*
  name: GetPassiveAttackBuffs
  href: api/InscryptionAPI.Card.ExtendedAbilityBehaviour.html#InscryptionAPI_Card_ExtendedAbilityBehaviour_GetPassiveAttackBuffs_
  commentId: Overload:InscryptionAPI.Card.ExtendedAbilityBehaviour.GetPassiveAttackBuffs
  isSpec: "True"
  fullName: InscryptionAPI.Card.ExtendedAbilityBehaviour.GetPassiveAttackBuffs
  nameWithType: ExtendedAbilityBehaviour.GetPassiveAttackBuffs
- uid: InscryptionAPI.Card.ExtendedAbilityBehaviour.GetPassiveHealthBuff(DiskCardGame.PlayableCard)
  name: GetPassiveHealthBuff(PlayableCard)
  href: api/InscryptionAPI.Card.ExtendedAbilityBehaviour.html#InscryptionAPI_Card_ExtendedAbilityBehaviour_GetPassiveHealthBuff_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Card.ExtendedAbilityBehaviour.GetPassiveHealthBuff(DiskCardGame.PlayableCard)
  fullName: InscryptionAPI.Card.ExtendedAbilityBehaviour.GetPassiveHealthBuff(DiskCardGame.PlayableCard)
  nameWithType: ExtendedAbilityBehaviour.GetPassiveHealthBuff(PlayableCard)
- uid: InscryptionAPI.Card.ExtendedAbilityBehaviour.GetPassiveHealthBuff*
  name: GetPassiveHealthBuff
  href: api/InscryptionAPI.Card.ExtendedAbilityBehaviour.html#InscryptionAPI_Card_ExtendedAbilityBehaviour_GetPassiveHealthBuff_
  commentId: Overload:InscryptionAPI.Card.ExtendedAbilityBehaviour.GetPassiveHealthBuff
  isSpec: "True"
  fullName: InscryptionAPI.Card.ExtendedAbilityBehaviour.GetPassiveHealthBuff
  nameWithType: ExtendedAbilityBehaviour.GetPassiveHealthBuff
- uid: InscryptionAPI.Card.ExtendedAbilityBehaviour.GetPassiveHealthBuffs
  name: GetPassiveHealthBuffs()
  href: api/InscryptionAPI.Card.ExtendedAbilityBehaviour.html#InscryptionAPI_Card_ExtendedAbilityBehaviour_GetPassiveHealthBuffs
  commentId: M:InscryptionAPI.Card.ExtendedAbilityBehaviour.GetPassiveHealthBuffs
  fullName: InscryptionAPI.Card.ExtendedAbilityBehaviour.GetPassiveHealthBuffs()
  nameWithType: ExtendedAbilityBehaviour.GetPassiveHealthBuffs()
- uid: InscryptionAPI.Card.ExtendedAbilityBehaviour.GetPassiveHealthBuffs*
  name: GetPassiveHealthBuffs
  href: api/InscryptionAPI.Card.ExtendedAbilityBehaviour.html#InscryptionAPI_Card_ExtendedAbilityBehaviour_GetPassiveHealthBuffs_
  commentId: Overload:InscryptionAPI.Card.ExtendedAbilityBehaviour.GetPassiveHealthBuffs
  isSpec: "True"
  fullName: InscryptionAPI.Card.ExtendedAbilityBehaviour.GetPassiveHealthBuffs
  nameWithType: ExtendedAbilityBehaviour.GetPassiveHealthBuffs
- uid: InscryptionAPI.Card.ExtendedAbilityBehaviour.ProvidesPassiveAttackBuff
  name: ProvidesPassiveAttackBuff
  href: api/InscryptionAPI.Card.ExtendedAbilityBehaviour.html#InscryptionAPI_Card_ExtendedAbilityBehaviour_ProvidesPassiveAttackBuff
  commentId: P:InscryptionAPI.Card.ExtendedAbilityBehaviour.ProvidesPassiveAttackBuff
  fullName: InscryptionAPI.Card.ExtendedAbilityBehaviour.ProvidesPassiveAttackBuff
  nameWithType: ExtendedAbilityBehaviour.ProvidesPassiveAttackBuff
- uid: InscryptionAPI.Card.ExtendedAbilityBehaviour.ProvidesPassiveAttackBuff*
  name: ProvidesPassiveAttackBuff
  href: api/InscryptionAPI.Card.ExtendedAbilityBehaviour.html#InscryptionAPI_Card_ExtendedAbilityBehaviour_ProvidesPassiveAttackBuff_
  commentId: Overload:InscryptionAPI.Card.ExtendedAbilityBehaviour.ProvidesPassiveAttackBuff
  isSpec: "True"
  fullName: InscryptionAPI.Card.ExtendedAbilityBehaviour.ProvidesPassiveAttackBuff
  nameWithType: ExtendedAbilityBehaviour.ProvidesPassiveAttackBuff
- uid: InscryptionAPI.Card.ExtendedAbilityBehaviour.ProvidesPassiveHealthBuff
  name: ProvidesPassiveHealthBuff
  href: api/InscryptionAPI.Card.ExtendedAbilityBehaviour.html#InscryptionAPI_Card_ExtendedAbilityBehaviour_ProvidesPassiveHealthBuff
  commentId: P:InscryptionAPI.Card.ExtendedAbilityBehaviour.ProvidesPassiveHealthBuff
  fullName: InscryptionAPI.Card.ExtendedAbilityBehaviour.ProvidesPassiveHealthBuff
  nameWithType: ExtendedAbilityBehaviour.ProvidesPassiveHealthBuff
- uid: InscryptionAPI.Card.ExtendedAbilityBehaviour.ProvidesPassiveHealthBuff*
  name: ProvidesPassiveHealthBuff
  href: api/InscryptionAPI.Card.ExtendedAbilityBehaviour.html#InscryptionAPI_Card_ExtendedAbilityBehaviour_ProvidesPassiveHealthBuff_
  commentId: Overload:InscryptionAPI.Card.ExtendedAbilityBehaviour.ProvidesPassiveHealthBuff
  isSpec: "True"
  fullName: InscryptionAPI.Card.ExtendedAbilityBehaviour.ProvidesPassiveHealthBuff
  nameWithType: ExtendedAbilityBehaviour.ProvidesPassiveHealthBuff
- uid: InscryptionAPI.Card.ExtendedAbilityBehaviour.RemoveDefaultAttackSlot
  name: RemoveDefaultAttackSlot()
  href: api/InscryptionAPI.Card.ExtendedAbilityBehaviour.html#InscryptionAPI_Card_ExtendedAbilityBehaviour_RemoveDefaultAttackSlot
  commentId: M:InscryptionAPI.Card.ExtendedAbilityBehaviour.RemoveDefaultAttackSlot
  fullName: InscryptionAPI.Card.ExtendedAbilityBehaviour.RemoveDefaultAttackSlot()
  nameWithType: ExtendedAbilityBehaviour.RemoveDefaultAttackSlot()
- uid: InscryptionAPI.Card.ExtendedAbilityBehaviour.RemoveDefaultAttackSlot*
  name: RemoveDefaultAttackSlot
  href: api/InscryptionAPI.Card.ExtendedAbilityBehaviour.html#InscryptionAPI_Card_ExtendedAbilityBehaviour_RemoveDefaultAttackSlot_
  commentId: Overload:InscryptionAPI.Card.ExtendedAbilityBehaviour.RemoveDefaultAttackSlot
  isSpec: "True"
  fullName: InscryptionAPI.Card.ExtendedAbilityBehaviour.RemoveDefaultAttackSlot
  nameWithType: ExtendedAbilityBehaviour.RemoveDefaultAttackSlot
- uid: InscryptionAPI.Card.ExtendedAbilityBehaviour.RespondsToGetOpposingSlots
  name: RespondsToGetOpposingSlots()
  href: api/InscryptionAPI.Card.ExtendedAbilityBehaviour.html#InscryptionAPI_Card_ExtendedAbilityBehaviour_RespondsToGetOpposingSlots
  commentId: M:InscryptionAPI.Card.ExtendedAbilityBehaviour.RespondsToGetOpposingSlots
  fullName: InscryptionAPI.Card.ExtendedAbilityBehaviour.RespondsToGetOpposingSlots()
  nameWithType: ExtendedAbilityBehaviour.RespondsToGetOpposingSlots()
- uid: InscryptionAPI.Card.ExtendedAbilityBehaviour.RespondsToGetOpposingSlots*
  name: RespondsToGetOpposingSlots
  href: api/InscryptionAPI.Card.ExtendedAbilityBehaviour.html#InscryptionAPI_Card_ExtendedAbilityBehaviour_RespondsToGetOpposingSlots_
  commentId: Overload:InscryptionAPI.Card.ExtendedAbilityBehaviour.RespondsToGetOpposingSlots
  isSpec: "True"
  fullName: InscryptionAPI.Card.ExtendedAbilityBehaviour.RespondsToGetOpposingSlots
  nameWithType: ExtendedAbilityBehaviour.RespondsToGetOpposingSlots
- uid: InscryptionAPI.Card.ExtendedAbilityBehaviour.ShouldTriggerCustomWhenFaceDown(Type)
  name: ShouldTriggerCustomWhenFaceDown(Type)
  href: api/InscryptionAPI.Card.ExtendedAbilityBehaviour.html#InscryptionAPI_Card_ExtendedAbilityBehaviour_ShouldTriggerCustomWhenFaceDown_Type_
  commentId: M:InscryptionAPI.Card.ExtendedAbilityBehaviour.ShouldTriggerCustomWhenFaceDown(Type)
  fullName: InscryptionAPI.Card.ExtendedAbilityBehaviour.ShouldTriggerCustomWhenFaceDown(Type)
  nameWithType: ExtendedAbilityBehaviour.ShouldTriggerCustomWhenFaceDown(Type)
- uid: InscryptionAPI.Card.ExtendedAbilityBehaviour.ShouldTriggerCustomWhenFaceDown*
  name: ShouldTriggerCustomWhenFaceDown
  href: api/InscryptionAPI.Card.ExtendedAbilityBehaviour.html#InscryptionAPI_Card_ExtendedAbilityBehaviour_ShouldTriggerCustomWhenFaceDown_
  commentId: Overload:InscryptionAPI.Card.ExtendedAbilityBehaviour.ShouldTriggerCustomWhenFaceDown
  isSpec: "True"
  fullName: InscryptionAPI.Card.ExtendedAbilityBehaviour.ShouldTriggerCustomWhenFaceDown
  nameWithType: ExtendedAbilityBehaviour.ShouldTriggerCustomWhenFaceDown
- uid: InscryptionAPI.Card.ExtendedAbilityBehaviour.ShouldTriggerWhenFaceDown(DiskCardGame.Trigger,System.Object[])
  name: ShouldTriggerWhenFaceDown(Trigger, Object[])
  href: api/InscryptionAPI.Card.ExtendedAbilityBehaviour.html#InscryptionAPI_Card_ExtendedAbilityBehaviour_ShouldTriggerWhenFaceDown_DiskCardGame_Trigger_System_Object___
  commentId: M:InscryptionAPI.Card.ExtendedAbilityBehaviour.ShouldTriggerWhenFaceDown(DiskCardGame.Trigger,System.Object[])
  name.vb: ShouldTriggerWhenFaceDown(Trigger, Object())
  fullName: InscryptionAPI.Card.ExtendedAbilityBehaviour.ShouldTriggerWhenFaceDown(DiskCardGame.Trigger, System.Object[])
  fullName.vb: InscryptionAPI.Card.ExtendedAbilityBehaviour.ShouldTriggerWhenFaceDown(DiskCardGame.Trigger, System.Object())
  nameWithType: ExtendedAbilityBehaviour.ShouldTriggerWhenFaceDown(Trigger, Object[])
  nameWithType.vb: ExtendedAbilityBehaviour.ShouldTriggerWhenFaceDown(Trigger, Object())
- uid: InscryptionAPI.Card.ExtendedAbilityBehaviour.ShouldTriggerWhenFaceDown*
  name: ShouldTriggerWhenFaceDown
  href: api/InscryptionAPI.Card.ExtendedAbilityBehaviour.html#InscryptionAPI_Card_ExtendedAbilityBehaviour_ShouldTriggerWhenFaceDown_
  commentId: Overload:InscryptionAPI.Card.ExtendedAbilityBehaviour.ShouldTriggerWhenFaceDown
  isSpec: "True"
  fullName: InscryptionAPI.Card.ExtendedAbilityBehaviour.ShouldTriggerWhenFaceDown
  nameWithType: ExtendedAbilityBehaviour.ShouldTriggerWhenFaceDown
- uid: InscryptionAPI.Card.ExtendedAbilityBehaviour.TriggerWhenFacedown
  name: TriggerWhenFacedown
  href: api/InscryptionAPI.Card.ExtendedAbilityBehaviour.html#InscryptionAPI_Card_ExtendedAbilityBehaviour_TriggerWhenFacedown
  commentId: P:InscryptionAPI.Card.ExtendedAbilityBehaviour.TriggerWhenFacedown
  fullName: InscryptionAPI.Card.ExtendedAbilityBehaviour.TriggerWhenFacedown
  nameWithType: ExtendedAbilityBehaviour.TriggerWhenFacedown
- uid: InscryptionAPI.Card.ExtendedAbilityBehaviour.TriggerWhenFacedown*
  name: TriggerWhenFacedown
  href: api/InscryptionAPI.Card.ExtendedAbilityBehaviour.html#InscryptionAPI_Card_ExtendedAbilityBehaviour_TriggerWhenFacedown_
  commentId: Overload:InscryptionAPI.Card.ExtendedAbilityBehaviour.TriggerWhenFacedown
  isSpec: "True"
  fullName: InscryptionAPI.Card.ExtendedAbilityBehaviour.TriggerWhenFacedown
  nameWithType: ExtendedAbilityBehaviour.TriggerWhenFacedown
- uid: InscryptionAPI.Card.IActivateWhenFacedown
  name: IActivateWhenFacedown
  href: api/InscryptionAPI.Card.IActivateWhenFacedown.html
  commentId: T:InscryptionAPI.Card.IActivateWhenFacedown
  fullName: InscryptionAPI.Card.IActivateWhenFacedown
  nameWithType: IActivateWhenFacedown
- uid: InscryptionAPI.Card.IActivateWhenFacedown.ShouldTriggerCustomWhenFaceDown(System.Type)
  name: ShouldTriggerCustomWhenFaceDown(Type)
  href: api/InscryptionAPI.Card.IActivateWhenFacedown.html#InscryptionAPI_Card_IActivateWhenFacedown_ShouldTriggerCustomWhenFaceDown_System_Type_
  commentId: M:InscryptionAPI.Card.IActivateWhenFacedown.ShouldTriggerCustomWhenFaceDown(System.Type)
  fullName: InscryptionAPI.Card.IActivateWhenFacedown.ShouldTriggerCustomWhenFaceDown(System.Type)
  nameWithType: IActivateWhenFacedown.ShouldTriggerCustomWhenFaceDown(Type)
- uid: InscryptionAPI.Card.IActivateWhenFacedown.ShouldTriggerCustomWhenFaceDown*
  name: ShouldTriggerCustomWhenFaceDown
  href: api/InscryptionAPI.Card.IActivateWhenFacedown.html#InscryptionAPI_Card_IActivateWhenFacedown_ShouldTriggerCustomWhenFaceDown_
  commentId: Overload:InscryptionAPI.Card.IActivateWhenFacedown.ShouldTriggerCustomWhenFaceDown
  isSpec: "True"
  fullName: InscryptionAPI.Card.IActivateWhenFacedown.ShouldTriggerCustomWhenFaceDown
  nameWithType: IActivateWhenFacedown.ShouldTriggerCustomWhenFaceDown
- uid: InscryptionAPI.Card.IActivateWhenFacedown.ShouldTriggerWhenFaceDown(DiskCardGame.Trigger,System.Object[])
  name: ShouldTriggerWhenFaceDown(Trigger, Object[])
  href: api/InscryptionAPI.Card.IActivateWhenFacedown.html#InscryptionAPI_Card_IActivateWhenFacedown_ShouldTriggerWhenFaceDown_DiskCardGame_Trigger_System_Object___
  commentId: M:InscryptionAPI.Card.IActivateWhenFacedown.ShouldTriggerWhenFaceDown(DiskCardGame.Trigger,System.Object[])
  name.vb: ShouldTriggerWhenFaceDown(Trigger, Object())
  fullName: InscryptionAPI.Card.IActivateWhenFacedown.ShouldTriggerWhenFaceDown(DiskCardGame.Trigger, System.Object[])
  fullName.vb: InscryptionAPI.Card.IActivateWhenFacedown.ShouldTriggerWhenFaceDown(DiskCardGame.Trigger, System.Object())
  nameWithType: IActivateWhenFacedown.ShouldTriggerWhenFaceDown(Trigger, Object[])
  nameWithType.vb: IActivateWhenFacedown.ShouldTriggerWhenFaceDown(Trigger, Object())
- uid: InscryptionAPI.Card.IActivateWhenFacedown.ShouldTriggerWhenFaceDown*
  name: ShouldTriggerWhenFaceDown
  href: api/InscryptionAPI.Card.IActivateWhenFacedown.html#InscryptionAPI_Card_IActivateWhenFacedown_ShouldTriggerWhenFaceDown_
  commentId: Overload:InscryptionAPI.Card.IActivateWhenFacedown.ShouldTriggerWhenFaceDown
  isSpec: "True"
  fullName: InscryptionAPI.Card.IActivateWhenFacedown.ShouldTriggerWhenFaceDown
  nameWithType: IActivateWhenFacedown.ShouldTriggerWhenFaceDown
- uid: InscryptionAPI.Card.SpecialTriggeredAbilityManager
  name: SpecialTriggeredAbilityManager
  href: api/InscryptionAPI.Card.SpecialTriggeredAbilityManager.html
  commentId: T:InscryptionAPI.Card.SpecialTriggeredAbilityManager
  fullName: InscryptionAPI.Card.SpecialTriggeredAbilityManager
  nameWithType: SpecialTriggeredAbilityManager
- uid: InscryptionAPI.Card.SpecialTriggeredAbilityManager.Add(System.String,System.String,Type)
  name: Add(String, String, Type)
  href: api/InscryptionAPI.Card.SpecialTriggeredAbilityManager.html#InscryptionAPI_Card_SpecialTriggeredAbilityManager_Add_System_String_System_String_Type_
  commentId: M:InscryptionAPI.Card.SpecialTriggeredAbilityManager.Add(System.String,System.String,Type)
  fullName: InscryptionAPI.Card.SpecialTriggeredAbilityManager.Add(System.String, System.String, Type)
  nameWithType: SpecialTriggeredAbilityManager.Add(String, String, Type)
- uid: InscryptionAPI.Card.SpecialTriggeredAbilityManager.Add*
  name: Add
  href: api/InscryptionAPI.Card.SpecialTriggeredAbilityManager.html#InscryptionAPI_Card_SpecialTriggeredAbilityManager_Add_
  commentId: Overload:InscryptionAPI.Card.SpecialTriggeredAbilityManager.Add
  isSpec: "True"
  fullName: InscryptionAPI.Card.SpecialTriggeredAbilityManager.Add
  nameWithType: SpecialTriggeredAbilityManager.Add
- uid: InscryptionAPI.Card.SpecialTriggeredAbilityManager.AllSpecialTriggers
  name: AllSpecialTriggers
  href: api/InscryptionAPI.Card.SpecialTriggeredAbilityManager.html#InscryptionAPI_Card_SpecialTriggeredAbilityManager_AllSpecialTriggers
  commentId: P:InscryptionAPI.Card.SpecialTriggeredAbilityManager.AllSpecialTriggers
  fullName: InscryptionAPI.Card.SpecialTriggeredAbilityManager.AllSpecialTriggers
  nameWithType: SpecialTriggeredAbilityManager.AllSpecialTriggers
- uid: InscryptionAPI.Card.SpecialTriggeredAbilityManager.AllSpecialTriggers*
  name: AllSpecialTriggers
  href: api/InscryptionAPI.Card.SpecialTriggeredAbilityManager.html#InscryptionAPI_Card_SpecialTriggeredAbilityManager_AllSpecialTriggers_
  commentId: Overload:InscryptionAPI.Card.SpecialTriggeredAbilityManager.AllSpecialTriggers
  isSpec: "True"
  fullName: InscryptionAPI.Card.SpecialTriggeredAbilityManager.AllSpecialTriggers
  nameWithType: SpecialTriggeredAbilityManager.AllSpecialTriggers
- uid: InscryptionAPI.Card.SpecialTriggeredAbilityManager.BaseGameSpecialTriggers
  name: BaseGameSpecialTriggers
  href: api/InscryptionAPI.Card.SpecialTriggeredAbilityManager.html#InscryptionAPI_Card_SpecialTriggeredAbilityManager_BaseGameSpecialTriggers
  commentId: F:InscryptionAPI.Card.SpecialTriggeredAbilityManager.BaseGameSpecialTriggers
  fullName: InscryptionAPI.Card.SpecialTriggeredAbilityManager.BaseGameSpecialTriggers
  nameWithType: SpecialTriggeredAbilityManager.BaseGameSpecialTriggers
- uid: InscryptionAPI.Card.SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility
  name: SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility
  href: api/InscryptionAPI.Card.SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility.html
  commentId: T:InscryptionAPI.Card.SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility
  fullName: InscryptionAPI.Card.SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility
  nameWithType: SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility
- uid: InscryptionAPI.Card.SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility.#ctor(DiskCardGame.SpecialTriggeredAbility,Type)
  name: FullSpecialTriggeredAbility(SpecialTriggeredAbility, Type)
  href: api/InscryptionAPI.Card.SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility.html#InscryptionAPI_Card_SpecialTriggeredAbilityManager_FullSpecialTriggeredAbility__ctor_DiskCardGame_SpecialTriggeredAbility_Type_
  commentId: M:InscryptionAPI.Card.SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility.#ctor(DiskCardGame.SpecialTriggeredAbility,Type)
  fullName: InscryptionAPI.Card.SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility.FullSpecialTriggeredAbility(DiskCardGame.SpecialTriggeredAbility, Type)
  nameWithType: SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility.FullSpecialTriggeredAbility(SpecialTriggeredAbility, Type)
- uid: InscryptionAPI.Card.SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility.#ctor*
  name: FullSpecialTriggeredAbility
  href: api/InscryptionAPI.Card.SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility.html#InscryptionAPI_Card_SpecialTriggeredAbilityManager_FullSpecialTriggeredAbility__ctor_
  commentId: Overload:InscryptionAPI.Card.SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility.#ctor
  isSpec: "True"
  fullName: InscryptionAPI.Card.SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility.FullSpecialTriggeredAbility
  nameWithType: SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility.FullSpecialTriggeredAbility
- uid: InscryptionAPI.Card.SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility.AbilityBehaviour
  name: AbilityBehaviour
  href: api/InscryptionAPI.Card.SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility.html#InscryptionAPI_Card_SpecialTriggeredAbilityManager_FullSpecialTriggeredAbility_AbilityBehaviour
  commentId: F:InscryptionAPI.Card.SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility.AbilityBehaviour
  fullName: InscryptionAPI.Card.SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility.AbilityBehaviour
  nameWithType: SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility.AbilityBehaviour
- uid: InscryptionAPI.Card.SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility.Id
  name: Id
  href: api/InscryptionAPI.Card.SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility.html#InscryptionAPI_Card_SpecialTriggeredAbilityManager_FullSpecialTriggeredAbility_Id
  commentId: F:InscryptionAPI.Card.SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility.Id
  fullName: InscryptionAPI.Card.SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility.Id
  nameWithType: SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility.Id
- uid: InscryptionAPI.Card.SpecialTriggeredAbilityManager.Remove(DiskCardGame.SpecialTriggeredAbility)
  name: Remove(SpecialTriggeredAbility)
  href: api/InscryptionAPI.Card.SpecialTriggeredAbilityManager.html#InscryptionAPI_Card_SpecialTriggeredAbilityManager_Remove_DiskCardGame_SpecialTriggeredAbility_
  commentId: M:InscryptionAPI.Card.SpecialTriggeredAbilityManager.Remove(DiskCardGame.SpecialTriggeredAbility)
  fullName: InscryptionAPI.Card.SpecialTriggeredAbilityManager.Remove(DiskCardGame.SpecialTriggeredAbility)
  nameWithType: SpecialTriggeredAbilityManager.Remove(SpecialTriggeredAbility)
- uid: InscryptionAPI.Card.SpecialTriggeredAbilityManager.Remove(InscryptionAPI.Card.SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility)
  name: Remove(SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility)
  href: api/InscryptionAPI.Card.SpecialTriggeredAbilityManager.html#InscryptionAPI_Card_SpecialTriggeredAbilityManager_Remove_InscryptionAPI_Card_SpecialTriggeredAbilityManager_FullSpecialTriggeredAbility_
  commentId: M:InscryptionAPI.Card.SpecialTriggeredAbilityManager.Remove(InscryptionAPI.Card.SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility)
  fullName: InscryptionAPI.Card.SpecialTriggeredAbilityManager.Remove(InscryptionAPI.Card.SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility)
  nameWithType: SpecialTriggeredAbilityManager.Remove(SpecialTriggeredAbilityManager.FullSpecialTriggeredAbility)
- uid: InscryptionAPI.Card.SpecialTriggeredAbilityManager.Remove*
  name: Remove
  href: api/InscryptionAPI.Card.SpecialTriggeredAbilityManager.html#InscryptionAPI_Card_SpecialTriggeredAbilityManager_Remove_
  commentId: Overload:InscryptionAPI.Card.SpecialTriggeredAbilityManager.Remove
  isSpec: "True"
  fullName: InscryptionAPI.Card.SpecialTriggeredAbilityManager.Remove
  nameWithType: SpecialTriggeredAbilityManager.Remove
- uid: InscryptionAPI.Card.StatIconManager
  name: StatIconManager
  href: api/InscryptionAPI.Card.StatIconManager.html
  commentId: T:InscryptionAPI.Card.StatIconManager
  fullName: InscryptionAPI.Card.StatIconManager
  nameWithType: StatIconManager
- uid: InscryptionAPI.Card.StatIconManager.Add(System.String,DiskCardGame.StatIconInfo,Type)
  name: Add(String, StatIconInfo, Type)
  href: api/InscryptionAPI.Card.StatIconManager.html#InscryptionAPI_Card_StatIconManager_Add_System_String_DiskCardGame_StatIconInfo_Type_
  commentId: M:InscryptionAPI.Card.StatIconManager.Add(System.String,DiskCardGame.StatIconInfo,Type)
  fullName: InscryptionAPI.Card.StatIconManager.Add(System.String, DiskCardGame.StatIconInfo, Type)
  nameWithType: StatIconManager.Add(String, StatIconInfo, Type)
- uid: InscryptionAPI.Card.StatIconManager.Add*
  name: Add
  href: api/InscryptionAPI.Card.StatIconManager.html#InscryptionAPI_Card_StatIconManager_Add_
  commentId: Overload:InscryptionAPI.Card.StatIconManager.Add
  isSpec: "True"
  fullName: InscryptionAPI.Card.StatIconManager.Add
  nameWithType: StatIconManager.Add
- uid: InscryptionAPI.Card.StatIconManager.AllStatIconInfos
  name: AllStatIconInfos
  href: api/InscryptionAPI.Card.StatIconManager.html#InscryptionAPI_Card_StatIconManager_AllStatIconInfos
  commentId: P:InscryptionAPI.Card.StatIconManager.AllStatIconInfos
  fullName: InscryptionAPI.Card.StatIconManager.AllStatIconInfos
  nameWithType: StatIconManager.AllStatIconInfos
- uid: InscryptionAPI.Card.StatIconManager.AllStatIconInfos*
  name: AllStatIconInfos
  href: api/InscryptionAPI.Card.StatIconManager.html#InscryptionAPI_Card_StatIconManager_AllStatIconInfos_
  commentId: Overload:InscryptionAPI.Card.StatIconManager.AllStatIconInfos
  isSpec: "True"
  fullName: InscryptionAPI.Card.StatIconManager.AllStatIconInfos
  nameWithType: StatIconManager.AllStatIconInfos
- uid: InscryptionAPI.Card.StatIconManager.AllStatIcons
  name: AllStatIcons
  href: api/InscryptionAPI.Card.StatIconManager.html#InscryptionAPI_Card_StatIconManager_AllStatIcons
  commentId: P:InscryptionAPI.Card.StatIconManager.AllStatIcons
  fullName: InscryptionAPI.Card.StatIconManager.AllStatIcons
  nameWithType: StatIconManager.AllStatIcons
- uid: InscryptionAPI.Card.StatIconManager.AllStatIcons*
  name: AllStatIcons
  href: api/InscryptionAPI.Card.StatIconManager.html#InscryptionAPI_Card_StatIconManager_AllStatIcons_
  commentId: Overload:InscryptionAPI.Card.StatIconManager.AllStatIcons
  isSpec: "True"
  fullName: InscryptionAPI.Card.StatIconManager.AllStatIcons
  nameWithType: StatIconManager.AllStatIcons
- uid: InscryptionAPI.Card.StatIconManager.BaseGameStatIcons
  name: BaseGameStatIcons
  href: api/InscryptionAPI.Card.StatIconManager.html#InscryptionAPI_Card_StatIconManager_BaseGameStatIcons
  commentId: F:InscryptionAPI.Card.StatIconManager.BaseGameStatIcons
  fullName: InscryptionAPI.Card.StatIconManager.BaseGameStatIcons
  nameWithType: StatIconManager.BaseGameStatIcons
- uid: InscryptionAPI.Card.StatIconManager.FullStatIcon
  name: StatIconManager.FullStatIcon
  href: api/InscryptionAPI.Card.StatIconManager.FullStatIcon.html
  commentId: T:InscryptionAPI.Card.StatIconManager.FullStatIcon
  fullName: InscryptionAPI.Card.StatIconManager.FullStatIcon
  nameWithType: StatIconManager.FullStatIcon
- uid: InscryptionAPI.Card.StatIconManager.FullStatIcon.#ctor(DiskCardGame.SpecialStatIcon,DiskCardGame.SpecialTriggeredAbility,DiskCardGame.StatIconInfo,Type)
  name: FullStatIcon(SpecialStatIcon, SpecialTriggeredAbility, StatIconInfo, Type)
  href: api/InscryptionAPI.Card.StatIconManager.FullStatIcon.html#InscryptionAPI_Card_StatIconManager_FullStatIcon__ctor_DiskCardGame_SpecialStatIcon_DiskCardGame_SpecialTriggeredAbility_DiskCardGame_StatIconInfo_Type_
  commentId: M:InscryptionAPI.Card.StatIconManager.FullStatIcon.#ctor(DiskCardGame.SpecialStatIcon,DiskCardGame.SpecialTriggeredAbility,DiskCardGame.StatIconInfo,Type)
  fullName: InscryptionAPI.Card.StatIconManager.FullStatIcon.FullStatIcon(DiskCardGame.SpecialStatIcon, DiskCardGame.SpecialTriggeredAbility, DiskCardGame.StatIconInfo, Type)
  nameWithType: StatIconManager.FullStatIcon.FullStatIcon(SpecialStatIcon, SpecialTriggeredAbility, StatIconInfo, Type)
- uid: InscryptionAPI.Card.StatIconManager.FullStatIcon.#ctor*
  name: FullStatIcon
  href: api/InscryptionAPI.Card.StatIconManager.FullStatIcon.html#InscryptionAPI_Card_StatIconManager_FullStatIcon__ctor_
  commentId: Overload:InscryptionAPI.Card.StatIconManager.FullStatIcon.#ctor
  isSpec: "True"
  fullName: InscryptionAPI.Card.StatIconManager.FullStatIcon.FullStatIcon
  nameWithType: StatIconManager.FullStatIcon.FullStatIcon
- uid: InscryptionAPI.Card.StatIconManager.FullStatIcon.AbilityId
  name: AbilityId
  href: api/InscryptionAPI.Card.StatIconManager.FullStatIcon.html#InscryptionAPI_Card_StatIconManager_FullStatIcon_AbilityId
  commentId: F:InscryptionAPI.Card.StatIconManager.FullStatIcon.AbilityId
  fullName: InscryptionAPI.Card.StatIconManager.FullStatIcon.AbilityId
  nameWithType: StatIconManager.FullStatIcon.AbilityId
- uid: InscryptionAPI.Card.StatIconManager.FullStatIcon.Id
  name: Id
  href: api/InscryptionAPI.Card.StatIconManager.FullStatIcon.html#InscryptionAPI_Card_StatIconManager_FullStatIcon_Id
  commentId: F:InscryptionAPI.Card.StatIconManager.FullStatIcon.Id
  fullName: InscryptionAPI.Card.StatIconManager.FullStatIcon.Id
  nameWithType: StatIconManager.FullStatIcon.Id
- uid: InscryptionAPI.Card.StatIconManager.FullStatIcon.Info
  name: Info
  href: api/InscryptionAPI.Card.StatIconManager.FullStatIcon.html#InscryptionAPI_Card_StatIconManager_FullStatIcon_Info
  commentId: F:InscryptionAPI.Card.StatIconManager.FullStatIcon.Info
  fullName: InscryptionAPI.Card.StatIconManager.FullStatIcon.Info
  nameWithType: StatIconManager.FullStatIcon.Info
- uid: InscryptionAPI.Card.StatIconManager.FullStatIcon.VariableStatBehavior
  name: VariableStatBehavior
  href: api/InscryptionAPI.Card.StatIconManager.FullStatIcon.html#InscryptionAPI_Card_StatIconManager_FullStatIcon_VariableStatBehavior
  commentId: F:InscryptionAPI.Card.StatIconManager.FullStatIcon.VariableStatBehavior
  fullName: InscryptionAPI.Card.StatIconManager.FullStatIcon.VariableStatBehavior
  nameWithType: StatIconManager.FullStatIcon.VariableStatBehavior
- uid: InscryptionAPI.Card.StatIconManager.New(System.String,System.String,System.String,Type)
  name: New(String, String, String, Type)
  href: api/InscryptionAPI.Card.StatIconManager.html#InscryptionAPI_Card_StatIconManager_New_System_String_System_String_System_String_Type_
  commentId: M:InscryptionAPI.Card.StatIconManager.New(System.String,System.String,System.String,Type)
  fullName: InscryptionAPI.Card.StatIconManager.New(System.String, System.String, System.String, Type)
  nameWithType: StatIconManager.New(String, String, String, Type)
- uid: InscryptionAPI.Card.StatIconManager.New*
  name: New
  href: api/InscryptionAPI.Card.StatIconManager.html#InscryptionAPI_Card_StatIconManager_New_
  commentId: Overload:InscryptionAPI.Card.StatIconManager.New
  isSpec: "True"
  fullName: InscryptionAPI.Card.StatIconManager.New
  nameWithType: StatIconManager.New
- uid: InscryptionAPI.Card.StatIconManager.Remove(DiskCardGame.SpecialStatIcon)
  name: Remove(SpecialStatIcon)
  href: api/InscryptionAPI.Card.StatIconManager.html#InscryptionAPI_Card_StatIconManager_Remove_DiskCardGame_SpecialStatIcon_
  commentId: M:InscryptionAPI.Card.StatIconManager.Remove(DiskCardGame.SpecialStatIcon)
  fullName: InscryptionAPI.Card.StatIconManager.Remove(DiskCardGame.SpecialStatIcon)
  nameWithType: StatIconManager.Remove(SpecialStatIcon)
- uid: InscryptionAPI.Card.StatIconManager.Remove(InscryptionAPI.Card.StatIconManager.FullStatIcon)
  name: Remove(StatIconManager.FullStatIcon)
  href: api/InscryptionAPI.Card.StatIconManager.html#InscryptionAPI_Card_StatIconManager_Remove_InscryptionAPI_Card_StatIconManager_FullStatIcon_
  commentId: M:InscryptionAPI.Card.StatIconManager.Remove(InscryptionAPI.Card.StatIconManager.FullStatIcon)
  fullName: InscryptionAPI.Card.StatIconManager.Remove(InscryptionAPI.Card.StatIconManager.FullStatIcon)
  nameWithType: StatIconManager.Remove(StatIconManager.FullStatIcon)
- uid: InscryptionAPI.Card.StatIconManager.Remove*
  name: Remove
  href: api/InscryptionAPI.Card.StatIconManager.html#InscryptionAPI_Card_StatIconManager_Remove_
  commentId: Overload:InscryptionAPI.Card.StatIconManager.Remove
  isSpec: "True"
  fullName: InscryptionAPI.Card.StatIconManager.Remove
  nameWithType: StatIconManager.Remove
- uid: InscryptionAPI.Card.TribeManager
  name: TribeManager
  href: api/InscryptionAPI.Card.TribeManager.html
  commentId: T:InscryptionAPI.Card.TribeManager
  fullName: InscryptionAPI.Card.TribeManager
  nameWithType: TribeManager
- uid: InscryptionAPI.Card.TribeManager.Add(System.String,System.String,System.String,System.Boolean,System.String)
  name: Add(String, String, String, Boolean, String)
  href: api/InscryptionAPI.Card.TribeManager.html#InscryptionAPI_Card_TribeManager_Add_System_String_System_String_System_String_System_Boolean_System_String_
  commentId: M:InscryptionAPI.Card.TribeManager.Add(System.String,System.String,System.String,System.Boolean,System.String)
  fullName: InscryptionAPI.Card.TribeManager.Add(System.String, System.String, System.String, System.Boolean, System.String)
  nameWithType: TribeManager.Add(String, String, String, Boolean, String)
- uid: InscryptionAPI.Card.TribeManager.Add(System.String,System.String,UnityEngine.Texture2D,System.Boolean,UnityEngine.Texture2D)
  name: Add(String, String, Texture2D, Boolean, Texture2D)
  href: api/InscryptionAPI.Card.TribeManager.html#InscryptionAPI_Card_TribeManager_Add_System_String_System_String_UnityEngine_Texture2D_System_Boolean_UnityEngine_Texture2D_
  commentId: M:InscryptionAPI.Card.TribeManager.Add(System.String,System.String,UnityEngine.Texture2D,System.Boolean,UnityEngine.Texture2D)
  fullName: InscryptionAPI.Card.TribeManager.Add(System.String, System.String, UnityEngine.Texture2D, System.Boolean, UnityEngine.Texture2D)
  nameWithType: TribeManager.Add(String, String, Texture2D, Boolean, Texture2D)
- uid: InscryptionAPI.Card.TribeManager.Add*
  name: Add
  href: api/InscryptionAPI.Card.TribeManager.html#InscryptionAPI_Card_TribeManager_Add_
  commentId: Overload:InscryptionAPI.Card.TribeManager.Add
  isSpec: "True"
  fullName: InscryptionAPI.Card.TribeManager.Add
  nameWithType: TribeManager.Add
- uid: InscryptionAPI.Encounters
  name: InscryptionAPI.Encounters
  href: api/InscryptionAPI.Encounters.html
  commentId: N:InscryptionAPI.Encounters
  fullName: InscryptionAPI.Encounters
  nameWithType: InscryptionAPI.Encounters
- uid: InscryptionAPI.Encounters.AIManager
  name: AIManager
  href: api/InscryptionAPI.Encounters.AIManager.html
  commentId: T:InscryptionAPI.Encounters.AIManager
  fullName: InscryptionAPI.Encounters.AIManager
  nameWithType: AIManager
- uid: InscryptionAPI.Encounters.AIManager.Add(System.String,System.String,Type)
  name: Add(String, String, Type)
  href: api/InscryptionAPI.Encounters.AIManager.html#InscryptionAPI_Encounters_AIManager_Add_System_String_System_String_Type_
  commentId: M:InscryptionAPI.Encounters.AIManager.Add(System.String,System.String,Type)
  fullName: InscryptionAPI.Encounters.AIManager.Add(System.String, System.String, Type)
  nameWithType: AIManager.Add(String, String, Type)
- uid: InscryptionAPI.Encounters.AIManager.Add*
  name: Add
  href: api/InscryptionAPI.Encounters.AIManager.html#InscryptionAPI_Encounters_AIManager_Add_
  commentId: Overload:InscryptionAPI.Encounters.AIManager.Add
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.AIManager.Add
  nameWithType: AIManager.Add
- uid: InscryptionAPI.Encounters.AIManager.AllAIs
  name: AllAIs
  href: api/InscryptionAPI.Encounters.AIManager.html#InscryptionAPI_Encounters_AIManager_AllAIs
  commentId: P:InscryptionAPI.Encounters.AIManager.AllAIs
  fullName: InscryptionAPI.Encounters.AIManager.AllAIs
  nameWithType: AIManager.AllAIs
- uid: InscryptionAPI.Encounters.AIManager.AllAIs*
  name: AllAIs
  href: api/InscryptionAPI.Encounters.AIManager.html#InscryptionAPI_Encounters_AIManager_AllAIs_
  commentId: Overload:InscryptionAPI.Encounters.AIManager.AllAIs
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.AIManager.AllAIs
  nameWithType: AIManager.AllAIs
- uid: InscryptionAPI.Encounters.AIManager.BaseGameAIs
  name: BaseGameAIs
  href: api/InscryptionAPI.Encounters.AIManager.html#InscryptionAPI_Encounters_AIManager_BaseGameAIs
  commentId: F:InscryptionAPI.Encounters.AIManager.BaseGameAIs
  fullName: InscryptionAPI.Encounters.AIManager.BaseGameAIs
  nameWithType: AIManager.BaseGameAIs
- uid: InscryptionAPI.Encounters.AIManager.FullAI
  name: AIManager.FullAI
  href: api/InscryptionAPI.Encounters.AIManager.FullAI.html
  commentId: T:InscryptionAPI.Encounters.AIManager.FullAI
  fullName: InscryptionAPI.Encounters.AIManager.FullAI
  nameWithType: AIManager.FullAI
- uid: InscryptionAPI.Encounters.AIManager.FullAI.#ctor(System.String,Type)
  name: FullAI(String, Type)
  href: api/InscryptionAPI.Encounters.AIManager.FullAI.html#InscryptionAPI_Encounters_AIManager_FullAI__ctor_System_String_Type_
  commentId: M:InscryptionAPI.Encounters.AIManager.FullAI.#ctor(System.String,Type)
  fullName: InscryptionAPI.Encounters.AIManager.FullAI.FullAI(System.String, Type)
  nameWithType: AIManager.FullAI.FullAI(String, Type)
- uid: InscryptionAPI.Encounters.AIManager.FullAI.#ctor*
  name: FullAI
  href: api/InscryptionAPI.Encounters.AIManager.FullAI.html#InscryptionAPI_Encounters_AIManager_FullAI__ctor_
  commentId: Overload:InscryptionAPI.Encounters.AIManager.FullAI.#ctor
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.AIManager.FullAI.FullAI
  nameWithType: AIManager.FullAI.FullAI
- uid: InscryptionAPI.Encounters.AIManager.FullAI.AI
  name: AI
  href: api/InscryptionAPI.Encounters.AIManager.FullAI.html#InscryptionAPI_Encounters_AIManager_FullAI_AI
  commentId: F:InscryptionAPI.Encounters.AIManager.FullAI.AI
  fullName: InscryptionAPI.Encounters.AIManager.FullAI.AI
  nameWithType: AIManager.FullAI.AI
- uid: InscryptionAPI.Encounters.AIManager.FullAI.Id
  name: Id
  href: api/InscryptionAPI.Encounters.AIManager.FullAI.html#InscryptionAPI_Encounters_AIManager_FullAI_Id
  commentId: F:InscryptionAPI.Encounters.AIManager.FullAI.Id
  fullName: InscryptionAPI.Encounters.AIManager.FullAI.Id
  nameWithType: AIManager.FullAI.Id
- uid: InscryptionAPI.Encounters.CustomNodeData
  name: CustomNodeData
  href: api/InscryptionAPI.Encounters.CustomNodeData.html
  commentId: T:InscryptionAPI.Encounters.CustomNodeData
  fullName: InscryptionAPI.Encounters.CustomNodeData
  nameWithType: CustomNodeData
- uid: InscryptionAPI.Encounters.CustomNodeData.#ctor
  name: CustomNodeData()
  href: api/InscryptionAPI.Encounters.CustomNodeData.html#InscryptionAPI_Encounters_CustomNodeData__ctor
  commentId: M:InscryptionAPI.Encounters.CustomNodeData.#ctor
  fullName: InscryptionAPI.Encounters.CustomNodeData.CustomNodeData()
  nameWithType: CustomNodeData.CustomNodeData()
- uid: InscryptionAPI.Encounters.CustomNodeData.#ctor*
  name: CustomNodeData
  href: api/InscryptionAPI.Encounters.CustomNodeData.html#InscryptionAPI_Encounters_CustomNodeData__ctor_
  commentId: Overload:InscryptionAPI.Encounters.CustomNodeData.#ctor
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.CustomNodeData.CustomNodeData
  nameWithType: CustomNodeData.CustomNodeData
- uid: InscryptionAPI.Encounters.CustomNodeData.AddForceGenerationCondition(Func{System.Boolean})
  name: AddForceGenerationCondition(Func<Boolean>)
  href: api/InscryptionAPI.Encounters.CustomNodeData.html#InscryptionAPI_Encounters_CustomNodeData_AddForceGenerationCondition_Func_System_Boolean__
  commentId: M:InscryptionAPI.Encounters.CustomNodeData.AddForceGenerationCondition(Func{System.Boolean})
  name.vb: AddForceGenerationCondition(Func(Of Boolean))
  fullName: InscryptionAPI.Encounters.CustomNodeData.AddForceGenerationCondition(Func<System.Boolean>)
  fullName.vb: InscryptionAPI.Encounters.CustomNodeData.AddForceGenerationCondition(Func(Of System.Boolean))
  nameWithType: CustomNodeData.AddForceGenerationCondition(Func<Boolean>)
  nameWithType.vb: CustomNodeData.AddForceGenerationCondition(Func(Of Boolean))
- uid: InscryptionAPI.Encounters.CustomNodeData.AddForceGenerationCondition(InscryptionAPI.Encounters.CustomNodeData.NodeGenerationCondition)
  name: AddForceGenerationCondition(CustomNodeData.NodeGenerationCondition)
  href: api/InscryptionAPI.Encounters.CustomNodeData.html#InscryptionAPI_Encounters_CustomNodeData_AddForceGenerationCondition_InscryptionAPI_Encounters_CustomNodeData_NodeGenerationCondition_
  commentId: M:InscryptionAPI.Encounters.CustomNodeData.AddForceGenerationCondition(InscryptionAPI.Encounters.CustomNodeData.NodeGenerationCondition)
  fullName: InscryptionAPI.Encounters.CustomNodeData.AddForceGenerationCondition(InscryptionAPI.Encounters.CustomNodeData.NodeGenerationCondition)
  nameWithType: CustomNodeData.AddForceGenerationCondition(CustomNodeData.NodeGenerationCondition)
- uid: InscryptionAPI.Encounters.CustomNodeData.AddForceGenerationCondition*
  name: AddForceGenerationCondition
  href: api/InscryptionAPI.Encounters.CustomNodeData.html#InscryptionAPI_Encounters_CustomNodeData_AddForceGenerationCondition_
  commentId: Overload:InscryptionAPI.Encounters.CustomNodeData.AddForceGenerationCondition
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.CustomNodeData.AddForceGenerationCondition
  nameWithType: CustomNodeData.AddForceGenerationCondition
- uid: InscryptionAPI.Encounters.CustomNodeData.AddGenerationPrerequisite(Func{System.Boolean})
  name: AddGenerationPrerequisite(Func<Boolean>)
  href: api/InscryptionAPI.Encounters.CustomNodeData.html#InscryptionAPI_Encounters_CustomNodeData_AddGenerationPrerequisite_Func_System_Boolean__
  commentId: M:InscryptionAPI.Encounters.CustomNodeData.AddGenerationPrerequisite(Func{System.Boolean})
  name.vb: AddGenerationPrerequisite(Func(Of Boolean))
  fullName: InscryptionAPI.Encounters.CustomNodeData.AddGenerationPrerequisite(Func<System.Boolean>)
  fullName.vb: InscryptionAPI.Encounters.CustomNodeData.AddGenerationPrerequisite(Func(Of System.Boolean))
  nameWithType: CustomNodeData.AddGenerationPrerequisite(Func<Boolean>)
  nameWithType.vb: CustomNodeData.AddGenerationPrerequisite(Func(Of Boolean))
- uid: InscryptionAPI.Encounters.CustomNodeData.AddGenerationPrerequisite(InscryptionAPI.Encounters.CustomNodeData.NodeGenerationCondition)
  name: AddGenerationPrerequisite(CustomNodeData.NodeGenerationCondition)
  href: api/InscryptionAPI.Encounters.CustomNodeData.html#InscryptionAPI_Encounters_CustomNodeData_AddGenerationPrerequisite_InscryptionAPI_Encounters_CustomNodeData_NodeGenerationCondition_
  commentId: M:InscryptionAPI.Encounters.CustomNodeData.AddGenerationPrerequisite(InscryptionAPI.Encounters.CustomNodeData.NodeGenerationCondition)
  fullName: InscryptionAPI.Encounters.CustomNodeData.AddGenerationPrerequisite(InscryptionAPI.Encounters.CustomNodeData.NodeGenerationCondition)
  nameWithType: CustomNodeData.AddGenerationPrerequisite(CustomNodeData.NodeGenerationCondition)
- uid: InscryptionAPI.Encounters.CustomNodeData.AddGenerationPrerequisite*
  name: AddGenerationPrerequisite
  href: api/InscryptionAPI.Encounters.CustomNodeData.html#InscryptionAPI_Encounters_CustomNodeData_AddGenerationPrerequisite_
  commentId: Overload:InscryptionAPI.Encounters.CustomNodeData.AddGenerationPrerequisite
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.CustomNodeData.AddGenerationPrerequisite
  nameWithType: CustomNodeData.AddGenerationPrerequisite
- uid: InscryptionAPI.Encounters.CustomNodeData.ForceGenerationConditions
  name: ForceGenerationConditions
  href: api/InscryptionAPI.Encounters.CustomNodeData.html#InscryptionAPI_Encounters_CustomNodeData_ForceGenerationConditions
  commentId: P:InscryptionAPI.Encounters.CustomNodeData.ForceGenerationConditions
  fullName: InscryptionAPI.Encounters.CustomNodeData.ForceGenerationConditions
  nameWithType: CustomNodeData.ForceGenerationConditions
- uid: InscryptionAPI.Encounters.CustomNodeData.ForceGenerationConditions*
  name: ForceGenerationConditions
  href: api/InscryptionAPI.Encounters.CustomNodeData.html#InscryptionAPI_Encounters_CustomNodeData_ForceGenerationConditions_
  commentId: Overload:InscryptionAPI.Encounters.CustomNodeData.ForceGenerationConditions
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.CustomNodeData.ForceGenerationConditions
  nameWithType: CustomNodeData.ForceGenerationConditions
- uid: InscryptionAPI.Encounters.CustomNodeData.GenerationPrerequisiteConditions
  name: GenerationPrerequisiteConditions
  href: api/InscryptionAPI.Encounters.CustomNodeData.html#InscryptionAPI_Encounters_CustomNodeData_GenerationPrerequisiteConditions
  commentId: P:InscryptionAPI.Encounters.CustomNodeData.GenerationPrerequisiteConditions
  fullName: InscryptionAPI.Encounters.CustomNodeData.GenerationPrerequisiteConditions
  nameWithType: CustomNodeData.GenerationPrerequisiteConditions
- uid: InscryptionAPI.Encounters.CustomNodeData.GenerationPrerequisiteConditions*
  name: GenerationPrerequisiteConditions
  href: api/InscryptionAPI.Encounters.CustomNodeData.html#InscryptionAPI_Encounters_CustomNodeData_GenerationPrerequisiteConditions_
  commentId: Overload:InscryptionAPI.Encounters.CustomNodeData.GenerationPrerequisiteConditions
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.CustomNodeData.GenerationPrerequisiteConditions
  nameWithType: CustomNodeData.GenerationPrerequisiteConditions
- uid: InscryptionAPI.Encounters.CustomNodeData.Initialize
  name: Initialize()
  href: api/InscryptionAPI.Encounters.CustomNodeData.html#InscryptionAPI_Encounters_CustomNodeData_Initialize
  commentId: M:InscryptionAPI.Encounters.CustomNodeData.Initialize
  fullName: InscryptionAPI.Encounters.CustomNodeData.Initialize()
  nameWithType: CustomNodeData.Initialize()
- uid: InscryptionAPI.Encounters.CustomNodeData.Initialize*
  name: Initialize
  href: api/InscryptionAPI.Encounters.CustomNodeData.html#InscryptionAPI_Encounters_CustomNodeData_Initialize_
  commentId: Overload:InscryptionAPI.Encounters.CustomNodeData.Initialize
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.CustomNodeData.Initialize
  nameWithType: CustomNodeData.Initialize
- uid: InscryptionAPI.Encounters.CustomNodeData.NodeGenerationCondition
  name: CustomNodeData.NodeGenerationCondition
  href: api/InscryptionAPI.Encounters.CustomNodeData.NodeGenerationCondition.html
  commentId: T:InscryptionAPI.Encounters.CustomNodeData.NodeGenerationCondition
  fullName: InscryptionAPI.Encounters.CustomNodeData.NodeGenerationCondition
  nameWithType: CustomNodeData.NodeGenerationCondition
- uid: InscryptionAPI.Encounters.CustomNodeData.PrefabPath
  name: PrefabPath
  href: api/InscryptionAPI.Encounters.CustomNodeData.html#InscryptionAPI_Encounters_CustomNodeData_PrefabPath
  commentId: P:InscryptionAPI.Encounters.CustomNodeData.PrefabPath
  fullName: InscryptionAPI.Encounters.CustomNodeData.PrefabPath
  nameWithType: CustomNodeData.PrefabPath
- uid: InscryptionAPI.Encounters.CustomNodeData.PrefabPath*
  name: PrefabPath
  href: api/InscryptionAPI.Encounters.CustomNodeData.html#InscryptionAPI_Encounters_CustomNodeData_PrefabPath_
  commentId: Overload:InscryptionAPI.Encounters.CustomNodeData.PrefabPath
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.CustomNodeData.PrefabPath
  nameWithType: CustomNodeData.PrefabPath
- uid: InscryptionAPI.Encounters.EncounterBuilder
  name: EncounterBuilder
  href: api/InscryptionAPI.Encounters.EncounterBuilder.html
  commentId: T:InscryptionAPI.Encounters.EncounterBuilder
  fullName: InscryptionAPI.Encounters.EncounterBuilder
  nameWithType: EncounterBuilder
- uid: InscryptionAPI.Encounters.EncounterBuilder.Build(InscryptionAPI.Encounters.EncounterBuilderBlueprintData)
  name: Build(EncounterBuilderBlueprintData)
  href: api/InscryptionAPI.Encounters.EncounterBuilder.html#InscryptionAPI_Encounters_EncounterBuilder_Build_InscryptionAPI_Encounters_EncounterBuilderBlueprintData_
  commentId: M:InscryptionAPI.Encounters.EncounterBuilder.Build(InscryptionAPI.Encounters.EncounterBuilderBlueprintData)
  fullName: InscryptionAPI.Encounters.EncounterBuilder.Build(InscryptionAPI.Encounters.EncounterBuilderBlueprintData)
  nameWithType: EncounterBuilder.Build(EncounterBuilderBlueprintData)
- uid: InscryptionAPI.Encounters.EncounterBuilder.Build*
  name: Build
  href: api/InscryptionAPI.Encounters.EncounterBuilder.html#InscryptionAPI_Encounters_EncounterBuilder_Build_
  commentId: Overload:InscryptionAPI.Encounters.EncounterBuilder.Build
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.EncounterBuilder.Build
  nameWithType: EncounterBuilder.Build
- uid: InscryptionAPI.Encounters.EncounterBuilderBlueprintData
  name: EncounterBuilderBlueprintData
  href: api/InscryptionAPI.Encounters.EncounterBuilderBlueprintData.html
  commentId: T:InscryptionAPI.Encounters.EncounterBuilderBlueprintData
  fullName: InscryptionAPI.Encounters.EncounterBuilderBlueprintData
  nameWithType: EncounterBuilderBlueprintData
- uid: InscryptionAPI.Encounters.EncounterBuilderBlueprintData.SetBasic(System.String,DiskCardGame.RegionData)
  name: SetBasic(String, RegionData)
  href: api/InscryptionAPI.Encounters.EncounterBuilderBlueprintData.html#InscryptionAPI_Encounters_EncounterBuilderBlueprintData_SetBasic_System_String_DiskCardGame_RegionData_
  commentId: M:InscryptionAPI.Encounters.EncounterBuilderBlueprintData.SetBasic(System.String,DiskCardGame.RegionData)
  fullName: InscryptionAPI.Encounters.EncounterBuilderBlueprintData.SetBasic(System.String, DiskCardGame.RegionData)
  nameWithType: EncounterBuilderBlueprintData.SetBasic(String, RegionData)
- uid: InscryptionAPI.Encounters.EncounterBuilderBlueprintData.SetBasic*
  name: SetBasic
  href: api/InscryptionAPI.Encounters.EncounterBuilderBlueprintData.html#InscryptionAPI_Encounters_EncounterBuilderBlueprintData_SetBasic_
  commentId: Overload:InscryptionAPI.Encounters.EncounterBuilderBlueprintData.SetBasic
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.EncounterBuilderBlueprintData.SetBasic
  nameWithType: EncounterBuilderBlueprintData.SetBasic
- uid: InscryptionAPI.Encounters.EncounterExtensions
  name: EncounterExtensions
  href: api/InscryptionAPI.Encounters.EncounterExtensions.html
  commentId: T:InscryptionAPI.Encounters.EncounterExtensions
  fullName: InscryptionAPI.Encounters.EncounterExtensions
  nameWithType: EncounterExtensions
- uid: InscryptionAPI.Encounters.EncounterExtensions.AddDominantTribes*
  name: AddDominantTribes
  href: api/InscryptionAPI.Encounters.EncounterExtensions.html#InscryptionAPI_Encounters_EncounterExtensions_AddDominantTribes_
  commentId: Overload:InscryptionAPI.Encounters.EncounterExtensions.AddDominantTribes
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.EncounterExtensions.AddDominantTribes
  nameWithType: EncounterExtensions.AddDominantTribes
- uid: InscryptionAPI.Encounters.EncounterExtensions.AddDominantTribes``1(``0,DiskCardGame.Tribe[])
  name: AddDominantTribes<T>(T, Tribe[])
  href: api/InscryptionAPI.Encounters.EncounterExtensions.html#InscryptionAPI_Encounters_EncounterExtensions_AddDominantTribes__1___0_DiskCardGame_Tribe___
  commentId: M:InscryptionAPI.Encounters.EncounterExtensions.AddDominantTribes``1(``0,DiskCardGame.Tribe[])
  name.vb: AddDominantTribes(Of T)(T, Tribe())
  fullName: InscryptionAPI.Encounters.EncounterExtensions.AddDominantTribes<T>(T, DiskCardGame.Tribe[])
  fullName.vb: InscryptionAPI.Encounters.EncounterExtensions.AddDominantTribes(Of T)(T, DiskCardGame.Tribe())
  nameWithType: EncounterExtensions.AddDominantTribes<T>(T, Tribe[])
  nameWithType.vb: EncounterExtensions.AddDominantTribes(Of T)(T, Tribe())
- uid: InscryptionAPI.Encounters.EncounterExtensions.AddRandomReplacementCards*
  name: AddRandomReplacementCards
  href: api/InscryptionAPI.Encounters.EncounterExtensions.html#InscryptionAPI_Encounters_EncounterExtensions_AddRandomReplacementCards_
  commentId: Overload:InscryptionAPI.Encounters.EncounterExtensions.AddRandomReplacementCards
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.EncounterExtensions.AddRandomReplacementCards
  nameWithType: EncounterExtensions.AddRandomReplacementCards
- uid: InscryptionAPI.Encounters.EncounterExtensions.AddRandomReplacementCards``1(``0,System.String[])
  name: AddRandomReplacementCards<T>(T, String[])
  href: api/InscryptionAPI.Encounters.EncounterExtensions.html#InscryptionAPI_Encounters_EncounterExtensions_AddRandomReplacementCards__1___0_System_String___
  commentId: M:InscryptionAPI.Encounters.EncounterExtensions.AddRandomReplacementCards``1(``0,System.String[])
  name.vb: AddRandomReplacementCards(Of T)(T, String())
  fullName: InscryptionAPI.Encounters.EncounterExtensions.AddRandomReplacementCards<T>(T, System.String[])
  fullName.vb: InscryptionAPI.Encounters.EncounterExtensions.AddRandomReplacementCards(Of T)(T, System.String())
  nameWithType: EncounterExtensions.AddRandomReplacementCards<T>(T, String[])
  nameWithType.vb: EncounterExtensions.AddRandomReplacementCards(Of T)(T, String())
- uid: InscryptionAPI.Encounters.EncounterExtensions.AddTurn*
  name: AddTurn
  href: api/InscryptionAPI.Encounters.EncounterExtensions.html#InscryptionAPI_Encounters_EncounterExtensions_AddTurn_
  commentId: Overload:InscryptionAPI.Encounters.EncounterExtensions.AddTurn
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.EncounterExtensions.AddTurn
  nameWithType: EncounterExtensions.AddTurn
- uid: InscryptionAPI.Encounters.EncounterExtensions.AddTurn``1(``0,DiskCardGame.EncounterBlueprintData.CardBlueprint[])
  name: AddTurn<T>(T, EncounterBlueprintData.CardBlueprint[])
  href: api/InscryptionAPI.Encounters.EncounterExtensions.html#InscryptionAPI_Encounters_EncounterExtensions_AddTurn__1___0_DiskCardGame_EncounterBlueprintData_CardBlueprint___
  commentId: M:InscryptionAPI.Encounters.EncounterExtensions.AddTurn``1(``0,DiskCardGame.EncounterBlueprintData.CardBlueprint[])
  name.vb: AddTurn(Of T)(T, EncounterBlueprintData.CardBlueprint())
  fullName: InscryptionAPI.Encounters.EncounterExtensions.AddTurn<T>(T, DiskCardGame.EncounterBlueprintData.CardBlueprint[])
  fullName.vb: InscryptionAPI.Encounters.EncounterExtensions.AddTurn(Of T)(T, DiskCardGame.EncounterBlueprintData.CardBlueprint())
  nameWithType: EncounterExtensions.AddTurn<T>(T, EncounterBlueprintData.CardBlueprint[])
  nameWithType.vb: EncounterExtensions.AddTurn(Of T)(T, EncounterBlueprintData.CardBlueprint())
- uid: InscryptionAPI.Encounters.EncounterExtensions.AddTurnMods*
  name: AddTurnMods
  href: api/InscryptionAPI.Encounters.EncounterExtensions.html#InscryptionAPI_Encounters_EncounterExtensions_AddTurnMods_
  commentId: Overload:InscryptionAPI.Encounters.EncounterExtensions.AddTurnMods
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.EncounterExtensions.AddTurnMods
  nameWithType: EncounterExtensions.AddTurnMods
- uid: InscryptionAPI.Encounters.EncounterExtensions.AddTurnMods``1(``0,DiskCardGame.EncounterBlueprintData.TurnModBlueprint[])
  name: AddTurnMods<T>(T, EncounterBlueprintData.TurnModBlueprint[])
  href: api/InscryptionAPI.Encounters.EncounterExtensions.html#InscryptionAPI_Encounters_EncounterExtensions_AddTurnMods__1___0_DiskCardGame_EncounterBlueprintData_TurnModBlueprint___
  commentId: M:InscryptionAPI.Encounters.EncounterExtensions.AddTurnMods``1(``0,DiskCardGame.EncounterBlueprintData.TurnModBlueprint[])
  name.vb: AddTurnMods(Of T)(T, EncounterBlueprintData.TurnModBlueprint())
  fullName: InscryptionAPI.Encounters.EncounterExtensions.AddTurnMods<T>(T, DiskCardGame.EncounterBlueprintData.TurnModBlueprint[])
  fullName.vb: InscryptionAPI.Encounters.EncounterExtensions.AddTurnMods(Of T)(T, DiskCardGame.EncounterBlueprintData.TurnModBlueprint())
  nameWithType: EncounterExtensions.AddTurnMods<T>(T, EncounterBlueprintData.TurnModBlueprint[])
  nameWithType.vb: EncounterExtensions.AddTurnMods(Of T)(T, EncounterBlueprintData.TurnModBlueprint())
- uid: InscryptionAPI.Encounters.EncounterExtensions.CreateTurn*
  name: CreateTurn
  href: api/InscryptionAPI.Encounters.EncounterExtensions.html#InscryptionAPI_Encounters_EncounterExtensions_CreateTurn_
  commentId: Overload:InscryptionAPI.Encounters.EncounterExtensions.CreateTurn
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.EncounterExtensions.CreateTurn
  nameWithType: EncounterExtensions.CreateTurn
- uid: InscryptionAPI.Encounters.EncounterExtensions.CreateTurn``1(``0)
  name: CreateTurn<T>(T)
  href: api/InscryptionAPI.Encounters.EncounterExtensions.html#InscryptionAPI_Encounters_EncounterExtensions_CreateTurn__1___0_
  commentId: M:InscryptionAPI.Encounters.EncounterExtensions.CreateTurn``1(``0)
  name.vb: CreateTurn(Of T)(T)
  fullName: InscryptionAPI.Encounters.EncounterExtensions.CreateTurn<T>(T)
  fullName.vb: InscryptionAPI.Encounters.EncounterExtensions.CreateTurn(Of T)(T)
  nameWithType: EncounterExtensions.CreateTurn<T>(T)
  nameWithType.vb: EncounterExtensions.CreateTurn(Of T)(T)
- uid: InscryptionAPI.Encounters.EncounterExtensions.OpponentById(IEnumerable{InscryptionAPI.Encounters.OpponentManager.FullOpponent},DiskCardGame.Opponent.Type)
  name: OpponentById(IEnumerable<OpponentManager.FullOpponent>, Opponent.Type)
  href: api/InscryptionAPI.Encounters.EncounterExtensions.html#InscryptionAPI_Encounters_EncounterExtensions_OpponentById_IEnumerable_InscryptionAPI_Encounters_OpponentManager_FullOpponent__DiskCardGame_Opponent_Type_
  commentId: M:InscryptionAPI.Encounters.EncounterExtensions.OpponentById(IEnumerable{InscryptionAPI.Encounters.OpponentManager.FullOpponent},DiskCardGame.Opponent.Type)
  name.vb: OpponentById(IEnumerable(Of OpponentManager.FullOpponent), Opponent.Type)
  fullName: InscryptionAPI.Encounters.EncounterExtensions.OpponentById(IEnumerable<InscryptionAPI.Encounters.OpponentManager.FullOpponent>, DiskCardGame.Opponent.Type)
  fullName.vb: InscryptionAPI.Encounters.EncounterExtensions.OpponentById(IEnumerable(Of InscryptionAPI.Encounters.OpponentManager.FullOpponent), DiskCardGame.Opponent.Type)
  nameWithType: EncounterExtensions.OpponentById(IEnumerable<OpponentManager.FullOpponent>, Opponent.Type)
  nameWithType.vb: EncounterExtensions.OpponentById(IEnumerable(Of OpponentManager.FullOpponent), Opponent.Type)
- uid: InscryptionAPI.Encounters.EncounterExtensions.OpponentById*
  name: OpponentById
  href: api/InscryptionAPI.Encounters.EncounterExtensions.html#InscryptionAPI_Encounters_EncounterExtensions_OpponentById_
  commentId: Overload:InscryptionAPI.Encounters.EncounterExtensions.OpponentById
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.EncounterExtensions.OpponentById
  nameWithType: EncounterExtensions.OpponentById
- uid: InscryptionAPI.Encounters.EncounterExtensions.SetDifficulty*
  name: SetDifficulty
  href: api/InscryptionAPI.Encounters.EncounterExtensions.html#InscryptionAPI_Encounters_EncounterExtensions_SetDifficulty_
  commentId: Overload:InscryptionAPI.Encounters.EncounterExtensions.SetDifficulty
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.EncounterExtensions.SetDifficulty
  nameWithType: EncounterExtensions.SetDifficulty
- uid: InscryptionAPI.Encounters.EncounterExtensions.SetDifficulty``1(``0,System.Int32,System.Int32)
  name: SetDifficulty<T>(T, Int32, Int32)
  href: api/InscryptionAPI.Encounters.EncounterExtensions.html#InscryptionAPI_Encounters_EncounterExtensions_SetDifficulty__1___0_System_Int32_System_Int32_
  commentId: M:InscryptionAPI.Encounters.EncounterExtensions.SetDifficulty``1(``0,System.Int32,System.Int32)
  name.vb: SetDifficulty(Of T)(T, Int32, Int32)
  fullName: InscryptionAPI.Encounters.EncounterExtensions.SetDifficulty<T>(T, System.Int32, System.Int32)
  fullName.vb: InscryptionAPI.Encounters.EncounterExtensions.SetDifficulty(Of T)(T, System.Int32, System.Int32)
  nameWithType: EncounterExtensions.SetDifficulty<T>(T, Int32, Int32)
  nameWithType.vb: EncounterExtensions.SetDifficulty(Of T)(T, Int32, Int32)
- uid: InscryptionAPI.Encounters.EncounterExtensions.SetNewSequencer(InscryptionAPI.Encounters.OpponentManager.FullOpponent,System.String,System.String,Type)
  name: SetNewSequencer(OpponentManager.FullOpponent, String, String, Type)
  href: api/InscryptionAPI.Encounters.EncounterExtensions.html#InscryptionAPI_Encounters_EncounterExtensions_SetNewSequencer_InscryptionAPI_Encounters_OpponentManager_FullOpponent_System_String_System_String_Type_
  commentId: M:InscryptionAPI.Encounters.EncounterExtensions.SetNewSequencer(InscryptionAPI.Encounters.OpponentManager.FullOpponent,System.String,System.String,Type)
  fullName: InscryptionAPI.Encounters.EncounterExtensions.SetNewSequencer(InscryptionAPI.Encounters.OpponentManager.FullOpponent, System.String, System.String, Type)
  nameWithType: EncounterExtensions.SetNewSequencer(OpponentManager.FullOpponent, String, String, Type)
- uid: InscryptionAPI.Encounters.EncounterExtensions.SetNewSequencer*
  name: SetNewSequencer
  href: api/InscryptionAPI.Encounters.EncounterExtensions.html#InscryptionAPI_Encounters_EncounterExtensions_SetNewSequencer_
  commentId: Overload:InscryptionAPI.Encounters.EncounterExtensions.SetNewSequencer
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.EncounterExtensions.SetNewSequencer
  nameWithType: EncounterExtensions.SetNewSequencer
- uid: InscryptionAPI.Encounters.EncounterExtensions.SetOpponent(InscryptionAPI.Encounters.OpponentManager.FullOpponent,Type)
  name: SetOpponent(OpponentManager.FullOpponent, Type)
  href: api/InscryptionAPI.Encounters.EncounterExtensions.html#InscryptionAPI_Encounters_EncounterExtensions_SetOpponent_InscryptionAPI_Encounters_OpponentManager_FullOpponent_Type_
  commentId: M:InscryptionAPI.Encounters.EncounterExtensions.SetOpponent(InscryptionAPI.Encounters.OpponentManager.FullOpponent,Type)
  fullName: InscryptionAPI.Encounters.EncounterExtensions.SetOpponent(InscryptionAPI.Encounters.OpponentManager.FullOpponent, Type)
  nameWithType: EncounterExtensions.SetOpponent(OpponentManager.FullOpponent, Type)
- uid: InscryptionAPI.Encounters.EncounterExtensions.SetOpponent*
  name: SetOpponent
  href: api/InscryptionAPI.Encounters.EncounterExtensions.html#InscryptionAPI_Encounters_EncounterExtensions_SetOpponent_
  commentId: Overload:InscryptionAPI.Encounters.EncounterExtensions.SetOpponent
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.EncounterExtensions.SetOpponent
  nameWithType: EncounterExtensions.SetOpponent
- uid: InscryptionAPI.Encounters.EncounterExtensions.SetRedundantAbilities*
  name: SetRedundantAbilities
  href: api/InscryptionAPI.Encounters.EncounterExtensions.html#InscryptionAPI_Encounters_EncounterExtensions_SetRedundantAbilities_
  commentId: Overload:InscryptionAPI.Encounters.EncounterExtensions.SetRedundantAbilities
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.EncounterExtensions.SetRedundantAbilities
  nameWithType: EncounterExtensions.SetRedundantAbilities
- uid: InscryptionAPI.Encounters.EncounterExtensions.SetRedundantAbilities``1(``0,DiskCardGame.Ability[])
  name: SetRedundantAbilities<T>(T, Ability[])
  href: api/InscryptionAPI.Encounters.EncounterExtensions.html#InscryptionAPI_Encounters_EncounterExtensions_SetRedundantAbilities__1___0_DiskCardGame_Ability___
  commentId: M:InscryptionAPI.Encounters.EncounterExtensions.SetRedundantAbilities``1(``0,DiskCardGame.Ability[])
  name.vb: SetRedundantAbilities(Of T)(T, Ability())
  fullName: InscryptionAPI.Encounters.EncounterExtensions.SetRedundantAbilities<T>(T, DiskCardGame.Ability[])
  fullName.vb: InscryptionAPI.Encounters.EncounterExtensions.SetRedundantAbilities(Of T)(T, DiskCardGame.Ability())
  nameWithType: EncounterExtensions.SetRedundantAbilities<T>(T, Ability[])
  nameWithType.vb: EncounterExtensions.SetRedundantAbilities(Of T)(T, Ability())
- uid: InscryptionAPI.Encounters.EncounterExtensions.SetRegionSpecific*
  name: SetRegionSpecific
  href: api/InscryptionAPI.Encounters.EncounterExtensions.html#InscryptionAPI_Encounters_EncounterExtensions_SetRegionSpecific_
  commentId: Overload:InscryptionAPI.Encounters.EncounterExtensions.SetRegionSpecific
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.EncounterExtensions.SetRegionSpecific
  nameWithType: EncounterExtensions.SetRegionSpecific
- uid: InscryptionAPI.Encounters.EncounterExtensions.SetRegionSpecific``1(``0,System.Boolean)
  name: SetRegionSpecific<T>(T, Boolean)
  href: api/InscryptionAPI.Encounters.EncounterExtensions.html#InscryptionAPI_Encounters_EncounterExtensions_SetRegionSpecific__1___0_System_Boolean_
  commentId: M:InscryptionAPI.Encounters.EncounterExtensions.SetRegionSpecific``1(``0,System.Boolean)
  name.vb: SetRegionSpecific(Of T)(T, Boolean)
  fullName: InscryptionAPI.Encounters.EncounterExtensions.SetRegionSpecific<T>(T, System.Boolean)
  fullName.vb: InscryptionAPI.Encounters.EncounterExtensions.SetRegionSpecific(Of T)(T, System.Boolean)
  nameWithType: EncounterExtensions.SetRegionSpecific<T>(T, Boolean)
  nameWithType.vb: EncounterExtensions.SetRegionSpecific(Of T)(T, Boolean)
- uid: InscryptionAPI.Encounters.EncounterExtensions.SetSequencer(InscryptionAPI.Encounters.OpponentManager.FullOpponent,System.String)
  name: SetSequencer(OpponentManager.FullOpponent, String)
  href: api/InscryptionAPI.Encounters.EncounterExtensions.html#InscryptionAPI_Encounters_EncounterExtensions_SetSequencer_InscryptionAPI_Encounters_OpponentManager_FullOpponent_System_String_
  commentId: M:InscryptionAPI.Encounters.EncounterExtensions.SetSequencer(InscryptionAPI.Encounters.OpponentManager.FullOpponent,System.String)
  fullName: InscryptionAPI.Encounters.EncounterExtensions.SetSequencer(InscryptionAPI.Encounters.OpponentManager.FullOpponent, System.String)
  nameWithType: EncounterExtensions.SetSequencer(OpponentManager.FullOpponent, String)
- uid: InscryptionAPI.Encounters.EncounterExtensions.SetSequencer*
  name: SetSequencer
  href: api/InscryptionAPI.Encounters.EncounterExtensions.html#InscryptionAPI_Encounters_EncounterExtensions_SetSequencer_
  commentId: Overload:InscryptionAPI.Encounters.EncounterExtensions.SetSequencer
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.EncounterExtensions.SetSequencer
  nameWithType: EncounterExtensions.SetSequencer
- uid: InscryptionAPI.Encounters.EncounterExtensions.SetUnlockedCardPrerequisites*
  name: SetUnlockedCardPrerequisites
  href: api/InscryptionAPI.Encounters.EncounterExtensions.html#InscryptionAPI_Encounters_EncounterExtensions_SetUnlockedCardPrerequisites_
  commentId: Overload:InscryptionAPI.Encounters.EncounterExtensions.SetUnlockedCardPrerequisites
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.EncounterExtensions.SetUnlockedCardPrerequisites
  nameWithType: EncounterExtensions.SetUnlockedCardPrerequisites
- uid: InscryptionAPI.Encounters.EncounterExtensions.SetUnlockedCardPrerequisites``1(``0,System.String[])
  name: SetUnlockedCardPrerequisites<T>(T, String[])
  href: api/InscryptionAPI.Encounters.EncounterExtensions.html#InscryptionAPI_Encounters_EncounterExtensions_SetUnlockedCardPrerequisites__1___0_System_String___
  commentId: M:InscryptionAPI.Encounters.EncounterExtensions.SetUnlockedCardPrerequisites``1(``0,System.String[])
  name.vb: SetUnlockedCardPrerequisites(Of T)(T, String())
  fullName: InscryptionAPI.Encounters.EncounterExtensions.SetUnlockedCardPrerequisites<T>(T, System.String[])
  fullName.vb: InscryptionAPI.Encounters.EncounterExtensions.SetUnlockedCardPrerequisites(Of T)(T, System.String())
  nameWithType: EncounterExtensions.SetUnlockedCardPrerequisites<T>(T, String[])
  nameWithType.vb: EncounterExtensions.SetUnlockedCardPrerequisites(Of T)(T, String())
- uid: InscryptionAPI.Encounters.EncounterManager
  name: EncounterManager
  href: api/InscryptionAPI.Encounters.EncounterManager.html
  commentId: T:InscryptionAPI.Encounters.EncounterManager
  fullName: InscryptionAPI.Encounters.EncounterManager
  nameWithType: EncounterManager
- uid: InscryptionAPI.Encounters.EncounterManager.Add(DiskCardGame.EncounterBlueprintData)
  name: Add(EncounterBlueprintData)
  href: api/InscryptionAPI.Encounters.EncounterManager.html#InscryptionAPI_Encounters_EncounterManager_Add_DiskCardGame_EncounterBlueprintData_
  commentId: M:InscryptionAPI.Encounters.EncounterManager.Add(DiskCardGame.EncounterBlueprintData)
  fullName: InscryptionAPI.Encounters.EncounterManager.Add(DiskCardGame.EncounterBlueprintData)
  nameWithType: EncounterManager.Add(EncounterBlueprintData)
- uid: InscryptionAPI.Encounters.EncounterManager.Add*
  name: Add
  href: api/InscryptionAPI.Encounters.EncounterManager.html#InscryptionAPI_Encounters_EncounterManager_Add_
  commentId: Overload:InscryptionAPI.Encounters.EncounterManager.Add
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.EncounterManager.Add
  nameWithType: EncounterManager.Add
- uid: InscryptionAPI.Encounters.EncounterManager.AllEncountersCopy
  name: AllEncountersCopy
  href: api/InscryptionAPI.Encounters.EncounterManager.html#InscryptionAPI_Encounters_EncounterManager_AllEncountersCopy
  commentId: P:InscryptionAPI.Encounters.EncounterManager.AllEncountersCopy
  fullName: InscryptionAPI.Encounters.EncounterManager.AllEncountersCopy
  nameWithType: EncounterManager.AllEncountersCopy
- uid: InscryptionAPI.Encounters.EncounterManager.AllEncountersCopy*
  name: AllEncountersCopy
  href: api/InscryptionAPI.Encounters.EncounterManager.html#InscryptionAPI_Encounters_EncounterManager_AllEncountersCopy_
  commentId: Overload:InscryptionAPI.Encounters.EncounterManager.AllEncountersCopy
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.EncounterManager.AllEncountersCopy
  nameWithType: EncounterManager.AllEncountersCopy
- uid: InscryptionAPI.Encounters.EncounterManager.BaseGameEncounters
  name: BaseGameEncounters
  href: api/InscryptionAPI.Encounters.EncounterManager.html#InscryptionAPI_Encounters_EncounterManager_BaseGameEncounters
  commentId: F:InscryptionAPI.Encounters.EncounterManager.BaseGameEncounters
  fullName: InscryptionAPI.Encounters.EncounterManager.BaseGameEncounters
  nameWithType: EncounterManager.BaseGameEncounters
- uid: InscryptionAPI.Encounters.EncounterManager.ModifyEncountersList
  name: ModifyEncountersList
  href: api/InscryptionAPI.Encounters.EncounterManager.html#InscryptionAPI_Encounters_EncounterManager_ModifyEncountersList
  commentId: E:InscryptionAPI.Encounters.EncounterManager.ModifyEncountersList
  fullName: InscryptionAPI.Encounters.EncounterManager.ModifyEncountersList
  nameWithType: EncounterManager.ModifyEncountersList
- uid: InscryptionAPI.Encounters.EncounterManager.New(System.String,System.Boolean)
  name: New(String, Boolean)
  href: api/InscryptionAPI.Encounters.EncounterManager.html#InscryptionAPI_Encounters_EncounterManager_New_System_String_System_Boolean_
  commentId: M:InscryptionAPI.Encounters.EncounterManager.New(System.String,System.Boolean)
  fullName: InscryptionAPI.Encounters.EncounterManager.New(System.String, System.Boolean)
  nameWithType: EncounterManager.New(String, Boolean)
- uid: InscryptionAPI.Encounters.EncounterManager.New*
  name: New
  href: api/InscryptionAPI.Encounters.EncounterManager.html#InscryptionAPI_Encounters_EncounterManager_New_
  commentId: Overload:InscryptionAPI.Encounters.EncounterManager.New
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.EncounterManager.New
  nameWithType: EncounterManager.New
- uid: InscryptionAPI.Encounters.EncounterManager.Remove(DiskCardGame.EncounterBlueprintData)
  name: Remove(EncounterBlueprintData)
  href: api/InscryptionAPI.Encounters.EncounterManager.html#InscryptionAPI_Encounters_EncounterManager_Remove_DiskCardGame_EncounterBlueprintData_
  commentId: M:InscryptionAPI.Encounters.EncounterManager.Remove(DiskCardGame.EncounterBlueprintData)
  fullName: InscryptionAPI.Encounters.EncounterManager.Remove(DiskCardGame.EncounterBlueprintData)
  nameWithType: EncounterManager.Remove(EncounterBlueprintData)
- uid: InscryptionAPI.Encounters.EncounterManager.Remove*
  name: Remove
  href: api/InscryptionAPI.Encounters.EncounterManager.html#InscryptionAPI_Encounters_EncounterManager_Remove_
  commentId: Overload:InscryptionAPI.Encounters.EncounterManager.Remove
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.EncounterManager.Remove
  nameWithType: EncounterManager.Remove
- uid: InscryptionAPI.Encounters.EncounterManager.SyncEncounterList
  name: SyncEncounterList()
  href: api/InscryptionAPI.Encounters.EncounterManager.html#InscryptionAPI_Encounters_EncounterManager_SyncEncounterList
  commentId: M:InscryptionAPI.Encounters.EncounterManager.SyncEncounterList
  fullName: InscryptionAPI.Encounters.EncounterManager.SyncEncounterList()
  nameWithType: EncounterManager.SyncEncounterList()
- uid: InscryptionAPI.Encounters.EncounterManager.SyncEncounterList*
  name: SyncEncounterList
  href: api/InscryptionAPI.Encounters.EncounterManager.html#InscryptionAPI_Encounters_EncounterManager_SyncEncounterList_
  commentId: Overload:InscryptionAPI.Encounters.EncounterManager.SyncEncounterList
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.EncounterManager.SyncEncounterList
  nameWithType: EncounterManager.SyncEncounterList
- uid: InscryptionAPI.Encounters.ICustomNodeSequence
  name: ICustomNodeSequence
  href: api/InscryptionAPI.Encounters.ICustomNodeSequence.html
  commentId: T:InscryptionAPI.Encounters.ICustomNodeSequence
  fullName: InscryptionAPI.Encounters.ICustomNodeSequence
  nameWithType: ICustomNodeSequence
- uid: InscryptionAPI.Encounters.ICustomNodeSequence.ExecuteCustomSequence(InscryptionAPI.Encounters.CustomNodeData)
  name: ExecuteCustomSequence(CustomNodeData)
  href: api/InscryptionAPI.Encounters.ICustomNodeSequence.html#InscryptionAPI_Encounters_ICustomNodeSequence_ExecuteCustomSequence_InscryptionAPI_Encounters_CustomNodeData_
  commentId: M:InscryptionAPI.Encounters.ICustomNodeSequence.ExecuteCustomSequence(InscryptionAPI.Encounters.CustomNodeData)
  fullName: InscryptionAPI.Encounters.ICustomNodeSequence.ExecuteCustomSequence(InscryptionAPI.Encounters.CustomNodeData)
  nameWithType: ICustomNodeSequence.ExecuteCustomSequence(CustomNodeData)
- uid: InscryptionAPI.Encounters.ICustomNodeSequence.ExecuteCustomSequence*
  name: ExecuteCustomSequence
  href: api/InscryptionAPI.Encounters.ICustomNodeSequence.html#InscryptionAPI_Encounters_ICustomNodeSequence_ExecuteCustomSequence_
  commentId: Overload:InscryptionAPI.Encounters.ICustomNodeSequence.ExecuteCustomSequence
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.ICustomNodeSequence.ExecuteCustomSequence
  nameWithType: ICustomNodeSequence.ExecuteCustomSequence
- uid: InscryptionAPI.Encounters.NodeManager
  name: NodeManager
  href: api/InscryptionAPI.Encounters.NodeManager.html
  commentId: T:InscryptionAPI.Encounters.NodeManager
  fullName: InscryptionAPI.Encounters.NodeManager
  nameWithType: NodeManager
- uid: InscryptionAPI.Encounters.NodeManager.Add*
  name: Add
  href: api/InscryptionAPI.Encounters.NodeManager.html#InscryptionAPI_Encounters_NodeManager_Add_
  commentId: Overload:InscryptionAPI.Encounters.NodeManager.Add
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.NodeManager.Add
  nameWithType: NodeManager.Add
- uid: InscryptionAPI.Encounters.NodeManager.Add``1(UnityEngine.Texture2D[],InscryptionAPI.Encounters.NodeManager.NodePosition)
  name: Add<S>(Texture2D[], NodeManager.NodePosition)
  href: api/InscryptionAPI.Encounters.NodeManager.html#InscryptionAPI_Encounters_NodeManager_Add__1_UnityEngine_Texture2D___InscryptionAPI_Encounters_NodeManager_NodePosition_
  commentId: M:InscryptionAPI.Encounters.NodeManager.Add``1(UnityEngine.Texture2D[],InscryptionAPI.Encounters.NodeManager.NodePosition)
  name.vb: Add(Of S)(Texture2D(), NodeManager.NodePosition)
  fullName: InscryptionAPI.Encounters.NodeManager.Add<S>(UnityEngine.Texture2D[], InscryptionAPI.Encounters.NodeManager.NodePosition)
  fullName.vb: InscryptionAPI.Encounters.NodeManager.Add(Of S)(UnityEngine.Texture2D(), InscryptionAPI.Encounters.NodeManager.NodePosition)
  nameWithType: NodeManager.Add<S>(Texture2D[], NodeManager.NodePosition)
  nameWithType.vb: NodeManager.Add(Of S)(Texture2D(), NodeManager.NodePosition)
- uid: InscryptionAPI.Encounters.NodeManager.Add``2(UnityEngine.Texture2D[],InscryptionAPI.Encounters.NodeManager.NodePosition)
  name: Add<S, N>(Texture2D[], NodeManager.NodePosition)
  href: api/InscryptionAPI.Encounters.NodeManager.html#InscryptionAPI_Encounters_NodeManager_Add__2_UnityEngine_Texture2D___InscryptionAPI_Encounters_NodeManager_NodePosition_
  commentId: M:InscryptionAPI.Encounters.NodeManager.Add``2(UnityEngine.Texture2D[],InscryptionAPI.Encounters.NodeManager.NodePosition)
  name.vb: Add(Of S, N)(Texture2D(), NodeManager.NodePosition)
  fullName: InscryptionAPI.Encounters.NodeManager.Add<S, N>(UnityEngine.Texture2D[], InscryptionAPI.Encounters.NodeManager.NodePosition)
  fullName.vb: InscryptionAPI.Encounters.NodeManager.Add(Of S, N)(UnityEngine.Texture2D(), InscryptionAPI.Encounters.NodeManager.NodePosition)
  nameWithType: NodeManager.Add<S, N>(Texture2D[], NodeManager.NodePosition)
  nameWithType.vb: NodeManager.Add(Of S, N)(Texture2D(), NodeManager.NodePosition)
- uid: InscryptionAPI.Encounters.NodeManager.NodeInfo
  name: NodeManager.NodeInfo
  href: api/InscryptionAPI.Encounters.NodeManager.NodeInfo.html
  commentId: T:InscryptionAPI.Encounters.NodeManager.NodeInfo
  fullName: InscryptionAPI.Encounters.NodeManager.NodeInfo
  nameWithType: NodeManager.NodeInfo
- uid: InscryptionAPI.Encounters.NodeManager.NodeInfo.animatedMapNode
  name: animatedMapNode
  href: api/InscryptionAPI.Encounters.NodeManager.NodeInfo.html#InscryptionAPI_Encounters_NodeManager_NodeInfo_animatedMapNode
  commentId: P:InscryptionAPI.Encounters.NodeManager.NodeInfo.animatedMapNode
  fullName: InscryptionAPI.Encounters.NodeManager.NodeInfo.animatedMapNode
  nameWithType: NodeManager.NodeInfo.animatedMapNode
- uid: InscryptionAPI.Encounters.NodeManager.NodeInfo.animatedMapNode*
  name: animatedMapNode
  href: api/InscryptionAPI.Encounters.NodeManager.NodeInfo.html#InscryptionAPI_Encounters_NodeManager_NodeInfo_animatedMapNode_
  commentId: Overload:InscryptionAPI.Encounters.NodeManager.NodeInfo.animatedMapNode
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.NodeManager.NodeInfo.animatedMapNode
  nameWithType: NodeManager.NodeInfo.animatedMapNode
- uid: InscryptionAPI.Encounters.NodeManager.NodeInfo.BuildNode
  name: BuildNode()
  href: api/InscryptionAPI.Encounters.NodeManager.NodeInfo.html#InscryptionAPI_Encounters_NodeManager_NodeInfo_BuildNode
  commentId: M:InscryptionAPI.Encounters.NodeManager.NodeInfo.BuildNode
  fullName: InscryptionAPI.Encounters.NodeManager.NodeInfo.BuildNode()
  nameWithType: NodeManager.NodeInfo.BuildNode()
- uid: InscryptionAPI.Encounters.NodeManager.NodeInfo.BuildNode*
  name: BuildNode
  href: api/InscryptionAPI.Encounters.NodeManager.NodeInfo.html#InscryptionAPI_Encounters_NodeManager_NodeInfo_BuildNode_
  commentId: Overload:InscryptionAPI.Encounters.NodeManager.NodeInfo.BuildNode
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.NodeManager.NodeInfo.BuildNode
  nameWithType: NodeManager.NodeInfo.BuildNode
- uid: InscryptionAPI.Encounters.NodeManager.NodeInfo.guid
  name: guid
  href: api/InscryptionAPI.Encounters.NodeManager.NodeInfo.html#InscryptionAPI_Encounters_NodeManager_NodeInfo_guid
  commentId: P:InscryptionAPI.Encounters.NodeManager.NodeInfo.guid
  fullName: InscryptionAPI.Encounters.NodeManager.NodeInfo.guid
  nameWithType: NodeManager.NodeInfo.guid
- uid: InscryptionAPI.Encounters.NodeManager.NodeInfo.guid*
  name: guid
  href: api/InscryptionAPI.Encounters.NodeManager.NodeInfo.html#InscryptionAPI_Encounters_NodeManager_NodeInfo_guid_
  commentId: Overload:InscryptionAPI.Encounters.NodeManager.NodeInfo.guid
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.NodeManager.NodeInfo.guid
  nameWithType: NodeManager.NodeInfo.guid
- uid: InscryptionAPI.Encounters.NodeManager.NodeInfo.nodeDataType
  name: nodeDataType
  href: api/InscryptionAPI.Encounters.NodeManager.NodeInfo.html#InscryptionAPI_Encounters_NodeManager_NodeInfo_nodeDataType
  commentId: P:InscryptionAPI.Encounters.NodeManager.NodeInfo.nodeDataType
  fullName: InscryptionAPI.Encounters.NodeManager.NodeInfo.nodeDataType
  nameWithType: NodeManager.NodeInfo.nodeDataType
- uid: InscryptionAPI.Encounters.NodeManager.NodeInfo.nodeDataType*
  name: nodeDataType
  href: api/InscryptionAPI.Encounters.NodeManager.NodeInfo.html#InscryptionAPI_Encounters_NodeManager_NodeInfo_nodeDataType_
  commentId: Overload:InscryptionAPI.Encounters.NodeManager.NodeInfo.nodeDataType
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.NodeManager.NodeInfo.nodeDataType
  nameWithType: NodeManager.NodeInfo.nodeDataType
- uid: InscryptionAPI.Encounters.NodeManager.NodeInfo.nodePosition
  name: nodePosition
  href: api/InscryptionAPI.Encounters.NodeManager.NodeInfo.html#InscryptionAPI_Encounters_NodeManager_NodeInfo_nodePosition
  commentId: P:InscryptionAPI.Encounters.NodeManager.NodeInfo.nodePosition
  fullName: InscryptionAPI.Encounters.NodeManager.NodeInfo.nodePosition
  nameWithType: NodeManager.NodeInfo.nodePosition
- uid: InscryptionAPI.Encounters.NodeManager.NodeInfo.nodePosition*
  name: nodePosition
  href: api/InscryptionAPI.Encounters.NodeManager.NodeInfo.html#InscryptionAPI_Encounters_NodeManager_NodeInfo_nodePosition_
  commentId: Overload:InscryptionAPI.Encounters.NodeManager.NodeInfo.nodePosition
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.NodeManager.NodeInfo.nodePosition
  nameWithType: NodeManager.NodeInfo.nodePosition
- uid: InscryptionAPI.Encounters.NodeManager.NodeInfo.sequencerType
  name: sequencerType
  href: api/InscryptionAPI.Encounters.NodeManager.NodeInfo.html#InscryptionAPI_Encounters_NodeManager_NodeInfo_sequencerType
  commentId: P:InscryptionAPI.Encounters.NodeManager.NodeInfo.sequencerType
  fullName: InscryptionAPI.Encounters.NodeManager.NodeInfo.sequencerType
  nameWithType: NodeManager.NodeInfo.sequencerType
- uid: InscryptionAPI.Encounters.NodeManager.NodeInfo.sequencerType*
  name: sequencerType
  href: api/InscryptionAPI.Encounters.NodeManager.NodeInfo.html#InscryptionAPI_Encounters_NodeManager_NodeInfo_sequencerType_
  commentId: Overload:InscryptionAPI.Encounters.NodeManager.NodeInfo.sequencerType
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.NodeManager.NodeInfo.sequencerType
  nameWithType: NodeManager.NodeInfo.sequencerType
- uid: InscryptionAPI.Encounters.NodeManager.NodePosition
  name: NodeManager.NodePosition
  href: api/InscryptionAPI.Encounters.NodeManager.NodePosition.html
  commentId: T:InscryptionAPI.Encounters.NodeManager.NodePosition
  fullName: InscryptionAPI.Encounters.NodeManager.NodePosition
  nameWithType: NodeManager.NodePosition
- uid: InscryptionAPI.Encounters.NodeManager.NodePosition.Act1Available
  name: Act1Available
  href: api/InscryptionAPI.Encounters.NodeManager.NodePosition.html#InscryptionAPI_Encounters_NodeManager_NodePosition_Act1Available
  commentId: F:InscryptionAPI.Encounters.NodeManager.NodePosition.Act1Available
  fullName: InscryptionAPI.Encounters.NodeManager.NodePosition.Act1Available
  nameWithType: NodeManager.NodePosition.Act1Available
- uid: InscryptionAPI.Encounters.NodeManager.NodePosition.CardChoiceRandom
  name: CardChoiceRandom
  href: api/InscryptionAPI.Encounters.NodeManager.NodePosition.html#InscryptionAPI_Encounters_NodeManager_NodePosition_CardChoiceRandom
  commentId: F:InscryptionAPI.Encounters.NodeManager.NodePosition.CardChoiceRandom
  fullName: InscryptionAPI.Encounters.NodeManager.NodePosition.CardChoiceRandom
  nameWithType: NodeManager.NodePosition.CardChoiceRandom
- uid: InscryptionAPI.Encounters.NodeManager.NodePosition.MapStart
  name: MapStart
  href: api/InscryptionAPI.Encounters.NodeManager.NodePosition.html#InscryptionAPI_Encounters_NodeManager_NodePosition_MapStart
  commentId: F:InscryptionAPI.Encounters.NodeManager.NodePosition.MapStart
  fullName: InscryptionAPI.Encounters.NodeManager.NodePosition.MapStart
  nameWithType: NodeManager.NodePosition.MapStart
- uid: InscryptionAPI.Encounters.NodeManager.NodePosition.NotGenerated
  name: NotGenerated
  href: api/InscryptionAPI.Encounters.NodeManager.NodePosition.html#InscryptionAPI_Encounters_NodeManager_NodePosition_NotGenerated
  commentId: F:InscryptionAPI.Encounters.NodeManager.NodePosition.NotGenerated
  fullName: InscryptionAPI.Encounters.NodeManager.NodePosition.NotGenerated
  nameWithType: NodeManager.NodePosition.NotGenerated
- uid: InscryptionAPI.Encounters.NodeManager.NodePosition.PostBoss
  name: PostBoss
  href: api/InscryptionAPI.Encounters.NodeManager.NodePosition.html#InscryptionAPI_Encounters_NodeManager_NodePosition_PostBoss
  commentId: F:InscryptionAPI.Encounters.NodeManager.NodePosition.PostBoss
  fullName: InscryptionAPI.Encounters.NodeManager.NodePosition.PostBoss
  nameWithType: NodeManager.NodePosition.PostBoss
- uid: InscryptionAPI.Encounters.NodeManager.NodePosition.PreBoss
  name: PreBoss
  href: api/InscryptionAPI.Encounters.NodeManager.NodePosition.html#InscryptionAPI_Encounters_NodeManager_NodePosition_PreBoss
  commentId: F:InscryptionAPI.Encounters.NodeManager.NodePosition.PreBoss
  fullName: InscryptionAPI.Encounters.NodeManager.NodePosition.PreBoss
  nameWithType: NodeManager.NodePosition.PreBoss
- uid: InscryptionAPI.Encounters.NodeManager.NodePosition.SpecialEventRandom
  name: SpecialEventRandom
  href: api/InscryptionAPI.Encounters.NodeManager.NodePosition.html#InscryptionAPI_Encounters_NodeManager_NodePosition_SpecialEventRandom
  commentId: F:InscryptionAPI.Encounters.NodeManager.NodePosition.SpecialEventRandom
  fullName: InscryptionAPI.Encounters.NodeManager.NodePosition.SpecialEventRandom
  nameWithType: NodeManager.NodePosition.SpecialEventRandom
- uid: InscryptionAPI.Encounters.OpponentManager
  name: OpponentManager
  href: api/InscryptionAPI.Encounters.OpponentManager.html
  commentId: T:InscryptionAPI.Encounters.OpponentManager
  fullName: InscryptionAPI.Encounters.OpponentManager
  nameWithType: OpponentManager
- uid: InscryptionAPI.Encounters.OpponentManager.Add(System.String,System.String,System.String,Type)
  name: Add(String, String, String, Type)
  href: api/InscryptionAPI.Encounters.OpponentManager.html#InscryptionAPI_Encounters_OpponentManager_Add_System_String_System_String_System_String_Type_
  commentId: M:InscryptionAPI.Encounters.OpponentManager.Add(System.String,System.String,System.String,Type)
  fullName: InscryptionAPI.Encounters.OpponentManager.Add(System.String, System.String, System.String, Type)
  nameWithType: OpponentManager.Add(String, String, String, Type)
- uid: InscryptionAPI.Encounters.OpponentManager.Add(System.String,System.String,System.String,Type,List{UnityEngine.Texture2D})
  name: Add(String, String, String, Type, List<Texture2D>)
  href: api/InscryptionAPI.Encounters.OpponentManager.html#InscryptionAPI_Encounters_OpponentManager_Add_System_String_System_String_System_String_Type_List_UnityEngine_Texture2D__
  commentId: M:InscryptionAPI.Encounters.OpponentManager.Add(System.String,System.String,System.String,Type,List{UnityEngine.Texture2D})
  name.vb: Add(String, String, String, Type, List(Of Texture2D))
  fullName: InscryptionAPI.Encounters.OpponentManager.Add(System.String, System.String, System.String, Type, List<UnityEngine.Texture2D>)
  fullName.vb: InscryptionAPI.Encounters.OpponentManager.Add(System.String, System.String, System.String, Type, List(Of UnityEngine.Texture2D))
  nameWithType: OpponentManager.Add(String, String, String, Type, List<Texture2D>)
  nameWithType.vb: OpponentManager.Add(String, String, String, Type, List(Of Texture2D))
- uid: InscryptionAPI.Encounters.OpponentManager.Add*
  name: Add
  href: api/InscryptionAPI.Encounters.OpponentManager.html#InscryptionAPI_Encounters_OpponentManager_Add_
  commentId: Overload:InscryptionAPI.Encounters.OpponentManager.Add
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.OpponentManager.Add
  nameWithType: OpponentManager.Add
- uid: InscryptionAPI.Encounters.OpponentManager.AllOpponents
  name: AllOpponents
  href: api/InscryptionAPI.Encounters.OpponentManager.html#InscryptionAPI_Encounters_OpponentManager_AllOpponents
  commentId: P:InscryptionAPI.Encounters.OpponentManager.AllOpponents
  fullName: InscryptionAPI.Encounters.OpponentManager.AllOpponents
  nameWithType: OpponentManager.AllOpponents
- uid: InscryptionAPI.Encounters.OpponentManager.AllOpponents*
  name: AllOpponents
  href: api/InscryptionAPI.Encounters.OpponentManager.html#InscryptionAPI_Encounters_OpponentManager_AllOpponents_
  commentId: Overload:InscryptionAPI.Encounters.OpponentManager.AllOpponents
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.OpponentManager.AllOpponents
  nameWithType: OpponentManager.AllOpponents
- uid: InscryptionAPI.Encounters.OpponentManager.BaseGameOpponents
  name: BaseGameOpponents
  href: api/InscryptionAPI.Encounters.OpponentManager.html#InscryptionAPI_Encounters_OpponentManager_BaseGameOpponents
  commentId: F:InscryptionAPI.Encounters.OpponentManager.BaseGameOpponents
  fullName: InscryptionAPI.Encounters.OpponentManager.BaseGameOpponents
  nameWithType: OpponentManager.BaseGameOpponents
- uid: InscryptionAPI.Encounters.OpponentManager.FullOpponent
  name: OpponentManager.FullOpponent
  href: api/InscryptionAPI.Encounters.OpponentManager.FullOpponent.html
  commentId: T:InscryptionAPI.Encounters.OpponentManager.FullOpponent
  fullName: InscryptionAPI.Encounters.OpponentManager.FullOpponent
  nameWithType: OpponentManager.FullOpponent
- uid: InscryptionAPI.Encounters.OpponentManager.FullOpponent.#ctor(DiskCardGame.Opponent.Type,Type,System.String)
  name: FullOpponent(Opponent.Type, Type, String)
  href: api/InscryptionAPI.Encounters.OpponentManager.FullOpponent.html#InscryptionAPI_Encounters_OpponentManager_FullOpponent__ctor_DiskCardGame_Opponent_Type_Type_System_String_
  commentId: M:InscryptionAPI.Encounters.OpponentManager.FullOpponent.#ctor(DiskCardGame.Opponent.Type,Type,System.String)
  fullName: InscryptionAPI.Encounters.OpponentManager.FullOpponent.FullOpponent(DiskCardGame.Opponent.Type, Type, System.String)
  nameWithType: OpponentManager.FullOpponent.FullOpponent(Opponent.Type, Type, String)
- uid: InscryptionAPI.Encounters.OpponentManager.FullOpponent.#ctor(DiskCardGame.Opponent.Type,Type,System.String,List{UnityEngine.Texture2D})
  name: FullOpponent(Opponent.Type, Type, String, List<Texture2D>)
  href: api/InscryptionAPI.Encounters.OpponentManager.FullOpponent.html#InscryptionAPI_Encounters_OpponentManager_FullOpponent__ctor_DiskCardGame_Opponent_Type_Type_System_String_List_UnityEngine_Texture2D__
  commentId: M:InscryptionAPI.Encounters.OpponentManager.FullOpponent.#ctor(DiskCardGame.Opponent.Type,Type,System.String,List{UnityEngine.Texture2D})
  name.vb: FullOpponent(Opponent.Type, Type, String, List(Of Texture2D))
  fullName: InscryptionAPI.Encounters.OpponentManager.FullOpponent.FullOpponent(DiskCardGame.Opponent.Type, Type, System.String, List<UnityEngine.Texture2D>)
  fullName.vb: InscryptionAPI.Encounters.OpponentManager.FullOpponent.FullOpponent(DiskCardGame.Opponent.Type, Type, System.String, List(Of UnityEngine.Texture2D))
  nameWithType: OpponentManager.FullOpponent.FullOpponent(Opponent.Type, Type, String, List<Texture2D>)
  nameWithType.vb: OpponentManager.FullOpponent.FullOpponent(Opponent.Type, Type, String, List(Of Texture2D))
- uid: InscryptionAPI.Encounters.OpponentManager.FullOpponent.#ctor*
  name: FullOpponent
  href: api/InscryptionAPI.Encounters.OpponentManager.FullOpponent.html#InscryptionAPI_Encounters_OpponentManager_FullOpponent__ctor_
  commentId: Overload:InscryptionAPI.Encounters.OpponentManager.FullOpponent.#ctor
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.OpponentManager.FullOpponent.FullOpponent
  nameWithType: OpponentManager.FullOpponent.FullOpponent
- uid: InscryptionAPI.Encounters.OpponentManager.FullOpponent.Id
  name: Id
  href: api/InscryptionAPI.Encounters.OpponentManager.FullOpponent.html#InscryptionAPI_Encounters_OpponentManager_FullOpponent_Id
  commentId: F:InscryptionAPI.Encounters.OpponentManager.FullOpponent.Id
  fullName: InscryptionAPI.Encounters.OpponentManager.FullOpponent.Id
  nameWithType: OpponentManager.FullOpponent.Id
- uid: InscryptionAPI.Encounters.OpponentManager.FullOpponent.NodeAnimation
  name: NodeAnimation
  href: api/InscryptionAPI.Encounters.OpponentManager.FullOpponent.html#InscryptionAPI_Encounters_OpponentManager_FullOpponent_NodeAnimation
  commentId: F:InscryptionAPI.Encounters.OpponentManager.FullOpponent.NodeAnimation
  fullName: InscryptionAPI.Encounters.OpponentManager.FullOpponent.NodeAnimation
  nameWithType: OpponentManager.FullOpponent.NodeAnimation
- uid: InscryptionAPI.Encounters.OpponentManager.FullOpponent.Opponent
  name: Opponent
  href: api/InscryptionAPI.Encounters.OpponentManager.FullOpponent.html#InscryptionAPI_Encounters_OpponentManager_FullOpponent_Opponent
  commentId: F:InscryptionAPI.Encounters.OpponentManager.FullOpponent.Opponent
  fullName: InscryptionAPI.Encounters.OpponentManager.FullOpponent.Opponent
  nameWithType: OpponentManager.FullOpponent.Opponent
- uid: InscryptionAPI.Encounters.OpponentManager.FullOpponent.SpecialSequencerId
  name: SpecialSequencerId
  href: api/InscryptionAPI.Encounters.OpponentManager.FullOpponent.html#InscryptionAPI_Encounters_OpponentManager_FullOpponent_SpecialSequencerId
  commentId: F:InscryptionAPI.Encounters.OpponentManager.FullOpponent.SpecialSequencerId
  fullName: InscryptionAPI.Encounters.OpponentManager.FullOpponent.SpecialSequencerId
  nameWithType: OpponentManager.FullOpponent.SpecialSequencerId
- uid: InscryptionAPI.Encounters.OpponentManager.OriginalGetSequencerIdForBoss(DiskCardGame.Opponent.Type)
  name: OriginalGetSequencerIdForBoss(Opponent.Type)
  href: api/InscryptionAPI.Encounters.OpponentManager.html#InscryptionAPI_Encounters_OpponentManager_OriginalGetSequencerIdForBoss_DiskCardGame_Opponent_Type_
  commentId: M:InscryptionAPI.Encounters.OpponentManager.OriginalGetSequencerIdForBoss(DiskCardGame.Opponent.Type)
  fullName: InscryptionAPI.Encounters.OpponentManager.OriginalGetSequencerIdForBoss(DiskCardGame.Opponent.Type)
  nameWithType: OpponentManager.OriginalGetSequencerIdForBoss(Opponent.Type)
- uid: InscryptionAPI.Encounters.OpponentManager.OriginalGetSequencerIdForBoss*
  name: OriginalGetSequencerIdForBoss
  href: api/InscryptionAPI.Encounters.OpponentManager.html#InscryptionAPI_Encounters_OpponentManager_OriginalGetSequencerIdForBoss_
  commentId: Overload:InscryptionAPI.Encounters.OpponentManager.OriginalGetSequencerIdForBoss
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.OpponentManager.OriginalGetSequencerIdForBoss
  nameWithType: OpponentManager.OriginalGetSequencerIdForBoss
- uid: InscryptionAPI.Encounters.SpecialSequenceManager
  name: SpecialSequenceManager
  href: api/InscryptionAPI.Encounters.SpecialSequenceManager.html
  commentId: T:InscryptionAPI.Encounters.SpecialSequenceManager
  fullName: InscryptionAPI.Encounters.SpecialSequenceManager
  nameWithType: SpecialSequenceManager
- uid: InscryptionAPI.Encounters.SpecialSequenceManager.Add(System.String,System.String,Type)
  name: Add(String, String, Type)
  href: api/InscryptionAPI.Encounters.SpecialSequenceManager.html#InscryptionAPI_Encounters_SpecialSequenceManager_Add_System_String_System_String_Type_
  commentId: M:InscryptionAPI.Encounters.SpecialSequenceManager.Add(System.String,System.String,Type)
  fullName: InscryptionAPI.Encounters.SpecialSequenceManager.Add(System.String, System.String, Type)
  nameWithType: SpecialSequenceManager.Add(String, String, Type)
- uid: InscryptionAPI.Encounters.SpecialSequenceManager.Add*
  name: Add
  href: api/InscryptionAPI.Encounters.SpecialSequenceManager.html#InscryptionAPI_Encounters_SpecialSequenceManager_Add_
  commentId: Overload:InscryptionAPI.Encounters.SpecialSequenceManager.Add
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.SpecialSequenceManager.Add
  nameWithType: SpecialSequenceManager.Add
- uid: InscryptionAPI.Encounters.SpecialSequenceManager.AllSpecialSequencers
  name: AllSpecialSequencers
  href: api/InscryptionAPI.Encounters.SpecialSequenceManager.html#InscryptionAPI_Encounters_SpecialSequenceManager_AllSpecialSequencers
  commentId: P:InscryptionAPI.Encounters.SpecialSequenceManager.AllSpecialSequencers
  fullName: InscryptionAPI.Encounters.SpecialSequenceManager.AllSpecialSequencers
  nameWithType: SpecialSequenceManager.AllSpecialSequencers
- uid: InscryptionAPI.Encounters.SpecialSequenceManager.AllSpecialSequencers*
  name: AllSpecialSequencers
  href: api/InscryptionAPI.Encounters.SpecialSequenceManager.html#InscryptionAPI_Encounters_SpecialSequenceManager_AllSpecialSequencers_
  commentId: Overload:InscryptionAPI.Encounters.SpecialSequenceManager.AllSpecialSequencers
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.SpecialSequenceManager.AllSpecialSequencers
  nameWithType: SpecialSequenceManager.AllSpecialSequencers
- uid: InscryptionAPI.Encounters.SpecialSequenceManager.BaseGameSpecialSequencers
  name: BaseGameSpecialSequencers
  href: api/InscryptionAPI.Encounters.SpecialSequenceManager.html#InscryptionAPI_Encounters_SpecialSequenceManager_BaseGameSpecialSequencers
  commentId: F:InscryptionAPI.Encounters.SpecialSequenceManager.BaseGameSpecialSequencers
  fullName: InscryptionAPI.Encounters.SpecialSequenceManager.BaseGameSpecialSequencers
  nameWithType: SpecialSequenceManager.BaseGameSpecialSequencers
- uid: InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer
  name: SpecialSequenceManager.FullSpecialSequencer
  href: api/InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.html
  commentId: T:InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer
  fullName: InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer
  nameWithType: SpecialSequenceManager.FullSpecialSequencer
- uid: InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.#ctor(System.String,Type)
  name: FullSpecialSequencer(String, Type)
  href: api/InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.html#InscryptionAPI_Encounters_SpecialSequenceManager_FullSpecialSequencer__ctor_System_String_Type_
  commentId: M:InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.#ctor(System.String,Type)
  fullName: InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.FullSpecialSequencer(System.String, Type)
  nameWithType: SpecialSequenceManager.FullSpecialSequencer.FullSpecialSequencer(String, Type)
- uid: InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.#ctor*
  name: FullSpecialSequencer
  href: api/InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.html#InscryptionAPI_Encounters_SpecialSequenceManager_FullSpecialSequencer__ctor_
  commentId: Overload:InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.#ctor
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.FullSpecialSequencer
  nameWithType: SpecialSequenceManager.FullSpecialSequencer.FullSpecialSequencer
- uid: InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.Id
  name: Id
  href: api/InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.html#InscryptionAPI_Encounters_SpecialSequenceManager_FullSpecialSequencer_Id
  commentId: F:InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.Id
  fullName: InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.Id
  nameWithType: SpecialSequenceManager.FullSpecialSequencer.Id
- uid: InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.SpecialSequencer
  name: SpecialSequencer
  href: api/InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.html#InscryptionAPI_Encounters_SpecialSequenceManager_FullSpecialSequencer_SpecialSequencer
  commentId: P:InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.SpecialSequencer
  fullName: InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.SpecialSequencer
  nameWithType: SpecialSequenceManager.FullSpecialSequencer.SpecialSequencer
- uid: InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.SpecialSequencer*
  name: SpecialSequencer
  href: api/InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.html#InscryptionAPI_Encounters_SpecialSequenceManager_FullSpecialSequencer_SpecialSequencer_
  commentId: Overload:InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.SpecialSequencer
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.SpecialSequencer
  nameWithType: SpecialSequenceManager.FullSpecialSequencer.SpecialSequencer
- uid: InscryptionAPI.Encounters.TurnBuilder`1
  name: TurnBuilder<T>
  href: api/InscryptionAPI.Encounters.TurnBuilder-1.html
  commentId: T:InscryptionAPI.Encounters.TurnBuilder`1
  name.vb: TurnBuilder(Of T)
  fullName: InscryptionAPI.Encounters.TurnBuilder<T>
  fullName.vb: InscryptionAPI.Encounters.TurnBuilder(Of T)
  nameWithType: TurnBuilder<T>
  nameWithType.vb: TurnBuilder(Of T)
- uid: InscryptionAPI.Encounters.TurnBuilder`1.#ctor
  name: TurnBuilder()
  href: api/InscryptionAPI.Encounters.TurnBuilder-1.html#InscryptionAPI_Encounters_TurnBuilder_1__ctor
  commentId: M:InscryptionAPI.Encounters.TurnBuilder`1.#ctor
  fullName: InscryptionAPI.Encounters.TurnBuilder<T>.TurnBuilder()
  fullName.vb: InscryptionAPI.Encounters.TurnBuilder(Of T).TurnBuilder()
  nameWithType: TurnBuilder<T>.TurnBuilder()
  nameWithType.vb: TurnBuilder(Of T).TurnBuilder()
- uid: InscryptionAPI.Encounters.TurnBuilder`1.#ctor*
  name: TurnBuilder
  href: api/InscryptionAPI.Encounters.TurnBuilder-1.html#InscryptionAPI_Encounters_TurnBuilder_1__ctor_
  commentId: Overload:InscryptionAPI.Encounters.TurnBuilder`1.#ctor
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.TurnBuilder<T>.TurnBuilder
  fullName.vb: InscryptionAPI.Encounters.TurnBuilder(Of T).TurnBuilder
  nameWithType: TurnBuilder<T>.TurnBuilder
  nameWithType.vb: TurnBuilder(Of T).TurnBuilder
- uid: InscryptionAPI.Encounters.TurnBuilder`1.SetBlueprint(`0)
  name: SetBlueprint(T)
  href: api/InscryptionAPI.Encounters.TurnBuilder-1.html#InscryptionAPI_Encounters_TurnBuilder_1_SetBlueprint__0_
  commentId: M:InscryptionAPI.Encounters.TurnBuilder`1.SetBlueprint(`0)
  fullName: InscryptionAPI.Encounters.TurnBuilder<T>.SetBlueprint(T)
  fullName.vb: InscryptionAPI.Encounters.TurnBuilder(Of T).SetBlueprint(T)
  nameWithType: TurnBuilder<T>.SetBlueprint(T)
  nameWithType.vb: TurnBuilder(Of T).SetBlueprint(T)
- uid: InscryptionAPI.Encounters.TurnBuilder`1.SetBlueprint*
  name: SetBlueprint
  href: api/InscryptionAPI.Encounters.TurnBuilder-1.html#InscryptionAPI_Encounters_TurnBuilder_1_SetBlueprint_
  commentId: Overload:InscryptionAPI.Encounters.TurnBuilder`1.SetBlueprint
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.TurnBuilder<T>.SetBlueprint
  fullName.vb: InscryptionAPI.Encounters.TurnBuilder(Of T).SetBlueprint
  nameWithType: TurnBuilder<T>.SetBlueprint
  nameWithType.vb: TurnBuilder(Of T).SetBlueprint
- uid: InscryptionAPI.Encounters.TurnExtensions
  name: TurnExtensions
  href: api/InscryptionAPI.Encounters.TurnExtensions.html
  commentId: T:InscryptionAPI.Encounters.TurnExtensions
  fullName: InscryptionAPI.Encounters.TurnExtensions
  nameWithType: TurnExtensions
- uid: InscryptionAPI.Encounters.TurnExtensions.AddCardBlueprint*
  name: AddCardBlueprint
  href: api/InscryptionAPI.Encounters.TurnExtensions.html#InscryptionAPI_Encounters_TurnExtensions_AddCardBlueprint_
  commentId: Overload:InscryptionAPI.Encounters.TurnExtensions.AddCardBlueprint
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.TurnExtensions.AddCardBlueprint
  nameWithType: TurnExtensions.AddCardBlueprint
- uid: InscryptionAPI.Encounters.TurnExtensions.AddCardBlueprint``1(InscryptionAPI.Encounters.TurnBuilder{``0},System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.String)
  name: AddCardBlueprint<T>(TurnBuilder<T>, String, Int32, Int32, Int32, Boolean, Int32, String)
  href: api/InscryptionAPI.Encounters.TurnExtensions.html#InscryptionAPI_Encounters_TurnExtensions_AddCardBlueprint__1_InscryptionAPI_Encounters_TurnBuilder___0__System_String_System_Int32_System_Int32_System_Int32_System_Boolean_System_Int32_System_String_
  commentId: M:InscryptionAPI.Encounters.TurnExtensions.AddCardBlueprint``1(InscryptionAPI.Encounters.TurnBuilder{``0},System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.String)
  name.vb: AddCardBlueprint(Of T)(TurnBuilder(Of T), String, Int32, Int32, Int32, Boolean, Int32, String)
  fullName: InscryptionAPI.Encounters.TurnExtensions.AddCardBlueprint<T>(InscryptionAPI.Encounters.TurnBuilder<T>, System.String, System.Int32, System.Int32, System.Int32, System.Boolean, System.Int32, System.String)
  fullName.vb: InscryptionAPI.Encounters.TurnExtensions.AddCardBlueprint(Of T)(InscryptionAPI.Encounters.TurnBuilder(Of T), System.String, System.Int32, System.Int32, System.Int32, System.Boolean, System.Int32, System.String)
  nameWithType: TurnExtensions.AddCardBlueprint<T>(TurnBuilder<T>, String, Int32, Int32, Int32, Boolean, Int32, String)
  nameWithType.vb: TurnExtensions.AddCardBlueprint(Of T)(TurnBuilder(Of T), String, Int32, Int32, Int32, Boolean, Int32, String)
- uid: InscryptionAPI.Encounters.TurnExtensions.Build*
  name: Build
  href: api/InscryptionAPI.Encounters.TurnExtensions.html#InscryptionAPI_Encounters_TurnExtensions_Build_
  commentId: Overload:InscryptionAPI.Encounters.TurnExtensions.Build
  isSpec: "True"
  fullName: InscryptionAPI.Encounters.TurnExtensions.Build
  nameWithType: TurnExtensions.Build
- uid: InscryptionAPI.Encounters.TurnExtensions.Build``1(InscryptionAPI.Encounters.TurnBuilder{``0})
  name: Build<T>(TurnBuilder<T>)
  href: api/InscryptionAPI.Encounters.TurnExtensions.html#InscryptionAPI_Encounters_TurnExtensions_Build__1_InscryptionAPI_Encounters_TurnBuilder___0__
  commentId: M:InscryptionAPI.Encounters.TurnExtensions.Build``1(InscryptionAPI.Encounters.TurnBuilder{``0})
  name.vb: Build(Of T)(TurnBuilder(Of T))
  fullName: InscryptionAPI.Encounters.TurnExtensions.Build<T>(InscryptionAPI.Encounters.TurnBuilder<T>)
  fullName.vb: InscryptionAPI.Encounters.TurnExtensions.Build(Of T)(InscryptionAPI.Encounters.TurnBuilder(Of T))
  nameWithType: TurnExtensions.Build<T>(TurnBuilder<T>)
  nameWithType.vb: TurnExtensions.Build(Of T)(TurnBuilder(Of T))
- uid: InscryptionAPI.Guid
  name: InscryptionAPI.Guid
  href: api/InscryptionAPI.Guid.html
  commentId: N:InscryptionAPI.Guid
  fullName: InscryptionAPI.Guid
  nameWithType: InscryptionAPI.Guid
- uid: InscryptionAPI.Guid.GuidManager
  name: GuidManager
  href: api/InscryptionAPI.Guid.GuidManager.html
  commentId: T:InscryptionAPI.Guid.GuidManager
  fullName: InscryptionAPI.Guid.GuidManager
  nameWithType: GuidManager
- uid: InscryptionAPI.Guid.GuidManager.GetEnumType(System.Int32)
  name: GetEnumType(Int32)
  href: api/InscryptionAPI.Guid.GuidManager.html#InscryptionAPI_Guid_GuidManager_GetEnumType_System_Int32_
  commentId: M:InscryptionAPI.Guid.GuidManager.GetEnumType(System.Int32)
  fullName: InscryptionAPI.Guid.GuidManager.GetEnumType(System.Int32)
  nameWithType: GuidManager.GetEnumType(Int32)
- uid: InscryptionAPI.Guid.GuidManager.GetEnumType*
  name: GetEnumType
  href: api/InscryptionAPI.Guid.GuidManager.html#InscryptionAPI_Guid_GuidManager_GetEnumType_
  commentId: Overload:InscryptionAPI.Guid.GuidManager.GetEnumType
  isSpec: "True"
  fullName: InscryptionAPI.Guid.GuidManager.GetEnumType
  nameWithType: GuidManager.GetEnumType
- uid: InscryptionAPI.Guid.GuidManager.GetEnumValue*
  name: GetEnumValue
  href: api/InscryptionAPI.Guid.GuidManager.html#InscryptionAPI_Guid_GuidManager_GetEnumValue_
  commentId: Overload:InscryptionAPI.Guid.GuidManager.GetEnumValue
  isSpec: "True"
  fullName: InscryptionAPI.Guid.GuidManager.GetEnumValue
  nameWithType: GuidManager.GetEnumValue
- uid: InscryptionAPI.Guid.GuidManager.GetEnumValue``1(System.String,System.String)
  name: GetEnumValue<T>(String, String)
  href: api/InscryptionAPI.Guid.GuidManager.html#InscryptionAPI_Guid_GuidManager_GetEnumValue__1_System_String_System_String_
  commentId: M:InscryptionAPI.Guid.GuidManager.GetEnumValue``1(System.String,System.String)
  name.vb: GetEnumValue(Of T)(String, String)
  fullName: InscryptionAPI.Guid.GuidManager.GetEnumValue<T>(System.String, System.String)
  fullName.vb: InscryptionAPI.Guid.GuidManager.GetEnumValue(Of T)(System.String, System.String)
  nameWithType: GuidManager.GetEnumValue<T>(String, String)
  nameWithType.vb: GuidManager.GetEnumValue(Of T)(String, String)
- uid: InscryptionAPI.Guid.GuidManager.GetFullyQualifiedName(System.String,System.String)
  name: GetFullyQualifiedName(String, String)
  href: api/InscryptionAPI.Guid.GuidManager.html#InscryptionAPI_Guid_GuidManager_GetFullyQualifiedName_System_String_System_String_
  commentId: M:InscryptionAPI.Guid.GuidManager.GetFullyQualifiedName(System.String,System.String)
  fullName: InscryptionAPI.Guid.GuidManager.GetFullyQualifiedName(System.String, System.String)
  nameWithType: GuidManager.GetFullyQualifiedName(String, String)
- uid: InscryptionAPI.Guid.GuidManager.GetFullyQualifiedName*
  name: GetFullyQualifiedName
  href: api/InscryptionAPI.Guid.GuidManager.html#InscryptionAPI_Guid_GuidManager_GetFullyQualifiedName_
  commentId: Overload:InscryptionAPI.Guid.GuidManager.GetFullyQualifiedName
  isSpec: "True"
  fullName: InscryptionAPI.Guid.GuidManager.GetFullyQualifiedName
  nameWithType: GuidManager.GetFullyQualifiedName
- uid: InscryptionAPI.Guid.GuidManager.GetValues*
  name: GetValues
  href: api/InscryptionAPI.Guid.GuidManager.html#InscryptionAPI_Guid_GuidManager_GetValues_
  commentId: Overload:InscryptionAPI.Guid.GuidManager.GetValues
  isSpec: "True"
  fullName: InscryptionAPI.Guid.GuidManager.GetValues
  nameWithType: GuidManager.GetValues
- uid: InscryptionAPI.Guid.GuidManager.GetValues``1
  name: GetValues<T>()
  href: api/InscryptionAPI.Guid.GuidManager.html#InscryptionAPI_Guid_GuidManager_GetValues__1
  commentId: M:InscryptionAPI.Guid.GuidManager.GetValues``1
  name.vb: GetValues(Of T)()
  fullName: InscryptionAPI.Guid.GuidManager.GetValues<T>()
  fullName.vb: InscryptionAPI.Guid.GuidManager.GetValues(Of T)()
  nameWithType: GuidManager.GetValues<T>()
  nameWithType.vb: GuidManager.GetValues(Of T)()
- uid: InscryptionAPI.Guid.GuidManager.MAX_DATA
  name: MAX_DATA
  href: api/InscryptionAPI.Guid.GuidManager.html#InscryptionAPI_Guid_GuidManager_MAX_DATA
  commentId: F:InscryptionAPI.Guid.GuidManager.MAX_DATA
  fullName: InscryptionAPI.Guid.GuidManager.MAX_DATA
  nameWithType: GuidManager.MAX_DATA
- uid: InscryptionAPI.Guid.GuidManager.START_INDEX
  name: START_INDEX
  href: api/InscryptionAPI.Guid.GuidManager.html#InscryptionAPI_Guid_GuidManager_START_INDEX
  commentId: F:InscryptionAPI.Guid.GuidManager.START_INDEX
  fullName: InscryptionAPI.Guid.GuidManager.START_INDEX
  nameWithType: GuidManager.START_INDEX
- uid: InscryptionAPI.Guid.TypeManager
  name: TypeManager
  href: api/InscryptionAPI.Guid.TypeManager.html
  commentId: T:InscryptionAPI.Guid.TypeManager
  fullName: InscryptionAPI.Guid.TypeManager
  nameWithType: TypeManager
- uid: InscryptionAPI.Guid.TypeManager.GetModIdFromCallstack(System.Reflection.Assembly)
  name: GetModIdFromCallstack(Assembly)
  href: api/InscryptionAPI.Guid.TypeManager.html#InscryptionAPI_Guid_TypeManager_GetModIdFromCallstack_System_Reflection_Assembly_
  commentId: M:InscryptionAPI.Guid.TypeManager.GetModIdFromCallstack(System.Reflection.Assembly)
  fullName: InscryptionAPI.Guid.TypeManager.GetModIdFromCallstack(System.Reflection.Assembly)
  nameWithType: TypeManager.GetModIdFromCallstack(Assembly)
- uid: InscryptionAPI.Guid.TypeManager.GetModIdFromCallstack*
  name: GetModIdFromCallstack
  href: api/InscryptionAPI.Guid.TypeManager.html#InscryptionAPI_Guid_TypeManager_GetModIdFromCallstack_
  commentId: Overload:InscryptionAPI.Guid.TypeManager.GetModIdFromCallstack
  isSpec: "True"
  fullName: InscryptionAPI.Guid.TypeManager.GetModIdFromCallstack
  nameWithType: TypeManager.GetModIdFromCallstack
- uid: InscryptionAPI.Guid.TypeManager.OriginalGetType(System.String,System.String)
  name: OriginalGetType(String, String)
  href: api/InscryptionAPI.Guid.TypeManager.html#InscryptionAPI_Guid_TypeManager_OriginalGetType_System_String_System_String_
  commentId: M:InscryptionAPI.Guid.TypeManager.OriginalGetType(System.String,System.String)
  fullName: InscryptionAPI.Guid.TypeManager.OriginalGetType(System.String, System.String)
  nameWithType: TypeManager.OriginalGetType(String, String)
- uid: InscryptionAPI.Guid.TypeManager.OriginalGetType*
  name: OriginalGetType
  href: api/InscryptionAPI.Guid.TypeManager.html#InscryptionAPI_Guid_TypeManager_OriginalGetType_
  commentId: Overload:InscryptionAPI.Guid.TypeManager.OriginalGetType
  isSpec: "True"
  fullName: InscryptionAPI.Guid.TypeManager.OriginalGetType
  nameWithType: TypeManager.OriginalGetType
- uid: InscryptionAPI.Helpers
  name: InscryptionAPI.Helpers
  href: api/InscryptionAPI.Helpers.html
  commentId: N:InscryptionAPI.Helpers
  fullName: InscryptionAPI.Helpers
  nameWithType: InscryptionAPI.Helpers
- uid: InscryptionAPI.Helpers.CustomLine
  name: CustomLine
  href: api/InscryptionAPI.Helpers.CustomLine.html
  commentId: T:InscryptionAPI.Helpers.CustomLine
  fullName: InscryptionAPI.Helpers.CustomLine
  nameWithType: CustomLine
- uid: InscryptionAPI.Helpers.CustomLine.emotion
  name: emotion
  href: api/InscryptionAPI.Helpers.CustomLine.html#InscryptionAPI_Helpers_CustomLine_emotion
  commentId: F:InscryptionAPI.Helpers.CustomLine.emotion
  fullName: InscryptionAPI.Helpers.CustomLine.emotion
  nameWithType: CustomLine.emotion
- uid: InscryptionAPI.Helpers.CustomLine.letterAnimation
  name: letterAnimation
  href: api/InscryptionAPI.Helpers.CustomLine.html#InscryptionAPI_Helpers_CustomLine_letterAnimation
  commentId: F:InscryptionAPI.Helpers.CustomLine.letterAnimation
  fullName: InscryptionAPI.Helpers.CustomLine.letterAnimation
  nameWithType: CustomLine.letterAnimation
- uid: InscryptionAPI.Helpers.CustomLine.op_Implicit(System.String)~InscryptionAPI.Helpers.CustomLine
  name: Implicit(String to CustomLine)
  href: api/InscryptionAPI.Helpers.CustomLine.html#InscryptionAPI_Helpers_CustomLine_op_Implicit_System_String__InscryptionAPI_Helpers_CustomLine
  commentId: M:InscryptionAPI.Helpers.CustomLine.op_Implicit(System.String)~InscryptionAPI.Helpers.CustomLine
  name.vb: Widening(String to CustomLine)
  fullName: InscryptionAPI.Helpers.CustomLine.Implicit(System.String to InscryptionAPI.Helpers.CustomLine)
  fullName.vb: InscryptionAPI.Helpers.CustomLine.Widening(System.String to InscryptionAPI.Helpers.CustomLine)
  nameWithType: CustomLine.Implicit(String to CustomLine)
  nameWithType.vb: CustomLine.Widening(String to CustomLine)
- uid: InscryptionAPI.Helpers.CustomLine.op_Implicit(System.ValueTuple{System.String,DialogueEvent.Speaker})~InscryptionAPI.Helpers.CustomLine
  name: Implicit((String, DialogueEvent.Speaker) to CustomLine)
  href: api/InscryptionAPI.Helpers.CustomLine.html#InscryptionAPI_Helpers_CustomLine_op_Implicit_System_ValueTuple_System_String_DialogueEvent_Speaker___InscryptionAPI_Helpers_CustomLine
  commentId: M:InscryptionAPI.Helpers.CustomLine.op_Implicit(System.ValueTuple{System.String,DialogueEvent.Speaker})~InscryptionAPI.Helpers.CustomLine
  name.vb: Widening((String, DialogueEvent.Speaker)(Of String, DialogueEvent.Speaker) to CustomLine)
  fullName: InscryptionAPI.Helpers.CustomLine.Implicit(System.ValueTuple<System.String, DialogueEvent.Speaker> to InscryptionAPI.Helpers.CustomLine)
  fullName.vb: InscryptionAPI.Helpers.CustomLine.Widening(System.ValueTuple(Of System.String, DialogueEvent.Speaker) to InscryptionAPI.Helpers.CustomLine)
  nameWithType: CustomLine.Implicit((String, DialogueEvent.Speaker) to CustomLine)
  nameWithType.vb: CustomLine.Widening((String, DialogueEvent.Speaker)(Of String, DialogueEvent.Speaker) to CustomLine)
- uid: InscryptionAPI.Helpers.CustomLine.op_Implicit(System.ValueTuple{System.String,DiskCardGame.Emotion,DialogueEvent.Speaker})~InscryptionAPI.Helpers.CustomLine
  name: Implicit((String, Emotion, DialogueEvent.Speaker) to CustomLine)
  href: api/InscryptionAPI.Helpers.CustomLine.html#InscryptionAPI_Helpers_CustomLine_op_Implicit_System_ValueTuple_System_String_DiskCardGame_Emotion_DialogueEvent_Speaker___InscryptionAPI_Helpers_CustomLine
  commentId: M:InscryptionAPI.Helpers.CustomLine.op_Implicit(System.ValueTuple{System.String,DiskCardGame.Emotion,DialogueEvent.Speaker})~InscryptionAPI.Helpers.CustomLine
  name.vb: Widening((String, Emotion, DialogueEvent.Speaker)(Of String, Emotion, DialogueEvent.Speaker) to CustomLine)
  fullName: InscryptionAPI.Helpers.CustomLine.Implicit(System.ValueTuple<System.String, DiskCardGame.Emotion, DialogueEvent.Speaker> to InscryptionAPI.Helpers.CustomLine)
  fullName.vb: InscryptionAPI.Helpers.CustomLine.Widening(System.ValueTuple(Of System.String, DiskCardGame.Emotion, DialogueEvent.Speaker) to InscryptionAPI.Helpers.CustomLine)
  nameWithType: CustomLine.Implicit((String, Emotion, DialogueEvent.Speaker) to CustomLine)
  nameWithType.vb: CustomLine.Widening((String, Emotion, DialogueEvent.Speaker)(Of String, Emotion, DialogueEvent.Speaker) to CustomLine)
- uid: InscryptionAPI.Helpers.CustomLine.op_Implicit(System.ValueTuple{System.String,DiskCardGame.Emotion})~InscryptionAPI.Helpers.CustomLine
  name: Implicit((String, Emotion) to CustomLine)
  href: api/InscryptionAPI.Helpers.CustomLine.html#InscryptionAPI_Helpers_CustomLine_op_Implicit_System_ValueTuple_System_String_DiskCardGame_Emotion___InscryptionAPI_Helpers_CustomLine
  commentId: M:InscryptionAPI.Helpers.CustomLine.op_Implicit(System.ValueTuple{System.String,DiskCardGame.Emotion})~InscryptionAPI.Helpers.CustomLine
  name.vb: Widening((String, Emotion)(Of String, Emotion) to CustomLine)
  fullName: InscryptionAPI.Helpers.CustomLine.Implicit(System.ValueTuple<System.String, DiskCardGame.Emotion> to InscryptionAPI.Helpers.CustomLine)
  fullName.vb: InscryptionAPI.Helpers.CustomLine.Widening(System.ValueTuple(Of System.String, DiskCardGame.Emotion) to InscryptionAPI.Helpers.CustomLine)
  nameWithType: CustomLine.Implicit((String, Emotion) to CustomLine)
  nameWithType.vb: CustomLine.Widening((String, Emotion)(Of String, Emotion) to CustomLine)
- uid: InscryptionAPI.Helpers.CustomLine.op_Implicit(System.ValueTuple{System.String,DiskCardGame.TextDisplayer.LetterAnimation,DialogueEvent.Speaker,DiskCardGame.Emotion})~InscryptionAPI.Helpers.CustomLine
  name: Implicit((String, TextDisplayer.LetterAnimation, DialogueEvent.Speaker, Emotion) to CustomLine)
  href: api/InscryptionAPI.Helpers.CustomLine.html#InscryptionAPI_Helpers_CustomLine_op_Implicit_System_ValueTuple_System_String_DiskCardGame_TextDisplayer_LetterAnimation_DialogueEvent_Speaker_DiskCardGame_Emotion___InscryptionAPI_Helpers_CustomLine
  commentId: M:InscryptionAPI.Helpers.CustomLine.op_Implicit(System.ValueTuple{System.String,DiskCardGame.TextDisplayer.LetterAnimation,DialogueEvent.Speaker,DiskCardGame.Emotion})~InscryptionAPI.Helpers.CustomLine
  name.vb: Widening((String, TextDisplayer.LetterAnimation, DialogueEvent.Speaker, Emotion)(Of String, TextDisplayer.LetterAnimation, DialogueEvent.Speaker, Emotion) to CustomLine)
  fullName: InscryptionAPI.Helpers.CustomLine.Implicit(System.ValueTuple<System.String, DiskCardGame.TextDisplayer.LetterAnimation, DialogueEvent.Speaker, DiskCardGame.Emotion> to InscryptionAPI.Helpers.CustomLine)
  fullName.vb: InscryptionAPI.Helpers.CustomLine.Widening(System.ValueTuple(Of System.String, DiskCardGame.TextDisplayer.LetterAnimation, DialogueEvent.Speaker, DiskCardGame.Emotion) to InscryptionAPI.Helpers.CustomLine)
  nameWithType: CustomLine.Implicit((String, TextDisplayer.LetterAnimation, DialogueEvent.Speaker, Emotion) to CustomLine)
  nameWithType.vb: CustomLine.Widening((String, TextDisplayer.LetterAnimation, DialogueEvent.Speaker, Emotion)(Of String, TextDisplayer.LetterAnimation, DialogueEvent.Speaker, Emotion) to CustomLine)
- uid: InscryptionAPI.Helpers.CustomLine.op_Implicit(System.ValueTuple{System.String,DiskCardGame.TextDisplayer.LetterAnimation,DialogueEvent.Speaker})~InscryptionAPI.Helpers.CustomLine
  name: Implicit((String, TextDisplayer.LetterAnimation, DialogueEvent.Speaker) to CustomLine)
  href: api/InscryptionAPI.Helpers.CustomLine.html#InscryptionAPI_Helpers_CustomLine_op_Implicit_System_ValueTuple_System_String_DiskCardGame_TextDisplayer_LetterAnimation_DialogueEvent_Speaker___InscryptionAPI_Helpers_CustomLine
  commentId: M:InscryptionAPI.Helpers.CustomLine.op_Implicit(System.ValueTuple{System.String,DiskCardGame.TextDisplayer.LetterAnimation,DialogueEvent.Speaker})~InscryptionAPI.Helpers.CustomLine
  name.vb: Widening((String, TextDisplayer.LetterAnimation, DialogueEvent.Speaker)(Of String, TextDisplayer.LetterAnimation, DialogueEvent.Speaker) to CustomLine)
  fullName: InscryptionAPI.Helpers.CustomLine.Implicit(System.ValueTuple<System.String, DiskCardGame.TextDisplayer.LetterAnimation, DialogueEvent.Speaker> to InscryptionAPI.Helpers.CustomLine)
  fullName.vb: InscryptionAPI.Helpers.CustomLine.Widening(System.ValueTuple(Of System.String, DiskCardGame.TextDisplayer.LetterAnimation, DialogueEvent.Speaker) to InscryptionAPI.Helpers.CustomLine)
  nameWithType: CustomLine.Implicit((String, TextDisplayer.LetterAnimation, DialogueEvent.Speaker) to CustomLine)
  nameWithType.vb: CustomLine.Widening((String, TextDisplayer.LetterAnimation, DialogueEvent.Speaker)(Of String, TextDisplayer.LetterAnimation, DialogueEvent.Speaker) to CustomLine)
- uid: InscryptionAPI.Helpers.CustomLine.op_Implicit(System.ValueTuple{System.String,DiskCardGame.TextDisplayer.LetterAnimation,DiskCardGame.Emotion})~InscryptionAPI.Helpers.CustomLine
  name: Implicit((String, TextDisplayer.LetterAnimation, Emotion) to CustomLine)
  href: api/InscryptionAPI.Helpers.CustomLine.html#InscryptionAPI_Helpers_CustomLine_op_Implicit_System_ValueTuple_System_String_DiskCardGame_TextDisplayer_LetterAnimation_DiskCardGame_Emotion___InscryptionAPI_Helpers_CustomLine
  commentId: M:InscryptionAPI.Helpers.CustomLine.op_Implicit(System.ValueTuple{System.String,DiskCardGame.TextDisplayer.LetterAnimation,DiskCardGame.Emotion})~InscryptionAPI.Helpers.CustomLine
  name.vb: Widening((String, TextDisplayer.LetterAnimation, Emotion)(Of String, TextDisplayer.LetterAnimation, Emotion) to CustomLine)
  fullName: InscryptionAPI.Helpers.CustomLine.Implicit(System.ValueTuple<System.String, DiskCardGame.TextDisplayer.LetterAnimation, DiskCardGame.Emotion> to InscryptionAPI.Helpers.CustomLine)
  fullName.vb: InscryptionAPI.Helpers.CustomLine.Widening(System.ValueTuple(Of System.String, DiskCardGame.TextDisplayer.LetterAnimation, DiskCardGame.Emotion) to InscryptionAPI.Helpers.CustomLine)
  nameWithType: CustomLine.Implicit((String, TextDisplayer.LetterAnimation, Emotion) to CustomLine)
  nameWithType.vb: CustomLine.Widening((String, TextDisplayer.LetterAnimation, Emotion)(Of String, TextDisplayer.LetterAnimation, Emotion) to CustomLine)
- uid: InscryptionAPI.Helpers.CustomLine.op_Implicit(System.ValueTuple{System.String,DiskCardGame.TextDisplayer.LetterAnimation})~InscryptionAPI.Helpers.CustomLine
  name: Implicit((String, TextDisplayer.LetterAnimation) to CustomLine)
  href: api/InscryptionAPI.Helpers.CustomLine.html#InscryptionAPI_Helpers_CustomLine_op_Implicit_System_ValueTuple_System_String_DiskCardGame_TextDisplayer_LetterAnimation___InscryptionAPI_Helpers_CustomLine
  commentId: M:InscryptionAPI.Helpers.CustomLine.op_Implicit(System.ValueTuple{System.String,DiskCardGame.TextDisplayer.LetterAnimation})~InscryptionAPI.Helpers.CustomLine
  name.vb: Widening((String, TextDisplayer.LetterAnimation)(Of String, TextDisplayer.LetterAnimation) to CustomLine)
  fullName: InscryptionAPI.Helpers.CustomLine.Implicit(System.ValueTuple<System.String, DiskCardGame.TextDisplayer.LetterAnimation> to InscryptionAPI.Helpers.CustomLine)
  fullName.vb: InscryptionAPI.Helpers.CustomLine.Widening(System.ValueTuple(Of System.String, DiskCardGame.TextDisplayer.LetterAnimation) to InscryptionAPI.Helpers.CustomLine)
  nameWithType: CustomLine.Implicit((String, TextDisplayer.LetterAnimation) to CustomLine)
  nameWithType.vb: CustomLine.Widening((String, TextDisplayer.LetterAnimation)(Of String, TextDisplayer.LetterAnimation) to CustomLine)
- uid: InscryptionAPI.Helpers.CustomLine.op_Implicit*
  name: Implicit
  href: api/InscryptionAPI.Helpers.CustomLine.html#InscryptionAPI_Helpers_CustomLine_op_Implicit_
  commentId: Overload:InscryptionAPI.Helpers.CustomLine.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: InscryptionAPI.Helpers.CustomLine.Implicit
  fullName.vb: InscryptionAPI.Helpers.CustomLine.Widening
  nameWithType: CustomLine.Implicit
  nameWithType.vb: CustomLine.Widening
- uid: InscryptionAPI.Helpers.CustomLine.p03Face
  name: p03Face
  href: api/InscryptionAPI.Helpers.CustomLine.html#InscryptionAPI_Helpers_CustomLine_p03Face
  commentId: F:InscryptionAPI.Helpers.CustomLine.p03Face
  fullName: InscryptionAPI.Helpers.CustomLine.p03Face
  nameWithType: CustomLine.p03Face
- uid: InscryptionAPI.Helpers.CustomLine.speaker
  name: speaker
  href: api/InscryptionAPI.Helpers.CustomLine.html#InscryptionAPI_Helpers_CustomLine_speaker
  commentId: F:InscryptionAPI.Helpers.CustomLine.speaker
  fullName: InscryptionAPI.Helpers.CustomLine.speaker
  nameWithType: CustomLine.speaker
- uid: InscryptionAPI.Helpers.CustomLine.specialInstruction
  name: specialInstruction
  href: api/InscryptionAPI.Helpers.CustomLine.html#InscryptionAPI_Helpers_CustomLine_specialInstruction
  commentId: F:InscryptionAPI.Helpers.CustomLine.specialInstruction
  fullName: InscryptionAPI.Helpers.CustomLine.specialInstruction
  nameWithType: CustomLine.specialInstruction
- uid: InscryptionAPI.Helpers.CustomLine.storyCondition
  name: storyCondition
  href: api/InscryptionAPI.Helpers.CustomLine.html#InscryptionAPI_Helpers_CustomLine_storyCondition
  commentId: F:InscryptionAPI.Helpers.CustomLine.storyCondition
  fullName: InscryptionAPI.Helpers.CustomLine.storyCondition
  nameWithType: CustomLine.storyCondition
- uid: InscryptionAPI.Helpers.CustomLine.storyConditionMustBeMet
  name: storyConditionMustBeMet
  href: api/InscryptionAPI.Helpers.CustomLine.html#InscryptionAPI_Helpers_CustomLine_storyConditionMustBeMet
  commentId: F:InscryptionAPI.Helpers.CustomLine.storyConditionMustBeMet
  fullName: InscryptionAPI.Helpers.CustomLine.storyConditionMustBeMet
  nameWithType: CustomLine.storyConditionMustBeMet
- uid: InscryptionAPI.Helpers.CustomLine.text
  name: text
  href: api/InscryptionAPI.Helpers.CustomLine.html#InscryptionAPI_Helpers_CustomLine_text
  commentId: F:InscryptionAPI.Helpers.CustomLine.text
  fullName: InscryptionAPI.Helpers.CustomLine.text
  nameWithType: CustomLine.text
- uid: InscryptionAPI.Helpers.CustomLine.ToLine(System.Collections.Generic.List{DialogueEvent.Speaker},DialogueEvent.Speaker)
  name: ToLine(List<DialogueEvent.Speaker>, DialogueEvent.Speaker)
  href: api/InscryptionAPI.Helpers.CustomLine.html#InscryptionAPI_Helpers_CustomLine_ToLine_System_Collections_Generic_List_DialogueEvent_Speaker__DialogueEvent_Speaker_
  commentId: M:InscryptionAPI.Helpers.CustomLine.ToLine(System.Collections.Generic.List{DialogueEvent.Speaker},DialogueEvent.Speaker)
  name.vb: ToLine(List(Of DialogueEvent.Speaker), DialogueEvent.Speaker)
  fullName: InscryptionAPI.Helpers.CustomLine.ToLine(System.Collections.Generic.List<DialogueEvent.Speaker>, DialogueEvent.Speaker)
  fullName.vb: InscryptionAPI.Helpers.CustomLine.ToLine(System.Collections.Generic.List(Of DialogueEvent.Speaker), DialogueEvent.Speaker)
  nameWithType: CustomLine.ToLine(List<DialogueEvent.Speaker>, DialogueEvent.Speaker)
  nameWithType.vb: CustomLine.ToLine(List(Of DialogueEvent.Speaker), DialogueEvent.Speaker)
- uid: InscryptionAPI.Helpers.CustomLine.ToLine*
  name: ToLine
  href: api/InscryptionAPI.Helpers.CustomLine.html#InscryptionAPI_Helpers_CustomLine_ToLine_
  commentId: Overload:InscryptionAPI.Helpers.CustomLine.ToLine
  isSpec: "True"
  fullName: InscryptionAPI.Helpers.CustomLine.ToLine
  nameWithType: CustomLine.ToLine
- uid: InscryptionAPI.Helpers.DialogueEventGenerator
  name: DialogueEventGenerator
  href: api/InscryptionAPI.Helpers.DialogueEventGenerator.html
  commentId: T:InscryptionAPI.Helpers.DialogueEventGenerator
  fullName: InscryptionAPI.Helpers.DialogueEventGenerator
  nameWithType: DialogueEventGenerator
- uid: InscryptionAPI.Helpers.DialogueEventGenerator.GenerateEvent(System.String,System.Collections.Generic.List{InscryptionAPI.Helpers.CustomLine},System.Collections.Generic.List{System.Collections.Generic.List{InscryptionAPI.Helpers.CustomLine}},DialogueEvent.MaxRepeatsBehaviour,DialogueEvent.Speaker)
  name: GenerateEvent(String, List<CustomLine>, List<List<CustomLine>>, DialogueEvent.MaxRepeatsBehaviour, DialogueEvent.Speaker)
  href: api/InscryptionAPI.Helpers.DialogueEventGenerator.html#InscryptionAPI_Helpers_DialogueEventGenerator_GenerateEvent_System_String_System_Collections_Generic_List_InscryptionAPI_Helpers_CustomLine__System_Collections_Generic_List_System_Collections_Generic_List_InscryptionAPI_Helpers_CustomLine___DialogueEvent_MaxRepeatsBehaviour_DialogueEvent_Speaker_
  commentId: M:InscryptionAPI.Helpers.DialogueEventGenerator.GenerateEvent(System.String,System.Collections.Generic.List{InscryptionAPI.Helpers.CustomLine},System.Collections.Generic.List{System.Collections.Generic.List{InscryptionAPI.Helpers.CustomLine}},DialogueEvent.MaxRepeatsBehaviour,DialogueEvent.Speaker)
  name.vb: GenerateEvent(String, List(Of CustomLine), List(Of List(Of CustomLine)), DialogueEvent.MaxRepeatsBehaviour, DialogueEvent.Speaker)
  fullName: InscryptionAPI.Helpers.DialogueEventGenerator.GenerateEvent(System.String, System.Collections.Generic.List<InscryptionAPI.Helpers.CustomLine>, System.Collections.Generic.List<System.Collections.Generic.List<InscryptionAPI.Helpers.CustomLine>>, DialogueEvent.MaxRepeatsBehaviour, DialogueEvent.Speaker)
  fullName.vb: InscryptionAPI.Helpers.DialogueEventGenerator.GenerateEvent(System.String, System.Collections.Generic.List(Of InscryptionAPI.Helpers.CustomLine), System.Collections.Generic.List(Of System.Collections.Generic.List(Of InscryptionAPI.Helpers.CustomLine)), DialogueEvent.MaxRepeatsBehaviour, DialogueEvent.Speaker)
  nameWithType: DialogueEventGenerator.GenerateEvent(String, List<CustomLine>, List<List<CustomLine>>, DialogueEvent.MaxRepeatsBehaviour, DialogueEvent.Speaker)
  nameWithType.vb: DialogueEventGenerator.GenerateEvent(String, List(Of CustomLine), List(Of List(Of CustomLine)), DialogueEvent.MaxRepeatsBehaviour, DialogueEvent.Speaker)
- uid: InscryptionAPI.Helpers.DialogueEventGenerator.GenerateEvent*
  name: GenerateEvent
  href: api/InscryptionAPI.Helpers.DialogueEventGenerator.html#InscryptionAPI_Helpers_DialogueEventGenerator_GenerateEvent_
  commentId: Overload:InscryptionAPI.Helpers.DialogueEventGenerator.GenerateEvent
  isSpec: "True"
  fullName: InscryptionAPI.Helpers.DialogueEventGenerator.GenerateEvent
  nameWithType: DialogueEventGenerator.GenerateEvent
- uid: InscryptionAPI.Helpers.Extensions
  name: InscryptionAPI.Helpers.Extensions
  href: api/InscryptionAPI.Helpers.Extensions.html
  commentId: N:InscryptionAPI.Helpers.Extensions
  fullName: InscryptionAPI.Helpers.Extensions
  nameWithType: InscryptionAPI.Helpers.Extensions
- uid: InscryptionAPI.Helpers.Extensions.BoardManagerExtensions
  name: BoardManagerExtensions
  href: api/InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.html
  commentId: T:InscryptionAPI.Helpers.Extensions.BoardManagerExtensions
  fullName: InscryptionAPI.Helpers.Extensions.BoardManagerExtensions
  nameWithType: BoardManagerExtensions
- uid: InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetOpponentCards(DiskCardGame.BoardManager,Predicate{DiskCardGame.PlayableCard})
  name: GetOpponentCards(BoardManager, Predicate<PlayableCard>)
  href: api/InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.html#InscryptionAPI_Helpers_Extensions_BoardManagerExtensions_GetOpponentCards_DiskCardGame_BoardManager_Predicate_DiskCardGame_PlayableCard__
  commentId: M:InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetOpponentCards(DiskCardGame.BoardManager,Predicate{DiskCardGame.PlayableCard})
  name.vb: GetOpponentCards(BoardManager, Predicate(Of PlayableCard))
  fullName: InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetOpponentCards(DiskCardGame.BoardManager, Predicate<DiskCardGame.PlayableCard>)
  fullName.vb: InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetOpponentCards(DiskCardGame.BoardManager, Predicate(Of DiskCardGame.PlayableCard))
  nameWithType: BoardManagerExtensions.GetOpponentCards(BoardManager, Predicate<PlayableCard>)
  nameWithType.vb: BoardManagerExtensions.GetOpponentCards(BoardManager, Predicate(Of PlayableCard))
- uid: InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetOpponentCards*
  name: GetOpponentCards
  href: api/InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.html#InscryptionAPI_Helpers_Extensions_BoardManagerExtensions_GetOpponentCards_
  commentId: Overload:InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetOpponentCards
  isSpec: "True"
  fullName: InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetOpponentCards
  nameWithType: BoardManagerExtensions.GetOpponentCards
- uid: InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetOpponentOpenSlots(DiskCardGame.BoardManager,Predicate{DiskCardGame.CardSlot})
  name: GetOpponentOpenSlots(BoardManager, Predicate<CardSlot>)
  href: api/InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.html#InscryptionAPI_Helpers_Extensions_BoardManagerExtensions_GetOpponentOpenSlots_DiskCardGame_BoardManager_Predicate_DiskCardGame_CardSlot__
  commentId: M:InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetOpponentOpenSlots(DiskCardGame.BoardManager,Predicate{DiskCardGame.CardSlot})
  name.vb: GetOpponentOpenSlots(BoardManager, Predicate(Of CardSlot))
  fullName: InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetOpponentOpenSlots(DiskCardGame.BoardManager, Predicate<DiskCardGame.CardSlot>)
  fullName.vb: InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetOpponentOpenSlots(DiskCardGame.BoardManager, Predicate(Of DiskCardGame.CardSlot))
  nameWithType: BoardManagerExtensions.GetOpponentOpenSlots(BoardManager, Predicate<CardSlot>)
  nameWithType.vb: BoardManagerExtensions.GetOpponentOpenSlots(BoardManager, Predicate(Of CardSlot))
- uid: InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetOpponentOpenSlots*
  name: GetOpponentOpenSlots
  href: api/InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.html#InscryptionAPI_Helpers_Extensions_BoardManagerExtensions_GetOpponentOpenSlots_
  commentId: Overload:InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetOpponentOpenSlots
  isSpec: "True"
  fullName: InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetOpponentOpenSlots
  nameWithType: BoardManagerExtensions.GetOpponentOpenSlots
- uid: InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetPlayerCards(DiskCardGame.BoardManager,Predicate{DiskCardGame.PlayableCard})
  name: GetPlayerCards(BoardManager, Predicate<PlayableCard>)
  href: api/InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.html#InscryptionAPI_Helpers_Extensions_BoardManagerExtensions_GetPlayerCards_DiskCardGame_BoardManager_Predicate_DiskCardGame_PlayableCard__
  commentId: M:InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetPlayerCards(DiskCardGame.BoardManager,Predicate{DiskCardGame.PlayableCard})
  name.vb: GetPlayerCards(BoardManager, Predicate(Of PlayableCard))
  fullName: InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetPlayerCards(DiskCardGame.BoardManager, Predicate<DiskCardGame.PlayableCard>)
  fullName.vb: InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetPlayerCards(DiskCardGame.BoardManager, Predicate(Of DiskCardGame.PlayableCard))
  nameWithType: BoardManagerExtensions.GetPlayerCards(BoardManager, Predicate<PlayableCard>)
  nameWithType.vb: BoardManagerExtensions.GetPlayerCards(BoardManager, Predicate(Of PlayableCard))
- uid: InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetPlayerCards*
  name: GetPlayerCards
  href: api/InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.html#InscryptionAPI_Helpers_Extensions_BoardManagerExtensions_GetPlayerCards_
  commentId: Overload:InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetPlayerCards
  isSpec: "True"
  fullName: InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetPlayerCards
  nameWithType: BoardManagerExtensions.GetPlayerCards
- uid: InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetPlayerOpenSlots(DiskCardGame.BoardManager,Predicate{DiskCardGame.CardSlot})
  name: GetPlayerOpenSlots(BoardManager, Predicate<CardSlot>)
  href: api/InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.html#InscryptionAPI_Helpers_Extensions_BoardManagerExtensions_GetPlayerOpenSlots_DiskCardGame_BoardManager_Predicate_DiskCardGame_CardSlot__
  commentId: M:InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetPlayerOpenSlots(DiskCardGame.BoardManager,Predicate{DiskCardGame.CardSlot})
  name.vb: GetPlayerOpenSlots(BoardManager, Predicate(Of CardSlot))
  fullName: InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetPlayerOpenSlots(DiskCardGame.BoardManager, Predicate<DiskCardGame.CardSlot>)
  fullName.vb: InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetPlayerOpenSlots(DiskCardGame.BoardManager, Predicate(Of DiskCardGame.CardSlot))
  nameWithType: BoardManagerExtensions.GetPlayerOpenSlots(BoardManager, Predicate<CardSlot>)
  nameWithType.vb: BoardManagerExtensions.GetPlayerOpenSlots(BoardManager, Predicate(Of CardSlot))
- uid: InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetPlayerOpenSlots*
  name: GetPlayerOpenSlots
  href: api/InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.html#InscryptionAPI_Helpers_Extensions_BoardManagerExtensions_GetPlayerOpenSlots_
  commentId: Overload:InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetPlayerOpenSlots
  isSpec: "True"
  fullName: InscryptionAPI.Helpers.Extensions.BoardManagerExtensions.GetPlayerOpenSlots
  nameWithType: BoardManagerExtensions.GetPlayerOpenSlots
- uid: InscryptionAPI.Helpers.Extensions.CardSlotExtensions
  name: CardSlotExtensions
  href: api/InscryptionAPI.Helpers.Extensions.CardSlotExtensions.html
  commentId: T:InscryptionAPI.Helpers.Extensions.CardSlotExtensions
  fullName: InscryptionAPI.Helpers.Extensions.CardSlotExtensions
  nameWithType: CardSlotExtensions
- uid: InscryptionAPI.Helpers.Extensions.CardSlotExtensions.AssignCardToSlot(DiskCardGame.CardSlot,DiskCardGame.PlayableCard,System.Single,Action,System.Boolean)
  name: AssignCardToSlot(CardSlot, PlayableCard, Single, Action, Boolean)
  href: api/InscryptionAPI.Helpers.Extensions.CardSlotExtensions.html#InscryptionAPI_Helpers_Extensions_CardSlotExtensions_AssignCardToSlot_DiskCardGame_CardSlot_DiskCardGame_PlayableCard_System_Single_Action_System_Boolean_
  commentId: M:InscryptionAPI.Helpers.Extensions.CardSlotExtensions.AssignCardToSlot(DiskCardGame.CardSlot,DiskCardGame.PlayableCard,System.Single,Action,System.Boolean)
  fullName: InscryptionAPI.Helpers.Extensions.CardSlotExtensions.AssignCardToSlot(DiskCardGame.CardSlot, DiskCardGame.PlayableCard, System.Single, Action, System.Boolean)
  nameWithType: CardSlotExtensions.AssignCardToSlot(CardSlot, PlayableCard, Single, Action, Boolean)
- uid: InscryptionAPI.Helpers.Extensions.CardSlotExtensions.AssignCardToSlot*
  name: AssignCardToSlot
  href: api/InscryptionAPI.Helpers.Extensions.CardSlotExtensions.html#InscryptionAPI_Helpers_Extensions_CardSlotExtensions_AssignCardToSlot_
  commentId: Overload:InscryptionAPI.Helpers.Extensions.CardSlotExtensions.AssignCardToSlot
  isSpec: "True"
  fullName: InscryptionAPI.Helpers.Extensions.CardSlotExtensions.AssignCardToSlot
  nameWithType: CardSlotExtensions.AssignCardToSlot
- uid: InscryptionAPI.Helpers.Extensions.CardSlotExtensions.CreateCardInSlot(DiskCardGame.CardSlot,DiskCardGame.CardInfo,System.Single,System.Boolean)
  name: CreateCardInSlot(CardSlot, CardInfo, Single, Boolean)
  href: api/InscryptionAPI.Helpers.Extensions.CardSlotExtensions.html#InscryptionAPI_Helpers_Extensions_CardSlotExtensions_CreateCardInSlot_DiskCardGame_CardSlot_DiskCardGame_CardInfo_System_Single_System_Boolean_
  commentId: M:InscryptionAPI.Helpers.Extensions.CardSlotExtensions.CreateCardInSlot(DiskCardGame.CardSlot,DiskCardGame.CardInfo,System.Single,System.Boolean)
  fullName: InscryptionAPI.Helpers.Extensions.CardSlotExtensions.CreateCardInSlot(DiskCardGame.CardSlot, DiskCardGame.CardInfo, System.Single, System.Boolean)
  nameWithType: CardSlotExtensions.CreateCardInSlot(CardSlot, CardInfo, Single, Boolean)
- uid: InscryptionAPI.Helpers.Extensions.CardSlotExtensions.CreateCardInSlot*
  name: CreateCardInSlot
  href: api/InscryptionAPI.Helpers.Extensions.CardSlotExtensions.html#InscryptionAPI_Helpers_Extensions_CardSlotExtensions_CreateCardInSlot_
  commentId: Overload:InscryptionAPI.Helpers.Extensions.CardSlotExtensions.CreateCardInSlot
  isSpec: "True"
  fullName: InscryptionAPI.Helpers.Extensions.CardSlotExtensions.CreateCardInSlot
  nameWithType: CardSlotExtensions.CreateCardInSlot
- uid: InscryptionAPI.Helpers.Extensions.CardSlotExtensions.GetAdjacent(DiskCardGame.CardSlot,System.Boolean)
  name: GetAdjacent(CardSlot, Boolean)
  href: api/InscryptionAPI.Helpers.Extensions.CardSlotExtensions.html#InscryptionAPI_Helpers_Extensions_CardSlotExtensions_GetAdjacent_DiskCardGame_CardSlot_System_Boolean_
  commentId: M:InscryptionAPI.Helpers.Extensions.CardSlotExtensions.GetAdjacent(DiskCardGame.CardSlot,System.Boolean)
  fullName: InscryptionAPI.Helpers.Extensions.CardSlotExtensions.GetAdjacent(DiskCardGame.CardSlot, System.Boolean)
  nameWithType: CardSlotExtensions.GetAdjacent(CardSlot, Boolean)
- uid: InscryptionAPI.Helpers.Extensions.CardSlotExtensions.GetAdjacent*
  name: GetAdjacent
  href: api/InscryptionAPI.Helpers.Extensions.CardSlotExtensions.html#InscryptionAPI_Helpers_Extensions_CardSlotExtensions_GetAdjacent_
  commentId: Overload:InscryptionAPI.Helpers.Extensions.CardSlotExtensions.GetAdjacent
  isSpec: "True"
  fullName: InscryptionAPI.Helpers.Extensions.CardSlotExtensions.GetAdjacent
  nameWithType: CardSlotExtensions.GetAdjacent
- uid: InscryptionAPI.Helpers.Extensions.CardSlotExtensions.GetAdjacentCards(DiskCardGame.CardSlot)
  name: GetAdjacentCards(CardSlot)
  href: api/InscryptionAPI.Helpers.Extensions.CardSlotExtensions.html#InscryptionAPI_Helpers_Extensions_CardSlotExtensions_GetAdjacentCards_DiskCardGame_CardSlot_
  commentId: M:InscryptionAPI.Helpers.Extensions.CardSlotExtensions.GetAdjacentCards(DiskCardGame.CardSlot)
  fullName: InscryptionAPI.Helpers.Extensions.CardSlotExtensions.GetAdjacentCards(DiskCardGame.CardSlot)
  nameWithType: CardSlotExtensions.GetAdjacentCards(CardSlot)
- uid: InscryptionAPI.Helpers.Extensions.CardSlotExtensions.GetAdjacentCards*
  name: GetAdjacentCards
  href: api/InscryptionAPI.Helpers.Extensions.CardSlotExtensions.html#InscryptionAPI_Helpers_Extensions_CardSlotExtensions_GetAdjacentCards_
  commentId: Overload:InscryptionAPI.Helpers.Extensions.CardSlotExtensions.GetAdjacentCards
  isSpec: "True"
  fullName: InscryptionAPI.Helpers.Extensions.CardSlotExtensions.GetAdjacentCards
  nameWithType: CardSlotExtensions.GetAdjacentCards
- uid: InscryptionAPI.Helpers.Extensions.CardSlotExtensions.GetAdjacentSlots(DiskCardGame.CardSlot,System.Boolean)
  name: GetAdjacentSlots(CardSlot, Boolean)
  href: api/InscryptionAPI.Helpers.Extensions.CardSlotExtensions.html#InscryptionAPI_Helpers_Extensions_CardSlotExtensions_GetAdjacentSlots_DiskCardGame_CardSlot_System_Boolean_
  commentId: M:InscryptionAPI.Helpers.Extensions.CardSlotExtensions.GetAdjacentSlots(DiskCardGame.CardSlot,System.Boolean)
  fullName: InscryptionAPI.Helpers.Extensions.CardSlotExtensions.GetAdjacentSlots(DiskCardGame.CardSlot, System.Boolean)
  nameWithType: CardSlotExtensions.GetAdjacentSlots(CardSlot, Boolean)
- uid: InscryptionAPI.Helpers.Extensions.CardSlotExtensions.GetAdjacentSlots*
  name: GetAdjacentSlots
  href: api/InscryptionAPI.Helpers.Extensions.CardSlotExtensions.html#InscryptionAPI_Helpers_Extensions_CardSlotExtensions_GetAdjacentSlots_
  commentId: Overload:InscryptionAPI.Helpers.Extensions.CardSlotExtensions.GetAdjacentSlots
  isSpec: "True"
  fullName: InscryptionAPI.Helpers.Extensions.CardSlotExtensions.GetAdjacentSlots
  nameWithType: CardSlotExtensions.GetAdjacentSlots
- uid: InscryptionAPI.Helpers.Extensions.CardSlotExtensions.HasCard(DiskCardGame.CardSlot,System.String)
  name: HasCard(CardSlot, String)
  href: api/InscryptionAPI.Helpers.Extensions.CardSlotExtensions.html#InscryptionAPI_Helpers_Extensions_CardSlotExtensions_HasCard_DiskCardGame_CardSlot_System_String_
  commentId: M:InscryptionAPI.Helpers.Extensions.CardSlotExtensions.HasCard(DiskCardGame.CardSlot,System.String)
  fullName: InscryptionAPI.Helpers.Extensions.CardSlotExtensions.HasCard(DiskCardGame.CardSlot, System.String)
  nameWithType: CardSlotExtensions.HasCard(CardSlot, String)
- uid: InscryptionAPI.Helpers.Extensions.CardSlotExtensions.HasCard*
  name: HasCard
  href: api/InscryptionAPI.Helpers.Extensions.CardSlotExtensions.html#InscryptionAPI_Helpers_Extensions_CardSlotExtensions_HasCard_
  commentId: Overload:InscryptionAPI.Helpers.Extensions.CardSlotExtensions.HasCard
  isSpec: "True"
  fullName: InscryptionAPI.Helpers.Extensions.CardSlotExtensions.HasCard
  nameWithType: CardSlotExtensions.HasCard
- uid: InscryptionAPI.Helpers.Extensions.CardSlotExtensions.IsOpponentSlot(DiskCardGame.CardSlot)
  name: IsOpponentSlot(CardSlot)
  href: api/InscryptionAPI.Helpers.Extensions.CardSlotExtensions.html#InscryptionAPI_Helpers_Extensions_CardSlotExtensions_IsOpponentSlot_DiskCardGame_CardSlot_
  commentId: M:InscryptionAPI.Helpers.Extensions.CardSlotExtensions.IsOpponentSlot(DiskCardGame.CardSlot)
  fullName: InscryptionAPI.Helpers.Extensions.CardSlotExtensions.IsOpponentSlot(DiskCardGame.CardSlot)
  nameWithType: CardSlotExtensions.IsOpponentSlot(CardSlot)
- uid: InscryptionAPI.Helpers.Extensions.CardSlotExtensions.IsOpponentSlot*
  name: IsOpponentSlot
  href: api/InscryptionAPI.Helpers.Extensions.CardSlotExtensions.html#InscryptionAPI_Helpers_Extensions_CardSlotExtensions_IsOpponentSlot_
  commentId: Overload:InscryptionAPI.Helpers.Extensions.CardSlotExtensions.IsOpponentSlot
  isSpec: "True"
  fullName: InscryptionAPI.Helpers.Extensions.CardSlotExtensions.IsOpponentSlot
  nameWithType: CardSlotExtensions.IsOpponentSlot
- uid: InscryptionAPI.Helpers.Extensions.CardSlotExtensions.ResolveCardOnBoard(DiskCardGame.CardSlot,DiskCardGame.PlayableCard,System.Single,Action,System.Boolean)
  name: ResolveCardOnBoard(CardSlot, PlayableCard, Single, Action, Boolean)
  href: api/InscryptionAPI.Helpers.Extensions.CardSlotExtensions.html#InscryptionAPI_Helpers_Extensions_CardSlotExtensions_ResolveCardOnBoard_DiskCardGame_CardSlot_DiskCardGame_PlayableCard_System_Single_Action_System_Boolean_
  commentId: M:InscryptionAPI.Helpers.Extensions.CardSlotExtensions.ResolveCardOnBoard(DiskCardGame.CardSlot,DiskCardGame.PlayableCard,System.Single,Action,System.Boolean)
  fullName: InscryptionAPI.Helpers.Extensions.CardSlotExtensions.ResolveCardOnBoard(DiskCardGame.CardSlot, DiskCardGame.PlayableCard, System.Single, Action, System.Boolean)
  nameWithType: CardSlotExtensions.ResolveCardOnBoard(CardSlot, PlayableCard, Single, Action, Boolean)
- uid: InscryptionAPI.Helpers.Extensions.CardSlotExtensions.ResolveCardOnBoard*
  name: ResolveCardOnBoard
  href: api/InscryptionAPI.Helpers.Extensions.CardSlotExtensions.html#InscryptionAPI_Helpers_Extensions_CardSlotExtensions_ResolveCardOnBoard_
  commentId: Overload:InscryptionAPI.Helpers.Extensions.CardSlotExtensions.ResolveCardOnBoard
  isSpec: "True"
  fullName: InscryptionAPI.Helpers.Extensions.CardSlotExtensions.ResolveCardOnBoard
  nameWithType: CardSlotExtensions.ResolveCardOnBoard
- uid: InscryptionAPI.Helpers.Extensions.CardSlotExtensions.SelectCards(System.Collections.IEnumerable{DiskCardGame.CardSlot},Predicate{DiskCardGame.PlayableCard})
  name: SelectCards(IEnumerable<CardSlot>, Predicate<PlayableCard>)
  href: api/InscryptionAPI.Helpers.Extensions.CardSlotExtensions.html#InscryptionAPI_Helpers_Extensions_CardSlotExtensions_SelectCards_System_Collections_IEnumerable_DiskCardGame_CardSlot__Predicate_DiskCardGame_PlayableCard__
  commentId: M:InscryptionAPI.Helpers.Extensions.CardSlotExtensions.SelectCards(System.Collections.IEnumerable{DiskCardGame.CardSlot},Predicate{DiskCardGame.PlayableCard})
  name.vb: SelectCards(IEnumerable(Of CardSlot), Predicate(Of PlayableCard))
  fullName: InscryptionAPI.Helpers.Extensions.CardSlotExtensions.SelectCards(System.Collections.IEnumerable<DiskCardGame.CardSlot>, Predicate<DiskCardGame.PlayableCard>)
  fullName.vb: InscryptionAPI.Helpers.Extensions.CardSlotExtensions.SelectCards(System.Collections.IEnumerable(Of DiskCardGame.CardSlot), Predicate(Of DiskCardGame.PlayableCard))
  nameWithType: CardSlotExtensions.SelectCards(IEnumerable<CardSlot>, Predicate<PlayableCard>)
  nameWithType.vb: CardSlotExtensions.SelectCards(IEnumerable(Of CardSlot), Predicate(Of PlayableCard))
- uid: InscryptionAPI.Helpers.Extensions.CardSlotExtensions.SelectCards*
  name: SelectCards
  href: api/InscryptionAPI.Helpers.Extensions.CardSlotExtensions.html#InscryptionAPI_Helpers_Extensions_CardSlotExtensions_SelectCards_
  commentId: Overload:InscryptionAPI.Helpers.Extensions.CardSlotExtensions.SelectCards
  isSpec: "True"
  fullName: InscryptionAPI.Helpers.Extensions.CardSlotExtensions.SelectCards
  nameWithType: CardSlotExtensions.SelectCards
- uid: InscryptionAPI.Helpers.Extensions.CardSlotExtensions.SelectOpenSlots(System.Collections.IEnumerable{DiskCardGame.CardSlot},Predicate{DiskCardGame.CardSlot})
  name: SelectOpenSlots(IEnumerable<CardSlot>, Predicate<CardSlot>)
  href: api/InscryptionAPI.Helpers.Extensions.CardSlotExtensions.html#InscryptionAPI_Helpers_Extensions_CardSlotExtensions_SelectOpenSlots_System_Collections_IEnumerable_DiskCardGame_CardSlot__Predicate_DiskCardGame_CardSlot__
  commentId: M:InscryptionAPI.Helpers.Extensions.CardSlotExtensions.SelectOpenSlots(System.Collections.IEnumerable{DiskCardGame.CardSlot},Predicate{DiskCardGame.CardSlot})
  name.vb: SelectOpenSlots(IEnumerable(Of CardSlot), Predicate(Of CardSlot))
  fullName: InscryptionAPI.Helpers.Extensions.CardSlotExtensions.SelectOpenSlots(System.Collections.IEnumerable<DiskCardGame.CardSlot>, Predicate<DiskCardGame.CardSlot>)
  fullName.vb: InscryptionAPI.Helpers.Extensions.CardSlotExtensions.SelectOpenSlots(System.Collections.IEnumerable(Of DiskCardGame.CardSlot), Predicate(Of DiskCardGame.CardSlot))
  nameWithType: CardSlotExtensions.SelectOpenSlots(IEnumerable<CardSlot>, Predicate<CardSlot>)
  nameWithType.vb: CardSlotExtensions.SelectOpenSlots(IEnumerable(Of CardSlot), Predicate(Of CardSlot))
- uid: InscryptionAPI.Helpers.Extensions.CardSlotExtensions.SelectOpenSlots*
  name: SelectOpenSlots
  href: api/InscryptionAPI.Helpers.Extensions.CardSlotExtensions.html#InscryptionAPI_Helpers_Extensions_CardSlotExtensions_SelectOpenSlots_
  commentId: Overload:InscryptionAPI.Helpers.Extensions.CardSlotExtensions.SelectOpenSlots
  isSpec: "True"
  fullName: InscryptionAPI.Helpers.Extensions.CardSlotExtensions.SelectOpenSlots
  nameWithType: CardSlotExtensions.SelectOpenSlots
- uid: InscryptionAPI.Helpers.TextureHelper
  name: TextureHelper
  href: api/InscryptionAPI.Helpers.TextureHelper.html
  commentId: T:InscryptionAPI.Helpers.TextureHelper
  fullName: InscryptionAPI.Helpers.TextureHelper
  nameWithType: TextureHelper
- uid: InscryptionAPI.Helpers.TextureHelper.CombineTextures(List{UnityEngine.Texture2D},UnityEngine.Texture2D,System.Int32,System.Int32,System.Int32,System.Int32)
  name: CombineTextures(List<Texture2D>, Texture2D, Int32, Int32, Int32, Int32)
  href: api/InscryptionAPI.Helpers.TextureHelper.html#InscryptionAPI_Helpers_TextureHelper_CombineTextures_List_UnityEngine_Texture2D__UnityEngine_Texture2D_System_Int32_System_Int32_System_Int32_System_Int32_
  commentId: M:InscryptionAPI.Helpers.TextureHelper.CombineTextures(List{UnityEngine.Texture2D},UnityEngine.Texture2D,System.Int32,System.Int32,System.Int32,System.Int32)
  name.vb: CombineTextures(List(Of Texture2D), Texture2D, Int32, Int32, Int32, Int32)
  fullName: InscryptionAPI.Helpers.TextureHelper.CombineTextures(List<UnityEngine.Texture2D>, UnityEngine.Texture2D, System.Int32, System.Int32, System.Int32, System.Int32)
  fullName.vb: InscryptionAPI.Helpers.TextureHelper.CombineTextures(List(Of UnityEngine.Texture2D), UnityEngine.Texture2D, System.Int32, System.Int32, System.Int32, System.Int32)
  nameWithType: TextureHelper.CombineTextures(List<Texture2D>, Texture2D, Int32, Int32, Int32, Int32)
  nameWithType.vb: TextureHelper.CombineTextures(List(Of Texture2D), Texture2D, Int32, Int32, Int32, Int32)
- uid: InscryptionAPI.Helpers.TextureHelper.CombineTextures*
  name: CombineTextures
  href: api/InscryptionAPI.Helpers.TextureHelper.html#InscryptionAPI_Helpers_TextureHelper_CombineTextures_
  commentId: Overload:InscryptionAPI.Helpers.TextureHelper.CombineTextures
  isSpec: "True"
  fullName: InscryptionAPI.Helpers.TextureHelper.CombineTextures
  nameWithType: TextureHelper.CombineTextures
- uid: InscryptionAPI.Helpers.TextureHelper.ConvertTexture(UnityEngine.Texture2D,InscryptionAPI.Helpers.TextureHelper.SpriteType,UnityEngine.FilterMode)
  name: ConvertTexture(Texture2D, TextureHelper.SpriteType, FilterMode)
  href: api/InscryptionAPI.Helpers.TextureHelper.html#InscryptionAPI_Helpers_TextureHelper_ConvertTexture_UnityEngine_Texture2D_InscryptionAPI_Helpers_TextureHelper_SpriteType_UnityEngine_FilterMode_
  commentId: M:InscryptionAPI.Helpers.TextureHelper.ConvertTexture(UnityEngine.Texture2D,InscryptionAPI.Helpers.TextureHelper.SpriteType,UnityEngine.FilterMode)
  fullName: InscryptionAPI.Helpers.TextureHelper.ConvertTexture(UnityEngine.Texture2D, InscryptionAPI.Helpers.TextureHelper.SpriteType, UnityEngine.FilterMode)
  nameWithType: TextureHelper.ConvertTexture(Texture2D, TextureHelper.SpriteType, FilterMode)
- uid: InscryptionAPI.Helpers.TextureHelper.ConvertTexture(UnityEngine.Texture2D,System.Nullable{UnityEngine.Vector2})
  name: ConvertTexture(Texture2D, Nullable<Vector2>)
  href: api/InscryptionAPI.Helpers.TextureHelper.html#InscryptionAPI_Helpers_TextureHelper_ConvertTexture_UnityEngine_Texture2D_System_Nullable_UnityEngine_Vector2__
  commentId: M:InscryptionAPI.Helpers.TextureHelper.ConvertTexture(UnityEngine.Texture2D,System.Nullable{UnityEngine.Vector2})
  name.vb: ConvertTexture(Texture2D, Nullable(Of Vector2))
  fullName: InscryptionAPI.Helpers.TextureHelper.ConvertTexture(UnityEngine.Texture2D, System.Nullable<UnityEngine.Vector2>)
  fullName.vb: InscryptionAPI.Helpers.TextureHelper.ConvertTexture(UnityEngine.Texture2D, System.Nullable(Of UnityEngine.Vector2))
  nameWithType: TextureHelper.ConvertTexture(Texture2D, Nullable<Vector2>)
  nameWithType.vb: TextureHelper.ConvertTexture(Texture2D, Nullable(Of Vector2))
- uid: InscryptionAPI.Helpers.TextureHelper.ConvertTexture*
  name: ConvertTexture
  href: api/InscryptionAPI.Helpers.TextureHelper.html#InscryptionAPI_Helpers_TextureHelper_ConvertTexture_
  commentId: Overload:InscryptionAPI.Helpers.TextureHelper.ConvertTexture
  isSpec: "True"
  fullName: InscryptionAPI.Helpers.TextureHelper.ConvertTexture
  nameWithType: TextureHelper.ConvertTexture
- uid: InscryptionAPI.Helpers.TextureHelper.GetImageAsSprite(System.String,InscryptionAPI.Helpers.TextureHelper.SpriteType,UnityEngine.FilterMode)
  name: GetImageAsSprite(String, TextureHelper.SpriteType, FilterMode)
  href: api/InscryptionAPI.Helpers.TextureHelper.html#InscryptionAPI_Helpers_TextureHelper_GetImageAsSprite_System_String_InscryptionAPI_Helpers_TextureHelper_SpriteType_UnityEngine_FilterMode_
  commentId: M:InscryptionAPI.Helpers.TextureHelper.GetImageAsSprite(System.String,InscryptionAPI.Helpers.TextureHelper.SpriteType,UnityEngine.FilterMode)
  fullName: InscryptionAPI.Helpers.TextureHelper.GetImageAsSprite(System.String, InscryptionAPI.Helpers.TextureHelper.SpriteType, UnityEngine.FilterMode)
  nameWithType: TextureHelper.GetImageAsSprite(String, TextureHelper.SpriteType, FilterMode)
- uid: InscryptionAPI.Helpers.TextureHelper.GetImageAsSprite*
  name: GetImageAsSprite
  href: api/InscryptionAPI.Helpers.TextureHelper.html#InscryptionAPI_Helpers_TextureHelper_GetImageAsSprite_
  commentId: Overload:InscryptionAPI.Helpers.TextureHelper.GetImageAsSprite
  isSpec: "True"
  fullName: InscryptionAPI.Helpers.TextureHelper.GetImageAsSprite
  nameWithType: TextureHelper.GetImageAsSprite
- uid: InscryptionAPI.Helpers.TextureHelper.GetImageAsTexture(System.String,System.Reflection.Assembly,UnityEngine.FilterMode)
  name: GetImageAsTexture(String, Assembly, FilterMode)
  href: api/InscryptionAPI.Helpers.TextureHelper.html#InscryptionAPI_Helpers_TextureHelper_GetImageAsTexture_System_String_System_Reflection_Assembly_UnityEngine_FilterMode_
  commentId: M:InscryptionAPI.Helpers.TextureHelper.GetImageAsTexture(System.String,System.Reflection.Assembly,UnityEngine.FilterMode)
  fullName: InscryptionAPI.Helpers.TextureHelper.GetImageAsTexture(System.String, System.Reflection.Assembly, UnityEngine.FilterMode)
  nameWithType: TextureHelper.GetImageAsTexture(String, Assembly, FilterMode)
- uid: InscryptionAPI.Helpers.TextureHelper.GetImageAsTexture(System.String,UnityEngine.FilterMode)
  name: GetImageAsTexture(String, FilterMode)
  href: api/InscryptionAPI.Helpers.TextureHelper.html#InscryptionAPI_Helpers_TextureHelper_GetImageAsTexture_System_String_UnityEngine_FilterMode_
  commentId: M:InscryptionAPI.Helpers.TextureHelper.GetImageAsTexture(System.String,UnityEngine.FilterMode)
  fullName: InscryptionAPI.Helpers.TextureHelper.GetImageAsTexture(System.String, UnityEngine.FilterMode)
  nameWithType: TextureHelper.GetImageAsTexture(String, FilterMode)
- uid: InscryptionAPI.Helpers.TextureHelper.GetImageAsTexture*
  name: GetImageAsTexture
  href: api/InscryptionAPI.Helpers.TextureHelper.html#InscryptionAPI_Helpers_TextureHelper_GetImageAsTexture_
  commentId: Overload:InscryptionAPI.Helpers.TextureHelper.GetImageAsTexture
  isSpec: "True"
  fullName: InscryptionAPI.Helpers.TextureHelper.GetImageAsTexture
  nameWithType: TextureHelper.GetImageAsTexture
- uid: InscryptionAPI.Helpers.TextureHelper.GetResourceBytes(System.String,System.Reflection.Assembly)
  name: GetResourceBytes(String, Assembly)
  href: api/InscryptionAPI.Helpers.TextureHelper.html#InscryptionAPI_Helpers_TextureHelper_GetResourceBytes_System_String_System_Reflection_Assembly_
  commentId: M:InscryptionAPI.Helpers.TextureHelper.GetResourceBytes(System.String,System.Reflection.Assembly)
  fullName: InscryptionAPI.Helpers.TextureHelper.GetResourceBytes(System.String, System.Reflection.Assembly)
  nameWithType: TextureHelper.GetResourceBytes(String, Assembly)
- uid: InscryptionAPI.Helpers.TextureHelper.GetResourceBytes*
  name: GetResourceBytes
  href: api/InscryptionAPI.Helpers.TextureHelper.html#InscryptionAPI_Helpers_TextureHelper_GetResourceBytes_
  commentId: Overload:InscryptionAPI.Helpers.TextureHelper.GetResourceBytes
  isSpec: "True"
  fullName: InscryptionAPI.Helpers.TextureHelper.GetResourceBytes
  nameWithType: TextureHelper.GetResourceBytes
- uid: InscryptionAPI.Helpers.TextureHelper.ReadArtworkFileAsBytes(System.String)
  name: ReadArtworkFileAsBytes(String)
  href: api/InscryptionAPI.Helpers.TextureHelper.html#InscryptionAPI_Helpers_TextureHelper_ReadArtworkFileAsBytes_System_String_
  commentId: M:InscryptionAPI.Helpers.TextureHelper.ReadArtworkFileAsBytes(System.String)
  fullName: InscryptionAPI.Helpers.TextureHelper.ReadArtworkFileAsBytes(System.String)
  nameWithType: TextureHelper.ReadArtworkFileAsBytes(String)
- uid: InscryptionAPI.Helpers.TextureHelper.ReadArtworkFileAsBytes*
  name: ReadArtworkFileAsBytes
  href: api/InscryptionAPI.Helpers.TextureHelper.html#InscryptionAPI_Helpers_TextureHelper_ReadArtworkFileAsBytes_
  commentId: Overload:InscryptionAPI.Helpers.TextureHelper.ReadArtworkFileAsBytes
  isSpec: "True"
  fullName: InscryptionAPI.Helpers.TextureHelper.ReadArtworkFileAsBytes
  nameWithType: TextureHelper.ReadArtworkFileAsBytes
- uid: InscryptionAPI.Helpers.TextureHelper.RegisterEmissionForSprite(UnityEngine.Sprite,System.String,InscryptionAPI.Helpers.TextureHelper.SpriteType,UnityEngine.FilterMode)
  name: RegisterEmissionForSprite(Sprite, String, TextureHelper.SpriteType, FilterMode)
  href: api/InscryptionAPI.Helpers.TextureHelper.html#InscryptionAPI_Helpers_TextureHelper_RegisterEmissionForSprite_UnityEngine_Sprite_System_String_InscryptionAPI_Helpers_TextureHelper_SpriteType_UnityEngine_FilterMode_
  commentId: M:InscryptionAPI.Helpers.TextureHelper.RegisterEmissionForSprite(UnityEngine.Sprite,System.String,InscryptionAPI.Helpers.TextureHelper.SpriteType,UnityEngine.FilterMode)
  fullName: InscryptionAPI.Helpers.TextureHelper.RegisterEmissionForSprite(UnityEngine.Sprite, System.String, InscryptionAPI.Helpers.TextureHelper.SpriteType, UnityEngine.FilterMode)
  nameWithType: TextureHelper.RegisterEmissionForSprite(Sprite, String, TextureHelper.SpriteType, FilterMode)
- uid: InscryptionAPI.Helpers.TextureHelper.RegisterEmissionForSprite(UnityEngine.Sprite,UnityEngine.Sprite)
  name: RegisterEmissionForSprite(Sprite, Sprite)
  href: api/InscryptionAPI.Helpers.TextureHelper.html#InscryptionAPI_Helpers_TextureHelper_RegisterEmissionForSprite_UnityEngine_Sprite_UnityEngine_Sprite_
  commentId: M:InscryptionAPI.Helpers.TextureHelper.RegisterEmissionForSprite(UnityEngine.Sprite,UnityEngine.Sprite)
  fullName: InscryptionAPI.Helpers.TextureHelper.RegisterEmissionForSprite(UnityEngine.Sprite, UnityEngine.Sprite)
  nameWithType: TextureHelper.RegisterEmissionForSprite(Sprite, Sprite)
- uid: InscryptionAPI.Helpers.TextureHelper.RegisterEmissionForSprite(UnityEngine.Sprite,UnityEngine.Texture2D,InscryptionAPI.Helpers.TextureHelper.SpriteType,UnityEngine.FilterMode)
  name: RegisterEmissionForSprite(Sprite, Texture2D, TextureHelper.SpriteType, FilterMode)
  href: api/InscryptionAPI.Helpers.TextureHelper.html#InscryptionAPI_Helpers_TextureHelper_RegisterEmissionForSprite_UnityEngine_Sprite_UnityEngine_Texture2D_InscryptionAPI_Helpers_TextureHelper_SpriteType_UnityEngine_FilterMode_
  commentId: M:InscryptionAPI.Helpers.TextureHelper.RegisterEmissionForSprite(UnityEngine.Sprite,UnityEngine.Texture2D,InscryptionAPI.Helpers.TextureHelper.SpriteType,UnityEngine.FilterMode)
  fullName: InscryptionAPI.Helpers.TextureHelper.RegisterEmissionForSprite(UnityEngine.Sprite, UnityEngine.Texture2D, InscryptionAPI.Helpers.TextureHelper.SpriteType, UnityEngine.FilterMode)
  nameWithType: TextureHelper.RegisterEmissionForSprite(Sprite, Texture2D, TextureHelper.SpriteType, FilterMode)
- uid: InscryptionAPI.Helpers.TextureHelper.RegisterEmissionForSprite*
  name: RegisterEmissionForSprite
  href: api/InscryptionAPI.Helpers.TextureHelper.html#InscryptionAPI_Helpers_TextureHelper_RegisterEmissionForSprite_
  commentId: Overload:InscryptionAPI.Helpers.TextureHelper.RegisterEmissionForSprite
  isSpec: "True"
  fullName: InscryptionAPI.Helpers.TextureHelper.RegisterEmissionForSprite
  nameWithType: TextureHelper.RegisterEmissionForSprite
- uid: InscryptionAPI.Helpers.TextureHelper.SpriteType
  name: TextureHelper.SpriteType
  href: api/InscryptionAPI.Helpers.TextureHelper.SpriteType.html
  commentId: T:InscryptionAPI.Helpers.TextureHelper.SpriteType
  fullName: InscryptionAPI.Helpers.TextureHelper.SpriteType
  nameWithType: TextureHelper.SpriteType
- uid: InscryptionAPI.Helpers.TextureHelper.SpriteType.Act2CostDecalLeft
  name: Act2CostDecalLeft
  href: api/InscryptionAPI.Helpers.TextureHelper.SpriteType.html#InscryptionAPI_Helpers_TextureHelper_SpriteType_Act2CostDecalLeft
  commentId: F:InscryptionAPI.Helpers.TextureHelper.SpriteType.Act2CostDecalLeft
  fullName: InscryptionAPI.Helpers.TextureHelper.SpriteType.Act2CostDecalLeft
  nameWithType: TextureHelper.SpriteType.Act2CostDecalLeft
- uid: InscryptionAPI.Helpers.TextureHelper.SpriteType.Act2CostDecalRight
  name: Act2CostDecalRight
  href: api/InscryptionAPI.Helpers.TextureHelper.SpriteType.html#InscryptionAPI_Helpers_TextureHelper_SpriteType_Act2CostDecalRight
  commentId: F:InscryptionAPI.Helpers.TextureHelper.SpriteType.Act2CostDecalRight
  fullName: InscryptionAPI.Helpers.TextureHelper.SpriteType.Act2CostDecalRight
  nameWithType: TextureHelper.SpriteType.Act2CostDecalRight
- uid: InscryptionAPI.Helpers.TextureHelper.SpriteType.CardPortrait
  name: CardPortrait
  href: api/InscryptionAPI.Helpers.TextureHelper.SpriteType.html#InscryptionAPI_Helpers_TextureHelper_SpriteType_CardPortrait
  commentId: F:InscryptionAPI.Helpers.TextureHelper.SpriteType.CardPortrait
  fullName: InscryptionAPI.Helpers.TextureHelper.SpriteType.CardPortrait
  nameWithType: TextureHelper.SpriteType.CardPortrait
- uid: InscryptionAPI.Helpers.TextureHelper.SpriteType.ChallengeIcon
  name: ChallengeIcon
  href: api/InscryptionAPI.Helpers.TextureHelper.SpriteType.html#InscryptionAPI_Helpers_TextureHelper_SpriteType_ChallengeIcon
  commentId: F:InscryptionAPI.Helpers.TextureHelper.SpriteType.ChallengeIcon
  fullName: InscryptionAPI.Helpers.TextureHelper.SpriteType.ChallengeIcon
  nameWithType: TextureHelper.SpriteType.ChallengeIcon
- uid: InscryptionAPI.Helpers.TextureHelper.SpriteType.CostDecal
  name: CostDecal
  href: api/InscryptionAPI.Helpers.TextureHelper.SpriteType.html#InscryptionAPI_Helpers_TextureHelper_SpriteType_CostDecal
  commentId: F:InscryptionAPI.Helpers.TextureHelper.SpriteType.CostDecal
  fullName: InscryptionAPI.Helpers.TextureHelper.SpriteType.CostDecal
  nameWithType: TextureHelper.SpriteType.CostDecal
- uid: InscryptionAPI.Helpers.TextureHelper.SpriteType.OversizedCostDecal
  name: OversizedCostDecal
  href: api/InscryptionAPI.Helpers.TextureHelper.SpriteType.html#InscryptionAPI_Helpers_TextureHelper_SpriteType_OversizedCostDecal
  commentId: F:InscryptionAPI.Helpers.TextureHelper.SpriteType.OversizedCostDecal
  fullName: InscryptionAPI.Helpers.TextureHelper.SpriteType.OversizedCostDecal
  nameWithType: TextureHelper.SpriteType.OversizedCostDecal
- uid: InscryptionAPI.Helpers.TextureHelper.SpriteType.PixelAbilityIcon
  name: PixelAbilityIcon
  href: api/InscryptionAPI.Helpers.TextureHelper.SpriteType.html#InscryptionAPI_Helpers_TextureHelper_SpriteType_PixelAbilityIcon
  commentId: F:InscryptionAPI.Helpers.TextureHelper.SpriteType.PixelAbilityIcon
  fullName: InscryptionAPI.Helpers.TextureHelper.SpriteType.PixelAbilityIcon
  nameWithType: TextureHelper.SpriteType.PixelAbilityIcon
- uid: InscryptionAPI.Helpers.TextureHelper.SpriteType.PixelPortrait
  name: PixelPortrait
  href: api/InscryptionAPI.Helpers.TextureHelper.SpriteType.html#InscryptionAPI_Helpers_TextureHelper_SpriteType_PixelPortrait
  commentId: F:InscryptionAPI.Helpers.TextureHelper.SpriteType.PixelPortrait
  fullName: InscryptionAPI.Helpers.TextureHelper.SpriteType.PixelPortrait
  nameWithType: TextureHelper.SpriteType.PixelPortrait
- uid: InscryptionAPI.Helpers.TextureHelper.SpriteType.PixelStatIcon
  name: PixelStatIcon
  href: api/InscryptionAPI.Helpers.TextureHelper.SpriteType.html#InscryptionAPI_Helpers_TextureHelper_SpriteType_PixelStatIcon
  commentId: F:InscryptionAPI.Helpers.TextureHelper.SpriteType.PixelStatIcon
  fullName: InscryptionAPI.Helpers.TextureHelper.SpriteType.PixelStatIcon
  nameWithType: TextureHelper.SpriteType.PixelStatIcon
- uid: InscryptionAPI.Helpers.TextureHelper.SpriteType.StarterDeckIcon
  name: StarterDeckIcon
  href: api/InscryptionAPI.Helpers.TextureHelper.SpriteType.html#InscryptionAPI_Helpers_TextureHelper_SpriteType_StarterDeckIcon
  commentId: F:InscryptionAPI.Helpers.TextureHelper.SpriteType.StarterDeckIcon
  fullName: InscryptionAPI.Helpers.TextureHelper.SpriteType.StarterDeckIcon
  nameWithType: TextureHelper.SpriteType.StarterDeckIcon
- uid: InscryptionAPI.Helpers.TextureHelper.TryReuseEmission(DiskCardGame.CardInfo,UnityEngine.Sprite)
  name: TryReuseEmission(CardInfo, Sprite)
  href: api/InscryptionAPI.Helpers.TextureHelper.html#InscryptionAPI_Helpers_TextureHelper_TryReuseEmission_DiskCardGame_CardInfo_UnityEngine_Sprite_
  commentId: M:InscryptionAPI.Helpers.TextureHelper.TryReuseEmission(DiskCardGame.CardInfo,UnityEngine.Sprite)
  fullName: InscryptionAPI.Helpers.TextureHelper.TryReuseEmission(DiskCardGame.CardInfo, UnityEngine.Sprite)
  nameWithType: TextureHelper.TryReuseEmission(CardInfo, Sprite)
- uid: InscryptionAPI.Helpers.TextureHelper.TryReuseEmission*
  name: TryReuseEmission
  href: api/InscryptionAPI.Helpers.TextureHelper.html#InscryptionAPI_Helpers_TextureHelper_TryReuseEmission_
  commentId: Overload:InscryptionAPI.Helpers.TextureHelper.TryReuseEmission
  isSpec: "True"
  fullName: InscryptionAPI.Helpers.TextureHelper.TryReuseEmission
  nameWithType: TextureHelper.TryReuseEmission
- uid: InscryptionAPI.InscryptionAPIPlugin
  name: InscryptionAPIPlugin
  href: api/InscryptionAPI.InscryptionAPIPlugin.html
  commentId: T:InscryptionAPI.InscryptionAPIPlugin
  fullName: InscryptionAPI.InscryptionAPIPlugin
  nameWithType: InscryptionAPIPlugin
- uid: InscryptionAPI.InscryptionAPIPlugin.ModGUID
  name: ModGUID
  href: api/InscryptionAPI.InscryptionAPIPlugin.html#InscryptionAPI_InscryptionAPIPlugin_ModGUID
  commentId: F:InscryptionAPI.InscryptionAPIPlugin.ModGUID
  fullName: InscryptionAPI.InscryptionAPIPlugin.ModGUID
  nameWithType: InscryptionAPIPlugin.ModGUID
- uid: InscryptionAPI.InscryptionAPIPlugin.ModName
  name: ModName
  href: api/InscryptionAPI.InscryptionAPIPlugin.html#InscryptionAPI_InscryptionAPIPlugin_ModName
  commentId: F:InscryptionAPI.InscryptionAPIPlugin.ModName
  fullName: InscryptionAPI.InscryptionAPIPlugin.ModName
  nameWithType: InscryptionAPIPlugin.ModName
- uid: InscryptionAPI.InscryptionAPIPlugin.ModVer
  name: ModVer
  href: api/InscryptionAPI.InscryptionAPIPlugin.html#InscryptionAPI_InscryptionAPIPlugin_ModVer
  commentId: F:InscryptionAPI.InscryptionAPIPlugin.ModVer
  fullName: InscryptionAPI.InscryptionAPIPlugin.ModVer
  nameWithType: InscryptionAPIPlugin.ModVer
- uid: InscryptionAPI.InscryptionAPIPlugin.ScriptableObjectLoaderLoad
  name: ScriptableObjectLoaderLoad
  href: api/InscryptionAPI.InscryptionAPIPlugin.html#InscryptionAPI_InscryptionAPIPlugin_ScriptableObjectLoaderLoad
  commentId: E:InscryptionAPI.InscryptionAPIPlugin.ScriptableObjectLoaderLoad
  fullName: InscryptionAPI.InscryptionAPIPlugin.ScriptableObjectLoaderLoad
  nameWithType: InscryptionAPIPlugin.ScriptableObjectLoaderLoad
- uid: InscryptionAPI.Nodes
  name: InscryptionAPI.Nodes
  href: api/InscryptionAPI.Nodes.html
  commentId: N:InscryptionAPI.Nodes
  fullName: InscryptionAPI.Nodes
  nameWithType: InscryptionAPI.Nodes
- uid: InscryptionAPI.Nodes.And
  name: And
  href: api/InscryptionAPI.Nodes.And.html
  commentId: T:InscryptionAPI.Nodes.And
  fullName: InscryptionAPI.Nodes.And
  nameWithType: And
- uid: InscryptionAPI.Nodes.And.#ctor(DiskCardGame.NodeData.SelectionCondition,DiskCardGame.NodeData.SelectionCondition)
  name: And(NodeData.SelectionCondition, NodeData.SelectionCondition)
  href: api/InscryptionAPI.Nodes.And.html#InscryptionAPI_Nodes_And__ctor_DiskCardGame_NodeData_SelectionCondition_DiskCardGame_NodeData_SelectionCondition_
  commentId: M:InscryptionAPI.Nodes.And.#ctor(DiskCardGame.NodeData.SelectionCondition,DiskCardGame.NodeData.SelectionCondition)
  fullName: InscryptionAPI.Nodes.And.And(DiskCardGame.NodeData.SelectionCondition, DiskCardGame.NodeData.SelectionCondition)
  nameWithType: And.And(NodeData.SelectionCondition, NodeData.SelectionCondition)
- uid: InscryptionAPI.Nodes.And.#ctor*
  name: And
  href: api/InscryptionAPI.Nodes.And.html#InscryptionAPI_Nodes_And__ctor_
  commentId: Overload:InscryptionAPI.Nodes.And.#ctor
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.And.And
  nameWithType: And.And
- uid: InscryptionAPI.Nodes.And.Satisfied(System.Int32,System.Collections.Generic.List{DiskCardGame.NodeData})
  name: Satisfied(Int32, List<NodeData>)
  href: api/InscryptionAPI.Nodes.And.html#InscryptionAPI_Nodes_And_Satisfied_System_Int32_System_Collections_Generic_List_DiskCardGame_NodeData__
  commentId: M:InscryptionAPI.Nodes.And.Satisfied(System.Int32,System.Collections.Generic.List{DiskCardGame.NodeData})
  name.vb: Satisfied(Int32, List(Of NodeData))
  fullName: InscryptionAPI.Nodes.And.Satisfied(System.Int32, System.Collections.Generic.List<DiskCardGame.NodeData>)
  fullName.vb: InscryptionAPI.Nodes.And.Satisfied(System.Int32, System.Collections.Generic.List(Of DiskCardGame.NodeData))
  nameWithType: And.Satisfied(Int32, List<NodeData>)
  nameWithType.vb: And.Satisfied(Int32, List(Of NodeData))
- uid: InscryptionAPI.Nodes.And.Satisfied*
  name: Satisfied
  href: api/InscryptionAPI.Nodes.And.html#InscryptionAPI_Nodes_And_Satisfied_
  commentId: Overload:InscryptionAPI.Nodes.And.Satisfied
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.And.Satisfied
  nameWithType: And.Satisfied
- uid: InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer
  name: CustomCardChoiceNodeSequencer
  href: api/InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.html
  commentId: T:InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer
  fullName: InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer
  nameWithType: CustomCardChoiceNodeSequencer
- uid: InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.DeckPileInheritsOffsets
  name: DeckPileInheritsOffsets
  href: api/InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.html#InscryptionAPI_Nodes_CustomCardChoiceNodeSequencer_DeckPileInheritsOffsets
  commentId: P:InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.DeckPileInheritsOffsets
  fullName: InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.DeckPileInheritsOffsets
  nameWithType: CustomCardChoiceNodeSequencer.DeckPileInheritsOffsets
- uid: InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.DeckPileInheritsOffsets*
  name: DeckPileInheritsOffsets
  href: api/InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.html#InscryptionAPI_Nodes_CustomCardChoiceNodeSequencer_DeckPileInheritsOffsets_
  commentId: Overload:InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.DeckPileInheritsOffsets
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.DeckPileInheritsOffsets
  nameWithType: CustomCardChoiceNodeSequencer.DeckPileInheritsOffsets
- uid: InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.DeckPilePositionOffset
  name: DeckPilePositionOffset
  href: api/InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.html#InscryptionAPI_Nodes_CustomCardChoiceNodeSequencer_DeckPilePositionOffset
  commentId: P:InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.DeckPilePositionOffset
  fullName: InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.DeckPilePositionOffset
  nameWithType: CustomCardChoiceNodeSequencer.DeckPilePositionOffset
- uid: InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.DeckPilePositionOffset*
  name: DeckPilePositionOffset
  href: api/InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.html#InscryptionAPI_Nodes_CustomCardChoiceNodeSequencer_DeckPilePositionOffset_
  commentId: Overload:InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.DeckPilePositionOffset
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.DeckPilePositionOffset
  nameWithType: CustomCardChoiceNodeSequencer.DeckPilePositionOffset
- uid: InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.DeckPileRotationOffset
  name: DeckPileRotationOffset
  href: api/InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.html#InscryptionAPI_Nodes_CustomCardChoiceNodeSequencer_DeckPileRotationOffset
  commentId: P:InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.DeckPileRotationOffset
  fullName: InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.DeckPileRotationOffset
  nameWithType: CustomCardChoiceNodeSequencer.DeckPileRotationOffset
- uid: InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.DeckPileRotationOffset*
  name: DeckPileRotationOffset
  href: api/InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.html#InscryptionAPI_Nodes_CustomCardChoiceNodeSequencer_DeckPileRotationOffset_
  commentId: Overload:InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.DeckPileRotationOffset
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.DeckPileRotationOffset
  nameWithType: CustomCardChoiceNodeSequencer.DeckPileRotationOffset
- uid: InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.DoCustomSequence(InscryptionAPI.Nodes.CustomSpecialNodeData)
  name: DoCustomSequence(CustomSpecialNodeData)
  href: api/InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.html#InscryptionAPI_Nodes_CustomCardChoiceNodeSequencer_DoCustomSequence_InscryptionAPI_Nodes_CustomSpecialNodeData_
  commentId: M:InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.DoCustomSequence(InscryptionAPI.Nodes.CustomSpecialNodeData)
  fullName: InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.DoCustomSequence(InscryptionAPI.Nodes.CustomSpecialNodeData)
  nameWithType: CustomCardChoiceNodeSequencer.DoCustomSequence(CustomSpecialNodeData)
- uid: InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.DoCustomSequence*
  name: DoCustomSequence
  href: api/InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.html#InscryptionAPI_Nodes_CustomCardChoiceNodeSequencer_DoCustomSequence_
  commentId: Overload:InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.DoCustomSequence
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.DoCustomSequence
  nameWithType: CustomCardChoiceNodeSequencer.DoCustomSequence
- uid: InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.Inherit(InscryptionAPI.Nodes.CustomSpecialNodeData)
  name: Inherit(CustomSpecialNodeData)
  href: api/InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.html#InscryptionAPI_Nodes_CustomCardChoiceNodeSequencer_Inherit_InscryptionAPI_Nodes_CustomSpecialNodeData_
  commentId: M:InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.Inherit(InscryptionAPI.Nodes.CustomSpecialNodeData)
  fullName: InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.Inherit(InscryptionAPI.Nodes.CustomSpecialNodeData)
  nameWithType: CustomCardChoiceNodeSequencer.Inherit(CustomSpecialNodeData)
- uid: InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.Inherit*
  name: Inherit
  href: api/InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.html#InscryptionAPI_Nodes_CustomCardChoiceNodeSequencer_Inherit_
  commentId: Overload:InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.Inherit
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.Inherit
  nameWithType: CustomCardChoiceNodeSequencer.Inherit
- uid: InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.InheritTarget
  name: InheritTarget
  href: api/InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.html#InscryptionAPI_Nodes_CustomCardChoiceNodeSequencer_InheritTarget
  commentId: P:InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.InheritTarget
  fullName: InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.InheritTarget
  nameWithType: CustomCardChoiceNodeSequencer.InheritTarget
- uid: InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.InheritTarget*
  name: InheritTarget
  href: api/InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.html#InscryptionAPI_Nodes_CustomCardChoiceNodeSequencer_InheritTarget_
  commentId: Overload:InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.InheritTarget
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.InheritTarget
  nameWithType: CustomCardChoiceNodeSequencer.InheritTarget
- uid: InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.PositionOffset
  name: PositionOffset
  href: api/InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.html#InscryptionAPI_Nodes_CustomCardChoiceNodeSequencer_PositionOffset
  commentId: P:InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.PositionOffset
  fullName: InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.PositionOffset
  nameWithType: CustomCardChoiceNodeSequencer.PositionOffset
- uid: InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.PositionOffset*
  name: PositionOffset
  href: api/InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.html#InscryptionAPI_Nodes_CustomCardChoiceNodeSequencer_PositionOffset_
  commentId: Overload:InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.PositionOffset
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.PositionOffset
  nameWithType: CustomCardChoiceNodeSequencer.PositionOffset
- uid: InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.RotationOffset
  name: RotationOffset
  href: api/InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.html#InscryptionAPI_Nodes_CustomCardChoiceNodeSequencer_RotationOffset
  commentId: P:InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.RotationOffset
  fullName: InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.RotationOffset
  nameWithType: CustomCardChoiceNodeSequencer.RotationOffset
- uid: InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.RotationOffset*
  name: RotationOffset
  href: api/InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.html#InscryptionAPI_Nodes_CustomCardChoiceNodeSequencer_RotationOffset_
  commentId: Overload:InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.RotationOffset
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.RotationOffset
  nameWithType: CustomCardChoiceNodeSequencer.RotationOffset
- uid: InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.ShouldDestroyOnEnd(InscryptionAPI.Nodes.CustomSpecialNodeData)
  name: ShouldDestroyOnEnd(CustomSpecialNodeData)
  href: api/InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.html#InscryptionAPI_Nodes_CustomCardChoiceNodeSequencer_ShouldDestroyOnEnd_InscryptionAPI_Nodes_CustomSpecialNodeData_
  commentId: M:InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.ShouldDestroyOnEnd(InscryptionAPI.Nodes.CustomSpecialNodeData)
  fullName: InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.ShouldDestroyOnEnd(InscryptionAPI.Nodes.CustomSpecialNodeData)
  nameWithType: CustomCardChoiceNodeSequencer.ShouldDestroyOnEnd(CustomSpecialNodeData)
- uid: InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.ShouldDestroyOnEnd*
  name: ShouldDestroyOnEnd
  href: api/InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.html#InscryptionAPI_Nodes_CustomCardChoiceNodeSequencer_ShouldDestroyOnEnd_
  commentId: Overload:InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.ShouldDestroyOnEnd
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.ShouldDestroyOnEnd
  nameWithType: CustomCardChoiceNodeSequencer.ShouldDestroyOnEnd
- uid: InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.ShouldInherit
  name: ShouldInherit
  href: api/InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.html#InscryptionAPI_Nodes_CustomCardChoiceNodeSequencer_ShouldInherit
  commentId: P:InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.ShouldInherit
  fullName: InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.ShouldInherit
  nameWithType: CustomCardChoiceNodeSequencer.ShouldInherit
- uid: InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.ShouldInherit*
  name: ShouldInherit
  href: api/InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.html#InscryptionAPI_Nodes_CustomCardChoiceNodeSequencer_ShouldInherit_
  commentId: Overload:InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.ShouldInherit
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.ShouldInherit
  nameWithType: CustomCardChoiceNodeSequencer.ShouldInherit
- uid: InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.ShouldNotReturnToMapOnEnd(InscryptionAPI.Nodes.CustomSpecialNodeData)
  name: ShouldNotReturnToMapOnEnd(CustomSpecialNodeData)
  href: api/InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.html#InscryptionAPI_Nodes_CustomCardChoiceNodeSequencer_ShouldNotReturnToMapOnEnd_InscryptionAPI_Nodes_CustomSpecialNodeData_
  commentId: M:InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.ShouldNotReturnToMapOnEnd(InscryptionAPI.Nodes.CustomSpecialNodeData)
  fullName: InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.ShouldNotReturnToMapOnEnd(InscryptionAPI.Nodes.CustomSpecialNodeData)
  nameWithType: CustomCardChoiceNodeSequencer.ShouldNotReturnToMapOnEnd(CustomSpecialNodeData)
- uid: InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.ShouldNotReturnToMapOnEnd*
  name: ShouldNotReturnToMapOnEnd
  href: api/InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.html#InscryptionAPI_Nodes_CustomCardChoiceNodeSequencer_ShouldNotReturnToMapOnEnd_
  commentId: Overload:InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.ShouldNotReturnToMapOnEnd
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.CustomCardChoiceNodeSequencer.ShouldNotReturnToMapOnEnd
  nameWithType: CustomCardChoiceNodeSequencer.ShouldNotReturnToMapOnEnd
- uid: InscryptionAPI.Nodes.CustomNodeSequencer
  name: CustomNodeSequencer
  href: api/InscryptionAPI.Nodes.CustomNodeSequencer.html
  commentId: T:InscryptionAPI.Nodes.CustomNodeSequencer
  fullName: InscryptionAPI.Nodes.CustomNodeSequencer
  nameWithType: CustomNodeSequencer
- uid: InscryptionAPI.Nodes.CustomNodeSequencer.DoCustomSequence(InscryptionAPI.Nodes.CustomSpecialNodeData)
  name: DoCustomSequence(CustomSpecialNodeData)
  href: api/InscryptionAPI.Nodes.CustomNodeSequencer.html#InscryptionAPI_Nodes_CustomNodeSequencer_DoCustomSequence_InscryptionAPI_Nodes_CustomSpecialNodeData_
  commentId: M:InscryptionAPI.Nodes.CustomNodeSequencer.DoCustomSequence(InscryptionAPI.Nodes.CustomSpecialNodeData)
  fullName: InscryptionAPI.Nodes.CustomNodeSequencer.DoCustomSequence(InscryptionAPI.Nodes.CustomSpecialNodeData)
  nameWithType: CustomNodeSequencer.DoCustomSequence(CustomSpecialNodeData)
- uid: InscryptionAPI.Nodes.CustomNodeSequencer.DoCustomSequence*
  name: DoCustomSequence
  href: api/InscryptionAPI.Nodes.CustomNodeSequencer.html#InscryptionAPI_Nodes_CustomNodeSequencer_DoCustomSequence_
  commentId: Overload:InscryptionAPI.Nodes.CustomNodeSequencer.DoCustomSequence
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.CustomNodeSequencer.DoCustomSequence
  nameWithType: CustomNodeSequencer.DoCustomSequence
- uid: InscryptionAPI.Nodes.CustomNodeSequencer.Inherit(InscryptionAPI.Nodes.CustomSpecialNodeData)
  name: Inherit(CustomSpecialNodeData)
  href: api/InscryptionAPI.Nodes.CustomNodeSequencer.html#InscryptionAPI_Nodes_CustomNodeSequencer_Inherit_InscryptionAPI_Nodes_CustomSpecialNodeData_
  commentId: M:InscryptionAPI.Nodes.CustomNodeSequencer.Inherit(InscryptionAPI.Nodes.CustomSpecialNodeData)
  fullName: InscryptionAPI.Nodes.CustomNodeSequencer.Inherit(InscryptionAPI.Nodes.CustomSpecialNodeData)
  nameWithType: CustomNodeSequencer.Inherit(CustomSpecialNodeData)
- uid: InscryptionAPI.Nodes.CustomNodeSequencer.Inherit*
  name: Inherit
  href: api/InscryptionAPI.Nodes.CustomNodeSequencer.html#InscryptionAPI_Nodes_CustomNodeSequencer_Inherit_
  commentId: Overload:InscryptionAPI.Nodes.CustomNodeSequencer.Inherit
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.CustomNodeSequencer.Inherit
  nameWithType: CustomNodeSequencer.Inherit
- uid: InscryptionAPI.Nodes.CustomNodeSequencer.ShouldDestroyOnEnd(InscryptionAPI.Nodes.CustomSpecialNodeData)
  name: ShouldDestroyOnEnd(CustomSpecialNodeData)
  href: api/InscryptionAPI.Nodes.CustomNodeSequencer.html#InscryptionAPI_Nodes_CustomNodeSequencer_ShouldDestroyOnEnd_InscryptionAPI_Nodes_CustomSpecialNodeData_
  commentId: M:InscryptionAPI.Nodes.CustomNodeSequencer.ShouldDestroyOnEnd(InscryptionAPI.Nodes.CustomSpecialNodeData)
  fullName: InscryptionAPI.Nodes.CustomNodeSequencer.ShouldDestroyOnEnd(InscryptionAPI.Nodes.CustomSpecialNodeData)
  nameWithType: CustomNodeSequencer.ShouldDestroyOnEnd(CustomSpecialNodeData)
- uid: InscryptionAPI.Nodes.CustomNodeSequencer.ShouldDestroyOnEnd*
  name: ShouldDestroyOnEnd
  href: api/InscryptionAPI.Nodes.CustomNodeSequencer.html#InscryptionAPI_Nodes_CustomNodeSequencer_ShouldDestroyOnEnd_
  commentId: Overload:InscryptionAPI.Nodes.CustomNodeSequencer.ShouldDestroyOnEnd
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.CustomNodeSequencer.ShouldDestroyOnEnd
  nameWithType: CustomNodeSequencer.ShouldDestroyOnEnd
- uid: InscryptionAPI.Nodes.CustomNodeSequencer.ShouldNotReturnToMapOnEnd(InscryptionAPI.Nodes.CustomSpecialNodeData)
  name: ShouldNotReturnToMapOnEnd(CustomSpecialNodeData)
  href: api/InscryptionAPI.Nodes.CustomNodeSequencer.html#InscryptionAPI_Nodes_CustomNodeSequencer_ShouldNotReturnToMapOnEnd_InscryptionAPI_Nodes_CustomSpecialNodeData_
  commentId: M:InscryptionAPI.Nodes.CustomNodeSequencer.ShouldNotReturnToMapOnEnd(InscryptionAPI.Nodes.CustomSpecialNodeData)
  fullName: InscryptionAPI.Nodes.CustomNodeSequencer.ShouldNotReturnToMapOnEnd(InscryptionAPI.Nodes.CustomSpecialNodeData)
  nameWithType: CustomNodeSequencer.ShouldNotReturnToMapOnEnd(CustomSpecialNodeData)
- uid: InscryptionAPI.Nodes.CustomNodeSequencer.ShouldNotReturnToMapOnEnd*
  name: ShouldNotReturnToMapOnEnd
  href: api/InscryptionAPI.Nodes.CustomNodeSequencer.html#InscryptionAPI_Nodes_CustomNodeSequencer_ShouldNotReturnToMapOnEnd_
  commentId: Overload:InscryptionAPI.Nodes.CustomNodeSequencer.ShouldNotReturnToMapOnEnd
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.CustomNodeSequencer.ShouldNotReturnToMapOnEnd
  nameWithType: CustomNodeSequencer.ShouldNotReturnToMapOnEnd
- uid: InscryptionAPI.Nodes.CustomPreviousNodesContent
  name: CustomPreviousNodesContent
  href: api/InscryptionAPI.Nodes.CustomPreviousNodesContent.html
  commentId: T:InscryptionAPI.Nodes.CustomPreviousNodesContent
  fullName: InscryptionAPI.Nodes.CustomPreviousNodesContent
  nameWithType: CustomPreviousNodesContent
- uid: InscryptionAPI.Nodes.CustomPreviousNodesContent.#ctor(System.String,System.String,System.Boolean)
  name: CustomPreviousNodesContent(String, String, Boolean)
  href: api/InscryptionAPI.Nodes.CustomPreviousNodesContent.html#InscryptionAPI_Nodes_CustomPreviousNodesContent__ctor_System_String_System_String_System_Boolean_
  commentId: M:InscryptionAPI.Nodes.CustomPreviousNodesContent.#ctor(System.String,System.String,System.Boolean)
  fullName: InscryptionAPI.Nodes.CustomPreviousNodesContent.CustomPreviousNodesContent(System.String, System.String, System.Boolean)
  nameWithType: CustomPreviousNodesContent.CustomPreviousNodesContent(String, String, Boolean)
- uid: InscryptionAPI.Nodes.CustomPreviousNodesContent.#ctor*
  name: CustomPreviousNodesContent
  href: api/InscryptionAPI.Nodes.CustomPreviousNodesContent.html#InscryptionAPI_Nodes_CustomPreviousNodesContent__ctor_
  commentId: Overload:InscryptionAPI.Nodes.CustomPreviousNodesContent.#ctor
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.CustomPreviousNodesContent.CustomPreviousNodesContent
  nameWithType: CustomPreviousNodesContent.CustomPreviousNodesContent
- uid: InscryptionAPI.Nodes.CustomPreviousNodesContent.Satisfied(System.Int32,System.Collections.Generic.List{DiskCardGame.NodeData})
  name: Satisfied(Int32, List<NodeData>)
  href: api/InscryptionAPI.Nodes.CustomPreviousNodesContent.html#InscryptionAPI_Nodes_CustomPreviousNodesContent_Satisfied_System_Int32_System_Collections_Generic_List_DiskCardGame_NodeData__
  commentId: M:InscryptionAPI.Nodes.CustomPreviousNodesContent.Satisfied(System.Int32,System.Collections.Generic.List{DiskCardGame.NodeData})
  name.vb: Satisfied(Int32, List(Of NodeData))
  fullName: InscryptionAPI.Nodes.CustomPreviousNodesContent.Satisfied(System.Int32, System.Collections.Generic.List<DiskCardGame.NodeData>)
  fullName.vb: InscryptionAPI.Nodes.CustomPreviousNodesContent.Satisfied(System.Int32, System.Collections.Generic.List(Of DiskCardGame.NodeData))
  nameWithType: CustomPreviousNodesContent.Satisfied(Int32, List<NodeData>)
  nameWithType.vb: CustomPreviousNodesContent.Satisfied(Int32, List(Of NodeData))
- uid: InscryptionAPI.Nodes.CustomPreviousNodesContent.Satisfied*
  name: Satisfied
  href: api/InscryptionAPI.Nodes.CustomPreviousNodesContent.html#InscryptionAPI_Nodes_CustomPreviousNodesContent_Satisfied_
  commentId: Overload:InscryptionAPI.Nodes.CustomPreviousNodesContent.Satisfied
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.CustomPreviousNodesContent.Satisfied
  nameWithType: CustomPreviousNodesContent.Satisfied
- uid: InscryptionAPI.Nodes.CustomPreviousRowContent
  name: CustomPreviousRowContent
  href: api/InscryptionAPI.Nodes.CustomPreviousRowContent.html
  commentId: T:InscryptionAPI.Nodes.CustomPreviousRowContent
  fullName: InscryptionAPI.Nodes.CustomPreviousRowContent
  nameWithType: CustomPreviousRowContent
- uid: InscryptionAPI.Nodes.CustomPreviousRowContent.#ctor(System.String,System.String,System.Boolean)
  name: CustomPreviousRowContent(String, String, Boolean)
  href: api/InscryptionAPI.Nodes.CustomPreviousRowContent.html#InscryptionAPI_Nodes_CustomPreviousRowContent__ctor_System_String_System_String_System_Boolean_
  commentId: M:InscryptionAPI.Nodes.CustomPreviousRowContent.#ctor(System.String,System.String,System.Boolean)
  fullName: InscryptionAPI.Nodes.CustomPreviousRowContent.CustomPreviousRowContent(System.String, System.String, System.Boolean)
  nameWithType: CustomPreviousRowContent.CustomPreviousRowContent(String, String, Boolean)
- uid: InscryptionAPI.Nodes.CustomPreviousRowContent.#ctor*
  name: CustomPreviousRowContent
  href: api/InscryptionAPI.Nodes.CustomPreviousRowContent.html#InscryptionAPI_Nodes_CustomPreviousRowContent__ctor_
  commentId: Overload:InscryptionAPI.Nodes.CustomPreviousRowContent.#ctor
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.CustomPreviousRowContent.CustomPreviousRowContent
  nameWithType: CustomPreviousRowContent.CustomPreviousRowContent
- uid: InscryptionAPI.Nodes.CustomPreviousRowContent.Satisfied(System.Int32,System.Collections.Generic.List{DiskCardGame.NodeData})
  name: Satisfied(Int32, List<NodeData>)
  href: api/InscryptionAPI.Nodes.CustomPreviousRowContent.html#InscryptionAPI_Nodes_CustomPreviousRowContent_Satisfied_System_Int32_System_Collections_Generic_List_DiskCardGame_NodeData__
  commentId: M:InscryptionAPI.Nodes.CustomPreviousRowContent.Satisfied(System.Int32,System.Collections.Generic.List{DiskCardGame.NodeData})
  name.vb: Satisfied(Int32, List(Of NodeData))
  fullName: InscryptionAPI.Nodes.CustomPreviousRowContent.Satisfied(System.Int32, System.Collections.Generic.List<DiskCardGame.NodeData>)
  fullName.vb: InscryptionAPI.Nodes.CustomPreviousRowContent.Satisfied(System.Int32, System.Collections.Generic.List(Of DiskCardGame.NodeData))
  nameWithType: CustomPreviousRowContent.Satisfied(Int32, List<NodeData>)
  nameWithType.vb: CustomPreviousRowContent.Satisfied(Int32, List(Of NodeData))
- uid: InscryptionAPI.Nodes.CustomPreviousRowContent.Satisfied*
  name: Satisfied
  href: api/InscryptionAPI.Nodes.CustomPreviousRowContent.html#InscryptionAPI_Nodes_CustomPreviousRowContent_Satisfied_
  commentId: Overload:InscryptionAPI.Nodes.CustomPreviousRowContent.Satisfied
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.CustomPreviousRowContent.Satisfied
  nameWithType: CustomPreviousRowContent.Satisfied
- uid: InscryptionAPI.Nodes.CustomSpecialNodeData
  name: CustomSpecialNodeData
  href: api/InscryptionAPI.Nodes.CustomSpecialNodeData.html
  commentId: T:InscryptionAPI.Nodes.CustomSpecialNodeData
  fullName: InscryptionAPI.Nodes.CustomSpecialNodeData
  nameWithType: CustomSpecialNodeData
- uid: InscryptionAPI.Nodes.CustomSpecialNodeData.#ctor(InscryptionAPI.Nodes.NewNodeManager.FullNode)
  name: CustomSpecialNodeData(NewNodeManager.FullNode)
  href: api/InscryptionAPI.Nodes.CustomSpecialNodeData.html#InscryptionAPI_Nodes_CustomSpecialNodeData__ctor_InscryptionAPI_Nodes_NewNodeManager_FullNode_
  commentId: M:InscryptionAPI.Nodes.CustomSpecialNodeData.#ctor(InscryptionAPI.Nodes.NewNodeManager.FullNode)
  fullName: InscryptionAPI.Nodes.CustomSpecialNodeData.CustomSpecialNodeData(InscryptionAPI.Nodes.NewNodeManager.FullNode)
  nameWithType: CustomSpecialNodeData.CustomSpecialNodeData(NewNodeManager.FullNode)
- uid: InscryptionAPI.Nodes.CustomSpecialNodeData.#ctor*
  name: CustomSpecialNodeData
  href: api/InscryptionAPI.Nodes.CustomSpecialNodeData.html#InscryptionAPI_Nodes_CustomSpecialNodeData__ctor_
  commentId: Overload:InscryptionAPI.Nodes.CustomSpecialNodeData.#ctor
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.CustomSpecialNodeData.CustomSpecialNodeData
  nameWithType: CustomSpecialNodeData.CustomSpecialNodeData
- uid: InscryptionAPI.Nodes.CustomSpecialNodeData.ForceGenerationConditions
  name: ForceGenerationConditions
  href: api/InscryptionAPI.Nodes.CustomSpecialNodeData.html#InscryptionAPI_Nodes_CustomSpecialNodeData_ForceGenerationConditions
  commentId: P:InscryptionAPI.Nodes.CustomSpecialNodeData.ForceGenerationConditions
  fullName: InscryptionAPI.Nodes.CustomSpecialNodeData.ForceGenerationConditions
  nameWithType: CustomSpecialNodeData.ForceGenerationConditions
- uid: InscryptionAPI.Nodes.CustomSpecialNodeData.ForceGenerationConditions*
  name: ForceGenerationConditions
  href: api/InscryptionAPI.Nodes.CustomSpecialNodeData.html#InscryptionAPI_Nodes_CustomSpecialNodeData_ForceGenerationConditions_
  commentId: Overload:InscryptionAPI.Nodes.CustomSpecialNodeData.ForceGenerationConditions
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.CustomSpecialNodeData.ForceGenerationConditions
  nameWithType: CustomSpecialNodeData.ForceGenerationConditions
- uid: InscryptionAPI.Nodes.CustomSpecialNodeData.GenerationPrerequisiteConditions
  name: GenerationPrerequisiteConditions
  href: api/InscryptionAPI.Nodes.CustomSpecialNodeData.html#InscryptionAPI_Nodes_CustomSpecialNodeData_GenerationPrerequisiteConditions
  commentId: P:InscryptionAPI.Nodes.CustomSpecialNodeData.GenerationPrerequisiteConditions
  fullName: InscryptionAPI.Nodes.CustomSpecialNodeData.GenerationPrerequisiteConditions
  nameWithType: CustomSpecialNodeData.GenerationPrerequisiteConditions
- uid: InscryptionAPI.Nodes.CustomSpecialNodeData.GenerationPrerequisiteConditions*
  name: GenerationPrerequisiteConditions
  href: api/InscryptionAPI.Nodes.CustomSpecialNodeData.html#InscryptionAPI_Nodes_CustomSpecialNodeData_GenerationPrerequisiteConditions_
  commentId: Overload:InscryptionAPI.Nodes.CustomSpecialNodeData.GenerationPrerequisiteConditions
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.CustomSpecialNodeData.GenerationPrerequisiteConditions
  nameWithType: CustomSpecialNodeData.GenerationPrerequisiteConditions
- uid: InscryptionAPI.Nodes.CustomSpecialNodeData.Get(System.String)
  name: Get(String)
  href: api/InscryptionAPI.Nodes.CustomSpecialNodeData.html#InscryptionAPI_Nodes_CustomSpecialNodeData_Get_System_String_
  commentId: M:InscryptionAPI.Nodes.CustomSpecialNodeData.Get(System.String)
  fullName: InscryptionAPI.Nodes.CustomSpecialNodeData.Get(System.String)
  nameWithType: CustomSpecialNodeData.Get(String)
- uid: InscryptionAPI.Nodes.CustomSpecialNodeData.Get*
  name: Get
  href: api/InscryptionAPI.Nodes.CustomSpecialNodeData.html#InscryptionAPI_Nodes_CustomSpecialNodeData_Get_
  commentId: Overload:InscryptionAPI.Nodes.CustomSpecialNodeData.Get
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.CustomSpecialNodeData.Get
  nameWithType: CustomSpecialNodeData.Get
- uid: InscryptionAPI.Nodes.CustomSpecialNodeData.Get``1(System.String)
  name: Get<T>(String)
  href: api/InscryptionAPI.Nodes.CustomSpecialNodeData.html#InscryptionAPI_Nodes_CustomSpecialNodeData_Get__1_System_String_
  commentId: M:InscryptionAPI.Nodes.CustomSpecialNodeData.Get``1(System.String)
  name.vb: Get(Of T)(String)
  fullName: InscryptionAPI.Nodes.CustomSpecialNodeData.Get<T>(System.String)
  fullName.vb: InscryptionAPI.Nodes.CustomSpecialNodeData.Get(Of T)(System.String)
  nameWithType: CustomSpecialNodeData.Get<T>(String)
  nameWithType.vb: CustomSpecialNodeData.Get(Of T)(String)
- uid: InscryptionAPI.Nodes.CustomSpecialNodeData.guid
  name: guid
  href: api/InscryptionAPI.Nodes.CustomSpecialNodeData.html#InscryptionAPI_Nodes_CustomSpecialNodeData_guid
  commentId: F:InscryptionAPI.Nodes.CustomSpecialNodeData.guid
  fullName: InscryptionAPI.Nodes.CustomSpecialNodeData.guid
  nameWithType: CustomSpecialNodeData.guid
- uid: InscryptionAPI.Nodes.CustomSpecialNodeData.name
  name: name
  href: api/InscryptionAPI.Nodes.CustomSpecialNodeData.html#InscryptionAPI_Nodes_CustomSpecialNodeData_name
  commentId: F:InscryptionAPI.Nodes.CustomSpecialNodeData.name
  fullName: InscryptionAPI.Nodes.CustomSpecialNodeData.name
  nameWithType: CustomSpecialNodeData.name
- uid: InscryptionAPI.Nodes.CustomSpecialNodeData.Node
  name: Node
  href: api/InscryptionAPI.Nodes.CustomSpecialNodeData.html#InscryptionAPI_Nodes_CustomSpecialNodeData_Node
  commentId: P:InscryptionAPI.Nodes.CustomSpecialNodeData.Node
  fullName: InscryptionAPI.Nodes.CustomSpecialNodeData.Node
  nameWithType: CustomSpecialNodeData.Node
- uid: InscryptionAPI.Nodes.CustomSpecialNodeData.Node*
  name: Node
  href: api/InscryptionAPI.Nodes.CustomSpecialNodeData.html#InscryptionAPI_Nodes_CustomSpecialNodeData_Node_
  commentId: Overload:InscryptionAPI.Nodes.CustomSpecialNodeData.Node
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.CustomSpecialNodeData.Node
  nameWithType: CustomSpecialNodeData.Node
- uid: InscryptionAPI.Nodes.CustomSpecialNodeData.PrefabPath
  name: PrefabPath
  href: api/InscryptionAPI.Nodes.CustomSpecialNodeData.html#InscryptionAPI_Nodes_CustomSpecialNodeData_PrefabPath
  commentId: P:InscryptionAPI.Nodes.CustomSpecialNodeData.PrefabPath
  fullName: InscryptionAPI.Nodes.CustomSpecialNodeData.PrefabPath
  nameWithType: CustomSpecialNodeData.PrefabPath
- uid: InscryptionAPI.Nodes.CustomSpecialNodeData.PrefabPath*
  name: PrefabPath
  href: api/InscryptionAPI.Nodes.CustomSpecialNodeData.html#InscryptionAPI_Nodes_CustomSpecialNodeData_PrefabPath_
  commentId: Overload:InscryptionAPI.Nodes.CustomSpecialNodeData.PrefabPath
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.CustomSpecialNodeData.PrefabPath
  nameWithType: CustomSpecialNodeData.PrefabPath
- uid: InscryptionAPI.Nodes.CustomSpecialNodeData.Set(System.String,System.Object)
  name: Set(String, Object)
  href: api/InscryptionAPI.Nodes.CustomSpecialNodeData.html#InscryptionAPI_Nodes_CustomSpecialNodeData_Set_System_String_System_Object_
  commentId: M:InscryptionAPI.Nodes.CustomSpecialNodeData.Set(System.String,System.Object)
  fullName: InscryptionAPI.Nodes.CustomSpecialNodeData.Set(System.String, System.Object)
  nameWithType: CustomSpecialNodeData.Set(String, Object)
- uid: InscryptionAPI.Nodes.CustomSpecialNodeData.Set*
  name: Set
  href: api/InscryptionAPI.Nodes.CustomSpecialNodeData.html#InscryptionAPI_Nodes_CustomSpecialNodeData_Set_
  commentId: Overload:InscryptionAPI.Nodes.CustomSpecialNodeData.Set
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.CustomSpecialNodeData.Set
  nameWithType: CustomSpecialNodeData.Set
- uid: InscryptionAPI.Nodes.EasyAccess
  name: EasyAccess
  href: api/InscryptionAPI.Nodes.EasyAccess.html
  commentId: T:InscryptionAPI.Nodes.EasyAccess
  fullName: InscryptionAPI.Nodes.EasyAccess
  nameWithType: EasyAccess
- uid: InscryptionAPI.Nodes.EasyAccess.BoulderChoice
  name: BoulderChoice
  href: api/InscryptionAPI.Nodes.EasyAccess.html#InscryptionAPI_Nodes_EasyAccess_BoulderChoice
  commentId: P:InscryptionAPI.Nodes.EasyAccess.BoulderChoice
  fullName: InscryptionAPI.Nodes.EasyAccess.BoulderChoice
  nameWithType: EasyAccess.BoulderChoice
- uid: InscryptionAPI.Nodes.EasyAccess.BoulderChoice*
  name: BoulderChoice
  href: api/InscryptionAPI.Nodes.EasyAccess.html#InscryptionAPI_Nodes_EasyAccess_BoulderChoice_
  commentId: Overload:InscryptionAPI.Nodes.EasyAccess.BoulderChoice
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.EasyAccess.BoulderChoice
  nameWithType: EasyAccess.BoulderChoice
- uid: InscryptionAPI.Nodes.EasyAccess.BuildTotem
  name: BuildTotem
  href: api/InscryptionAPI.Nodes.EasyAccess.html#InscryptionAPI_Nodes_EasyAccess_BuildTotem
  commentId: P:InscryptionAPI.Nodes.EasyAccess.BuildTotem
  fullName: InscryptionAPI.Nodes.EasyAccess.BuildTotem
  nameWithType: EasyAccess.BuildTotem
- uid: InscryptionAPI.Nodes.EasyAccess.BuildTotem*
  name: BuildTotem
  href: api/InscryptionAPI.Nodes.EasyAccess.html#InscryptionAPI_Nodes_EasyAccess_BuildTotem_
  commentId: Overload:InscryptionAPI.Nodes.EasyAccess.BuildTotem
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.EasyAccess.BuildTotem
  nameWithType: EasyAccess.BuildTotem
- uid: InscryptionAPI.Nodes.EasyAccess.BuyPelts
  name: BuyPelts
  href: api/InscryptionAPI.Nodes.EasyAccess.html#InscryptionAPI_Nodes_EasyAccess_BuyPelts
  commentId: P:InscryptionAPI.Nodes.EasyAccess.BuyPelts
  fullName: InscryptionAPI.Nodes.EasyAccess.BuyPelts
  nameWithType: EasyAccess.BuyPelts
- uid: InscryptionAPI.Nodes.EasyAccess.BuyPelts*
  name: BuyPelts
  href: api/InscryptionAPI.Nodes.EasyAccess.html#InscryptionAPI_Nodes_EasyAccess_BuyPelts_
  commentId: Overload:InscryptionAPI.Nodes.EasyAccess.BuyPelts
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.EasyAccess.BuyPelts
  nameWithType: EasyAccess.BuyPelts
- uid: InscryptionAPI.Nodes.EasyAccess.CardMerge
  name: CardMerge
  href: api/InscryptionAPI.Nodes.EasyAccess.html#InscryptionAPI_Nodes_EasyAccess_CardMerge
  commentId: P:InscryptionAPI.Nodes.EasyAccess.CardMerge
  fullName: InscryptionAPI.Nodes.EasyAccess.CardMerge
  nameWithType: EasyAccess.CardMerge
- uid: InscryptionAPI.Nodes.EasyAccess.CardMerge*
  name: CardMerge
  href: api/InscryptionAPI.Nodes.EasyAccess.html#InscryptionAPI_Nodes_EasyAccess_CardMerge_
  commentId: Overload:InscryptionAPI.Nodes.EasyAccess.CardMerge
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.EasyAccess.CardMerge
  nameWithType: EasyAccess.CardMerge
- uid: InscryptionAPI.Nodes.EasyAccess.CardRemove
  name: CardRemove
  href: api/InscryptionAPI.Nodes.EasyAccess.html#InscryptionAPI_Nodes_EasyAccess_CardRemove
  commentId: P:InscryptionAPI.Nodes.EasyAccess.CardRemove
  fullName: InscryptionAPI.Nodes.EasyAccess.CardRemove
  nameWithType: EasyAccess.CardRemove
- uid: InscryptionAPI.Nodes.EasyAccess.CardRemove*
  name: CardRemove
  href: api/InscryptionAPI.Nodes.EasyAccess.html#InscryptionAPI_Nodes_EasyAccess_CardRemove_
  commentId: Overload:InscryptionAPI.Nodes.EasyAccess.CardRemove
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.EasyAccess.CardRemove
  nameWithType: EasyAccess.CardRemove
- uid: InscryptionAPI.Nodes.EasyAccess.CardSingleChoices
  name: CardSingleChoices
  href: api/InscryptionAPI.Nodes.EasyAccess.html#InscryptionAPI_Nodes_EasyAccess_CardSingleChoices
  commentId: P:InscryptionAPI.Nodes.EasyAccess.CardSingleChoices
  fullName: InscryptionAPI.Nodes.EasyAccess.CardSingleChoices
  nameWithType: EasyAccess.CardSingleChoices
- uid: InscryptionAPI.Nodes.EasyAccess.CardSingleChoices*
  name: CardSingleChoices
  href: api/InscryptionAPI.Nodes.EasyAccess.html#InscryptionAPI_Nodes_EasyAccess_CardSingleChoices_
  commentId: Overload:InscryptionAPI.Nodes.EasyAccess.CardSingleChoices
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.EasyAccess.CardSingleChoices
  nameWithType: EasyAccess.CardSingleChoices
- uid: InscryptionAPI.Nodes.EasyAccess.CardStatBoost
  name: CardStatBoost
  href: api/InscryptionAPI.Nodes.EasyAccess.html#InscryptionAPI_Nodes_EasyAccess_CardStatBoost
  commentId: P:InscryptionAPI.Nodes.EasyAccess.CardStatBoost
  fullName: InscryptionAPI.Nodes.EasyAccess.CardStatBoost
  nameWithType: EasyAccess.CardStatBoost
- uid: InscryptionAPI.Nodes.EasyAccess.CardStatBoost*
  name: CardStatBoost
  href: api/InscryptionAPI.Nodes.EasyAccess.html#InscryptionAPI_Nodes_EasyAccess_CardStatBoost_
  commentId: Overload:InscryptionAPI.Nodes.EasyAccess.CardStatBoost
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.EasyAccess.CardStatBoost
  nameWithType: EasyAccess.CardStatBoost
- uid: InscryptionAPI.Nodes.EasyAccess.ChooseEyeball
  name: ChooseEyeball
  href: api/InscryptionAPI.Nodes.EasyAccess.html#InscryptionAPI_Nodes_EasyAccess_ChooseEyeball
  commentId: P:InscryptionAPI.Nodes.EasyAccess.ChooseEyeball
  fullName: InscryptionAPI.Nodes.EasyAccess.ChooseEyeball
  nameWithType: EasyAccess.ChooseEyeball
- uid: InscryptionAPI.Nodes.EasyAccess.ChooseEyeball*
  name: ChooseEyeball
  href: api/InscryptionAPI.Nodes.EasyAccess.html#InscryptionAPI_Nodes_EasyAccess_ChooseEyeball_
  commentId: Overload:InscryptionAPI.Nodes.EasyAccess.ChooseEyeball
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.EasyAccess.ChooseEyeball
  nameWithType: EasyAccess.ChooseEyeball
- uid: InscryptionAPI.Nodes.EasyAccess.CopyCard
  name: CopyCard
  href: api/InscryptionAPI.Nodes.EasyAccess.html#InscryptionAPI_Nodes_EasyAccess_CopyCard
  commentId: P:InscryptionAPI.Nodes.EasyAccess.CopyCard
  fullName: InscryptionAPI.Nodes.EasyAccess.CopyCard
  nameWithType: EasyAccess.CopyCard
- uid: InscryptionAPI.Nodes.EasyAccess.CopyCard*
  name: CopyCard
  href: api/InscryptionAPI.Nodes.EasyAccess.html#InscryptionAPI_Nodes_EasyAccess_CopyCard_
  commentId: Overload:InscryptionAPI.Nodes.EasyAccess.CopyCard
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.EasyAccess.CopyCard
  nameWithType: EasyAccess.CopyCard
- uid: InscryptionAPI.Nodes.EasyAccess.DeckTrial
  name: DeckTrial
  href: api/InscryptionAPI.Nodes.EasyAccess.html#InscryptionAPI_Nodes_EasyAccess_DeckTrial
  commentId: P:InscryptionAPI.Nodes.EasyAccess.DeckTrial
  fullName: InscryptionAPI.Nodes.EasyAccess.DeckTrial
  nameWithType: EasyAccess.DeckTrial
- uid: InscryptionAPI.Nodes.EasyAccess.DeckTrial*
  name: DeckTrial
  href: api/InscryptionAPI.Nodes.EasyAccess.html#InscryptionAPI_Nodes_EasyAccess_DeckTrial_
  commentId: Overload:InscryptionAPI.Nodes.EasyAccess.DeckTrial
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.EasyAccess.DeckTrial
  nameWithType: EasyAccess.DeckTrial
- uid: InscryptionAPI.Nodes.EasyAccess.DuplicateMerge
  name: DuplicateMerge
  href: api/InscryptionAPI.Nodes.EasyAccess.html#InscryptionAPI_Nodes_EasyAccess_DuplicateMerge
  commentId: P:InscryptionAPI.Nodes.EasyAccess.DuplicateMerge
  fullName: InscryptionAPI.Nodes.EasyAccess.DuplicateMerge
  nameWithType: EasyAccess.DuplicateMerge
- uid: InscryptionAPI.Nodes.EasyAccess.DuplicateMerge*
  name: DuplicateMerge
  href: api/InscryptionAPI.Nodes.EasyAccess.html#InscryptionAPI_Nodes_EasyAccess_DuplicateMerge_
  commentId: Overload:InscryptionAPI.Nodes.EasyAccess.DuplicateMerge
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.EasyAccess.DuplicateMerge
  nameWithType: EasyAccess.DuplicateMerge
- uid: InscryptionAPI.Nodes.EasyAccess.GainConsumables
  name: GainConsumables
  href: api/InscryptionAPI.Nodes.EasyAccess.html#InscryptionAPI_Nodes_EasyAccess_GainConsumables
  commentId: P:InscryptionAPI.Nodes.EasyAccess.GainConsumables
  fullName: InscryptionAPI.Nodes.EasyAccess.GainConsumables
  nameWithType: EasyAccess.GainConsumables
- uid: InscryptionAPI.Nodes.EasyAccess.GainConsumables*
  name: GainConsumables
  href: api/InscryptionAPI.Nodes.EasyAccess.html#InscryptionAPI_Nodes_EasyAccess_GainConsumables_
  commentId: Overload:InscryptionAPI.Nodes.EasyAccess.GainConsumables
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.EasyAccess.GainConsumables
  nameWithType: EasyAccess.GainConsumables
- uid: InscryptionAPI.Nodes.EasyAccess.NodeHandler
  name: NodeHandler
  href: api/InscryptionAPI.Nodes.EasyAccess.html#InscryptionAPI_Nodes_EasyAccess_NodeHandler
  commentId: P:InscryptionAPI.Nodes.EasyAccess.NodeHandler
  fullName: InscryptionAPI.Nodes.EasyAccess.NodeHandler
  nameWithType: EasyAccess.NodeHandler
- uid: InscryptionAPI.Nodes.EasyAccess.NodeHandler*
  name: NodeHandler
  href: api/InscryptionAPI.Nodes.EasyAccess.html#InscryptionAPI_Nodes_EasyAccess_NodeHandler_
  commentId: Overload:InscryptionAPI.Nodes.EasyAccess.NodeHandler
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.EasyAccess.NodeHandler
  nameWithType: EasyAccess.NodeHandler
- uid: InscryptionAPI.Nodes.EasyAccess.RareCardChoices
  name: RareCardChoices
  href: api/InscryptionAPI.Nodes.EasyAccess.html#InscryptionAPI_Nodes_EasyAccess_RareCardChoices
  commentId: P:InscryptionAPI.Nodes.EasyAccess.RareCardChoices
  fullName: InscryptionAPI.Nodes.EasyAccess.RareCardChoices
  nameWithType: EasyAccess.RareCardChoices
- uid: InscryptionAPI.Nodes.EasyAccess.RareCardChoices*
  name: RareCardChoices
  href: api/InscryptionAPI.Nodes.EasyAccess.html#InscryptionAPI_Nodes_EasyAccess_RareCardChoices_
  commentId: Overload:InscryptionAPI.Nodes.EasyAccess.RareCardChoices
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.EasyAccess.RareCardChoices
  nameWithType: EasyAccess.RareCardChoices
- uid: InscryptionAPI.Nodes.EasyAccess.TradePelts
  name: TradePelts
  href: api/InscryptionAPI.Nodes.EasyAccess.html#InscryptionAPI_Nodes_EasyAccess_TradePelts
  commentId: P:InscryptionAPI.Nodes.EasyAccess.TradePelts
  fullName: InscryptionAPI.Nodes.EasyAccess.TradePelts
  nameWithType: EasyAccess.TradePelts
- uid: InscryptionAPI.Nodes.EasyAccess.TradePelts*
  name: TradePelts
  href: api/InscryptionAPI.Nodes.EasyAccess.html#InscryptionAPI_Nodes_EasyAccess_TradePelts_
  commentId: Overload:InscryptionAPI.Nodes.EasyAccess.TradePelts
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.EasyAccess.TradePelts
  nameWithType: EasyAccess.TradePelts
- uid: InscryptionAPI.Nodes.EasyAccess.VictoryFeast
  name: VictoryFeast
  href: api/InscryptionAPI.Nodes.EasyAccess.html#InscryptionAPI_Nodes_EasyAccess_VictoryFeast
  commentId: P:InscryptionAPI.Nodes.EasyAccess.VictoryFeast
  fullName: InscryptionAPI.Nodes.EasyAccess.VictoryFeast
  nameWithType: EasyAccess.VictoryFeast
- uid: InscryptionAPI.Nodes.EasyAccess.VictoryFeast*
  name: VictoryFeast
  href: api/InscryptionAPI.Nodes.EasyAccess.html#InscryptionAPI_Nodes_EasyAccess_VictoryFeast_
  commentId: Overload:InscryptionAPI.Nodes.EasyAccess.VictoryFeast
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.EasyAccess.VictoryFeast
  nameWithType: EasyAccess.VictoryFeast
- uid: InscryptionAPI.Nodes.False
  name: "False"
  href: api/InscryptionAPI.Nodes.False.html
  commentId: T:InscryptionAPI.Nodes.False
  fullName: InscryptionAPI.Nodes.False
  nameWithType: "False"
- uid: InscryptionAPI.Nodes.False.Satisfied(System.Int32,System.Collections.Generic.List{DiskCardGame.NodeData})
  name: Satisfied(Int32, List<NodeData>)
  href: api/InscryptionAPI.Nodes.False.html#InscryptionAPI_Nodes_False_Satisfied_System_Int32_System_Collections_Generic_List_DiskCardGame_NodeData__
  commentId: M:InscryptionAPI.Nodes.False.Satisfied(System.Int32,System.Collections.Generic.List{DiskCardGame.NodeData})
  name.vb: Satisfied(Int32, List(Of NodeData))
  fullName: InscryptionAPI.Nodes.False.Satisfied(System.Int32, System.Collections.Generic.List<DiskCardGame.NodeData>)
  fullName.vb: InscryptionAPI.Nodes.False.Satisfied(System.Int32, System.Collections.Generic.List(Of DiskCardGame.NodeData))
  nameWithType: False.Satisfied(Int32, List<NodeData>)
  nameWithType.vb: False.Satisfied(Int32, List(Of NodeData))
- uid: InscryptionAPI.Nodes.False.Satisfied*
  name: Satisfied
  href: api/InscryptionAPI.Nodes.False.html#InscryptionAPI_Nodes_False_Satisfied_
  commentId: Overload:InscryptionAPI.Nodes.False.Satisfied
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.False.Satisfied
  nameWithType: False.Satisfied
- uid: InscryptionAPI.Nodes.Func
  name: Func
  href: api/InscryptionAPI.Nodes.Func.html
  commentId: T:InscryptionAPI.Nodes.Func
  fullName: InscryptionAPI.Nodes.Func
  nameWithType: Func
- uid: InscryptionAPI.Nodes.Func.#ctor(System.Func{System.Int32,System.Collections.Generic.List{DiskCardGame.NodeData},System.Boolean})
  name: Func(Func<Int32, List<NodeData>, Boolean>)
  href: api/InscryptionAPI.Nodes.Func.html#InscryptionAPI_Nodes_Func__ctor_System_Func_System_Int32_System_Collections_Generic_List_DiskCardGame_NodeData__System_Boolean__
  commentId: M:InscryptionAPI.Nodes.Func.#ctor(System.Func{System.Int32,System.Collections.Generic.List{DiskCardGame.NodeData},System.Boolean})
  name.vb: Func(Func(Of Int32, List(Of NodeData), Boolean))
  fullName: InscryptionAPI.Nodes.Func.Func(System.Func<System.Int32, System.Collections.Generic.List<DiskCardGame.NodeData>, System.Boolean>)
  fullName.vb: InscryptionAPI.Nodes.Func.Func(System.Func(Of System.Int32, System.Collections.Generic.List(Of DiskCardGame.NodeData), System.Boolean))
  nameWithType: Func.Func(Func<Int32, List<NodeData>, Boolean>)
  nameWithType.vb: Func.Func(Func(Of Int32, List(Of NodeData), Boolean))
- uid: InscryptionAPI.Nodes.Func.#ctor*
  name: Func
  href: api/InscryptionAPI.Nodes.Func.html#InscryptionAPI_Nodes_Func__ctor_
  commentId: Overload:InscryptionAPI.Nodes.Func.#ctor
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.Func.Func
  nameWithType: Func.Func
- uid: InscryptionAPI.Nodes.Func.Satisfied(System.Int32,System.Collections.Generic.List{DiskCardGame.NodeData})
  name: Satisfied(Int32, List<NodeData>)
  href: api/InscryptionAPI.Nodes.Func.html#InscryptionAPI_Nodes_Func_Satisfied_System_Int32_System_Collections_Generic_List_DiskCardGame_NodeData__
  commentId: M:InscryptionAPI.Nodes.Func.Satisfied(System.Int32,System.Collections.Generic.List{DiskCardGame.NodeData})
  name.vb: Satisfied(Int32, List(Of NodeData))
  fullName: InscryptionAPI.Nodes.Func.Satisfied(System.Int32, System.Collections.Generic.List<DiskCardGame.NodeData>)
  fullName.vb: InscryptionAPI.Nodes.Func.Satisfied(System.Int32, System.Collections.Generic.List(Of DiskCardGame.NodeData))
  nameWithType: Func.Satisfied(Int32, List<NodeData>)
  nameWithType.vb: Func.Satisfied(Int32, List(Of NodeData))
- uid: InscryptionAPI.Nodes.Func.Satisfied*
  name: Satisfied
  href: api/InscryptionAPI.Nodes.Func.html#InscryptionAPI_Nodes_Func_Satisfied_
  commentId: Overload:InscryptionAPI.Nodes.Func.Satisfied
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.Func.Satisfied
  nameWithType: Func.Satisfied
- uid: InscryptionAPI.Nodes.GenerationType
  name: GenerationType
  href: api/InscryptionAPI.Nodes.GenerationType.html
  commentId: T:InscryptionAPI.Nodes.GenerationType
  fullName: InscryptionAPI.Nodes.GenerationType
  nameWithType: GenerationType
- uid: InscryptionAPI.Nodes.GenerationType.None
  name: None
  href: api/InscryptionAPI.Nodes.GenerationType.html#InscryptionAPI_Nodes_GenerationType_None
  commentId: F:InscryptionAPI.Nodes.GenerationType.None
  fullName: InscryptionAPI.Nodes.GenerationType.None
  nameWithType: GenerationType.None
- uid: InscryptionAPI.Nodes.GenerationType.PostBoss
  name: PostBoss
  href: api/InscryptionAPI.Nodes.GenerationType.html#InscryptionAPI_Nodes_GenerationType_PostBoss
  commentId: F:InscryptionAPI.Nodes.GenerationType.PostBoss
  fullName: InscryptionAPI.Nodes.GenerationType.PostBoss
  nameWithType: GenerationType.PostBoss
- uid: InscryptionAPI.Nodes.GenerationType.PreBoss
  name: PreBoss
  href: api/InscryptionAPI.Nodes.GenerationType.html#InscryptionAPI_Nodes_GenerationType_PreBoss
  commentId: F:InscryptionAPI.Nodes.GenerationType.PreBoss
  fullName: InscryptionAPI.Nodes.GenerationType.PreBoss
  nameWithType: GenerationType.PreBoss
- uid: InscryptionAPI.Nodes.GenerationType.RegionStart
  name: RegionStart
  href: api/InscryptionAPI.Nodes.GenerationType.html#InscryptionAPI_Nodes_GenerationType_RegionStart
  commentId: F:InscryptionAPI.Nodes.GenerationType.RegionStart
  fullName: InscryptionAPI.Nodes.GenerationType.RegionStart
  nameWithType: GenerationType.RegionStart
- uid: InscryptionAPI.Nodes.GenerationType.SpecialCardChoice
  name: SpecialCardChoice
  href: api/InscryptionAPI.Nodes.GenerationType.html#InscryptionAPI_Nodes_GenerationType_SpecialCardChoice
  commentId: F:InscryptionAPI.Nodes.GenerationType.SpecialCardChoice
  fullName: InscryptionAPI.Nodes.GenerationType.SpecialCardChoice
  nameWithType: GenerationType.SpecialCardChoice
- uid: InscryptionAPI.Nodes.GenerationType.SpecialEvent
  name: SpecialEvent
  href: api/InscryptionAPI.Nodes.GenerationType.html#InscryptionAPI_Nodes_GenerationType_SpecialEvent
  commentId: F:InscryptionAPI.Nodes.GenerationType.SpecialEvent
  fullName: InscryptionAPI.Nodes.GenerationType.SpecialEvent
  nameWithType: GenerationType.SpecialEvent
- uid: InscryptionAPI.Nodes.ICustomNodeSequencer
  name: ICustomNodeSequencer
  href: api/InscryptionAPI.Nodes.ICustomNodeSequencer.html
  commentId: T:InscryptionAPI.Nodes.ICustomNodeSequencer
  fullName: InscryptionAPI.Nodes.ICustomNodeSequencer
  nameWithType: ICustomNodeSequencer
- uid: InscryptionAPI.Nodes.ICustomNodeSequencer.DoCustomSequence(InscryptionAPI.Nodes.CustomSpecialNodeData)
  name: DoCustomSequence(CustomSpecialNodeData)
  href: api/InscryptionAPI.Nodes.ICustomNodeSequencer.html#InscryptionAPI_Nodes_ICustomNodeSequencer_DoCustomSequence_InscryptionAPI_Nodes_CustomSpecialNodeData_
  commentId: M:InscryptionAPI.Nodes.ICustomNodeSequencer.DoCustomSequence(InscryptionAPI.Nodes.CustomSpecialNodeData)
  fullName: InscryptionAPI.Nodes.ICustomNodeSequencer.DoCustomSequence(InscryptionAPI.Nodes.CustomSpecialNodeData)
  nameWithType: ICustomNodeSequencer.DoCustomSequence(CustomSpecialNodeData)
- uid: InscryptionAPI.Nodes.ICustomNodeSequencer.DoCustomSequence*
  name: DoCustomSequence
  href: api/InscryptionAPI.Nodes.ICustomNodeSequencer.html#InscryptionAPI_Nodes_ICustomNodeSequencer_DoCustomSequence_
  commentId: Overload:InscryptionAPI.Nodes.ICustomNodeSequencer.DoCustomSequence
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.ICustomNodeSequencer.DoCustomSequence
  nameWithType: ICustomNodeSequencer.DoCustomSequence
- uid: InscryptionAPI.Nodes.IDestroyOnEnd
  name: IDestroyOnEnd
  href: api/InscryptionAPI.Nodes.IDestroyOnEnd.html
  commentId: T:InscryptionAPI.Nodes.IDestroyOnEnd
  fullName: InscryptionAPI.Nodes.IDestroyOnEnd
  nameWithType: IDestroyOnEnd
- uid: InscryptionAPI.Nodes.IDestroyOnEnd.ShouldDestroyOnEnd(InscryptionAPI.Nodes.CustomSpecialNodeData)
  name: ShouldDestroyOnEnd(CustomSpecialNodeData)
  href: api/InscryptionAPI.Nodes.IDestroyOnEnd.html#InscryptionAPI_Nodes_IDestroyOnEnd_ShouldDestroyOnEnd_InscryptionAPI_Nodes_CustomSpecialNodeData_
  commentId: M:InscryptionAPI.Nodes.IDestroyOnEnd.ShouldDestroyOnEnd(InscryptionAPI.Nodes.CustomSpecialNodeData)
  fullName: InscryptionAPI.Nodes.IDestroyOnEnd.ShouldDestroyOnEnd(InscryptionAPI.Nodes.CustomSpecialNodeData)
  nameWithType: IDestroyOnEnd.ShouldDestroyOnEnd(CustomSpecialNodeData)
- uid: InscryptionAPI.Nodes.IDestroyOnEnd.ShouldDestroyOnEnd*
  name: ShouldDestroyOnEnd
  href: api/InscryptionAPI.Nodes.IDestroyOnEnd.html#InscryptionAPI_Nodes_IDestroyOnEnd_ShouldDestroyOnEnd_
  commentId: Overload:InscryptionAPI.Nodes.IDestroyOnEnd.ShouldDestroyOnEnd
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.IDestroyOnEnd.ShouldDestroyOnEnd
  nameWithType: IDestroyOnEnd.ShouldDestroyOnEnd
- uid: InscryptionAPI.Nodes.IDoNotReturnToMapOnEnd
  name: IDoNotReturnToMapOnEnd
  href: api/InscryptionAPI.Nodes.IDoNotReturnToMapOnEnd.html
  commentId: T:InscryptionAPI.Nodes.IDoNotReturnToMapOnEnd
  fullName: InscryptionAPI.Nodes.IDoNotReturnToMapOnEnd
  nameWithType: IDoNotReturnToMapOnEnd
- uid: InscryptionAPI.Nodes.IDoNotReturnToMapOnEnd.ShouldNotReturnToMapOnEnd(InscryptionAPI.Nodes.CustomSpecialNodeData)
  name: ShouldNotReturnToMapOnEnd(CustomSpecialNodeData)
  href: api/InscryptionAPI.Nodes.IDoNotReturnToMapOnEnd.html#InscryptionAPI_Nodes_IDoNotReturnToMapOnEnd_ShouldNotReturnToMapOnEnd_InscryptionAPI_Nodes_CustomSpecialNodeData_
  commentId: M:InscryptionAPI.Nodes.IDoNotReturnToMapOnEnd.ShouldNotReturnToMapOnEnd(InscryptionAPI.Nodes.CustomSpecialNodeData)
  fullName: InscryptionAPI.Nodes.IDoNotReturnToMapOnEnd.ShouldNotReturnToMapOnEnd(InscryptionAPI.Nodes.CustomSpecialNodeData)
  nameWithType: IDoNotReturnToMapOnEnd.ShouldNotReturnToMapOnEnd(CustomSpecialNodeData)
- uid: InscryptionAPI.Nodes.IDoNotReturnToMapOnEnd.ShouldNotReturnToMapOnEnd*
  name: ShouldNotReturnToMapOnEnd
  href: api/InscryptionAPI.Nodes.IDoNotReturnToMapOnEnd.html#InscryptionAPI_Nodes_IDoNotReturnToMapOnEnd_ShouldNotReturnToMapOnEnd_
  commentId: Overload:InscryptionAPI.Nodes.IDoNotReturnToMapOnEnd.ShouldNotReturnToMapOnEnd
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.IDoNotReturnToMapOnEnd.ShouldNotReturnToMapOnEnd
  nameWithType: IDoNotReturnToMapOnEnd.ShouldNotReturnToMapOnEnd
- uid: InscryptionAPI.Nodes.IInherit
  name: IInherit
  href: api/InscryptionAPI.Nodes.IInherit.html
  commentId: T:InscryptionAPI.Nodes.IInherit
  fullName: InscryptionAPI.Nodes.IInherit
  nameWithType: IInherit
- uid: InscryptionAPI.Nodes.IInherit.Inherit(InscryptionAPI.Nodes.CustomSpecialNodeData)
  name: Inherit(CustomSpecialNodeData)
  href: api/InscryptionAPI.Nodes.IInherit.html#InscryptionAPI_Nodes_IInherit_Inherit_InscryptionAPI_Nodes_CustomSpecialNodeData_
  commentId: M:InscryptionAPI.Nodes.IInherit.Inherit(InscryptionAPI.Nodes.CustomSpecialNodeData)
  fullName: InscryptionAPI.Nodes.IInherit.Inherit(InscryptionAPI.Nodes.CustomSpecialNodeData)
  nameWithType: IInherit.Inherit(CustomSpecialNodeData)
- uid: InscryptionAPI.Nodes.IInherit.Inherit*
  name: Inherit
  href: api/InscryptionAPI.Nodes.IInherit.html#InscryptionAPI_Nodes_IInherit_Inherit_
  commentId: Overload:InscryptionAPI.Nodes.IInherit.Inherit
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.IInherit.Inherit
  nameWithType: IInherit.Inherit
- uid: InscryptionAPI.Nodes.NewNodeManager
  name: NewNodeManager
  href: api/InscryptionAPI.Nodes.NewNodeManager.html
  commentId: T:InscryptionAPI.Nodes.NewNodeManager
  fullName: InscryptionAPI.Nodes.NewNodeManager
  nameWithType: NewNodeManager
- uid: InscryptionAPI.Nodes.NewNodeManager.FullNode
  name: NewNodeManager.FullNode
  href: api/InscryptionAPI.Nodes.NewNodeManager.FullNode.html
  commentId: T:InscryptionAPI.Nodes.NewNodeManager.FullNode
  fullName: InscryptionAPI.Nodes.NewNodeManager.FullNode
  nameWithType: NewNodeManager.FullNode
- uid: InscryptionAPI.Nodes.NewNodeManager.FullNode.forceGenerationConditions
  name: forceGenerationConditions
  href: api/InscryptionAPI.Nodes.NewNodeManager.FullNode.html#InscryptionAPI_Nodes_NewNodeManager_FullNode_forceGenerationConditions
  commentId: F:InscryptionAPI.Nodes.NewNodeManager.FullNode.forceGenerationConditions
  fullName: InscryptionAPI.Nodes.NewNodeManager.FullNode.forceGenerationConditions
  nameWithType: NewNodeManager.FullNode.forceGenerationConditions
- uid: InscryptionAPI.Nodes.NewNodeManager.FullNode.generationPrerequisites
  name: generationPrerequisites
  href: api/InscryptionAPI.Nodes.NewNodeManager.FullNode.html#InscryptionAPI_Nodes_NewNodeManager_FullNode_generationPrerequisites
  commentId: F:InscryptionAPI.Nodes.NewNodeManager.FullNode.generationPrerequisites
  fullName: InscryptionAPI.Nodes.NewNodeManager.FullNode.generationPrerequisites
  nameWithType: NewNodeManager.FullNode.generationPrerequisites
- uid: InscryptionAPI.Nodes.NewNodeManager.FullNode.generationType
  name: generationType
  href: api/InscryptionAPI.Nodes.NewNodeManager.FullNode.html#InscryptionAPI_Nodes_NewNodeManager_FullNode_generationType
  commentId: F:InscryptionAPI.Nodes.NewNodeManager.FullNode.generationType
  fullName: InscryptionAPI.Nodes.NewNodeManager.FullNode.generationType
  nameWithType: NewNodeManager.FullNode.generationType
- uid: InscryptionAPI.Nodes.NewNodeManager.FullNode.GetSequencerType
  name: GetSequencerType()
  href: api/InscryptionAPI.Nodes.NewNodeManager.FullNode.html#InscryptionAPI_Nodes_NewNodeManager_FullNode_GetSequencerType
  commentId: M:InscryptionAPI.Nodes.NewNodeManager.FullNode.GetSequencerType
  fullName: InscryptionAPI.Nodes.NewNodeManager.FullNode.GetSequencerType()
  nameWithType: NewNodeManager.FullNode.GetSequencerType()
- uid: InscryptionAPI.Nodes.NewNodeManager.FullNode.GetSequencerType*
  name: GetSequencerType
  href: api/InscryptionAPI.Nodes.NewNodeManager.FullNode.html#InscryptionAPI_Nodes_NewNodeManager_FullNode_GetSequencerType_
  commentId: Overload:InscryptionAPI.Nodes.NewNodeManager.FullNode.GetSequencerType
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.NewNodeManager.FullNode.GetSequencerType
  nameWithType: NewNodeManager.FullNode.GetSequencerType
- uid: InscryptionAPI.Nodes.NewNodeManager.FullNode.guid
  name: guid
  href: api/InscryptionAPI.Nodes.NewNodeManager.FullNode.html#InscryptionAPI_Nodes_NewNodeManager_FullNode_guid
  commentId: F:InscryptionAPI.Nodes.NewNodeManager.FullNode.guid
  fullName: InscryptionAPI.Nodes.NewNodeManager.FullNode.guid
  nameWithType: NewNodeManager.FullNode.guid
- uid: InscryptionAPI.Nodes.NewNodeManager.FullNode.IsValidSequencerType
  name: IsValidSequencerType()
  href: api/InscryptionAPI.Nodes.NewNodeManager.FullNode.html#InscryptionAPI_Nodes_NewNodeManager_FullNode_IsValidSequencerType
  commentId: M:InscryptionAPI.Nodes.NewNodeManager.FullNode.IsValidSequencerType
  fullName: InscryptionAPI.Nodes.NewNodeManager.FullNode.IsValidSequencerType()
  nameWithType: NewNodeManager.FullNode.IsValidSequencerType()
- uid: InscryptionAPI.Nodes.NewNodeManager.FullNode.IsValidSequencerType*
  name: IsValidSequencerType
  href: api/InscryptionAPI.Nodes.NewNodeManager.FullNode.html#InscryptionAPI_Nodes_NewNodeManager_FullNode_IsValidSequencerType_
  commentId: Overload:InscryptionAPI.Nodes.NewNodeManager.FullNode.IsValidSequencerType
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.NewNodeManager.FullNode.IsValidSequencerType
  nameWithType: NewNodeManager.FullNode.IsValidSequencerType
- uid: InscryptionAPI.Nodes.NewNodeManager.FullNode.name
  name: name
  href: api/InscryptionAPI.Nodes.NewNodeManager.FullNode.html#InscryptionAPI_Nodes_NewNodeManager_FullNode_name
  commentId: F:InscryptionAPI.Nodes.NewNodeManager.FullNode.name
  fullName: InscryptionAPI.Nodes.NewNodeManager.FullNode.name
  nameWithType: NewNodeManager.FullNode.name
- uid: InscryptionAPI.Nodes.NewNodeManager.FullNode.nodeAnimation
  name: nodeAnimation
  href: api/InscryptionAPI.Nodes.NewNodeManager.FullNode.html#InscryptionAPI_Nodes_NewNodeManager_FullNode_nodeAnimation
  commentId: F:InscryptionAPI.Nodes.NewNodeManager.FullNode.nodeAnimation
  fullName: InscryptionAPI.Nodes.NewNodeManager.FullNode.nodeAnimation
  nameWithType: NewNodeManager.FullNode.nodeAnimation
- uid: InscryptionAPI.Nodes.NewNodeManager.FullNode.nodePrefab
  name: nodePrefab
  href: api/InscryptionAPI.Nodes.NewNodeManager.FullNode.html#InscryptionAPI_Nodes_NewNodeManager_FullNode_nodePrefab
  commentId: F:InscryptionAPI.Nodes.NewNodeManager.FullNode.nodePrefab
  fullName: InscryptionAPI.Nodes.NewNodeManager.FullNode.nodePrefab
  nameWithType: NewNodeManager.FullNode.nodePrefab
- uid: InscryptionAPI.Nodes.NewNodeManager.FullNode.nodeSequencerType
  name: nodeSequencerType
  href: api/InscryptionAPI.Nodes.NewNodeManager.FullNode.html#InscryptionAPI_Nodes_NewNodeManager_FullNode_nodeSequencerType
  commentId: F:InscryptionAPI.Nodes.NewNodeManager.FullNode.nodeSequencerType
  fullName: InscryptionAPI.Nodes.NewNodeManager.FullNode.nodeSequencerType
  nameWithType: NewNodeManager.FullNode.nodeSequencerType
- uid: InscryptionAPI.Nodes.NewNodeManager.FullNode.onPostNodeGeneration
  name: onPostNodeGeneration
  href: api/InscryptionAPI.Nodes.NewNodeManager.FullNode.html#InscryptionAPI_Nodes_NewNodeManager_FullNode_onPostNodeGeneration
  commentId: F:InscryptionAPI.Nodes.NewNodeManager.FullNode.onPostNodeGeneration
  fullName: InscryptionAPI.Nodes.NewNodeManager.FullNode.onPostNodeGeneration
  nameWithType: NewNodeManager.FullNode.onPostNodeGeneration
- uid: InscryptionAPI.Nodes.NewNodeManager.FullNode.onPreNodeGeneration
  name: onPreNodeGeneration
  href: api/InscryptionAPI.Nodes.NewNodeManager.FullNode.html#InscryptionAPI_Nodes_NewNodeManager_FullNode_onPreNodeGeneration
  commentId: F:InscryptionAPI.Nodes.NewNodeManager.FullNode.onPreNodeGeneration
  fullName: InscryptionAPI.Nodes.NewNodeManager.FullNode.onPreNodeGeneration
  nameWithType: NewNodeManager.FullNode.onPreNodeGeneration
- uid: InscryptionAPI.Nodes.NewNodeManager.FullNode.sequencerPrefab
  name: sequencerPrefab
  href: api/InscryptionAPI.Nodes.NewNodeManager.FullNode.html#InscryptionAPI_Nodes_NewNodeManager_FullNode_sequencerPrefab
  commentId: F:InscryptionAPI.Nodes.NewNodeManager.FullNode.sequencerPrefab
  fullName: InscryptionAPI.Nodes.NewNodeManager.FullNode.sequencerPrefab
  nameWithType: NewNodeManager.FullNode.sequencerPrefab
- uid: InscryptionAPI.Nodes.NewNodeManager.FullNode.SequencerTypeIsValid(System.Type)
  name: SequencerTypeIsValid(Type)
  href: api/InscryptionAPI.Nodes.NewNodeManager.FullNode.html#InscryptionAPI_Nodes_NewNodeManager_FullNode_SequencerTypeIsValid_System_Type_
  commentId: M:InscryptionAPI.Nodes.NewNodeManager.FullNode.SequencerTypeIsValid(System.Type)
  fullName: InscryptionAPI.Nodes.NewNodeManager.FullNode.SequencerTypeIsValid(System.Type)
  nameWithType: NewNodeManager.FullNode.SequencerTypeIsValid(Type)
- uid: InscryptionAPI.Nodes.NewNodeManager.FullNode.SequencerTypeIsValid*
  name: SequencerTypeIsValid
  href: api/InscryptionAPI.Nodes.NewNodeManager.FullNode.html#InscryptionAPI_Nodes_NewNodeManager_FullNode_SequencerTypeIsValid_
  commentId: Overload:InscryptionAPI.Nodes.NewNodeManager.FullNode.SequencerTypeIsValid
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.NewNodeManager.FullNode.SequencerTypeIsValid
  nameWithType: NewNodeManager.FullNode.SequencerTypeIsValid
- uid: InscryptionAPI.Nodes.NewNodeManager.FullNode.SetForceGenerationConditions(System.Collections.Generic.List{DiskCardGame.NodeData.SelectionCondition})
  name: SetForceGenerationConditions(List<NodeData.SelectionCondition>)
  href: api/InscryptionAPI.Nodes.NewNodeManager.FullNode.html#InscryptionAPI_Nodes_NewNodeManager_FullNode_SetForceGenerationConditions_System_Collections_Generic_List_DiskCardGame_NodeData_SelectionCondition__
  commentId: M:InscryptionAPI.Nodes.NewNodeManager.FullNode.SetForceGenerationConditions(System.Collections.Generic.List{DiskCardGame.NodeData.SelectionCondition})
  name.vb: SetForceGenerationConditions(List(Of NodeData.SelectionCondition))
  fullName: InscryptionAPI.Nodes.NewNodeManager.FullNode.SetForceGenerationConditions(System.Collections.Generic.List<DiskCardGame.NodeData.SelectionCondition>)
  fullName.vb: InscryptionAPI.Nodes.NewNodeManager.FullNode.SetForceGenerationConditions(System.Collections.Generic.List(Of DiskCardGame.NodeData.SelectionCondition))
  nameWithType: NewNodeManager.FullNode.SetForceGenerationConditions(List<NodeData.SelectionCondition>)
  nameWithType.vb: NewNodeManager.FullNode.SetForceGenerationConditions(List(Of NodeData.SelectionCondition))
- uid: InscryptionAPI.Nodes.NewNodeManager.FullNode.SetForceGenerationConditions*
  name: SetForceGenerationConditions
  href: api/InscryptionAPI.Nodes.NewNodeManager.FullNode.html#InscryptionAPI_Nodes_NewNodeManager_FullNode_SetForceGenerationConditions_
  commentId: Overload:InscryptionAPI.Nodes.NewNodeManager.FullNode.SetForceGenerationConditions
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.NewNodeManager.FullNode.SetForceGenerationConditions
  nameWithType: NewNodeManager.FullNode.SetForceGenerationConditions
- uid: InscryptionAPI.Nodes.NewNodeManager.FullNode.SetGenerationPrerequisites(System.Collections.Generic.List{DiskCardGame.NodeData.SelectionCondition})
  name: SetGenerationPrerequisites(List<NodeData.SelectionCondition>)
  href: api/InscryptionAPI.Nodes.NewNodeManager.FullNode.html#InscryptionAPI_Nodes_NewNodeManager_FullNode_SetGenerationPrerequisites_System_Collections_Generic_List_DiskCardGame_NodeData_SelectionCondition__
  commentId: M:InscryptionAPI.Nodes.NewNodeManager.FullNode.SetGenerationPrerequisites(System.Collections.Generic.List{DiskCardGame.NodeData.SelectionCondition})
  name.vb: SetGenerationPrerequisites(List(Of NodeData.SelectionCondition))
  fullName: InscryptionAPI.Nodes.NewNodeManager.FullNode.SetGenerationPrerequisites(System.Collections.Generic.List<DiskCardGame.NodeData.SelectionCondition>)
  fullName.vb: InscryptionAPI.Nodes.NewNodeManager.FullNode.SetGenerationPrerequisites(System.Collections.Generic.List(Of DiskCardGame.NodeData.SelectionCondition))
  nameWithType: NewNodeManager.FullNode.SetGenerationPrerequisites(List<NodeData.SelectionCondition>)
  nameWithType.vb: NewNodeManager.FullNode.SetGenerationPrerequisites(List(Of NodeData.SelectionCondition))
- uid: InscryptionAPI.Nodes.NewNodeManager.FullNode.SetGenerationPrerequisites*
  name: SetGenerationPrerequisites
  href: api/InscryptionAPI.Nodes.NewNodeManager.FullNode.html#InscryptionAPI_Nodes_NewNodeManager_FullNode_SetGenerationPrerequisites_
  commentId: Overload:InscryptionAPI.Nodes.NewNodeManager.FullNode.SetGenerationPrerequisites
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.NewNodeManager.FullNode.SetGenerationPrerequisites
  nameWithType: NewNodeManager.FullNode.SetGenerationPrerequisites
- uid: InscryptionAPI.Nodes.NewNodeManager.FullNode.SetGenerationType(InscryptionAPI.Nodes.GenerationType)
  name: SetGenerationType(GenerationType)
  href: api/InscryptionAPI.Nodes.NewNodeManager.FullNode.html#InscryptionAPI_Nodes_NewNodeManager_FullNode_SetGenerationType_InscryptionAPI_Nodes_GenerationType_
  commentId: M:InscryptionAPI.Nodes.NewNodeManager.FullNode.SetGenerationType(InscryptionAPI.Nodes.GenerationType)
  fullName: InscryptionAPI.Nodes.NewNodeManager.FullNode.SetGenerationType(InscryptionAPI.Nodes.GenerationType)
  nameWithType: NewNodeManager.FullNode.SetGenerationType(GenerationType)
- uid: InscryptionAPI.Nodes.NewNodeManager.FullNode.SetGenerationType*
  name: SetGenerationType
  href: api/InscryptionAPI.Nodes.NewNodeManager.FullNode.html#InscryptionAPI_Nodes_NewNodeManager_FullNode_SetGenerationType_
  commentId: Overload:InscryptionAPI.Nodes.NewNodeManager.FullNode.SetGenerationType
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.NewNodeManager.FullNode.SetGenerationType
  nameWithType: NewNodeManager.FullNode.SetGenerationType
- uid: InscryptionAPI.Nodes.NewNodeManager.FullNode.SetGuid(System.String)
  name: SetGuid(String)
  href: api/InscryptionAPI.Nodes.NewNodeManager.FullNode.html#InscryptionAPI_Nodes_NewNodeManager_FullNode_SetGuid_System_String_
  commentId: M:InscryptionAPI.Nodes.NewNodeManager.FullNode.SetGuid(System.String)
  fullName: InscryptionAPI.Nodes.NewNodeManager.FullNode.SetGuid(System.String)
  nameWithType: NewNodeManager.FullNode.SetGuid(String)
- uid: InscryptionAPI.Nodes.NewNodeManager.FullNode.SetGuid*
  name: SetGuid
  href: api/InscryptionAPI.Nodes.NewNodeManager.FullNode.html#InscryptionAPI_Nodes_NewNodeManager_FullNode_SetGuid_
  commentId: Overload:InscryptionAPI.Nodes.NewNodeManager.FullNode.SetGuid
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.NewNodeManager.FullNode.SetGuid
  nameWithType: NewNodeManager.FullNode.SetGuid
- uid: InscryptionAPI.Nodes.NewNodeManager.FullNode.SetName(System.String)
  name: SetName(String)
  href: api/InscryptionAPI.Nodes.NewNodeManager.FullNode.html#InscryptionAPI_Nodes_NewNodeManager_FullNode_SetName_System_String_
  commentId: M:InscryptionAPI.Nodes.NewNodeManager.FullNode.SetName(System.String)
  fullName: InscryptionAPI.Nodes.NewNodeManager.FullNode.SetName(System.String)
  nameWithType: NewNodeManager.FullNode.SetName(String)
- uid: InscryptionAPI.Nodes.NewNodeManager.FullNode.SetName*
  name: SetName
  href: api/InscryptionAPI.Nodes.NewNodeManager.FullNode.html#InscryptionAPI_Nodes_NewNodeManager_FullNode_SetName_
  commentId: Overload:InscryptionAPI.Nodes.NewNodeManager.FullNode.SetName
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.NewNodeManager.FullNode.SetName
  nameWithType: NewNodeManager.FullNode.SetName
- uid: InscryptionAPI.Nodes.NewNodeManager.FullNode.SetNodeAnimation(System.Collections.Generic.List{UnityEngine.Texture2D})
  name: SetNodeAnimation(List<Texture2D>)
  href: api/InscryptionAPI.Nodes.NewNodeManager.FullNode.html#InscryptionAPI_Nodes_NewNodeManager_FullNode_SetNodeAnimation_System_Collections_Generic_List_UnityEngine_Texture2D__
  commentId: M:InscryptionAPI.Nodes.NewNodeManager.FullNode.SetNodeAnimation(System.Collections.Generic.List{UnityEngine.Texture2D})
  name.vb: SetNodeAnimation(List(Of Texture2D))
  fullName: InscryptionAPI.Nodes.NewNodeManager.FullNode.SetNodeAnimation(System.Collections.Generic.List<UnityEngine.Texture2D>)
  fullName.vb: InscryptionAPI.Nodes.NewNodeManager.FullNode.SetNodeAnimation(System.Collections.Generic.List(Of UnityEngine.Texture2D))
  nameWithType: NewNodeManager.FullNode.SetNodeAnimation(List<Texture2D>)
  nameWithType.vb: NewNodeManager.FullNode.SetNodeAnimation(List(Of Texture2D))
- uid: InscryptionAPI.Nodes.NewNodeManager.FullNode.SetNodeAnimation*
  name: SetNodeAnimation
  href: api/InscryptionAPI.Nodes.NewNodeManager.FullNode.html#InscryptionAPI_Nodes_NewNodeManager_FullNode_SetNodeAnimation_
  commentId: Overload:InscryptionAPI.Nodes.NewNodeManager.FullNode.SetNodeAnimation
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.NewNodeManager.FullNode.SetNodeAnimation
  nameWithType: NewNodeManager.FullNode.SetNodeAnimation
- uid: InscryptionAPI.Nodes.NewNodeManager.FullNode.SetNodePrefab(UnityEngine.GameObject)
  name: SetNodePrefab(GameObject)
  href: api/InscryptionAPI.Nodes.NewNodeManager.FullNode.html#InscryptionAPI_Nodes_NewNodeManager_FullNode_SetNodePrefab_UnityEngine_GameObject_
  commentId: M:InscryptionAPI.Nodes.NewNodeManager.FullNode.SetNodePrefab(UnityEngine.GameObject)
  fullName: InscryptionAPI.Nodes.NewNodeManager.FullNode.SetNodePrefab(UnityEngine.GameObject)
  nameWithType: NewNodeManager.FullNode.SetNodePrefab(GameObject)
- uid: InscryptionAPI.Nodes.NewNodeManager.FullNode.SetNodePrefab*
  name: SetNodePrefab
  href: api/InscryptionAPI.Nodes.NewNodeManager.FullNode.html#InscryptionAPI_Nodes_NewNodeManager_FullNode_SetNodePrefab_
  commentId: Overload:InscryptionAPI.Nodes.NewNodeManager.FullNode.SetNodePrefab
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.NewNodeManager.FullNode.SetNodePrefab
  nameWithType: NewNodeManager.FullNode.SetNodePrefab
- uid: InscryptionAPI.Nodes.NewNodeManager.FullNode.SetNodeSequencerType(System.Type)
  name: SetNodeSequencerType(Type)
  href: api/InscryptionAPI.Nodes.NewNodeManager.FullNode.html#InscryptionAPI_Nodes_NewNodeManager_FullNode_SetNodeSequencerType_System_Type_
  commentId: M:InscryptionAPI.Nodes.NewNodeManager.FullNode.SetNodeSequencerType(System.Type)
  fullName: InscryptionAPI.Nodes.NewNodeManager.FullNode.SetNodeSequencerType(System.Type)
  nameWithType: NewNodeManager.FullNode.SetNodeSequencerType(Type)
- uid: InscryptionAPI.Nodes.NewNodeManager.FullNode.SetNodeSequencerType*
  name: SetNodeSequencerType
  href: api/InscryptionAPI.Nodes.NewNodeManager.FullNode.html#InscryptionAPI_Nodes_NewNodeManager_FullNode_SetNodeSequencerType_
  commentId: Overload:InscryptionAPI.Nodes.NewNodeManager.FullNode.SetNodeSequencerType
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.NewNodeManager.FullNode.SetNodeSequencerType
  nameWithType: NewNodeManager.FullNode.SetNodeSequencerType
- uid: InscryptionAPI.Nodes.NewNodeManager.FullNode.SetNodeSequencerType``1
  name: SetNodeSequencerType<T>()
  href: api/InscryptionAPI.Nodes.NewNodeManager.FullNode.html#InscryptionAPI_Nodes_NewNodeManager_FullNode_SetNodeSequencerType__1
  commentId: M:InscryptionAPI.Nodes.NewNodeManager.FullNode.SetNodeSequencerType``1
  name.vb: SetNodeSequencerType(Of T)()
  fullName: InscryptionAPI.Nodes.NewNodeManager.FullNode.SetNodeSequencerType<T>()
  fullName.vb: InscryptionAPI.Nodes.NewNodeManager.FullNode.SetNodeSequencerType(Of T)()
  nameWithType: NewNodeManager.FullNode.SetNodeSequencerType<T>()
  nameWithType.vb: NewNodeManager.FullNode.SetNodeSequencerType(Of T)()
- uid: InscryptionAPI.Nodes.NewNodeManager.FullNode.SetOnPostNodeGeneration(System.Action{InscryptionAPI.Nodes.CustomSpecialNodeData,DiskCardGame.MapNode2D})
  name: SetOnPostNodeGeneration(Action<CustomSpecialNodeData, MapNode2D>)
  href: api/InscryptionAPI.Nodes.NewNodeManager.FullNode.html#InscryptionAPI_Nodes_NewNodeManager_FullNode_SetOnPostNodeGeneration_System_Action_InscryptionAPI_Nodes_CustomSpecialNodeData_DiskCardGame_MapNode2D__
  commentId: M:InscryptionAPI.Nodes.NewNodeManager.FullNode.SetOnPostNodeGeneration(System.Action{InscryptionAPI.Nodes.CustomSpecialNodeData,DiskCardGame.MapNode2D})
  name.vb: SetOnPostNodeGeneration(Action(Of CustomSpecialNodeData, MapNode2D))
  fullName: InscryptionAPI.Nodes.NewNodeManager.FullNode.SetOnPostNodeGeneration(System.Action<InscryptionAPI.Nodes.CustomSpecialNodeData, DiskCardGame.MapNode2D>)
  fullName.vb: InscryptionAPI.Nodes.NewNodeManager.FullNode.SetOnPostNodeGeneration(System.Action(Of InscryptionAPI.Nodes.CustomSpecialNodeData, DiskCardGame.MapNode2D))
  nameWithType: NewNodeManager.FullNode.SetOnPostNodeGeneration(Action<CustomSpecialNodeData, MapNode2D>)
  nameWithType.vb: NewNodeManager.FullNode.SetOnPostNodeGeneration(Action(Of CustomSpecialNodeData, MapNode2D))
- uid: InscryptionAPI.Nodes.NewNodeManager.FullNode.SetOnPostNodeGeneration*
  name: SetOnPostNodeGeneration
  href: api/InscryptionAPI.Nodes.NewNodeManager.FullNode.html#InscryptionAPI_Nodes_NewNodeManager_FullNode_SetOnPostNodeGeneration_
  commentId: Overload:InscryptionAPI.Nodes.NewNodeManager.FullNode.SetOnPostNodeGeneration
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.NewNodeManager.FullNode.SetOnPostNodeGeneration
  nameWithType: NewNodeManager.FullNode.SetOnPostNodeGeneration
- uid: InscryptionAPI.Nodes.NewNodeManager.FullNode.SetOnPreNodeGeneration(System.Action{InscryptionAPI.Nodes.CustomSpecialNodeData})
  name: SetOnPreNodeGeneration(Action<CustomSpecialNodeData>)
  href: api/InscryptionAPI.Nodes.NewNodeManager.FullNode.html#InscryptionAPI_Nodes_NewNodeManager_FullNode_SetOnPreNodeGeneration_System_Action_InscryptionAPI_Nodes_CustomSpecialNodeData__
  commentId: M:InscryptionAPI.Nodes.NewNodeManager.FullNode.SetOnPreNodeGeneration(System.Action{InscryptionAPI.Nodes.CustomSpecialNodeData})
  name.vb: SetOnPreNodeGeneration(Action(Of CustomSpecialNodeData))
  fullName: InscryptionAPI.Nodes.NewNodeManager.FullNode.SetOnPreNodeGeneration(System.Action<InscryptionAPI.Nodes.CustomSpecialNodeData>)
  fullName.vb: InscryptionAPI.Nodes.NewNodeManager.FullNode.SetOnPreNodeGeneration(System.Action(Of InscryptionAPI.Nodes.CustomSpecialNodeData))
  nameWithType: NewNodeManager.FullNode.SetOnPreNodeGeneration(Action<CustomSpecialNodeData>)
  nameWithType.vb: NewNodeManager.FullNode.SetOnPreNodeGeneration(Action(Of CustomSpecialNodeData))
- uid: InscryptionAPI.Nodes.NewNodeManager.FullNode.SetOnPreNodeGeneration*
  name: SetOnPreNodeGeneration
  href: api/InscryptionAPI.Nodes.NewNodeManager.FullNode.html#InscryptionAPI_Nodes_NewNodeManager_FullNode_SetOnPreNodeGeneration_
  commentId: Overload:InscryptionAPI.Nodes.NewNodeManager.FullNode.SetOnPreNodeGeneration
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.NewNodeManager.FullNode.SetOnPreNodeGeneration
  nameWithType: NewNodeManager.FullNode.SetOnPreNodeGeneration
- uid: InscryptionAPI.Nodes.NewNodeManager.FullNode.SetSequencerPrefab(UnityEngine.GameObject)
  name: SetSequencerPrefab(GameObject)
  href: api/InscryptionAPI.Nodes.NewNodeManager.FullNode.html#InscryptionAPI_Nodes_NewNodeManager_FullNode_SetSequencerPrefab_UnityEngine_GameObject_
  commentId: M:InscryptionAPI.Nodes.NewNodeManager.FullNode.SetSequencerPrefab(UnityEngine.GameObject)
  fullName: InscryptionAPI.Nodes.NewNodeManager.FullNode.SetSequencerPrefab(UnityEngine.GameObject)
  nameWithType: NewNodeManager.FullNode.SetSequencerPrefab(GameObject)
- uid: InscryptionAPI.Nodes.NewNodeManager.FullNode.SetSequencerPrefab*
  name: SetSequencerPrefab
  href: api/InscryptionAPI.Nodes.NewNodeManager.FullNode.html#InscryptionAPI_Nodes_NewNodeManager_FullNode_SetSequencerPrefab_
  commentId: Overload:InscryptionAPI.Nodes.NewNodeManager.FullNode.SetSequencerPrefab
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.NewNodeManager.FullNode.SetSequencerPrefab
  nameWithType: NewNodeManager.FullNode.SetSequencerPrefab
- uid: InscryptionAPI.Nodes.NewNodeManager.New(System.String,System.String,InscryptionAPI.Nodes.GenerationType,System.Type,System.Collections.Generic.List{UnityEngine.Texture2D},System.Collections.Generic.List{DiskCardGame.NodeData.SelectionCondition},System.Collections.Generic.List{DiskCardGame.NodeData.SelectionCondition},System.Action{InscryptionAPI.Nodes.CustomSpecialNodeData},System.Action{InscryptionAPI.Nodes.CustomSpecialNodeData,DiskCardGame.MapNode2D},UnityEngine.GameObject,UnityEngine.GameObject)
  name: New(String, String, GenerationType, Type, List<Texture2D>, List<NodeData.SelectionCondition>, List<NodeData.SelectionCondition>, Action<CustomSpecialNodeData>, Action<CustomSpecialNodeData, MapNode2D>, GameObject, GameObject)
  href: api/InscryptionAPI.Nodes.NewNodeManager.html#InscryptionAPI_Nodes_NewNodeManager_New_System_String_System_String_InscryptionAPI_Nodes_GenerationType_System_Type_System_Collections_Generic_List_UnityEngine_Texture2D__System_Collections_Generic_List_DiskCardGame_NodeData_SelectionCondition__System_Collections_Generic_List_DiskCardGame_NodeData_SelectionCondition__System_Action_InscryptionAPI_Nodes_CustomSpecialNodeData__System_Action_InscryptionAPI_Nodes_CustomSpecialNodeData_DiskCardGame_MapNode2D__UnityEngine_GameObject_UnityEngine_GameObject_
  commentId: M:InscryptionAPI.Nodes.NewNodeManager.New(System.String,System.String,InscryptionAPI.Nodes.GenerationType,System.Type,System.Collections.Generic.List{UnityEngine.Texture2D},System.Collections.Generic.List{DiskCardGame.NodeData.SelectionCondition},System.Collections.Generic.List{DiskCardGame.NodeData.SelectionCondition},System.Action{InscryptionAPI.Nodes.CustomSpecialNodeData},System.Action{InscryptionAPI.Nodes.CustomSpecialNodeData,DiskCardGame.MapNode2D},UnityEngine.GameObject,UnityEngine.GameObject)
  name.vb: New(String, String, GenerationType, Type, List(Of Texture2D), List(Of NodeData.SelectionCondition), List(Of NodeData.SelectionCondition), Action(Of CustomSpecialNodeData), Action(Of CustomSpecialNodeData, MapNode2D), GameObject, GameObject)
  fullName: InscryptionAPI.Nodes.NewNodeManager.New(System.String, System.String, InscryptionAPI.Nodes.GenerationType, System.Type, System.Collections.Generic.List<UnityEngine.Texture2D>, System.Collections.Generic.List<DiskCardGame.NodeData.SelectionCondition>, System.Collections.Generic.List<DiskCardGame.NodeData.SelectionCondition>, System.Action<InscryptionAPI.Nodes.CustomSpecialNodeData>, System.Action<InscryptionAPI.Nodes.CustomSpecialNodeData, DiskCardGame.MapNode2D>, UnityEngine.GameObject, UnityEngine.GameObject)
  fullName.vb: InscryptionAPI.Nodes.NewNodeManager.New(System.String, System.String, InscryptionAPI.Nodes.GenerationType, System.Type, System.Collections.Generic.List(Of UnityEngine.Texture2D), System.Collections.Generic.List(Of DiskCardGame.NodeData.SelectionCondition), System.Collections.Generic.List(Of DiskCardGame.NodeData.SelectionCondition), System.Action(Of InscryptionAPI.Nodes.CustomSpecialNodeData), System.Action(Of InscryptionAPI.Nodes.CustomSpecialNodeData, DiskCardGame.MapNode2D), UnityEngine.GameObject, UnityEngine.GameObject)
  nameWithType: NewNodeManager.New(String, String, GenerationType, Type, List<Texture2D>, List<NodeData.SelectionCondition>, List<NodeData.SelectionCondition>, Action<CustomSpecialNodeData>, Action<CustomSpecialNodeData, MapNode2D>, GameObject, GameObject)
  nameWithType.vb: NewNodeManager.New(String, String, GenerationType, Type, List(Of Texture2D), List(Of NodeData.SelectionCondition), List(Of NodeData.SelectionCondition), Action(Of CustomSpecialNodeData), Action(Of CustomSpecialNodeData, MapNode2D), GameObject, GameObject)
- uid: InscryptionAPI.Nodes.NewNodeManager.New*
  name: New
  href: api/InscryptionAPI.Nodes.NewNodeManager.html#InscryptionAPI_Nodes_NewNodeManager_New_
  commentId: Overload:InscryptionAPI.Nodes.NewNodeManager.New
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.NewNodeManager.New
  nameWithType: NewNodeManager.New
- uid: InscryptionAPI.Nodes.NewNodeManager.New``1(System.String,System.String,InscryptionAPI.Nodes.GenerationType,System.Collections.Generic.List{UnityEngine.Texture2D},System.Collections.Generic.List{DiskCardGame.NodeData.SelectionCondition},System.Collections.Generic.List{DiskCardGame.NodeData.SelectionCondition},System.Action{InscryptionAPI.Nodes.CustomSpecialNodeData},System.Action{InscryptionAPI.Nodes.CustomSpecialNodeData,DiskCardGame.MapNode2D},UnityEngine.GameObject,UnityEngine.GameObject)
  name: New<T>(String, String, GenerationType, List<Texture2D>, List<NodeData.SelectionCondition>, List<NodeData.SelectionCondition>, Action<CustomSpecialNodeData>, Action<CustomSpecialNodeData, MapNode2D>, GameObject, GameObject)
  href: api/InscryptionAPI.Nodes.NewNodeManager.html#InscryptionAPI_Nodes_NewNodeManager_New__1_System_String_System_String_InscryptionAPI_Nodes_GenerationType_System_Collections_Generic_List_UnityEngine_Texture2D__System_Collections_Generic_List_DiskCardGame_NodeData_SelectionCondition__System_Collections_Generic_List_DiskCardGame_NodeData_SelectionCondition__System_Action_InscryptionAPI_Nodes_CustomSpecialNodeData__System_Action_InscryptionAPI_Nodes_CustomSpecialNodeData_DiskCardGame_MapNode2D__UnityEngine_GameObject_UnityEngine_GameObject_
  commentId: M:InscryptionAPI.Nodes.NewNodeManager.New``1(System.String,System.String,InscryptionAPI.Nodes.GenerationType,System.Collections.Generic.List{UnityEngine.Texture2D},System.Collections.Generic.List{DiskCardGame.NodeData.SelectionCondition},System.Collections.Generic.List{DiskCardGame.NodeData.SelectionCondition},System.Action{InscryptionAPI.Nodes.CustomSpecialNodeData},System.Action{InscryptionAPI.Nodes.CustomSpecialNodeData,DiskCardGame.MapNode2D},UnityEngine.GameObject,UnityEngine.GameObject)
  name.vb: New(Of T)(String, String, GenerationType, List(Of Texture2D), List(Of NodeData.SelectionCondition), List(Of NodeData.SelectionCondition), Action(Of CustomSpecialNodeData), Action(Of CustomSpecialNodeData, MapNode2D), GameObject, GameObject)
  fullName: InscryptionAPI.Nodes.NewNodeManager.New<T>(System.String, System.String, InscryptionAPI.Nodes.GenerationType, System.Collections.Generic.List<UnityEngine.Texture2D>, System.Collections.Generic.List<DiskCardGame.NodeData.SelectionCondition>, System.Collections.Generic.List<DiskCardGame.NodeData.SelectionCondition>, System.Action<InscryptionAPI.Nodes.CustomSpecialNodeData>, System.Action<InscryptionAPI.Nodes.CustomSpecialNodeData, DiskCardGame.MapNode2D>, UnityEngine.GameObject, UnityEngine.GameObject)
  fullName.vb: InscryptionAPI.Nodes.NewNodeManager.New(Of T)(System.String, System.String, InscryptionAPI.Nodes.GenerationType, System.Collections.Generic.List(Of UnityEngine.Texture2D), System.Collections.Generic.List(Of DiskCardGame.NodeData.SelectionCondition), System.Collections.Generic.List(Of DiskCardGame.NodeData.SelectionCondition), System.Action(Of InscryptionAPI.Nodes.CustomSpecialNodeData), System.Action(Of InscryptionAPI.Nodes.CustomSpecialNodeData, DiskCardGame.MapNode2D), UnityEngine.GameObject, UnityEngine.GameObject)
  nameWithType: NewNodeManager.New<T>(String, String, GenerationType, List<Texture2D>, List<NodeData.SelectionCondition>, List<NodeData.SelectionCondition>, Action<CustomSpecialNodeData>, Action<CustomSpecialNodeData, MapNode2D>, GameObject, GameObject)
  nameWithType.vb: NewNodeManager.New(Of T)(String, String, GenerationType, List(Of Texture2D), List(Of NodeData.SelectionCondition), List(Of NodeData.SelectionCondition), Action(Of CustomSpecialNodeData), Action(Of CustomSpecialNodeData, MapNode2D), GameObject, GameObject)
- uid: InscryptionAPI.Nodes.Not
  name: Not
  href: api/InscryptionAPI.Nodes.Not.html
  commentId: T:InscryptionAPI.Nodes.Not
  fullName: InscryptionAPI.Nodes.Not
  nameWithType: Not
- uid: InscryptionAPI.Nodes.Not.#ctor(DiskCardGame.NodeData.SelectionCondition)
  name: Not(NodeData.SelectionCondition)
  href: api/InscryptionAPI.Nodes.Not.html#InscryptionAPI_Nodes_Not__ctor_DiskCardGame_NodeData_SelectionCondition_
  commentId: M:InscryptionAPI.Nodes.Not.#ctor(DiskCardGame.NodeData.SelectionCondition)
  fullName: InscryptionAPI.Nodes.Not.Not(DiskCardGame.NodeData.SelectionCondition)
  nameWithType: Not.Not(NodeData.SelectionCondition)
- uid: InscryptionAPI.Nodes.Not.#ctor*
  name: Not
  href: api/InscryptionAPI.Nodes.Not.html#InscryptionAPI_Nodes_Not__ctor_
  commentId: Overload:InscryptionAPI.Nodes.Not.#ctor
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.Not.Not
  nameWithType: Not.Not
- uid: InscryptionAPI.Nodes.Not.Satisfied(System.Int32,System.Collections.Generic.List{DiskCardGame.NodeData})
  name: Satisfied(Int32, List<NodeData>)
  href: api/InscryptionAPI.Nodes.Not.html#InscryptionAPI_Nodes_Not_Satisfied_System_Int32_System_Collections_Generic_List_DiskCardGame_NodeData__
  commentId: M:InscryptionAPI.Nodes.Not.Satisfied(System.Int32,System.Collections.Generic.List{DiskCardGame.NodeData})
  name.vb: Satisfied(Int32, List(Of NodeData))
  fullName: InscryptionAPI.Nodes.Not.Satisfied(System.Int32, System.Collections.Generic.List<DiskCardGame.NodeData>)
  fullName.vb: InscryptionAPI.Nodes.Not.Satisfied(System.Int32, System.Collections.Generic.List(Of DiskCardGame.NodeData))
  nameWithType: Not.Satisfied(Int32, List<NodeData>)
  nameWithType.vb: Not.Satisfied(Int32, List(Of NodeData))
- uid: InscryptionAPI.Nodes.Not.Satisfied*
  name: Satisfied
  href: api/InscryptionAPI.Nodes.Not.html#InscryptionAPI_Nodes_Not_Satisfied_
  commentId: Overload:InscryptionAPI.Nodes.Not.Satisfied
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.Not.Satisfied
  nameWithType: Not.Satisfied
- uid: InscryptionAPI.Nodes.True
  name: "True"
  href: api/InscryptionAPI.Nodes.True.html
  commentId: T:InscryptionAPI.Nodes.True
  fullName: InscryptionAPI.Nodes.True
  nameWithType: "True"
- uid: InscryptionAPI.Nodes.True.Satisfied(System.Int32,System.Collections.Generic.List{DiskCardGame.NodeData})
  name: Satisfied(Int32, List<NodeData>)
  href: api/InscryptionAPI.Nodes.True.html#InscryptionAPI_Nodes_True_Satisfied_System_Int32_System_Collections_Generic_List_DiskCardGame_NodeData__
  commentId: M:InscryptionAPI.Nodes.True.Satisfied(System.Int32,System.Collections.Generic.List{DiskCardGame.NodeData})
  name.vb: Satisfied(Int32, List(Of NodeData))
  fullName: InscryptionAPI.Nodes.True.Satisfied(System.Int32, System.Collections.Generic.List<DiskCardGame.NodeData>)
  fullName.vb: InscryptionAPI.Nodes.True.Satisfied(System.Int32, System.Collections.Generic.List(Of DiskCardGame.NodeData))
  nameWithType: True.Satisfied(Int32, List<NodeData>)
  nameWithType.vb: True.Satisfied(Int32, List(Of NodeData))
- uid: InscryptionAPI.Nodes.True.Satisfied*
  name: Satisfied
  href: api/InscryptionAPI.Nodes.True.html#InscryptionAPI_Nodes_True_Satisfied_
  commentId: Overload:InscryptionAPI.Nodes.True.Satisfied
  isSpec: "True"
  fullName: InscryptionAPI.Nodes.True.Satisfied
  nameWithType: True.Satisfied
- uid: InscryptionAPI.Regions
  name: InscryptionAPI.Regions
  href: api/InscryptionAPI.Regions.html
  commentId: N:InscryptionAPI.Regions
  fullName: InscryptionAPI.Regions
  nameWithType: InscryptionAPI.Regions
- uid: InscryptionAPI.Regions.Part1RegionData
  name: Part1RegionData
  href: api/InscryptionAPI.Regions.Part1RegionData.html
  commentId: T:InscryptionAPI.Regions.Part1RegionData
  fullName: InscryptionAPI.Regions.Part1RegionData
  nameWithType: Part1RegionData
- uid: InscryptionAPI.Regions.Part1RegionData.#ctor(DiskCardGame.RegionData,System.Int32)
  name: Part1RegionData(RegionData, Int32)
  href: api/InscryptionAPI.Regions.Part1RegionData.html#InscryptionAPI_Regions_Part1RegionData__ctor_DiskCardGame_RegionData_System_Int32_
  commentId: M:InscryptionAPI.Regions.Part1RegionData.#ctor(DiskCardGame.RegionData,System.Int32)
  fullName: InscryptionAPI.Regions.Part1RegionData.Part1RegionData(DiskCardGame.RegionData, System.Int32)
  nameWithType: Part1RegionData.Part1RegionData(RegionData, Int32)
- uid: InscryptionAPI.Regions.Part1RegionData.#ctor*
  name: Part1RegionData
  href: api/InscryptionAPI.Regions.Part1RegionData.html#InscryptionAPI_Regions_Part1RegionData__ctor_
  commentId: Overload:InscryptionAPI.Regions.Part1RegionData.#ctor
  isSpec: "True"
  fullName: InscryptionAPI.Regions.Part1RegionData.Part1RegionData
  nameWithType: Part1RegionData.Part1RegionData
- uid: InscryptionAPI.Regions.Part1RegionData.AllowLockedTerrainCards
  name: AllowLockedTerrainCards
  href: api/InscryptionAPI.Regions.Part1RegionData.html#InscryptionAPI_Regions_Part1RegionData_AllowLockedTerrainCards
  commentId: P:InscryptionAPI.Regions.Part1RegionData.AllowLockedTerrainCards
  fullName: InscryptionAPI.Regions.Part1RegionData.AllowLockedTerrainCards
  nameWithType: Part1RegionData.AllowLockedTerrainCards
- uid: InscryptionAPI.Regions.Part1RegionData.AllowLockedTerrainCards*
  name: AllowLockedTerrainCards
  href: api/InscryptionAPI.Regions.Part1RegionData.html#InscryptionAPI_Regions_Part1RegionData_AllowLockedTerrainCards_
  commentId: Overload:InscryptionAPI.Regions.Part1RegionData.AllowLockedTerrainCards
  isSpec: "True"
  fullName: InscryptionAPI.Regions.Part1RegionData.AllowLockedTerrainCards
  nameWithType: Part1RegionData.AllowLockedTerrainCards
- uid: InscryptionAPI.Regions.Part1RegionData.AllowSacrificableTerrainCards
  name: AllowSacrificableTerrainCards
  href: api/InscryptionAPI.Regions.Part1RegionData.html#InscryptionAPI_Regions_Part1RegionData_AllowSacrificableTerrainCards
  commentId: P:InscryptionAPI.Regions.Part1RegionData.AllowSacrificableTerrainCards
  fullName: InscryptionAPI.Regions.Part1RegionData.AllowSacrificableTerrainCards
  nameWithType: Part1RegionData.AllowSacrificableTerrainCards
- uid: InscryptionAPI.Regions.Part1RegionData.AllowSacrificableTerrainCards*
  name: AllowSacrificableTerrainCards
  href: api/InscryptionAPI.Regions.Part1RegionData.html#InscryptionAPI_Regions_Part1RegionData_AllowSacrificableTerrainCards_
  commentId: Overload:InscryptionAPI.Regions.Part1RegionData.AllowSacrificableTerrainCards
  isSpec: "True"
  fullName: InscryptionAPI.Regions.Part1RegionData.AllowSacrificableTerrainCards
  nameWithType: Part1RegionData.AllowSacrificableTerrainCards
- uid: InscryptionAPI.Regions.Part1RegionData.AllowTerrainOnEnemySide
  name: AllowTerrainOnEnemySide
  href: api/InscryptionAPI.Regions.Part1RegionData.html#InscryptionAPI_Regions_Part1RegionData_AllowTerrainOnEnemySide
  commentId: P:InscryptionAPI.Regions.Part1RegionData.AllowTerrainOnEnemySide
  fullName: InscryptionAPI.Regions.Part1RegionData.AllowTerrainOnEnemySide
  nameWithType: Part1RegionData.AllowTerrainOnEnemySide
- uid: InscryptionAPI.Regions.Part1RegionData.AllowTerrainOnEnemySide*
  name: AllowTerrainOnEnemySide
  href: api/InscryptionAPI.Regions.Part1RegionData.html#InscryptionAPI_Regions_Part1RegionData_AllowTerrainOnEnemySide_
  commentId: Overload:InscryptionAPI.Regions.Part1RegionData.AllowTerrainOnEnemySide
  isSpec: "True"
  fullName: InscryptionAPI.Regions.Part1RegionData.AllowTerrainOnEnemySide
  nameWithType: Part1RegionData.AllowTerrainOnEnemySide
- uid: InscryptionAPI.Regions.Part1RegionData.AllowTerrainOnPlayerSide
  name: AllowTerrainOnPlayerSide
  href: api/InscryptionAPI.Regions.Part1RegionData.html#InscryptionAPI_Regions_Part1RegionData_AllowTerrainOnPlayerSide
  commentId: P:InscryptionAPI.Regions.Part1RegionData.AllowTerrainOnPlayerSide
  fullName: InscryptionAPI.Regions.Part1RegionData.AllowTerrainOnPlayerSide
  nameWithType: Part1RegionData.AllowTerrainOnPlayerSide
- uid: InscryptionAPI.Regions.Part1RegionData.AllowTerrainOnPlayerSide*
  name: AllowTerrainOnPlayerSide
  href: api/InscryptionAPI.Regions.Part1RegionData.html#InscryptionAPI_Regions_Part1RegionData_AllowTerrainOnPlayerSide_
  commentId: Overload:InscryptionAPI.Regions.Part1RegionData.AllowTerrainOnPlayerSide
  isSpec: "True"
  fullName: InscryptionAPI.Regions.Part1RegionData.AllowTerrainOnPlayerSide
  nameWithType: Part1RegionData.AllowTerrainOnPlayerSide
- uid: InscryptionAPI.Regions.Part1RegionData.DoNotForceReachTerrain
  name: DoNotForceReachTerrain
  href: api/InscryptionAPI.Regions.Part1RegionData.html#InscryptionAPI_Regions_Part1RegionData_DoNotForceReachTerrain
  commentId: P:InscryptionAPI.Regions.Part1RegionData.DoNotForceReachTerrain
  fullName: InscryptionAPI.Regions.Part1RegionData.DoNotForceReachTerrain
  nameWithType: Part1RegionData.DoNotForceReachTerrain
- uid: InscryptionAPI.Regions.Part1RegionData.DoNotForceReachTerrain*
  name: DoNotForceReachTerrain
  href: api/InscryptionAPI.Regions.Part1RegionData.html#InscryptionAPI_Regions_Part1RegionData_DoNotForceReachTerrain_
  commentId: Overload:InscryptionAPI.Regions.Part1RegionData.DoNotForceReachTerrain
  isSpec: "True"
  fullName: InscryptionAPI.Regions.Part1RegionData.DoNotForceReachTerrain
  nameWithType: Part1RegionData.DoNotForceReachTerrain
- uid: InscryptionAPI.Regions.Part1RegionData.MaxTerrain
  name: MaxTerrain
  href: api/InscryptionAPI.Regions.Part1RegionData.html#InscryptionAPI_Regions_Part1RegionData_MaxTerrain
  commentId: P:InscryptionAPI.Regions.Part1RegionData.MaxTerrain
  fullName: InscryptionAPI.Regions.Part1RegionData.MaxTerrain
  nameWithType: Part1RegionData.MaxTerrain
- uid: InscryptionAPI.Regions.Part1RegionData.MaxTerrain*
  name: MaxTerrain
  href: api/InscryptionAPI.Regions.Part1RegionData.html#InscryptionAPI_Regions_Part1RegionData_MaxTerrain_
  commentId: Overload:InscryptionAPI.Regions.Part1RegionData.MaxTerrain
  isSpec: "True"
  fullName: InscryptionAPI.Regions.Part1RegionData.MaxTerrain
  nameWithType: Part1RegionData.MaxTerrain
- uid: InscryptionAPI.Regions.Part1RegionData.MinTerrain
  name: MinTerrain
  href: api/InscryptionAPI.Regions.Part1RegionData.html#InscryptionAPI_Regions_Part1RegionData_MinTerrain
  commentId: P:InscryptionAPI.Regions.Part1RegionData.MinTerrain
  fullName: InscryptionAPI.Regions.Part1RegionData.MinTerrain
  nameWithType: Part1RegionData.MinTerrain
- uid: InscryptionAPI.Regions.Part1RegionData.MinTerrain*
  name: MinTerrain
  href: api/InscryptionAPI.Regions.Part1RegionData.html#InscryptionAPI_Regions_Part1RegionData_MinTerrain_
  commentId: Overload:InscryptionAPI.Regions.Part1RegionData.MinTerrain
  isSpec: "True"
  fullName: InscryptionAPI.Regions.Part1RegionData.MinTerrain
  nameWithType: Part1RegionData.MinTerrain
- uid: InscryptionAPI.Regions.Part1RegionData.Region
  name: Region
  href: api/InscryptionAPI.Regions.Part1RegionData.html#InscryptionAPI_Regions_Part1RegionData_Region
  commentId: P:InscryptionAPI.Regions.Part1RegionData.Region
  fullName: InscryptionAPI.Regions.Part1RegionData.Region
  nameWithType: Part1RegionData.Region
- uid: InscryptionAPI.Regions.Part1RegionData.Region*
  name: Region
  href: api/InscryptionAPI.Regions.Part1RegionData.html#InscryptionAPI_Regions_Part1RegionData_Region_
  commentId: Overload:InscryptionAPI.Regions.Part1RegionData.Region
  isSpec: "True"
  fullName: InscryptionAPI.Regions.Part1RegionData.Region
  nameWithType: Part1RegionData.Region
- uid: InscryptionAPI.Regions.Part1RegionData.RemoveDefaultReachTerrain
  name: RemoveDefaultReachTerrain
  href: api/InscryptionAPI.Regions.Part1RegionData.html#InscryptionAPI_Regions_Part1RegionData_RemoveDefaultReachTerrain
  commentId: P:InscryptionAPI.Regions.Part1RegionData.RemoveDefaultReachTerrain
  fullName: InscryptionAPI.Regions.Part1RegionData.RemoveDefaultReachTerrain
  nameWithType: Part1RegionData.RemoveDefaultReachTerrain
- uid: InscryptionAPI.Regions.Part1RegionData.RemoveDefaultReachTerrain*
  name: RemoveDefaultReachTerrain
  href: api/InscryptionAPI.Regions.Part1RegionData.html#InscryptionAPI_Regions_Part1RegionData_RemoveDefaultReachTerrain_
  commentId: Overload:InscryptionAPI.Regions.Part1RegionData.RemoveDefaultReachTerrain
  isSpec: "True"
  fullName: InscryptionAPI.Regions.Part1RegionData.RemoveDefaultReachTerrain
  nameWithType: Part1RegionData.RemoveDefaultReachTerrain
- uid: InscryptionAPI.Regions.Part1RegionData.Tier
  name: Tier
  href: api/InscryptionAPI.Regions.Part1RegionData.html#InscryptionAPI_Regions_Part1RegionData_Tier
  commentId: P:InscryptionAPI.Regions.Part1RegionData.Tier
  fullName: InscryptionAPI.Regions.Part1RegionData.Tier
  nameWithType: Part1RegionData.Tier
- uid: InscryptionAPI.Regions.Part1RegionData.Tier*
  name: Tier
  href: api/InscryptionAPI.Regions.Part1RegionData.html#InscryptionAPI_Regions_Part1RegionData_Tier_
  commentId: Overload:InscryptionAPI.Regions.Part1RegionData.Tier
  isSpec: "True"
  fullName: InscryptionAPI.Regions.Part1RegionData.Tier
  nameWithType: Part1RegionData.Tier
- uid: InscryptionAPI.Regions.RegionExtensions
  name: RegionExtensions
  href: api/InscryptionAPI.Regions.RegionExtensions.html
  commentId: T:InscryptionAPI.Regions.RegionExtensions
  fullName: InscryptionAPI.Regions.RegionExtensions
  nameWithType: RegionExtensions
- uid: InscryptionAPI.Regions.RegionExtensions.AddBosses(DiskCardGame.RegionData,DiskCardGame.Opponent.Type[])
  name: AddBosses(RegionData, Opponent.Type[])
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_AddBosses_DiskCardGame_RegionData_DiskCardGame_Opponent_Type___
  commentId: M:InscryptionAPI.Regions.RegionExtensions.AddBosses(DiskCardGame.RegionData,DiskCardGame.Opponent.Type[])
  name.vb: AddBosses(RegionData, Opponent.Type())
  fullName: InscryptionAPI.Regions.RegionExtensions.AddBosses(DiskCardGame.RegionData, DiskCardGame.Opponent.Type[])
  fullName.vb: InscryptionAPI.Regions.RegionExtensions.AddBosses(DiskCardGame.RegionData, DiskCardGame.Opponent.Type())
  nameWithType: RegionExtensions.AddBosses(RegionData, Opponent.Type[])
  nameWithType.vb: RegionExtensions.AddBosses(RegionData, Opponent.Type())
- uid: InscryptionAPI.Regions.RegionExtensions.AddBosses*
  name: AddBosses
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_AddBosses_
  commentId: Overload:InscryptionAPI.Regions.RegionExtensions.AddBosses
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionExtensions.AddBosses
  nameWithType: RegionExtensions.AddBosses
- uid: InscryptionAPI.Regions.RegionExtensions.AddConsumableItems(DiskCardGame.RegionData,DiskCardGame.ConsumableItemData[])
  name: AddConsumableItems(RegionData, ConsumableItemData[])
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_AddConsumableItems_DiskCardGame_RegionData_DiskCardGame_ConsumableItemData___
  commentId: M:InscryptionAPI.Regions.RegionExtensions.AddConsumableItems(DiskCardGame.RegionData,DiskCardGame.ConsumableItemData[])
  name.vb: AddConsumableItems(RegionData, ConsumableItemData())
  fullName: InscryptionAPI.Regions.RegionExtensions.AddConsumableItems(DiskCardGame.RegionData, DiskCardGame.ConsumableItemData[])
  fullName.vb: InscryptionAPI.Regions.RegionExtensions.AddConsumableItems(DiskCardGame.RegionData, DiskCardGame.ConsumableItemData())
  nameWithType: RegionExtensions.AddConsumableItems(RegionData, ConsumableItemData[])
  nameWithType.vb: RegionExtensions.AddConsumableItems(RegionData, ConsumableItemData())
- uid: InscryptionAPI.Regions.RegionExtensions.AddConsumableItems(DiskCardGame.RegionData,System.String[])
  name: AddConsumableItems(RegionData, String[])
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_AddConsumableItems_DiskCardGame_RegionData_System_String___
  commentId: M:InscryptionAPI.Regions.RegionExtensions.AddConsumableItems(DiskCardGame.RegionData,System.String[])
  name.vb: AddConsumableItems(RegionData, String())
  fullName: InscryptionAPI.Regions.RegionExtensions.AddConsumableItems(DiskCardGame.RegionData, System.String[])
  fullName.vb: InscryptionAPI.Regions.RegionExtensions.AddConsumableItems(DiskCardGame.RegionData, System.String())
  nameWithType: RegionExtensions.AddConsumableItems(RegionData, String[])
  nameWithType.vb: RegionExtensions.AddConsumableItems(RegionData, String())
- uid: InscryptionAPI.Regions.RegionExtensions.AddConsumableItems*
  name: AddConsumableItems
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_AddConsumableItems_
  commentId: Overload:InscryptionAPI.Regions.RegionExtensions.AddConsumableItems
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionExtensions.AddConsumableItems
  nameWithType: RegionExtensions.AddConsumableItems
- uid: InscryptionAPI.Regions.RegionExtensions.AddDominantTribes(DiskCardGame.RegionData,DiskCardGame.Tribe[])
  name: AddDominantTribes(RegionData, Tribe[])
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_AddDominantTribes_DiskCardGame_RegionData_DiskCardGame_Tribe___
  commentId: M:InscryptionAPI.Regions.RegionExtensions.AddDominantTribes(DiskCardGame.RegionData,DiskCardGame.Tribe[])
  name.vb: AddDominantTribes(RegionData, Tribe())
  fullName: InscryptionAPI.Regions.RegionExtensions.AddDominantTribes(DiskCardGame.RegionData, DiskCardGame.Tribe[])
  fullName.vb: InscryptionAPI.Regions.RegionExtensions.AddDominantTribes(DiskCardGame.RegionData, DiskCardGame.Tribe())
  nameWithType: RegionExtensions.AddDominantTribes(RegionData, Tribe[])
  nameWithType.vb: RegionExtensions.AddDominantTribes(RegionData, Tribe())
- uid: InscryptionAPI.Regions.RegionExtensions.AddDominantTribes*
  name: AddDominantTribes
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_AddDominantTribes_
  commentId: Overload:InscryptionAPI.Regions.RegionExtensions.AddDominantTribes
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionExtensions.AddDominantTribes
  nameWithType: RegionExtensions.AddDominantTribes
- uid: InscryptionAPI.Regions.RegionExtensions.AddEncounters(DiskCardGame.RegionData,DiskCardGame.EncounterBlueprintData[])
  name: AddEncounters(RegionData, EncounterBlueprintData[])
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_AddEncounters_DiskCardGame_RegionData_DiskCardGame_EncounterBlueprintData___
  commentId: M:InscryptionAPI.Regions.RegionExtensions.AddEncounters(DiskCardGame.RegionData,DiskCardGame.EncounterBlueprintData[])
  name.vb: AddEncounters(RegionData, EncounterBlueprintData())
  fullName: InscryptionAPI.Regions.RegionExtensions.AddEncounters(DiskCardGame.RegionData, DiskCardGame.EncounterBlueprintData[])
  fullName.vb: InscryptionAPI.Regions.RegionExtensions.AddEncounters(DiskCardGame.RegionData, DiskCardGame.EncounterBlueprintData())
  nameWithType: RegionExtensions.AddEncounters(RegionData, EncounterBlueprintData[])
  nameWithType.vb: RegionExtensions.AddEncounters(RegionData, EncounterBlueprintData())
- uid: InscryptionAPI.Regions.RegionExtensions.AddEncounters*
  name: AddEncounters
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_AddEncounters_
  commentId: Overload:InscryptionAPI.Regions.RegionExtensions.AddEncounters
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionExtensions.AddEncounters
  nameWithType: RegionExtensions.AddEncounters
- uid: InscryptionAPI.Regions.RegionExtensions.AddFillerScenery(DiskCardGame.RegionData,DiskCardGame.FillerSceneryEntry[])
  name: AddFillerScenery(RegionData, FillerSceneryEntry[])
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_AddFillerScenery_DiskCardGame_RegionData_DiskCardGame_FillerSceneryEntry___
  commentId: M:InscryptionAPI.Regions.RegionExtensions.AddFillerScenery(DiskCardGame.RegionData,DiskCardGame.FillerSceneryEntry[])
  name.vb: AddFillerScenery(RegionData, FillerSceneryEntry())
  fullName: InscryptionAPI.Regions.RegionExtensions.AddFillerScenery(DiskCardGame.RegionData, DiskCardGame.FillerSceneryEntry[])
  fullName.vb: InscryptionAPI.Regions.RegionExtensions.AddFillerScenery(DiskCardGame.RegionData, DiskCardGame.FillerSceneryEntry())
  nameWithType: RegionExtensions.AddFillerScenery(RegionData, FillerSceneryEntry[])
  nameWithType.vb: RegionExtensions.AddFillerScenery(RegionData, FillerSceneryEntry())
- uid: InscryptionAPI.Regions.RegionExtensions.AddFillerScenery*
  name: AddFillerScenery
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_AddFillerScenery_
  commentId: Overload:InscryptionAPI.Regions.RegionExtensions.AddFillerScenery
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionExtensions.AddFillerScenery
  nameWithType: RegionExtensions.AddFillerScenery
- uid: InscryptionAPI.Regions.RegionExtensions.AddLikelyCards(DiskCardGame.RegionData,System.String[])
  name: AddLikelyCards(RegionData, String[])
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_AddLikelyCards_DiskCardGame_RegionData_System_String___
  commentId: M:InscryptionAPI.Regions.RegionExtensions.AddLikelyCards(DiskCardGame.RegionData,System.String[])
  name.vb: AddLikelyCards(RegionData, String())
  fullName: InscryptionAPI.Regions.RegionExtensions.AddLikelyCards(DiskCardGame.RegionData, System.String[])
  fullName.vb: InscryptionAPI.Regions.RegionExtensions.AddLikelyCards(DiskCardGame.RegionData, System.String())
  nameWithType: RegionExtensions.AddLikelyCards(RegionData, String[])
  nameWithType.vb: RegionExtensions.AddLikelyCards(RegionData, String())
- uid: InscryptionAPI.Regions.RegionExtensions.AddLikelyCards*
  name: AddLikelyCards
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_AddLikelyCards_
  commentId: Overload:InscryptionAPI.Regions.RegionExtensions.AddLikelyCards
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionExtensions.AddLikelyCards
  nameWithType: RegionExtensions.AddLikelyCards
- uid: InscryptionAPI.Regions.RegionExtensions.AddScarceScenery(DiskCardGame.RegionData,DiskCardGame.ScarceSceneryEntry[])
  name: AddScarceScenery(RegionData, ScarceSceneryEntry[])
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_AddScarceScenery_DiskCardGame_RegionData_DiskCardGame_ScarceSceneryEntry___
  commentId: M:InscryptionAPI.Regions.RegionExtensions.AddScarceScenery(DiskCardGame.RegionData,DiskCardGame.ScarceSceneryEntry[])
  name.vb: AddScarceScenery(RegionData, ScarceSceneryEntry())
  fullName: InscryptionAPI.Regions.RegionExtensions.AddScarceScenery(DiskCardGame.RegionData, DiskCardGame.ScarceSceneryEntry[])
  fullName.vb: InscryptionAPI.Regions.RegionExtensions.AddScarceScenery(DiskCardGame.RegionData, DiskCardGame.ScarceSceneryEntry())
  nameWithType: RegionExtensions.AddScarceScenery(RegionData, ScarceSceneryEntry[])
  nameWithType.vb: RegionExtensions.AddScarceScenery(RegionData, ScarceSceneryEntry())
- uid: InscryptionAPI.Regions.RegionExtensions.AddScarceScenery*
  name: AddScarceScenery
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_AddScarceScenery_
  commentId: Overload:InscryptionAPI.Regions.RegionExtensions.AddScarceScenery
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionExtensions.AddScarceScenery
  nameWithType: RegionExtensions.AddScarceScenery
- uid: InscryptionAPI.Regions.RegionExtensions.AddTerrainCards(DiskCardGame.RegionData,System.String[])
  name: AddTerrainCards(RegionData, String[])
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_AddTerrainCards_DiskCardGame_RegionData_System_String___
  commentId: M:InscryptionAPI.Regions.RegionExtensions.AddTerrainCards(DiskCardGame.RegionData,System.String[])
  name.vb: AddTerrainCards(RegionData, String())
  fullName: InscryptionAPI.Regions.RegionExtensions.AddTerrainCards(DiskCardGame.RegionData, System.String[])
  fullName.vb: InscryptionAPI.Regions.RegionExtensions.AddTerrainCards(DiskCardGame.RegionData, System.String())
  nameWithType: RegionExtensions.AddTerrainCards(RegionData, String[])
  nameWithType.vb: RegionExtensions.AddTerrainCards(RegionData, String())
- uid: InscryptionAPI.Regions.RegionExtensions.AddTerrainCards*
  name: AddTerrainCards
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_AddTerrainCards_
  commentId: Overload:InscryptionAPI.Regions.RegionExtensions.AddTerrainCards
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionExtensions.AddTerrainCards
  nameWithType: RegionExtensions.AddTerrainCards
- uid: InscryptionAPI.Regions.RegionExtensions.Build(DiskCardGame.RegionData,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  name: Build(RegionData, Boolean, Boolean, Boolean, Boolean)
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_Build_DiskCardGame_RegionData_System_Boolean_System_Boolean_System_Boolean_System_Boolean_
  commentId: M:InscryptionAPI.Regions.RegionExtensions.Build(DiskCardGame.RegionData,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  fullName: InscryptionAPI.Regions.RegionExtensions.Build(DiskCardGame.RegionData, System.Boolean, System.Boolean, System.Boolean, System.Boolean)
  nameWithType: RegionExtensions.Build(RegionData, Boolean, Boolean, Boolean, Boolean)
- uid: InscryptionAPI.Regions.RegionExtensions.Build*
  name: Build
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_Build_
  commentId: Overload:InscryptionAPI.Regions.RegionExtensions.Build
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionExtensions.Build
  nameWithType: RegionExtensions.Build
- uid: InscryptionAPI.Regions.RegionExtensions.CreateEncounter(DiskCardGame.RegionData,System.String)
  name: CreateEncounter(RegionData, String)
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_CreateEncounter_DiskCardGame_RegionData_System_String_
  commentId: M:InscryptionAPI.Regions.RegionExtensions.CreateEncounter(DiskCardGame.RegionData,System.String)
  fullName: InscryptionAPI.Regions.RegionExtensions.CreateEncounter(DiskCardGame.RegionData, System.String)
  nameWithType: RegionExtensions.CreateEncounter(RegionData, String)
- uid: InscryptionAPI.Regions.RegionExtensions.CreateEncounter*
  name: CreateEncounter
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_CreateEncounter_
  commentId: Overload:InscryptionAPI.Regions.RegionExtensions.CreateEncounter
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionExtensions.CreateEncounter
  nameWithType: RegionExtensions.CreateEncounter
- uid: InscryptionAPI.Regions.RegionExtensions.RegionByName(IEnumerable{DiskCardGame.RegionData},System.String)
  name: RegionByName(IEnumerable<RegionData>, String)
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_RegionByName_IEnumerable_DiskCardGame_RegionData__System_String_
  commentId: M:InscryptionAPI.Regions.RegionExtensions.RegionByName(IEnumerable{DiskCardGame.RegionData},System.String)
  name.vb: RegionByName(IEnumerable(Of RegionData), String)
  fullName: InscryptionAPI.Regions.RegionExtensions.RegionByName(IEnumerable<DiskCardGame.RegionData>, System.String)
  fullName.vb: InscryptionAPI.Regions.RegionExtensions.RegionByName(IEnumerable(Of DiskCardGame.RegionData), System.String)
  nameWithType: RegionExtensions.RegionByName(IEnumerable<RegionData>, String)
  nameWithType.vb: RegionExtensions.RegionByName(IEnumerable(Of RegionData), String)
- uid: InscryptionAPI.Regions.RegionExtensions.RegionByName*
  name: RegionByName
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_RegionByName_
  commentId: Overload:InscryptionAPI.Regions.RegionExtensions.RegionByName
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionExtensions.RegionByName
  nameWithType: RegionExtensions.RegionByName
- uid: InscryptionAPI.Regions.RegionExtensions.SetAmbientLoopId(DiskCardGame.RegionData,System.String)
  name: SetAmbientLoopId(RegionData, String)
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetAmbientLoopId_DiskCardGame_RegionData_System_String_
  commentId: M:InscryptionAPI.Regions.RegionExtensions.SetAmbientLoopId(DiskCardGame.RegionData,System.String)
  fullName: InscryptionAPI.Regions.RegionExtensions.SetAmbientLoopId(DiskCardGame.RegionData, System.String)
  nameWithType: RegionExtensions.SetAmbientLoopId(RegionData, String)
- uid: InscryptionAPI.Regions.RegionExtensions.SetAmbientLoopId*
  name: SetAmbientLoopId
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetAmbientLoopId_
  commentId: Overload:InscryptionAPI.Regions.RegionExtensions.SetAmbientLoopId
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionExtensions.SetAmbientLoopId
  nameWithType: RegionExtensions.SetAmbientLoopId
- uid: InscryptionAPI.Regions.RegionExtensions.SetBoardColor(DiskCardGame.RegionData,UnityEngine.Color)
  name: SetBoardColor(RegionData, Color)
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetBoardColor_DiskCardGame_RegionData_UnityEngine_Color_
  commentId: M:InscryptionAPI.Regions.RegionExtensions.SetBoardColor(DiskCardGame.RegionData,UnityEngine.Color)
  fullName: InscryptionAPI.Regions.RegionExtensions.SetBoardColor(DiskCardGame.RegionData, UnityEngine.Color)
  nameWithType: RegionExtensions.SetBoardColor(RegionData, Color)
- uid: InscryptionAPI.Regions.RegionExtensions.SetBoardColor*
  name: SetBoardColor
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetBoardColor_
  commentId: Overload:InscryptionAPI.Regions.RegionExtensions.SetBoardColor
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionExtensions.SetBoardColor
  nameWithType: RegionExtensions.SetBoardColor
- uid: InscryptionAPI.Regions.RegionExtensions.SetBossPrepCondition(DiskCardGame.RegionData,DiskCardGame.StoryEventCondition)
  name: SetBossPrepCondition(RegionData, StoryEventCondition)
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetBossPrepCondition_DiskCardGame_RegionData_DiskCardGame_StoryEventCondition_
  commentId: M:InscryptionAPI.Regions.RegionExtensions.SetBossPrepCondition(DiskCardGame.RegionData,DiskCardGame.StoryEventCondition)
  fullName: InscryptionAPI.Regions.RegionExtensions.SetBossPrepCondition(DiskCardGame.RegionData, DiskCardGame.StoryEventCondition)
  nameWithType: RegionExtensions.SetBossPrepCondition(RegionData, StoryEventCondition)
- uid: InscryptionAPI.Regions.RegionExtensions.SetBossPrepCondition*
  name: SetBossPrepCondition
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetBossPrepCondition_
  commentId: Overload:InscryptionAPI.Regions.RegionExtensions.SetBossPrepCondition
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionExtensions.SetBossPrepCondition
  nameWithType: RegionExtensions.SetBossPrepCondition
- uid: InscryptionAPI.Regions.RegionExtensions.SetBossPrepEncounter(DiskCardGame.RegionData,DiskCardGame.EncounterBlueprintData)
  name: SetBossPrepEncounter(RegionData, EncounterBlueprintData)
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetBossPrepEncounter_DiskCardGame_RegionData_DiskCardGame_EncounterBlueprintData_
  commentId: M:InscryptionAPI.Regions.RegionExtensions.SetBossPrepEncounter(DiskCardGame.RegionData,DiskCardGame.EncounterBlueprintData)
  fullName: InscryptionAPI.Regions.RegionExtensions.SetBossPrepEncounter(DiskCardGame.RegionData, DiskCardGame.EncounterBlueprintData)
  nameWithType: RegionExtensions.SetBossPrepEncounter(RegionData, EncounterBlueprintData)
- uid: InscryptionAPI.Regions.RegionExtensions.SetBossPrepEncounter*
  name: SetBossPrepEncounter
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetBossPrepEncounter_
  commentId: Overload:InscryptionAPI.Regions.RegionExtensions.SetBossPrepEncounter
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionExtensions.SetBossPrepEncounter
  nameWithType: RegionExtensions.SetBossPrepEncounter
- uid: InscryptionAPI.Regions.RegionExtensions.SetCardsColor(DiskCardGame.RegionData,UnityEngine.Color)
  name: SetCardsColor(RegionData, Color)
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetCardsColor_DiskCardGame_RegionData_UnityEngine_Color_
  commentId: M:InscryptionAPI.Regions.RegionExtensions.SetCardsColor(DiskCardGame.RegionData,UnityEngine.Color)
  fullName: InscryptionAPI.Regions.RegionExtensions.SetCardsColor(DiskCardGame.RegionData, UnityEngine.Color)
  nameWithType: RegionExtensions.SetCardsColor(RegionData, Color)
- uid: InscryptionAPI.Regions.RegionExtensions.SetCardsColor*
  name: SetCardsColor
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetCardsColor_
  commentId: Overload:InscryptionAPI.Regions.RegionExtensions.SetCardsColor
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionExtensions.SetCardsColor
  nameWithType: RegionExtensions.SetCardsColor
- uid: InscryptionAPI.Regions.RegionExtensions.SetDustParticlesEnabled(DiskCardGame.RegionData,System.Boolean)
  name: SetDustParticlesEnabled(RegionData, Boolean)
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetDustParticlesEnabled_DiskCardGame_RegionData_System_Boolean_
  commentId: M:InscryptionAPI.Regions.RegionExtensions.SetDustParticlesEnabled(DiskCardGame.RegionData,System.Boolean)
  fullName: InscryptionAPI.Regions.RegionExtensions.SetDustParticlesEnabled(DiskCardGame.RegionData, System.Boolean)
  nameWithType: RegionExtensions.SetDustParticlesEnabled(RegionData, Boolean)
- uid: InscryptionAPI.Regions.RegionExtensions.SetDustParticlesEnabled*
  name: SetDustParticlesEnabled
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetDustParticlesEnabled_
  commentId: Overload:InscryptionAPI.Regions.RegionExtensions.SetDustParticlesEnabled
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionExtensions.SetDustParticlesEnabled
  nameWithType: RegionExtensions.SetDustParticlesEnabled
- uid: InscryptionAPI.Regions.RegionExtensions.SetFogAlpha(DiskCardGame.RegionData,System.Single)
  name: SetFogAlpha(RegionData, Single)
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetFogAlpha_DiskCardGame_RegionData_System_Single_
  commentId: M:InscryptionAPI.Regions.RegionExtensions.SetFogAlpha(DiskCardGame.RegionData,System.Single)
  fullName: InscryptionAPI.Regions.RegionExtensions.SetFogAlpha(DiskCardGame.RegionData, System.Single)
  nameWithType: RegionExtensions.SetFogAlpha(RegionData, Single)
- uid: InscryptionAPI.Regions.RegionExtensions.SetFogAlpha*
  name: SetFogAlpha
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetFogAlpha_
  commentId: Overload:InscryptionAPI.Regions.RegionExtensions.SetFogAlpha
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionExtensions.SetFogAlpha
  nameWithType: RegionExtensions.SetFogAlpha
- uid: InscryptionAPI.Regions.RegionExtensions.SetFogEnabled(DiskCardGame.RegionData,System.Boolean)
  name: SetFogEnabled(RegionData, Boolean)
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetFogEnabled_DiskCardGame_RegionData_System_Boolean_
  commentId: M:InscryptionAPI.Regions.RegionExtensions.SetFogEnabled(DiskCardGame.RegionData,System.Boolean)
  fullName: InscryptionAPI.Regions.RegionExtensions.SetFogEnabled(DiskCardGame.RegionData, System.Boolean)
  nameWithType: RegionExtensions.SetFogEnabled(RegionData, Boolean)
- uid: InscryptionAPI.Regions.RegionExtensions.SetFogEnabled*
  name: SetFogEnabled
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetFogEnabled_
  commentId: Overload:InscryptionAPI.Regions.RegionExtensions.SetFogEnabled
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionExtensions.SetFogEnabled
  nameWithType: RegionExtensions.SetFogEnabled
- uid: InscryptionAPI.Regions.RegionExtensions.SetFogProfile(DiskCardGame.RegionData,VolumetricFogAndMist.VolumetricFogProfile)
  name: SetFogProfile(RegionData, VolumetricFogProfile)
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetFogProfile_DiskCardGame_RegionData_VolumetricFogAndMist_VolumetricFogProfile_
  commentId: M:InscryptionAPI.Regions.RegionExtensions.SetFogProfile(DiskCardGame.RegionData,VolumetricFogAndMist.VolumetricFogProfile)
  fullName: InscryptionAPI.Regions.RegionExtensions.SetFogProfile(DiskCardGame.RegionData, VolumetricFogAndMist.VolumetricFogProfile)
  nameWithType: RegionExtensions.SetFogProfile(RegionData, VolumetricFogProfile)
- uid: InscryptionAPI.Regions.RegionExtensions.SetFogProfile*
  name: SetFogProfile
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetFogProfile_
  commentId: Overload:InscryptionAPI.Regions.RegionExtensions.SetFogProfile
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionExtensions.SetFogProfile
  nameWithType: RegionExtensions.SetFogProfile
- uid: InscryptionAPI.Regions.RegionExtensions.SetMapAlbedo(DiskCardGame.RegionData,UnityEngine.Texture)
  name: SetMapAlbedo(RegionData, Texture)
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetMapAlbedo_DiskCardGame_RegionData_UnityEngine_Texture_
  commentId: M:InscryptionAPI.Regions.RegionExtensions.SetMapAlbedo(DiskCardGame.RegionData,UnityEngine.Texture)
  fullName: InscryptionAPI.Regions.RegionExtensions.SetMapAlbedo(DiskCardGame.RegionData, UnityEngine.Texture)
  nameWithType: RegionExtensions.SetMapAlbedo(RegionData, Texture)
- uid: InscryptionAPI.Regions.RegionExtensions.SetMapAlbedo*
  name: SetMapAlbedo
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetMapAlbedo_
  commentId: Overload:InscryptionAPI.Regions.RegionExtensions.SetMapAlbedo
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionExtensions.SetMapAlbedo
  nameWithType: RegionExtensions.SetMapAlbedo
- uid: InscryptionAPI.Regions.RegionExtensions.SetMapEmission(DiskCardGame.RegionData,UnityEngine.Texture2D)
  name: SetMapEmission(RegionData, Texture2D)
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetMapEmission_DiskCardGame_RegionData_UnityEngine_Texture2D_
  commentId: M:InscryptionAPI.Regions.RegionExtensions.SetMapEmission(DiskCardGame.RegionData,UnityEngine.Texture2D)
  fullName: InscryptionAPI.Regions.RegionExtensions.SetMapEmission(DiskCardGame.RegionData, UnityEngine.Texture2D)
  nameWithType: RegionExtensions.SetMapEmission(RegionData, Texture2D)
- uid: InscryptionAPI.Regions.RegionExtensions.SetMapEmission*
  name: SetMapEmission
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetMapEmission_
  commentId: Overload:InscryptionAPI.Regions.RegionExtensions.SetMapEmission
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionExtensions.SetMapEmission
  nameWithType: RegionExtensions.SetMapEmission
- uid: InscryptionAPI.Regions.RegionExtensions.SetMapEmissionColor(DiskCardGame.RegionData,UnityEngine.Color)
  name: SetMapEmissionColor(RegionData, Color)
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetMapEmissionColor_DiskCardGame_RegionData_UnityEngine_Color_
  commentId: M:InscryptionAPI.Regions.RegionExtensions.SetMapEmissionColor(DiskCardGame.RegionData,UnityEngine.Color)
  fullName: InscryptionAPI.Regions.RegionExtensions.SetMapEmissionColor(DiskCardGame.RegionData, UnityEngine.Color)
  nameWithType: RegionExtensions.SetMapEmissionColor(RegionData, Color)
- uid: InscryptionAPI.Regions.RegionExtensions.SetMapEmissionColor*
  name: SetMapEmissionColor
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetMapEmissionColor_
  commentId: Overload:InscryptionAPI.Regions.RegionExtensions.SetMapEmissionColor
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionExtensions.SetMapEmissionColor
  nameWithType: RegionExtensions.SetMapEmissionColor
- uid: InscryptionAPI.Regions.RegionExtensions.SetMapParticlesPrefabs(DiskCardGame.RegionData,UnityEngine.GameObject[])
  name: SetMapParticlesPrefabs(RegionData, GameObject[])
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetMapParticlesPrefabs_DiskCardGame_RegionData_UnityEngine_GameObject___
  commentId: M:InscryptionAPI.Regions.RegionExtensions.SetMapParticlesPrefabs(DiskCardGame.RegionData,UnityEngine.GameObject[])
  name.vb: SetMapParticlesPrefabs(RegionData, GameObject())
  fullName: InscryptionAPI.Regions.RegionExtensions.SetMapParticlesPrefabs(DiskCardGame.RegionData, UnityEngine.GameObject[])
  fullName.vb: InscryptionAPI.Regions.RegionExtensions.SetMapParticlesPrefabs(DiskCardGame.RegionData, UnityEngine.GameObject())
  nameWithType: RegionExtensions.SetMapParticlesPrefabs(RegionData, GameObject[])
  nameWithType.vb: RegionExtensions.SetMapParticlesPrefabs(RegionData, GameObject())
- uid: InscryptionAPI.Regions.RegionExtensions.SetMapParticlesPrefabs*
  name: SetMapParticlesPrefabs
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetMapParticlesPrefabs_
  commentId: Overload:InscryptionAPI.Regions.RegionExtensions.SetMapParticlesPrefabs
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionExtensions.SetMapParticlesPrefabs
  nameWithType: RegionExtensions.SetMapParticlesPrefabs
- uid: InscryptionAPI.Regions.RegionExtensions.SetName(DiskCardGame.RegionData,System.String)
  name: SetName(RegionData, String)
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetName_DiskCardGame_RegionData_System_String_
  commentId: M:InscryptionAPI.Regions.RegionExtensions.SetName(DiskCardGame.RegionData,System.String)
  fullName: InscryptionAPI.Regions.RegionExtensions.SetName(DiskCardGame.RegionData, System.String)
  nameWithType: RegionExtensions.SetName(RegionData, String)
- uid: InscryptionAPI.Regions.RegionExtensions.SetName*
  name: SetName
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetName_
  commentId: Overload:InscryptionAPI.Regions.RegionExtensions.SetName
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionExtensions.SetName
  nameWithType: RegionExtensions.SetName
- uid: InscryptionAPI.Regions.RegionExtensions.SetSilenceCabinAmbience(DiskCardGame.RegionData,System.Boolean)
  name: SetSilenceCabinAmbience(RegionData, Boolean)
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetSilenceCabinAmbience_DiskCardGame_RegionData_System_Boolean_
  commentId: M:InscryptionAPI.Regions.RegionExtensions.SetSilenceCabinAmbience(DiskCardGame.RegionData,System.Boolean)
  fullName: InscryptionAPI.Regions.RegionExtensions.SetSilenceCabinAmbience(DiskCardGame.RegionData, System.Boolean)
  nameWithType: RegionExtensions.SetSilenceCabinAmbience(RegionData, Boolean)
- uid: InscryptionAPI.Regions.RegionExtensions.SetSilenceCabinAmbience*
  name: SetSilenceCabinAmbience
  href: api/InscryptionAPI.Regions.RegionExtensions.html#InscryptionAPI_Regions_RegionExtensions_SetSilenceCabinAmbience_
  commentId: Overload:InscryptionAPI.Regions.RegionExtensions.SetSilenceCabinAmbience
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionExtensions.SetSilenceCabinAmbience
  nameWithType: RegionExtensions.SetSilenceCabinAmbience
- uid: InscryptionAPI.Regions.RegionManager
  name: RegionManager
  href: api/InscryptionAPI.Regions.RegionManager.html
  commentId: T:InscryptionAPI.Regions.RegionManager
  fullName: InscryptionAPI.Regions.RegionManager
  nameWithType: RegionManager
- uid: InscryptionAPI.Regions.RegionManager.Add(DiskCardGame.RegionData,System.Int32)
  name: Add(RegionData, Int32)
  href: api/InscryptionAPI.Regions.RegionManager.html#InscryptionAPI_Regions_RegionManager_Add_DiskCardGame_RegionData_System_Int32_
  commentId: M:InscryptionAPI.Regions.RegionManager.Add(DiskCardGame.RegionData,System.Int32)
  fullName: InscryptionAPI.Regions.RegionManager.Add(DiskCardGame.RegionData, System.Int32)
  nameWithType: RegionManager.Add(RegionData, Int32)
- uid: InscryptionAPI.Regions.RegionManager.Add*
  name: Add
  href: api/InscryptionAPI.Regions.RegionManager.html#InscryptionAPI_Regions_RegionManager_Add_
  commentId: Overload:InscryptionAPI.Regions.RegionManager.Add
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionManager.Add
  nameWithType: RegionManager.Add
- uid: InscryptionAPI.Regions.RegionManager.AllRegionsCopy
  name: AllRegionsCopy
  href: api/InscryptionAPI.Regions.RegionManager.html#InscryptionAPI_Regions_RegionManager_AllRegionsCopy
  commentId: P:InscryptionAPI.Regions.RegionManager.AllRegionsCopy
  fullName: InscryptionAPI.Regions.RegionManager.AllRegionsCopy
  nameWithType: RegionManager.AllRegionsCopy
- uid: InscryptionAPI.Regions.RegionManager.AllRegionsCopy*
  name: AllRegionsCopy
  href: api/InscryptionAPI.Regions.RegionManager.html#InscryptionAPI_Regions_RegionManager_AllRegionsCopy_
  commentId: Overload:InscryptionAPI.Regions.RegionManager.AllRegionsCopy
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionManager.AllRegionsCopy
  nameWithType: RegionManager.AllRegionsCopy
- uid: InscryptionAPI.Regions.RegionManager.BaseGameRegions
  name: BaseGameRegions
  href: api/InscryptionAPI.Regions.RegionManager.html#InscryptionAPI_Regions_RegionManager_BaseGameRegions
  commentId: F:InscryptionAPI.Regions.RegionManager.BaseGameRegions
  fullName: InscryptionAPI.Regions.RegionManager.BaseGameRegions
  nameWithType: RegionManager.BaseGameRegions
- uid: InscryptionAPI.Regions.RegionManager.FromTierBasic(System.String,System.Int32,System.Boolean)
  name: FromTierBasic(String, Int32, Boolean)
  href: api/InscryptionAPI.Regions.RegionManager.html#InscryptionAPI_Regions_RegionManager_FromTierBasic_System_String_System_Int32_System_Boolean_
  commentId: M:InscryptionAPI.Regions.RegionManager.FromTierBasic(System.String,System.Int32,System.Boolean)
  fullName: InscryptionAPI.Regions.RegionManager.FromTierBasic(System.String, System.Int32, System.Boolean)
  nameWithType: RegionManager.FromTierBasic(String, Int32, Boolean)
- uid: InscryptionAPI.Regions.RegionManager.FromTierBasic(System.String,System.Int32,System.Int32,System.Boolean)
  name: FromTierBasic(String, Int32, Int32, Boolean)
  href: api/InscryptionAPI.Regions.RegionManager.html#InscryptionAPI_Regions_RegionManager_FromTierBasic_System_String_System_Int32_System_Int32_System_Boolean_
  commentId: M:InscryptionAPI.Regions.RegionManager.FromTierBasic(System.String,System.Int32,System.Int32,System.Boolean)
  fullName: InscryptionAPI.Regions.RegionManager.FromTierBasic(System.String, System.Int32, System.Int32, System.Boolean)
  nameWithType: RegionManager.FromTierBasic(String, Int32, Int32, Boolean)
- uid: InscryptionAPI.Regions.RegionManager.FromTierBasic*
  name: FromTierBasic
  href: api/InscryptionAPI.Regions.RegionManager.html#InscryptionAPI_Regions_RegionManager_FromTierBasic_
  commentId: Overload:InscryptionAPI.Regions.RegionManager.FromTierBasic
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionManager.FromTierBasic
  nameWithType: RegionManager.FromTierBasic
- uid: InscryptionAPI.Regions.RegionManager.FromTierFull(System.String,System.Int32,System.Boolean)
  name: FromTierFull(String, Int32, Boolean)
  href: api/InscryptionAPI.Regions.RegionManager.html#InscryptionAPI_Regions_RegionManager_FromTierFull_System_String_System_Int32_System_Boolean_
  commentId: M:InscryptionAPI.Regions.RegionManager.FromTierFull(System.String,System.Int32,System.Boolean)
  fullName: InscryptionAPI.Regions.RegionManager.FromTierFull(System.String, System.Int32, System.Boolean)
  nameWithType: RegionManager.FromTierFull(String, Int32, Boolean)
- uid: InscryptionAPI.Regions.RegionManager.FromTierFull(System.String,System.Int32,System.Int32,System.Boolean)
  name: FromTierFull(String, Int32, Int32, Boolean)
  href: api/InscryptionAPI.Regions.RegionManager.html#InscryptionAPI_Regions_RegionManager_FromTierFull_System_String_System_Int32_System_Int32_System_Boolean_
  commentId: M:InscryptionAPI.Regions.RegionManager.FromTierFull(System.String,System.Int32,System.Int32,System.Boolean)
  fullName: InscryptionAPI.Regions.RegionManager.FromTierFull(System.String, System.Int32, System.Int32, System.Boolean)
  nameWithType: RegionManager.FromTierFull(String, Int32, Int32, Boolean)
- uid: InscryptionAPI.Regions.RegionManager.FromTierFull*
  name: FromTierFull
  href: api/InscryptionAPI.Regions.RegionManager.html#InscryptionAPI_Regions_RegionManager_FromTierFull_
  commentId: Overload:InscryptionAPI.Regions.RegionManager.FromTierFull
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionManager.FromTierFull
  nameWithType: RegionManager.FromTierFull
- uid: InscryptionAPI.Regions.RegionManager.GetRandomRegionFromTier(System.Int32)
  name: GetRandomRegionFromTier(Int32)
  href: api/InscryptionAPI.Regions.RegionManager.html#InscryptionAPI_Regions_RegionManager_GetRandomRegionFromTier_System_Int32_
  commentId: M:InscryptionAPI.Regions.RegionManager.GetRandomRegionFromTier(System.Int32)
  fullName: InscryptionAPI.Regions.RegionManager.GetRandomRegionFromTier(System.Int32)
  nameWithType: RegionManager.GetRandomRegionFromTier(Int32)
- uid: InscryptionAPI.Regions.RegionManager.GetRandomRegionFromTier*
  name: GetRandomRegionFromTier
  href: api/InscryptionAPI.Regions.RegionManager.html#InscryptionAPI_Regions_RegionManager_GetRandomRegionFromTier_
  commentId: Overload:InscryptionAPI.Regions.RegionManager.GetRandomRegionFromTier
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionManager.GetRandomRegionFromTier
  nameWithType: RegionManager.GetRandomRegionFromTier
- uid: InscryptionAPI.Regions.RegionManager.ModifyRegionsList
  name: ModifyRegionsList
  href: api/InscryptionAPI.Regions.RegionManager.html#InscryptionAPI_Regions_RegionManager_ModifyRegionsList
  commentId: E:InscryptionAPI.Regions.RegionManager.ModifyRegionsList
  fullName: InscryptionAPI.Regions.RegionManager.ModifyRegionsList
  nameWithType: RegionManager.ModifyRegionsList
- uid: InscryptionAPI.Regions.RegionManager.New(System.String,System.Int32,System.Boolean)
  name: New(String, Int32, Boolean)
  href: api/InscryptionAPI.Regions.RegionManager.html#InscryptionAPI_Regions_RegionManager_New_System_String_System_Int32_System_Boolean_
  commentId: M:InscryptionAPI.Regions.RegionManager.New(System.String,System.Int32,System.Boolean)
  fullName: InscryptionAPI.Regions.RegionManager.New(System.String, System.Int32, System.Boolean)
  nameWithType: RegionManager.New(String, Int32, Boolean)
- uid: InscryptionAPI.Regions.RegionManager.New*
  name: New
  href: api/InscryptionAPI.Regions.RegionManager.html#InscryptionAPI_Regions_RegionManager_New_
  commentId: Overload:InscryptionAPI.Regions.RegionManager.New
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionManager.New
  nameWithType: RegionManager.New
- uid: InscryptionAPI.Regions.RegionManager.Remove(DiskCardGame.RegionData)
  name: Remove(RegionData)
  href: api/InscryptionAPI.Regions.RegionManager.html#InscryptionAPI_Regions_RegionManager_Remove_DiskCardGame_RegionData_
  commentId: M:InscryptionAPI.Regions.RegionManager.Remove(DiskCardGame.RegionData)
  fullName: InscryptionAPI.Regions.RegionManager.Remove(DiskCardGame.RegionData)
  nameWithType: RegionManager.Remove(RegionData)
- uid: InscryptionAPI.Regions.RegionManager.Remove*
  name: Remove
  href: api/InscryptionAPI.Regions.RegionManager.html#InscryptionAPI_Regions_RegionManager_Remove_
  commentId: Overload:InscryptionAPI.Regions.RegionManager.Remove
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionManager.Remove
  nameWithType: RegionManager.Remove
- uid: InscryptionAPI.Regions.RegionManager.SyncRegionList
  name: SyncRegionList()
  href: api/InscryptionAPI.Regions.RegionManager.html#InscryptionAPI_Regions_RegionManager_SyncRegionList
  commentId: M:InscryptionAPI.Regions.RegionManager.SyncRegionList
  fullName: InscryptionAPI.Regions.RegionManager.SyncRegionList()
  nameWithType: RegionManager.SyncRegionList()
- uid: InscryptionAPI.Regions.RegionManager.SyncRegionList*
  name: SyncRegionList
  href: api/InscryptionAPI.Regions.RegionManager.html#InscryptionAPI_Regions_RegionManager_SyncRegionList_
  commentId: Overload:InscryptionAPI.Regions.RegionManager.SyncRegionList
  isSpec: "True"
  fullName: InscryptionAPI.Regions.RegionManager.SyncRegionList
  nameWithType: RegionManager.SyncRegionList
- uid: InscryptionAPI.Saves
  name: InscryptionAPI.Saves
  href: api/InscryptionAPI.Saves.html
  commentId: N:InscryptionAPI.Saves
  fullName: InscryptionAPI.Saves
  nameWithType: InscryptionAPI.Saves
- uid: InscryptionAPI.Saves.ModdedSaveData
  name: ModdedSaveData
  href: api/InscryptionAPI.Saves.ModdedSaveData.html
  commentId: T:InscryptionAPI.Saves.ModdedSaveData
  fullName: InscryptionAPI.Saves.ModdedSaveData
  nameWithType: ModdedSaveData
- uid: InscryptionAPI.Saves.ModdedSaveData.GetValue(System.String,System.String)
  name: GetValue(String, String)
  href: api/InscryptionAPI.Saves.ModdedSaveData.html#InscryptionAPI_Saves_ModdedSaveData_GetValue_System_String_System_String_
  commentId: M:InscryptionAPI.Saves.ModdedSaveData.GetValue(System.String,System.String)
  fullName: InscryptionAPI.Saves.ModdedSaveData.GetValue(System.String, System.String)
  nameWithType: ModdedSaveData.GetValue(String, String)
- uid: InscryptionAPI.Saves.ModdedSaveData.GetValue*
  name: GetValue
  href: api/InscryptionAPI.Saves.ModdedSaveData.html#InscryptionAPI_Saves_ModdedSaveData_GetValue_
  commentId: Overload:InscryptionAPI.Saves.ModdedSaveData.GetValue
  isSpec: "True"
  fullName: InscryptionAPI.Saves.ModdedSaveData.GetValue
  nameWithType: ModdedSaveData.GetValue
- uid: InscryptionAPI.Saves.ModdedSaveData.GetValueAsBoolean(System.String,System.String)
  name: GetValueAsBoolean(String, String)
  href: api/InscryptionAPI.Saves.ModdedSaveData.html#InscryptionAPI_Saves_ModdedSaveData_GetValueAsBoolean_System_String_System_String_
  commentId: M:InscryptionAPI.Saves.ModdedSaveData.GetValueAsBoolean(System.String,System.String)
  fullName: InscryptionAPI.Saves.ModdedSaveData.GetValueAsBoolean(System.String, System.String)
  nameWithType: ModdedSaveData.GetValueAsBoolean(String, String)
- uid: InscryptionAPI.Saves.ModdedSaveData.GetValueAsBoolean*
  name: GetValueAsBoolean
  href: api/InscryptionAPI.Saves.ModdedSaveData.html#InscryptionAPI_Saves_ModdedSaveData_GetValueAsBoolean_
  commentId: Overload:InscryptionAPI.Saves.ModdedSaveData.GetValueAsBoolean
  isSpec: "True"
  fullName: InscryptionAPI.Saves.ModdedSaveData.GetValueAsBoolean
  nameWithType: ModdedSaveData.GetValueAsBoolean
- uid: InscryptionAPI.Saves.ModdedSaveData.GetValueAsFloat(System.String,System.String)
  name: GetValueAsFloat(String, String)
  href: api/InscryptionAPI.Saves.ModdedSaveData.html#InscryptionAPI_Saves_ModdedSaveData_GetValueAsFloat_System_String_System_String_
  commentId: M:InscryptionAPI.Saves.ModdedSaveData.GetValueAsFloat(System.String,System.String)
  fullName: InscryptionAPI.Saves.ModdedSaveData.GetValueAsFloat(System.String, System.String)
  nameWithType: ModdedSaveData.GetValueAsFloat(String, String)
- uid: InscryptionAPI.Saves.ModdedSaveData.GetValueAsFloat*
  name: GetValueAsFloat
  href: api/InscryptionAPI.Saves.ModdedSaveData.html#InscryptionAPI_Saves_ModdedSaveData_GetValueAsFloat_
  commentId: Overload:InscryptionAPI.Saves.ModdedSaveData.GetValueAsFloat
  isSpec: "True"
  fullName: InscryptionAPI.Saves.ModdedSaveData.GetValueAsFloat
  nameWithType: ModdedSaveData.GetValueAsFloat
- uid: InscryptionAPI.Saves.ModdedSaveData.GetValueAsInt(System.String,System.String)
  name: GetValueAsInt(String, String)
  href: api/InscryptionAPI.Saves.ModdedSaveData.html#InscryptionAPI_Saves_ModdedSaveData_GetValueAsInt_System_String_System_String_
  commentId: M:InscryptionAPI.Saves.ModdedSaveData.GetValueAsInt(System.String,System.String)
  fullName: InscryptionAPI.Saves.ModdedSaveData.GetValueAsInt(System.String, System.String)
  nameWithType: ModdedSaveData.GetValueAsInt(String, String)
- uid: InscryptionAPI.Saves.ModdedSaveData.GetValueAsInt*
  name: GetValueAsInt
  href: api/InscryptionAPI.Saves.ModdedSaveData.html#InscryptionAPI_Saves_ModdedSaveData_GetValueAsInt_
  commentId: Overload:InscryptionAPI.Saves.ModdedSaveData.GetValueAsInt
  isSpec: "True"
  fullName: InscryptionAPI.Saves.ModdedSaveData.GetValueAsInt
  nameWithType: ModdedSaveData.GetValueAsInt
- uid: InscryptionAPI.Saves.ModdedSaveData.GetValueAsObject*
  name: GetValueAsObject
  href: api/InscryptionAPI.Saves.ModdedSaveData.html#InscryptionAPI_Saves_ModdedSaveData_GetValueAsObject_
  commentId: Overload:InscryptionAPI.Saves.ModdedSaveData.GetValueAsObject
  isSpec: "True"
  fullName: InscryptionAPI.Saves.ModdedSaveData.GetValueAsObject
  nameWithType: ModdedSaveData.GetValueAsObject
- uid: InscryptionAPI.Saves.ModdedSaveData.GetValueAsObject``1(System.String,System.String)
  name: GetValueAsObject<T>(String, String)
  href: api/InscryptionAPI.Saves.ModdedSaveData.html#InscryptionAPI_Saves_ModdedSaveData_GetValueAsObject__1_System_String_System_String_
  commentId: M:InscryptionAPI.Saves.ModdedSaveData.GetValueAsObject``1(System.String,System.String)
  name.vb: GetValueAsObject(Of T)(String, String)
  fullName: InscryptionAPI.Saves.ModdedSaveData.GetValueAsObject<T>(System.String, System.String)
  fullName.vb: InscryptionAPI.Saves.ModdedSaveData.GetValueAsObject(Of T)(System.String, System.String)
  nameWithType: ModdedSaveData.GetValueAsObject<T>(String, String)
  nameWithType.vb: ModdedSaveData.GetValueAsObject(Of T)(String, String)
- uid: InscryptionAPI.Saves.ModdedSaveData.SetValue(System.String,System.String,System.Object)
  name: SetValue(String, String, Object)
  href: api/InscryptionAPI.Saves.ModdedSaveData.html#InscryptionAPI_Saves_ModdedSaveData_SetValue_System_String_System_String_System_Object_
  commentId: M:InscryptionAPI.Saves.ModdedSaveData.SetValue(System.String,System.String,System.Object)
  fullName: InscryptionAPI.Saves.ModdedSaveData.SetValue(System.String, System.String, System.Object)
  nameWithType: ModdedSaveData.SetValue(String, String, Object)
- uid: InscryptionAPI.Saves.ModdedSaveData.SetValue*
  name: SetValue
  href: api/InscryptionAPI.Saves.ModdedSaveData.html#InscryptionAPI_Saves_ModdedSaveData_SetValue_
  commentId: Overload:InscryptionAPI.Saves.ModdedSaveData.SetValue
  isSpec: "True"
  fullName: InscryptionAPI.Saves.ModdedSaveData.SetValue
  nameWithType: ModdedSaveData.SetValue
- uid: InscryptionAPI.Saves.ModdedSaveData.SetValueAsObject*
  name: SetValueAsObject
  href: api/InscryptionAPI.Saves.ModdedSaveData.html#InscryptionAPI_Saves_ModdedSaveData_SetValueAsObject_
  commentId: Overload:InscryptionAPI.Saves.ModdedSaveData.SetValueAsObject
  isSpec: "True"
  fullName: InscryptionAPI.Saves.ModdedSaveData.SetValueAsObject
  nameWithType: ModdedSaveData.SetValueAsObject
- uid: InscryptionAPI.Saves.ModdedSaveData.SetValueAsObject``1(System.String,System.String,``0)
  name: SetValueAsObject<T>(String, String, T)
  href: api/InscryptionAPI.Saves.ModdedSaveData.html#InscryptionAPI_Saves_ModdedSaveData_SetValueAsObject__1_System_String_System_String___0_
  commentId: M:InscryptionAPI.Saves.ModdedSaveData.SetValueAsObject``1(System.String,System.String,``0)
  name.vb: SetValueAsObject(Of T)(String, String, T)
  fullName: InscryptionAPI.Saves.ModdedSaveData.SetValueAsObject<T>(System.String, System.String, T)
  fullName.vb: InscryptionAPI.Saves.ModdedSaveData.SetValueAsObject(Of T)(System.String, System.String, T)
  nameWithType: ModdedSaveData.SetValueAsObject<T>(String, String, T)
  nameWithType.vb: ModdedSaveData.SetValueAsObject(Of T)(String, String, T)
- uid: InscryptionAPI.Saves.ModdedSaveManager
  name: ModdedSaveManager
  href: api/InscryptionAPI.Saves.ModdedSaveManager.html
  commentId: T:InscryptionAPI.Saves.ModdedSaveManager
  fullName: InscryptionAPI.Saves.ModdedSaveManager
  nameWithType: ModdedSaveManager
- uid: InscryptionAPI.Saves.ModdedSaveManager.RunState
  name: RunState
  href: api/InscryptionAPI.Saves.ModdedSaveManager.html#InscryptionAPI_Saves_ModdedSaveManager_RunState
  commentId: P:InscryptionAPI.Saves.ModdedSaveManager.RunState
  fullName: InscryptionAPI.Saves.ModdedSaveManager.RunState
  nameWithType: ModdedSaveManager.RunState
- uid: InscryptionAPI.Saves.ModdedSaveManager.RunState*
  name: RunState
  href: api/InscryptionAPI.Saves.ModdedSaveManager.html#InscryptionAPI_Saves_ModdedSaveManager_RunState_
  commentId: Overload:InscryptionAPI.Saves.ModdedSaveManager.RunState
  isSpec: "True"
  fullName: InscryptionAPI.Saves.ModdedSaveManager.RunState
  nameWithType: ModdedSaveManager.RunState
- uid: InscryptionAPI.Saves.ModdedSaveManager.SaveData
  name: SaveData
  href: api/InscryptionAPI.Saves.ModdedSaveManager.html#InscryptionAPI_Saves_ModdedSaveManager_SaveData
  commentId: P:InscryptionAPI.Saves.ModdedSaveManager.SaveData
  fullName: InscryptionAPI.Saves.ModdedSaveManager.SaveData
  nameWithType: ModdedSaveManager.SaveData
- uid: InscryptionAPI.Saves.ModdedSaveManager.SaveData*
  name: SaveData
  href: api/InscryptionAPI.Saves.ModdedSaveManager.html#InscryptionAPI_Saves_ModdedSaveManager_SaveData_
  commentId: Overload:InscryptionAPI.Saves.ModdedSaveManager.SaveData
  isSpec: "True"
  fullName: InscryptionAPI.Saves.ModdedSaveManager.SaveData
  nameWithType: ModdedSaveManager.SaveData
- uid: InscryptionAPI.Triggers
  name: InscryptionAPI.Triggers
  href: api/InscryptionAPI.Triggers.html
  commentId: N:InscryptionAPI.Triggers
  fullName: InscryptionAPI.Triggers
  nameWithType: InscryptionAPI.Triggers
- uid: InscryptionAPI.Triggers.CustomTriggerFinder
  name: CustomTriggerFinder
  href: api/InscryptionAPI.Triggers.CustomTriggerFinder.html
  commentId: T:InscryptionAPI.Triggers.CustomTriggerFinder
  fullName: InscryptionAPI.Triggers.CustomTriggerFinder
  nameWithType: CustomTriggerFinder
- uid: InscryptionAPI.Triggers.CustomTriggerFinder.Call*
  name: Call
  href: api/InscryptionAPI.Triggers.CustomTriggerFinder.html#InscryptionAPI_Triggers_CustomTriggerFinder_Call_
  commentId: Overload:InscryptionAPI.Triggers.CustomTriggerFinder.Call
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.CustomTriggerFinder.Call
  nameWithType: CustomTriggerFinder.Call
- uid: InscryptionAPI.Triggers.CustomTriggerFinder.Call``1(DiskCardGame.CardTriggerHandler,Func{``0,System.Boolean},Action{``0})
  name: Call<T>(CardTriggerHandler, Func<T, Boolean>, Action<T>)
  href: api/InscryptionAPI.Triggers.CustomTriggerFinder.html#InscryptionAPI_Triggers_CustomTriggerFinder_Call__1_DiskCardGame_CardTriggerHandler_Func___0_System_Boolean__Action___0__
  commentId: M:InscryptionAPI.Triggers.CustomTriggerFinder.Call``1(DiskCardGame.CardTriggerHandler,Func{``0,System.Boolean},Action{``0})
  name.vb: Call(Of T)(CardTriggerHandler, Func(Of T, Boolean), Action(Of T))
  fullName: InscryptionAPI.Triggers.CustomTriggerFinder.Call<T>(DiskCardGame.CardTriggerHandler, Func<T, System.Boolean>, Action<T>)
  fullName.vb: InscryptionAPI.Triggers.CustomTriggerFinder.Call(Of T)(DiskCardGame.CardTriggerHandler, Func(Of T, System.Boolean), Action(Of T))
  nameWithType: CustomTriggerFinder.Call<T>(CardTriggerHandler, Func<T, Boolean>, Action<T>)
  nameWithType.vb: CustomTriggerFinder.Call(Of T)(CardTriggerHandler, Func(Of T, Boolean), Action(Of T))
- uid: InscryptionAPI.Triggers.CustomTriggerFinder.Call``1(DiskCardGame.PlayableCard,Func{``0,System.Boolean},Action{``0})
  name: Call<T>(PlayableCard, Func<T, Boolean>, Action<T>)
  href: api/InscryptionAPI.Triggers.CustomTriggerFinder.html#InscryptionAPI_Triggers_CustomTriggerFinder_Call__1_DiskCardGame_PlayableCard_Func___0_System_Boolean__Action___0__
  commentId: M:InscryptionAPI.Triggers.CustomTriggerFinder.Call``1(DiskCardGame.PlayableCard,Func{``0,System.Boolean},Action{``0})
  name.vb: Call(Of T)(PlayableCard, Func(Of T, Boolean), Action(Of T))
  fullName: InscryptionAPI.Triggers.CustomTriggerFinder.Call<T>(DiskCardGame.PlayableCard, Func<T, System.Boolean>, Action<T>)
  fullName.vb: InscryptionAPI.Triggers.CustomTriggerFinder.Call(Of T)(DiskCardGame.PlayableCard, Func(Of T, System.Boolean), Action(Of T))
  nameWithType: CustomTriggerFinder.Call<T>(PlayableCard, Func<T, Boolean>, Action<T>)
  nameWithType.vb: CustomTriggerFinder.Call(Of T)(PlayableCard, Func(Of T, Boolean), Action(Of T))
- uid: InscryptionAPI.Triggers.CustomTriggerFinder.CallAll*
  name: CallAll
  href: api/InscryptionAPI.Triggers.CustomTriggerFinder.html#InscryptionAPI_Triggers_CustomTriggerFinder_CallAll_
  commentId: Overload:InscryptionAPI.Triggers.CustomTriggerFinder.CallAll
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.CustomTriggerFinder.CallAll
  nameWithType: CustomTriggerFinder.CallAll
- uid: InscryptionAPI.Triggers.CustomTriggerFinder.CallAll``1(System.Boolean,Func{``0,System.Boolean},Action{``0})
  name: CallAll<T>(Boolean, Func<T, Boolean>, Action<T>)
  href: api/InscryptionAPI.Triggers.CustomTriggerFinder.html#InscryptionAPI_Triggers_CustomTriggerFinder_CallAll__1_System_Boolean_Func___0_System_Boolean__Action___0__
  commentId: M:InscryptionAPI.Triggers.CustomTriggerFinder.CallAll``1(System.Boolean,Func{``0,System.Boolean},Action{``0})
  name.vb: CallAll(Of T)(Boolean, Func(Of T, Boolean), Action(Of T))
  fullName: InscryptionAPI.Triggers.CustomTriggerFinder.CallAll<T>(System.Boolean, Func<T, System.Boolean>, Action<T>)
  fullName.vb: InscryptionAPI.Triggers.CustomTriggerFinder.CallAll(Of T)(System.Boolean, Func(Of T, System.Boolean), Action(Of T))
  nameWithType: CustomTriggerFinder.CallAll<T>(Boolean, Func<T, Boolean>, Action<T>)
  nameWithType.vb: CustomTriggerFinder.CallAll(Of T)(Boolean, Func(Of T, Boolean), Action(Of T))
- uid: InscryptionAPI.Triggers.CustomTriggerFinder.CallInHand*
  name: CallInHand
  href: api/InscryptionAPI.Triggers.CustomTriggerFinder.html#InscryptionAPI_Triggers_CustomTriggerFinder_CallInHand_
  commentId: Overload:InscryptionAPI.Triggers.CustomTriggerFinder.CallInHand
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.CustomTriggerFinder.CallInHand
  nameWithType: CustomTriggerFinder.CallInHand
- uid: InscryptionAPI.Triggers.CustomTriggerFinder.CallInHand``1(Func{``0,System.Boolean},Action{``0})
  name: CallInHand<T>(Func<T, Boolean>, Action<T>)
  href: api/InscryptionAPI.Triggers.CustomTriggerFinder.html#InscryptionAPI_Triggers_CustomTriggerFinder_CallInHand__1_Func___0_System_Boolean__Action___0__
  commentId: M:InscryptionAPI.Triggers.CustomTriggerFinder.CallInHand``1(Func{``0,System.Boolean},Action{``0})
  name.vb: CallInHand(Of T)(Func(Of T, Boolean), Action(Of T))
  fullName: InscryptionAPI.Triggers.CustomTriggerFinder.CallInHand<T>(Func<T, System.Boolean>, Action<T>)
  fullName.vb: InscryptionAPI.Triggers.CustomTriggerFinder.CallInHand(Of T)(Func(Of T, System.Boolean), Action(Of T))
  nameWithType: CustomTriggerFinder.CallInHand<T>(Func<T, Boolean>, Action<T>)
  nameWithType.vb: CustomTriggerFinder.CallInHand(Of T)(Func(Of T, Boolean), Action(Of T))
- uid: InscryptionAPI.Triggers.CustomTriggerFinder.CallOnBoard*
  name: CallOnBoard
  href: api/InscryptionAPI.Triggers.CustomTriggerFinder.html#InscryptionAPI_Triggers_CustomTriggerFinder_CallOnBoard_
  commentId: Overload:InscryptionAPI.Triggers.CustomTriggerFinder.CallOnBoard
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.CustomTriggerFinder.CallOnBoard
  nameWithType: CustomTriggerFinder.CallOnBoard
- uid: InscryptionAPI.Triggers.CustomTriggerFinder.CallOnBoard``1(System.Boolean,Func{``0,System.Boolean},Action{``0})
  name: CallOnBoard<T>(Boolean, Func<T, Boolean>, Action<T>)
  href: api/InscryptionAPI.Triggers.CustomTriggerFinder.html#InscryptionAPI_Triggers_CustomTriggerFinder_CallOnBoard__1_System_Boolean_Func___0_System_Boolean__Action___0__
  commentId: M:InscryptionAPI.Triggers.CustomTriggerFinder.CallOnBoard``1(System.Boolean,Func{``0,System.Boolean},Action{``0})
  name.vb: CallOnBoard(Of T)(Boolean, Func(Of T, Boolean), Action(Of T))
  fullName: InscryptionAPI.Triggers.CustomTriggerFinder.CallOnBoard<T>(System.Boolean, Func<T, System.Boolean>, Action<T>)
  fullName.vb: InscryptionAPI.Triggers.CustomTriggerFinder.CallOnBoard(Of T)(System.Boolean, Func(Of T, System.Boolean), Action(Of T))
  nameWithType: CustomTriggerFinder.CallOnBoard<T>(Boolean, Func<T, Boolean>, Action<T>)
  nameWithType.vb: CustomTriggerFinder.CallOnBoard(Of T)(Boolean, Func(Of T, Boolean), Action(Of T))
- uid: InscryptionAPI.Triggers.CustomTriggerFinder.CollectData*
  name: CollectData
  href: api/InscryptionAPI.Triggers.CustomTriggerFinder.html#InscryptionAPI_Triggers_CustomTriggerFinder_CollectData_
  commentId: Overload:InscryptionAPI.Triggers.CustomTriggerFinder.CollectData
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.CustomTriggerFinder.CollectData
  nameWithType: CustomTriggerFinder.CollectData
- uid: InscryptionAPI.Triggers.CustomTriggerFinder.CollectData``2(DiskCardGame.CardTriggerHandler,Func{``0,System.Boolean},Func{``0,``1})
  name: CollectData<T, T2>(CardTriggerHandler, Func<T, Boolean>, Func<T, T2>)
  href: api/InscryptionAPI.Triggers.CustomTriggerFinder.html#InscryptionAPI_Triggers_CustomTriggerFinder_CollectData__2_DiskCardGame_CardTriggerHandler_Func___0_System_Boolean__Func___0___1__
  commentId: M:InscryptionAPI.Triggers.CustomTriggerFinder.CollectData``2(DiskCardGame.CardTriggerHandler,Func{``0,System.Boolean},Func{``0,``1})
  name.vb: CollectData(Of T, T2)(CardTriggerHandler, Func(Of T, Boolean), Func(Of T, T2))
  fullName: InscryptionAPI.Triggers.CustomTriggerFinder.CollectData<T, T2>(DiskCardGame.CardTriggerHandler, Func<T, System.Boolean>, Func<T, T2>)
  fullName.vb: InscryptionAPI.Triggers.CustomTriggerFinder.CollectData(Of T, T2)(DiskCardGame.CardTriggerHandler, Func(Of T, System.Boolean), Func(Of T, T2))
  nameWithType: CustomTriggerFinder.CollectData<T, T2>(CardTriggerHandler, Func<T, Boolean>, Func<T, T2>)
  nameWithType.vb: CustomTriggerFinder.CollectData(Of T, T2)(CardTriggerHandler, Func(Of T, Boolean), Func(Of T, T2))
- uid: InscryptionAPI.Triggers.CustomTriggerFinder.CollectData``2(DiskCardGame.PlayableCard,Func{``0,System.Boolean},Func{``0,``1})
  name: CollectData<T, T2>(PlayableCard, Func<T, Boolean>, Func<T, T2>)
  href: api/InscryptionAPI.Triggers.CustomTriggerFinder.html#InscryptionAPI_Triggers_CustomTriggerFinder_CollectData__2_DiskCardGame_PlayableCard_Func___0_System_Boolean__Func___0___1__
  commentId: M:InscryptionAPI.Triggers.CustomTriggerFinder.CollectData``2(DiskCardGame.PlayableCard,Func{``0,System.Boolean},Func{``0,``1})
  name.vb: CollectData(Of T, T2)(PlayableCard, Func(Of T, Boolean), Func(Of T, T2))
  fullName: InscryptionAPI.Triggers.CustomTriggerFinder.CollectData<T, T2>(DiskCardGame.PlayableCard, Func<T, System.Boolean>, Func<T, T2>)
  fullName.vb: InscryptionAPI.Triggers.CustomTriggerFinder.CollectData(Of T, T2)(DiskCardGame.PlayableCard, Func(Of T, System.Boolean), Func(Of T, T2))
  nameWithType: CustomTriggerFinder.CollectData<T, T2>(PlayableCard, Func<T, Boolean>, Func<T, T2>)
  nameWithType.vb: CustomTriggerFinder.CollectData(Of T, T2)(PlayableCard, Func(Of T, Boolean), Func(Of T, T2))
- uid: InscryptionAPI.Triggers.CustomTriggerFinder.CollectDataAll*
  name: CollectDataAll
  href: api/InscryptionAPI.Triggers.CustomTriggerFinder.html#InscryptionAPI_Triggers_CustomTriggerFinder_CollectDataAll_
  commentId: Overload:InscryptionAPI.Triggers.CustomTriggerFinder.CollectDataAll
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.CustomTriggerFinder.CollectDataAll
  nameWithType: CustomTriggerFinder.CollectDataAll
- uid: InscryptionAPI.Triggers.CustomTriggerFinder.CollectDataAll``2(System.Boolean,Func{``0,System.Boolean},Func{``0,``1})
  name: CollectDataAll<T, T2>(Boolean, Func<T, Boolean>, Func<T, T2>)
  href: api/InscryptionAPI.Triggers.CustomTriggerFinder.html#InscryptionAPI_Triggers_CustomTriggerFinder_CollectDataAll__2_System_Boolean_Func___0_System_Boolean__Func___0___1__
  commentId: M:InscryptionAPI.Triggers.CustomTriggerFinder.CollectDataAll``2(System.Boolean,Func{``0,System.Boolean},Func{``0,``1})
  name.vb: CollectDataAll(Of T, T2)(Boolean, Func(Of T, Boolean), Func(Of T, T2))
  fullName: InscryptionAPI.Triggers.CustomTriggerFinder.CollectDataAll<T, T2>(System.Boolean, Func<T, System.Boolean>, Func<T, T2>)
  fullName.vb: InscryptionAPI.Triggers.CustomTriggerFinder.CollectDataAll(Of T, T2)(System.Boolean, Func(Of T, System.Boolean), Func(Of T, T2))
  nameWithType: CustomTriggerFinder.CollectDataAll<T, T2>(Boolean, Func<T, Boolean>, Func<T, T2>)
  nameWithType.vb: CustomTriggerFinder.CollectDataAll(Of T, T2)(Boolean, Func(Of T, Boolean), Func(Of T, T2))
- uid: InscryptionAPI.Triggers.CustomTriggerFinder.CollectDataInHand*
  name: CollectDataInHand
  href: api/InscryptionAPI.Triggers.CustomTriggerFinder.html#InscryptionAPI_Triggers_CustomTriggerFinder_CollectDataInHand_
  commentId: Overload:InscryptionAPI.Triggers.CustomTriggerFinder.CollectDataInHand
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.CustomTriggerFinder.CollectDataInHand
  nameWithType: CustomTriggerFinder.CollectDataInHand
- uid: InscryptionAPI.Triggers.CustomTriggerFinder.CollectDataInHand``2(Func{``0,System.Boolean},Func{``0,``1})
  name: CollectDataInHand<T, T2>(Func<T, Boolean>, Func<T, T2>)
  href: api/InscryptionAPI.Triggers.CustomTriggerFinder.html#InscryptionAPI_Triggers_CustomTriggerFinder_CollectDataInHand__2_Func___0_System_Boolean__Func___0___1__
  commentId: M:InscryptionAPI.Triggers.CustomTriggerFinder.CollectDataInHand``2(Func{``0,System.Boolean},Func{``0,``1})
  name.vb: CollectDataInHand(Of T, T2)(Func(Of T, Boolean), Func(Of T, T2))
  fullName: InscryptionAPI.Triggers.CustomTriggerFinder.CollectDataInHand<T, T2>(Func<T, System.Boolean>, Func<T, T2>)
  fullName.vb: InscryptionAPI.Triggers.CustomTriggerFinder.CollectDataInHand(Of T, T2)(Func(Of T, System.Boolean), Func(Of T, T2))
  nameWithType: CustomTriggerFinder.CollectDataInHand<T, T2>(Func<T, Boolean>, Func<T, T2>)
  nameWithType.vb: CustomTriggerFinder.CollectDataInHand(Of T, T2)(Func(Of T, Boolean), Func(Of T, T2))
- uid: InscryptionAPI.Triggers.CustomTriggerFinder.CollectDataOnBoard*
  name: CollectDataOnBoard
  href: api/InscryptionAPI.Triggers.CustomTriggerFinder.html#InscryptionAPI_Triggers_CustomTriggerFinder_CollectDataOnBoard_
  commentId: Overload:InscryptionAPI.Triggers.CustomTriggerFinder.CollectDataOnBoard
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.CustomTriggerFinder.CollectDataOnBoard
  nameWithType: CustomTriggerFinder.CollectDataOnBoard
- uid: InscryptionAPI.Triggers.CustomTriggerFinder.CollectDataOnBoard``2(System.Boolean,Func{``0,System.Boolean},Func{``0,``1})
  name: CollectDataOnBoard<T, T2>(Boolean, Func<T, Boolean>, Func<T, T2>)
  href: api/InscryptionAPI.Triggers.CustomTriggerFinder.html#InscryptionAPI_Triggers_CustomTriggerFinder_CollectDataOnBoard__2_System_Boolean_Func___0_System_Boolean__Func___0___1__
  commentId: M:InscryptionAPI.Triggers.CustomTriggerFinder.CollectDataOnBoard``2(System.Boolean,Func{``0,System.Boolean},Func{``0,``1})
  name.vb: CollectDataOnBoard(Of T, T2)(Boolean, Func(Of T, Boolean), Func(Of T, T2))
  fullName: InscryptionAPI.Triggers.CustomTriggerFinder.CollectDataOnBoard<T, T2>(System.Boolean, Func<T, System.Boolean>, Func<T, T2>)
  fullName.vb: InscryptionAPI.Triggers.CustomTriggerFinder.CollectDataOnBoard(Of T, T2)(System.Boolean, Func(Of T, System.Boolean), Func(Of T, T2))
  nameWithType: CustomTriggerFinder.CollectDataOnBoard<T, T2>(Boolean, Func<T, Boolean>, Func<T, T2>)
  nameWithType.vb: CustomTriggerFinder.CollectDataOnBoard(Of T, T2)(Boolean, Func(Of T, Boolean), Func(Of T, T2))
- uid: InscryptionAPI.Triggers.CustomTriggerFinder.CustomTriggerSequence(DiskCardGame.TriggerReceiver,System.Collections.IEnumerator)
  name: CustomTriggerSequence(TriggerReceiver, IEnumerator)
  href: api/InscryptionAPI.Triggers.CustomTriggerFinder.html#InscryptionAPI_Triggers_CustomTriggerFinder_CustomTriggerSequence_DiskCardGame_TriggerReceiver_System_Collections_IEnumerator_
  commentId: M:InscryptionAPI.Triggers.CustomTriggerFinder.CustomTriggerSequence(DiskCardGame.TriggerReceiver,System.Collections.IEnumerator)
  fullName: InscryptionAPI.Triggers.CustomTriggerFinder.CustomTriggerSequence(DiskCardGame.TriggerReceiver, System.Collections.IEnumerator)
  nameWithType: CustomTriggerFinder.CustomTriggerSequence(TriggerReceiver, IEnumerator)
- uid: InscryptionAPI.Triggers.CustomTriggerFinder.CustomTriggerSequence*
  name: CustomTriggerSequence
  href: api/InscryptionAPI.Triggers.CustomTriggerFinder.html#InscryptionAPI_Triggers_CustomTriggerFinder_CustomTriggerSequence_
  commentId: Overload:InscryptionAPI.Triggers.CustomTriggerFinder.CustomTriggerSequence
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.CustomTriggerFinder.CustomTriggerSequence
  nameWithType: CustomTriggerFinder.CustomTriggerSequence
- uid: InscryptionAPI.Triggers.CustomTriggerFinder.FindGlobalTriggers*
  name: FindGlobalTriggers
  href: api/InscryptionAPI.Triggers.CustomTriggerFinder.html#InscryptionAPI_Triggers_CustomTriggerFinder_FindGlobalTriggers_
  commentId: Overload:InscryptionAPI.Triggers.CustomTriggerFinder.FindGlobalTriggers
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.CustomTriggerFinder.FindGlobalTriggers
  nameWithType: CustomTriggerFinder.FindGlobalTriggers
- uid: InscryptionAPI.Triggers.CustomTriggerFinder.FindGlobalTriggers``1(DiskCardGame.PlayableCard)
  name: FindGlobalTriggers<T>(PlayableCard)
  href: api/InscryptionAPI.Triggers.CustomTriggerFinder.html#InscryptionAPI_Triggers_CustomTriggerFinder_FindGlobalTriggers__1_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Triggers.CustomTriggerFinder.FindGlobalTriggers``1(DiskCardGame.PlayableCard)
  name.vb: FindGlobalTriggers(Of T)(PlayableCard)
  fullName: InscryptionAPI.Triggers.CustomTriggerFinder.FindGlobalTriggers<T>(DiskCardGame.PlayableCard)
  fullName.vb: InscryptionAPI.Triggers.CustomTriggerFinder.FindGlobalTriggers(Of T)(DiskCardGame.PlayableCard)
  nameWithType: CustomTriggerFinder.FindGlobalTriggers<T>(PlayableCard)
  nameWithType.vb: CustomTriggerFinder.FindGlobalTriggers(Of T)(PlayableCard)
- uid: InscryptionAPI.Triggers.CustomTriggerFinder.FindGlobalTriggers``1(System.Boolean,DiskCardGame.PlayableCard)
  name: FindGlobalTriggers<T>(Boolean, PlayableCard)
  href: api/InscryptionAPI.Triggers.CustomTriggerFinder.html#InscryptionAPI_Triggers_CustomTriggerFinder_FindGlobalTriggers__1_System_Boolean_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Triggers.CustomTriggerFinder.FindGlobalTriggers``1(System.Boolean,DiskCardGame.PlayableCard)
  name.vb: FindGlobalTriggers(Of T)(Boolean, PlayableCard)
  fullName: InscryptionAPI.Triggers.CustomTriggerFinder.FindGlobalTriggers<T>(System.Boolean, DiskCardGame.PlayableCard)
  fullName.vb: InscryptionAPI.Triggers.CustomTriggerFinder.FindGlobalTriggers(Of T)(System.Boolean, DiskCardGame.PlayableCard)
  nameWithType: CustomTriggerFinder.FindGlobalTriggers<T>(Boolean, PlayableCard)
  nameWithType.vb: CustomTriggerFinder.FindGlobalTriggers(Of T)(Boolean, PlayableCard)
- uid: InscryptionAPI.Triggers.CustomTriggerFinder.FindTriggersInHand*
  name: FindTriggersInHand
  href: api/InscryptionAPI.Triggers.CustomTriggerFinder.html#InscryptionAPI_Triggers_CustomTriggerFinder_FindTriggersInHand_
  commentId: Overload:InscryptionAPI.Triggers.CustomTriggerFinder.FindTriggersInHand
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.CustomTriggerFinder.FindTriggersInHand
  nameWithType: CustomTriggerFinder.FindTriggersInHand
- uid: InscryptionAPI.Triggers.CustomTriggerFinder.FindTriggersInHand``1
  name: FindTriggersInHand<T>()
  href: api/InscryptionAPI.Triggers.CustomTriggerFinder.html#InscryptionAPI_Triggers_CustomTriggerFinder_FindTriggersInHand__1
  commentId: M:InscryptionAPI.Triggers.CustomTriggerFinder.FindTriggersInHand``1
  name.vb: FindTriggersInHand(Of T)()
  fullName: InscryptionAPI.Triggers.CustomTriggerFinder.FindTriggersInHand<T>()
  fullName.vb: InscryptionAPI.Triggers.CustomTriggerFinder.FindTriggersInHand(Of T)()
  nameWithType: CustomTriggerFinder.FindTriggersInHand<T>()
  nameWithType.vb: CustomTriggerFinder.FindTriggersInHand(Of T)()
- uid: InscryptionAPI.Triggers.CustomTriggerFinder.FindTriggersInHandExcluding*
  name: FindTriggersInHandExcluding
  href: api/InscryptionAPI.Triggers.CustomTriggerFinder.html#InscryptionAPI_Triggers_CustomTriggerFinder_FindTriggersInHandExcluding_
  commentId: Overload:InscryptionAPI.Triggers.CustomTriggerFinder.FindTriggersInHandExcluding
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.CustomTriggerFinder.FindTriggersInHandExcluding
  nameWithType: CustomTriggerFinder.FindTriggersInHandExcluding
- uid: InscryptionAPI.Triggers.CustomTriggerFinder.FindTriggersInHandExcluding``1(DiskCardGame.PlayableCard)
  name: FindTriggersInHandExcluding<T>(PlayableCard)
  href: api/InscryptionAPI.Triggers.CustomTriggerFinder.html#InscryptionAPI_Triggers_CustomTriggerFinder_FindTriggersInHandExcluding__1_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Triggers.CustomTriggerFinder.FindTriggersInHandExcluding``1(DiskCardGame.PlayableCard)
  name.vb: FindTriggersInHandExcluding(Of T)(PlayableCard)
  fullName: InscryptionAPI.Triggers.CustomTriggerFinder.FindTriggersInHandExcluding<T>(DiskCardGame.PlayableCard)
  fullName.vb: InscryptionAPI.Triggers.CustomTriggerFinder.FindTriggersInHandExcluding(Of T)(DiskCardGame.PlayableCard)
  nameWithType: CustomTriggerFinder.FindTriggersInHandExcluding<T>(PlayableCard)
  nameWithType.vb: CustomTriggerFinder.FindTriggersInHandExcluding(Of T)(PlayableCard)
- uid: InscryptionAPI.Triggers.CustomTriggerFinder.FindTriggersOnBoard*
  name: FindTriggersOnBoard
  href: api/InscryptionAPI.Triggers.CustomTriggerFinder.html#InscryptionAPI_Triggers_CustomTriggerFinder_FindTriggersOnBoard_
  commentId: Overload:InscryptionAPI.Triggers.CustomTriggerFinder.FindTriggersOnBoard
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.CustomTriggerFinder.FindTriggersOnBoard
  nameWithType: CustomTriggerFinder.FindTriggersOnBoard
- uid: InscryptionAPI.Triggers.CustomTriggerFinder.FindTriggersOnBoard``1
  name: FindTriggersOnBoard<T>()
  href: api/InscryptionAPI.Triggers.CustomTriggerFinder.html#InscryptionAPI_Triggers_CustomTriggerFinder_FindTriggersOnBoard__1
  commentId: M:InscryptionAPI.Triggers.CustomTriggerFinder.FindTriggersOnBoard``1
  name.vb: FindTriggersOnBoard(Of T)()
  fullName: InscryptionAPI.Triggers.CustomTriggerFinder.FindTriggersOnBoard<T>()
  fullName.vb: InscryptionAPI.Triggers.CustomTriggerFinder.FindTriggersOnBoard(Of T)()
  nameWithType: CustomTriggerFinder.FindTriggersOnBoard<T>()
  nameWithType.vb: CustomTriggerFinder.FindTriggersOnBoard(Of T)()
- uid: InscryptionAPI.Triggers.CustomTriggerFinder.FindTriggersOnBoard``1(System.Boolean)
  name: FindTriggersOnBoard<T>(Boolean)
  href: api/InscryptionAPI.Triggers.CustomTriggerFinder.html#InscryptionAPI_Triggers_CustomTriggerFinder_FindTriggersOnBoard__1_System_Boolean_
  commentId: M:InscryptionAPI.Triggers.CustomTriggerFinder.FindTriggersOnBoard``1(System.Boolean)
  name.vb: FindTriggersOnBoard(Of T)(Boolean)
  fullName: InscryptionAPI.Triggers.CustomTriggerFinder.FindTriggersOnBoard<T>(System.Boolean)
  fullName.vb: InscryptionAPI.Triggers.CustomTriggerFinder.FindTriggersOnBoard(Of T)(System.Boolean)
  nameWithType: CustomTriggerFinder.FindTriggersOnBoard<T>(Boolean)
  nameWithType.vb: CustomTriggerFinder.FindTriggersOnBoard(Of T)(Boolean)
- uid: InscryptionAPI.Triggers.CustomTriggerFinder.FindTriggersOnCard*
  name: FindTriggersOnCard
  href: api/InscryptionAPI.Triggers.CustomTriggerFinder.html#InscryptionAPI_Triggers_CustomTriggerFinder_FindTriggersOnCard_
  commentId: Overload:InscryptionAPI.Triggers.CustomTriggerFinder.FindTriggersOnCard
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.CustomTriggerFinder.FindTriggersOnCard
  nameWithType: CustomTriggerFinder.FindTriggersOnCard
- uid: InscryptionAPI.Triggers.CustomTriggerFinder.FindTriggersOnCard``1(DiskCardGame.CardTriggerHandler)
  name: FindTriggersOnCard<T>(CardTriggerHandler)
  href: api/InscryptionAPI.Triggers.CustomTriggerFinder.html#InscryptionAPI_Triggers_CustomTriggerFinder_FindTriggersOnCard__1_DiskCardGame_CardTriggerHandler_
  commentId: M:InscryptionAPI.Triggers.CustomTriggerFinder.FindTriggersOnCard``1(DiskCardGame.CardTriggerHandler)
  name.vb: FindTriggersOnCard(Of T)(CardTriggerHandler)
  fullName: InscryptionAPI.Triggers.CustomTriggerFinder.FindTriggersOnCard<T>(DiskCardGame.CardTriggerHandler)
  fullName.vb: InscryptionAPI.Triggers.CustomTriggerFinder.FindTriggersOnCard(Of T)(DiskCardGame.CardTriggerHandler)
  nameWithType: CustomTriggerFinder.FindTriggersOnCard<T>(CardTriggerHandler)
  nameWithType.vb: CustomTriggerFinder.FindTriggersOnCard(Of T)(CardTriggerHandler)
- uid: InscryptionAPI.Triggers.CustomTriggerFinder.FindTriggersOnCard``1(DiskCardGame.PlayableCard)
  name: FindTriggersOnCard<T>(PlayableCard)
  href: api/InscryptionAPI.Triggers.CustomTriggerFinder.html#InscryptionAPI_Triggers_CustomTriggerFinder_FindTriggersOnCard__1_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Triggers.CustomTriggerFinder.FindTriggersOnCard``1(DiskCardGame.PlayableCard)
  name.vb: FindTriggersOnCard(Of T)(PlayableCard)
  fullName: InscryptionAPI.Triggers.CustomTriggerFinder.FindTriggersOnCard<T>(DiskCardGame.PlayableCard)
  fullName.vb: InscryptionAPI.Triggers.CustomTriggerFinder.FindTriggersOnCard(Of T)(DiskCardGame.PlayableCard)
  nameWithType: CustomTriggerFinder.FindTriggersOnCard<T>(PlayableCard)
  nameWithType.vb: CustomTriggerFinder.FindTriggersOnCard(Of T)(PlayableCard)
- uid: InscryptionAPI.Triggers.CustomTriggerFinder.Trigger*
  name: Trigger
  href: api/InscryptionAPI.Triggers.CustomTriggerFinder.html#InscryptionAPI_Triggers_CustomTriggerFinder_Trigger_
  commentId: Overload:InscryptionAPI.Triggers.CustomTriggerFinder.Trigger
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.CustomTriggerFinder.Trigger
  nameWithType: CustomTriggerFinder.Trigger
- uid: InscryptionAPI.Triggers.CustomTriggerFinder.Trigger``1(DiskCardGame.CardTriggerHandler,Func{``0,System.Boolean},Func{``0,System.Collections.IEnumerator})
  name: Trigger<T>(CardTriggerHandler, Func<T, Boolean>, Func<T, IEnumerator>)
  href: api/InscryptionAPI.Triggers.CustomTriggerFinder.html#InscryptionAPI_Triggers_CustomTriggerFinder_Trigger__1_DiskCardGame_CardTriggerHandler_Func___0_System_Boolean__Func___0_System_Collections_IEnumerator__
  commentId: M:InscryptionAPI.Triggers.CustomTriggerFinder.Trigger``1(DiskCardGame.CardTriggerHandler,Func{``0,System.Boolean},Func{``0,System.Collections.IEnumerator})
  name.vb: Trigger(Of T)(CardTriggerHandler, Func(Of T, Boolean), Func(Of T, IEnumerator))
  fullName: InscryptionAPI.Triggers.CustomTriggerFinder.Trigger<T>(DiskCardGame.CardTriggerHandler, Func<T, System.Boolean>, Func<T, System.Collections.IEnumerator>)
  fullName.vb: InscryptionAPI.Triggers.CustomTriggerFinder.Trigger(Of T)(DiskCardGame.CardTriggerHandler, Func(Of T, System.Boolean), Func(Of T, System.Collections.IEnumerator))
  nameWithType: CustomTriggerFinder.Trigger<T>(CardTriggerHandler, Func<T, Boolean>, Func<T, IEnumerator>)
  nameWithType.vb: CustomTriggerFinder.Trigger(Of T)(CardTriggerHandler, Func(Of T, Boolean), Func(Of T, IEnumerator))
- uid: InscryptionAPI.Triggers.CustomTriggerFinder.Trigger``1(DiskCardGame.PlayableCard,Func{``0,System.Boolean},Func{``0,System.Collections.IEnumerator})
  name: Trigger<T>(PlayableCard, Func<T, Boolean>, Func<T, IEnumerator>)
  href: api/InscryptionAPI.Triggers.CustomTriggerFinder.html#InscryptionAPI_Triggers_CustomTriggerFinder_Trigger__1_DiskCardGame_PlayableCard_Func___0_System_Boolean__Func___0_System_Collections_IEnumerator__
  commentId: M:InscryptionAPI.Triggers.CustomTriggerFinder.Trigger``1(DiskCardGame.PlayableCard,Func{``0,System.Boolean},Func{``0,System.Collections.IEnumerator})
  name.vb: Trigger(Of T)(PlayableCard, Func(Of T, Boolean), Func(Of T, IEnumerator))
  fullName: InscryptionAPI.Triggers.CustomTriggerFinder.Trigger<T>(DiskCardGame.PlayableCard, Func<T, System.Boolean>, Func<T, System.Collections.IEnumerator>)
  fullName.vb: InscryptionAPI.Triggers.CustomTriggerFinder.Trigger(Of T)(DiskCardGame.PlayableCard, Func(Of T, System.Boolean), Func(Of T, System.Collections.IEnumerator))
  nameWithType: CustomTriggerFinder.Trigger<T>(PlayableCard, Func<T, Boolean>, Func<T, IEnumerator>)
  nameWithType.vb: CustomTriggerFinder.Trigger(Of T)(PlayableCard, Func(Of T, Boolean), Func(Of T, IEnumerator))
- uid: InscryptionAPI.Triggers.CustomTriggerFinder.TriggerAll*
  name: TriggerAll
  href: api/InscryptionAPI.Triggers.CustomTriggerFinder.html#InscryptionAPI_Triggers_CustomTriggerFinder_TriggerAll_
  commentId: Overload:InscryptionAPI.Triggers.CustomTriggerFinder.TriggerAll
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.CustomTriggerFinder.TriggerAll
  nameWithType: CustomTriggerFinder.TriggerAll
- uid: InscryptionAPI.Triggers.CustomTriggerFinder.TriggerAll``1(System.Boolean,Func{``0,System.Boolean},Func{``0,System.Collections.IEnumerator})
  name: TriggerAll<T>(Boolean, Func<T, Boolean>, Func<T, IEnumerator>)
  href: api/InscryptionAPI.Triggers.CustomTriggerFinder.html#InscryptionAPI_Triggers_CustomTriggerFinder_TriggerAll__1_System_Boolean_Func___0_System_Boolean__Func___0_System_Collections_IEnumerator__
  commentId: M:InscryptionAPI.Triggers.CustomTriggerFinder.TriggerAll``1(System.Boolean,Func{``0,System.Boolean},Func{``0,System.Collections.IEnumerator})
  name.vb: TriggerAll(Of T)(Boolean, Func(Of T, Boolean), Func(Of T, IEnumerator))
  fullName: InscryptionAPI.Triggers.CustomTriggerFinder.TriggerAll<T>(System.Boolean, Func<T, System.Boolean>, Func<T, System.Collections.IEnumerator>)
  fullName.vb: InscryptionAPI.Triggers.CustomTriggerFinder.TriggerAll(Of T)(System.Boolean, Func(Of T, System.Boolean), Func(Of T, System.Collections.IEnumerator))
  nameWithType: CustomTriggerFinder.TriggerAll<T>(Boolean, Func<T, Boolean>, Func<T, IEnumerator>)
  nameWithType.vb: CustomTriggerFinder.TriggerAll(Of T)(Boolean, Func(Of T, Boolean), Func(Of T, IEnumerator))
- uid: InscryptionAPI.Triggers.CustomTriggerFinder.TriggerInHand*
  name: TriggerInHand
  href: api/InscryptionAPI.Triggers.CustomTriggerFinder.html#InscryptionAPI_Triggers_CustomTriggerFinder_TriggerInHand_
  commentId: Overload:InscryptionAPI.Triggers.CustomTriggerFinder.TriggerInHand
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.CustomTriggerFinder.TriggerInHand
  nameWithType: CustomTriggerFinder.TriggerInHand
- uid: InscryptionAPI.Triggers.CustomTriggerFinder.TriggerInHand``1(Func{``0,System.Boolean},Func{``0,System.Collections.IEnumerator})
  name: TriggerInHand<T>(Func<T, Boolean>, Func<T, IEnumerator>)
  href: api/InscryptionAPI.Triggers.CustomTriggerFinder.html#InscryptionAPI_Triggers_CustomTriggerFinder_TriggerInHand__1_Func___0_System_Boolean__Func___0_System_Collections_IEnumerator__
  commentId: M:InscryptionAPI.Triggers.CustomTriggerFinder.TriggerInHand``1(Func{``0,System.Boolean},Func{``0,System.Collections.IEnumerator})
  name.vb: TriggerInHand(Of T)(Func(Of T, Boolean), Func(Of T, IEnumerator))
  fullName: InscryptionAPI.Triggers.CustomTriggerFinder.TriggerInHand<T>(Func<T, System.Boolean>, Func<T, System.Collections.IEnumerator>)
  fullName.vb: InscryptionAPI.Triggers.CustomTriggerFinder.TriggerInHand(Of T)(Func(Of T, System.Boolean), Func(Of T, System.Collections.IEnumerator))
  nameWithType: CustomTriggerFinder.TriggerInHand<T>(Func<T, Boolean>, Func<T, IEnumerator>)
  nameWithType.vb: CustomTriggerFinder.TriggerInHand(Of T)(Func(Of T, Boolean), Func(Of T, IEnumerator))
- uid: InscryptionAPI.Triggers.CustomTriggerFinder.TriggerOnBoard*
  name: TriggerOnBoard
  href: api/InscryptionAPI.Triggers.CustomTriggerFinder.html#InscryptionAPI_Triggers_CustomTriggerFinder_TriggerOnBoard_
  commentId: Overload:InscryptionAPI.Triggers.CustomTriggerFinder.TriggerOnBoard
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.CustomTriggerFinder.TriggerOnBoard
  nameWithType: CustomTriggerFinder.TriggerOnBoard
- uid: InscryptionAPI.Triggers.CustomTriggerFinder.TriggerOnBoard``1(System.Boolean,Func{``0,System.Boolean},Func{``0,System.Collections.IEnumerator})
  name: TriggerOnBoard<T>(Boolean, Func<T, Boolean>, Func<T, IEnumerator>)
  href: api/InscryptionAPI.Triggers.CustomTriggerFinder.html#InscryptionAPI_Triggers_CustomTriggerFinder_TriggerOnBoard__1_System_Boolean_Func___0_System_Boolean__Func___0_System_Collections_IEnumerator__
  commentId: M:InscryptionAPI.Triggers.CustomTriggerFinder.TriggerOnBoard``1(System.Boolean,Func{``0,System.Boolean},Func{``0,System.Collections.IEnumerator})
  name.vb: TriggerOnBoard(Of T)(Boolean, Func(Of T, Boolean), Func(Of T, IEnumerator))
  fullName: InscryptionAPI.Triggers.CustomTriggerFinder.TriggerOnBoard<T>(System.Boolean, Func<T, System.Boolean>, Func<T, System.Collections.IEnumerator>)
  fullName.vb: InscryptionAPI.Triggers.CustomTriggerFinder.TriggerOnBoard(Of T)(System.Boolean, Func(Of T, System.Boolean), Func(Of T, System.Collections.IEnumerator))
  nameWithType: CustomTriggerFinder.TriggerOnBoard<T>(Boolean, Func<T, Boolean>, Func<T, IEnumerator>)
  nameWithType.vb: CustomTriggerFinder.TriggerOnBoard(Of T)(Boolean, Func(Of T, Boolean), Func(Of T, IEnumerator))
- uid: InscryptionAPI.Triggers.ICardTakenDamageModifier
  name: ICardTakenDamageModifier
  href: api/InscryptionAPI.Triggers.ICardTakenDamageModifier.html
  commentId: T:InscryptionAPI.Triggers.ICardTakenDamageModifier
  fullName: InscryptionAPI.Triggers.ICardTakenDamageModifier
  nameWithType: ICardTakenDamageModifier
- uid: InscryptionAPI.Triggers.ICardTakenDamageModifier.CollectCardTakenDamageModifier(DiskCardGame.PlayableCard,System.Int32)
  name: CollectCardTakenDamageModifier(PlayableCard, Int32)
  href: api/InscryptionAPI.Triggers.ICardTakenDamageModifier.html#InscryptionAPI_Triggers_ICardTakenDamageModifier_CollectCardTakenDamageModifier_DiskCardGame_PlayableCard_System_Int32_
  commentId: M:InscryptionAPI.Triggers.ICardTakenDamageModifier.CollectCardTakenDamageModifier(DiskCardGame.PlayableCard,System.Int32)
  fullName: InscryptionAPI.Triggers.ICardTakenDamageModifier.CollectCardTakenDamageModifier(DiskCardGame.PlayableCard, System.Int32)
  nameWithType: ICardTakenDamageModifier.CollectCardTakenDamageModifier(PlayableCard, Int32)
- uid: InscryptionAPI.Triggers.ICardTakenDamageModifier.CollectCardTakenDamageModifier*
  name: CollectCardTakenDamageModifier
  href: api/InscryptionAPI.Triggers.ICardTakenDamageModifier.html#InscryptionAPI_Triggers_ICardTakenDamageModifier_CollectCardTakenDamageModifier_
  commentId: Overload:InscryptionAPI.Triggers.ICardTakenDamageModifier.CollectCardTakenDamageModifier
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.ICardTakenDamageModifier.CollectCardTakenDamageModifier
  nameWithType: ICardTakenDamageModifier.CollectCardTakenDamageModifier
- uid: InscryptionAPI.Triggers.ICardTakenDamageModifier.RespondsToCardTakenDamageModifier(DiskCardGame.PlayableCard,System.Int32)
  name: RespondsToCardTakenDamageModifier(PlayableCard, Int32)
  href: api/InscryptionAPI.Triggers.ICardTakenDamageModifier.html#InscryptionAPI_Triggers_ICardTakenDamageModifier_RespondsToCardTakenDamageModifier_DiskCardGame_PlayableCard_System_Int32_
  commentId: M:InscryptionAPI.Triggers.ICardTakenDamageModifier.RespondsToCardTakenDamageModifier(DiskCardGame.PlayableCard,System.Int32)
  fullName: InscryptionAPI.Triggers.ICardTakenDamageModifier.RespondsToCardTakenDamageModifier(DiskCardGame.PlayableCard, System.Int32)
  nameWithType: ICardTakenDamageModifier.RespondsToCardTakenDamageModifier(PlayableCard, Int32)
- uid: InscryptionAPI.Triggers.ICardTakenDamageModifier.RespondsToCardTakenDamageModifier*
  name: RespondsToCardTakenDamageModifier
  href: api/InscryptionAPI.Triggers.ICardTakenDamageModifier.html#InscryptionAPI_Triggers_ICardTakenDamageModifier_RespondsToCardTakenDamageModifier_
  commentId: Overload:InscryptionAPI.Triggers.ICardTakenDamageModifier.RespondsToCardTakenDamageModifier
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.ICardTakenDamageModifier.RespondsToCardTakenDamageModifier
  nameWithType: ICardTakenDamageModifier.RespondsToCardTakenDamageModifier
- uid: InscryptionAPI.Triggers.IGetOpposingSlots
  name: IGetOpposingSlots
  href: api/InscryptionAPI.Triggers.IGetOpposingSlots.html
  commentId: T:InscryptionAPI.Triggers.IGetOpposingSlots
  fullName: InscryptionAPI.Triggers.IGetOpposingSlots
  nameWithType: IGetOpposingSlots
- uid: InscryptionAPI.Triggers.IGetOpposingSlots.GetOpposingSlots(System.Collections.Generic.List{DiskCardGame.CardSlot},System.Collections.Generic.List{DiskCardGame.CardSlot})
  name: GetOpposingSlots(List<CardSlot>, List<CardSlot>)
  href: api/InscryptionAPI.Triggers.IGetOpposingSlots.html#InscryptionAPI_Triggers_IGetOpposingSlots_GetOpposingSlots_System_Collections_Generic_List_DiskCardGame_CardSlot__System_Collections_Generic_List_DiskCardGame_CardSlot__
  commentId: M:InscryptionAPI.Triggers.IGetOpposingSlots.GetOpposingSlots(System.Collections.Generic.List{DiskCardGame.CardSlot},System.Collections.Generic.List{DiskCardGame.CardSlot})
  name.vb: GetOpposingSlots(List(Of CardSlot), List(Of CardSlot))
  fullName: InscryptionAPI.Triggers.IGetOpposingSlots.GetOpposingSlots(System.Collections.Generic.List<DiskCardGame.CardSlot>, System.Collections.Generic.List<DiskCardGame.CardSlot>)
  fullName.vb: InscryptionAPI.Triggers.IGetOpposingSlots.GetOpposingSlots(System.Collections.Generic.List(Of DiskCardGame.CardSlot), System.Collections.Generic.List(Of DiskCardGame.CardSlot))
  nameWithType: IGetOpposingSlots.GetOpposingSlots(List<CardSlot>, List<CardSlot>)
  nameWithType.vb: IGetOpposingSlots.GetOpposingSlots(List(Of CardSlot), List(Of CardSlot))
- uid: InscryptionAPI.Triggers.IGetOpposingSlots.GetOpposingSlots*
  name: GetOpposingSlots
  href: api/InscryptionAPI.Triggers.IGetOpposingSlots.html#InscryptionAPI_Triggers_IGetOpposingSlots_GetOpposingSlots_
  commentId: Overload:InscryptionAPI.Triggers.IGetOpposingSlots.GetOpposingSlots
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.IGetOpposingSlots.GetOpposingSlots
  nameWithType: IGetOpposingSlots.GetOpposingSlots
- uid: InscryptionAPI.Triggers.IGetOpposingSlots.RemoveDefaultAttackSlot
  name: RemoveDefaultAttackSlot()
  href: api/InscryptionAPI.Triggers.IGetOpposingSlots.html#InscryptionAPI_Triggers_IGetOpposingSlots_RemoveDefaultAttackSlot
  commentId: M:InscryptionAPI.Triggers.IGetOpposingSlots.RemoveDefaultAttackSlot
  fullName: InscryptionAPI.Triggers.IGetOpposingSlots.RemoveDefaultAttackSlot()
  nameWithType: IGetOpposingSlots.RemoveDefaultAttackSlot()
- uid: InscryptionAPI.Triggers.IGetOpposingSlots.RemoveDefaultAttackSlot*
  name: RemoveDefaultAttackSlot
  href: api/InscryptionAPI.Triggers.IGetOpposingSlots.html#InscryptionAPI_Triggers_IGetOpposingSlots_RemoveDefaultAttackSlot_
  commentId: Overload:InscryptionAPI.Triggers.IGetOpposingSlots.RemoveDefaultAttackSlot
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.IGetOpposingSlots.RemoveDefaultAttackSlot
  nameWithType: IGetOpposingSlots.RemoveDefaultAttackSlot
- uid: InscryptionAPI.Triggers.IGetOpposingSlots.RespondsToGetOpposingSlots
  name: RespondsToGetOpposingSlots()
  href: api/InscryptionAPI.Triggers.IGetOpposingSlots.html#InscryptionAPI_Triggers_IGetOpposingSlots_RespondsToGetOpposingSlots
  commentId: M:InscryptionAPI.Triggers.IGetOpposingSlots.RespondsToGetOpposingSlots
  fullName: InscryptionAPI.Triggers.IGetOpposingSlots.RespondsToGetOpposingSlots()
  nameWithType: IGetOpposingSlots.RespondsToGetOpposingSlots()
- uid: InscryptionAPI.Triggers.IGetOpposingSlots.RespondsToGetOpposingSlots*
  name: RespondsToGetOpposingSlots
  href: api/InscryptionAPI.Triggers.IGetOpposingSlots.html#InscryptionAPI_Triggers_IGetOpposingSlots_RespondsToGetOpposingSlots_
  commentId: Overload:InscryptionAPI.Triggers.IGetOpposingSlots.RespondsToGetOpposingSlots
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.IGetOpposingSlots.RespondsToGetOpposingSlots
  nameWithType: IGetOpposingSlots.RespondsToGetOpposingSlots
- uid: InscryptionAPI.Triggers.IItemCanBeUsed
  name: IItemCanBeUsed
  href: api/InscryptionAPI.Triggers.IItemCanBeUsed.html
  commentId: T:InscryptionAPI.Triggers.IItemCanBeUsed
  fullName: InscryptionAPI.Triggers.IItemCanBeUsed
  nameWithType: IItemCanBeUsed
- uid: InscryptionAPI.Triggers.IItemCanBeUsed.CollectItemCanBeUsed(System.String,System.Boolean)
  name: CollectItemCanBeUsed(String, Boolean)
  href: api/InscryptionAPI.Triggers.IItemCanBeUsed.html#InscryptionAPI_Triggers_IItemCanBeUsed_CollectItemCanBeUsed_System_String_System_Boolean_
  commentId: M:InscryptionAPI.Triggers.IItemCanBeUsed.CollectItemCanBeUsed(System.String,System.Boolean)
  fullName: InscryptionAPI.Triggers.IItemCanBeUsed.CollectItemCanBeUsed(System.String, System.Boolean)
  nameWithType: IItemCanBeUsed.CollectItemCanBeUsed(String, Boolean)
- uid: InscryptionAPI.Triggers.IItemCanBeUsed.CollectItemCanBeUsed*
  name: CollectItemCanBeUsed
  href: api/InscryptionAPI.Triggers.IItemCanBeUsed.html#InscryptionAPI_Triggers_IItemCanBeUsed_CollectItemCanBeUsed_
  commentId: Overload:InscryptionAPI.Triggers.IItemCanBeUsed.CollectItemCanBeUsed
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.IItemCanBeUsed.CollectItemCanBeUsed
  nameWithType: IItemCanBeUsed.CollectItemCanBeUsed
- uid: InscryptionAPI.Triggers.IItemCanBeUsed.RespondsToItemCanBeUsed(System.String,System.Boolean)
  name: RespondsToItemCanBeUsed(String, Boolean)
  href: api/InscryptionAPI.Triggers.IItemCanBeUsed.html#InscryptionAPI_Triggers_IItemCanBeUsed_RespondsToItemCanBeUsed_System_String_System_Boolean_
  commentId: M:InscryptionAPI.Triggers.IItemCanBeUsed.RespondsToItemCanBeUsed(System.String,System.Boolean)
  fullName: InscryptionAPI.Triggers.IItemCanBeUsed.RespondsToItemCanBeUsed(System.String, System.Boolean)
  nameWithType: IItemCanBeUsed.RespondsToItemCanBeUsed(String, Boolean)
- uid: InscryptionAPI.Triggers.IItemCanBeUsed.RespondsToItemCanBeUsed*
  name: RespondsToItemCanBeUsed
  href: api/InscryptionAPI.Triggers.IItemCanBeUsed.html#InscryptionAPI_Triggers_IItemCanBeUsed_RespondsToItemCanBeUsed_
  commentId: Overload:InscryptionAPI.Triggers.IItemCanBeUsed.RespondsToItemCanBeUsed
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.IItemCanBeUsed.RespondsToItemCanBeUsed
  nameWithType: IItemCanBeUsed.RespondsToItemCanBeUsed
- uid: InscryptionAPI.Triggers.IOnAddedToHand
  name: IOnAddedToHand
  href: api/InscryptionAPI.Triggers.IOnAddedToHand.html
  commentId: T:InscryptionAPI.Triggers.IOnAddedToHand
  fullName: InscryptionAPI.Triggers.IOnAddedToHand
  nameWithType: IOnAddedToHand
- uid: InscryptionAPI.Triggers.IOnAddedToHand.OnAddedToHand
  name: OnAddedToHand()
  href: api/InscryptionAPI.Triggers.IOnAddedToHand.html#InscryptionAPI_Triggers_IOnAddedToHand_OnAddedToHand
  commentId: M:InscryptionAPI.Triggers.IOnAddedToHand.OnAddedToHand
  fullName: InscryptionAPI.Triggers.IOnAddedToHand.OnAddedToHand()
  nameWithType: IOnAddedToHand.OnAddedToHand()
- uid: InscryptionAPI.Triggers.IOnAddedToHand.OnAddedToHand*
  name: OnAddedToHand
  href: api/InscryptionAPI.Triggers.IOnAddedToHand.html#InscryptionAPI_Triggers_IOnAddedToHand_OnAddedToHand_
  commentId: Overload:InscryptionAPI.Triggers.IOnAddedToHand.OnAddedToHand
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.IOnAddedToHand.OnAddedToHand
  nameWithType: IOnAddedToHand.OnAddedToHand
- uid: InscryptionAPI.Triggers.IOnAddedToHand.RespondsToAddedToHand
  name: RespondsToAddedToHand()
  href: api/InscryptionAPI.Triggers.IOnAddedToHand.html#InscryptionAPI_Triggers_IOnAddedToHand_RespondsToAddedToHand
  commentId: M:InscryptionAPI.Triggers.IOnAddedToHand.RespondsToAddedToHand
  fullName: InscryptionAPI.Triggers.IOnAddedToHand.RespondsToAddedToHand()
  nameWithType: IOnAddedToHand.RespondsToAddedToHand()
- uid: InscryptionAPI.Triggers.IOnAddedToHand.RespondsToAddedToHand*
  name: RespondsToAddedToHand
  href: api/InscryptionAPI.Triggers.IOnAddedToHand.html#InscryptionAPI_Triggers_IOnAddedToHand_RespondsToAddedToHand_
  commentId: Overload:InscryptionAPI.Triggers.IOnAddedToHand.RespondsToAddedToHand
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.IOnAddedToHand.RespondsToAddedToHand
  nameWithType: IOnAddedToHand.RespondsToAddedToHand
- uid: InscryptionAPI.Triggers.IOnBellRung
  name: IOnBellRung
  href: api/InscryptionAPI.Triggers.IOnBellRung.html
  commentId: T:InscryptionAPI.Triggers.IOnBellRung
  fullName: InscryptionAPI.Triggers.IOnBellRung
  nameWithType: IOnBellRung
- uid: InscryptionAPI.Triggers.IOnBellRung.OnBellRung(System.Boolean)
  name: OnBellRung(Boolean)
  href: api/InscryptionAPI.Triggers.IOnBellRung.html#InscryptionAPI_Triggers_IOnBellRung_OnBellRung_System_Boolean_
  commentId: M:InscryptionAPI.Triggers.IOnBellRung.OnBellRung(System.Boolean)
  fullName: InscryptionAPI.Triggers.IOnBellRung.OnBellRung(System.Boolean)
  nameWithType: IOnBellRung.OnBellRung(Boolean)
- uid: InscryptionAPI.Triggers.IOnBellRung.OnBellRung*
  name: OnBellRung
  href: api/InscryptionAPI.Triggers.IOnBellRung.html#InscryptionAPI_Triggers_IOnBellRung_OnBellRung_
  commentId: Overload:InscryptionAPI.Triggers.IOnBellRung.OnBellRung
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.IOnBellRung.OnBellRung
  nameWithType: IOnBellRung.OnBellRung
- uid: InscryptionAPI.Triggers.IOnBellRung.RespondsToBellRung(System.Boolean)
  name: RespondsToBellRung(Boolean)
  href: api/InscryptionAPI.Triggers.IOnBellRung.html#InscryptionAPI_Triggers_IOnBellRung_RespondsToBellRung_System_Boolean_
  commentId: M:InscryptionAPI.Triggers.IOnBellRung.RespondsToBellRung(System.Boolean)
  fullName: InscryptionAPI.Triggers.IOnBellRung.RespondsToBellRung(System.Boolean)
  nameWithType: IOnBellRung.RespondsToBellRung(Boolean)
- uid: InscryptionAPI.Triggers.IOnBellRung.RespondsToBellRung*
  name: RespondsToBellRung
  href: api/InscryptionAPI.Triggers.IOnBellRung.html#InscryptionAPI_Triggers_IOnBellRung_RespondsToBellRung_
  commentId: Overload:InscryptionAPI.Triggers.IOnBellRung.RespondsToBellRung
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.IOnBellRung.RespondsToBellRung
  nameWithType: IOnBellRung.RespondsToBellRung
- uid: InscryptionAPI.Triggers.IOnCardAssignedToSlotContext
  name: IOnCardAssignedToSlotContext
  href: api/InscryptionAPI.Triggers.IOnCardAssignedToSlotContext.html
  commentId: T:InscryptionAPI.Triggers.IOnCardAssignedToSlotContext
  fullName: InscryptionAPI.Triggers.IOnCardAssignedToSlotContext
  nameWithType: IOnCardAssignedToSlotContext
- uid: InscryptionAPI.Triggers.IOnCardAssignedToSlotContext.OnCardAssignedToSlotContext(DiskCardGame.PlayableCard,DiskCardGame.CardSlot,DiskCardGame.CardSlot)
  name: OnCardAssignedToSlotContext(PlayableCard, CardSlot, CardSlot)
  href: api/InscryptionAPI.Triggers.IOnCardAssignedToSlotContext.html#InscryptionAPI_Triggers_IOnCardAssignedToSlotContext_OnCardAssignedToSlotContext_DiskCardGame_PlayableCard_DiskCardGame_CardSlot_DiskCardGame_CardSlot_
  commentId: M:InscryptionAPI.Triggers.IOnCardAssignedToSlotContext.OnCardAssignedToSlotContext(DiskCardGame.PlayableCard,DiskCardGame.CardSlot,DiskCardGame.CardSlot)
  fullName: InscryptionAPI.Triggers.IOnCardAssignedToSlotContext.OnCardAssignedToSlotContext(DiskCardGame.PlayableCard, DiskCardGame.CardSlot, DiskCardGame.CardSlot)
  nameWithType: IOnCardAssignedToSlotContext.OnCardAssignedToSlotContext(PlayableCard, CardSlot, CardSlot)
- uid: InscryptionAPI.Triggers.IOnCardAssignedToSlotContext.OnCardAssignedToSlotContext*
  name: OnCardAssignedToSlotContext
  href: api/InscryptionAPI.Triggers.IOnCardAssignedToSlotContext.html#InscryptionAPI_Triggers_IOnCardAssignedToSlotContext_OnCardAssignedToSlotContext_
  commentId: Overload:InscryptionAPI.Triggers.IOnCardAssignedToSlotContext.OnCardAssignedToSlotContext
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.IOnCardAssignedToSlotContext.OnCardAssignedToSlotContext
  nameWithType: IOnCardAssignedToSlotContext.OnCardAssignedToSlotContext
- uid: InscryptionAPI.Triggers.IOnCardAssignedToSlotContext.RespondsToCardAssignedToSlotContext(DiskCardGame.PlayableCard,DiskCardGame.CardSlot,DiskCardGame.CardSlot)
  name: RespondsToCardAssignedToSlotContext(PlayableCard, CardSlot, CardSlot)
  href: api/InscryptionAPI.Triggers.IOnCardAssignedToSlotContext.html#InscryptionAPI_Triggers_IOnCardAssignedToSlotContext_RespondsToCardAssignedToSlotContext_DiskCardGame_PlayableCard_DiskCardGame_CardSlot_DiskCardGame_CardSlot_
  commentId: M:InscryptionAPI.Triggers.IOnCardAssignedToSlotContext.RespondsToCardAssignedToSlotContext(DiskCardGame.PlayableCard,DiskCardGame.CardSlot,DiskCardGame.CardSlot)
  fullName: InscryptionAPI.Triggers.IOnCardAssignedToSlotContext.RespondsToCardAssignedToSlotContext(DiskCardGame.PlayableCard, DiskCardGame.CardSlot, DiskCardGame.CardSlot)
  nameWithType: IOnCardAssignedToSlotContext.RespondsToCardAssignedToSlotContext(PlayableCard, CardSlot, CardSlot)
- uid: InscryptionAPI.Triggers.IOnCardAssignedToSlotContext.RespondsToCardAssignedToSlotContext*
  name: RespondsToCardAssignedToSlotContext
  href: api/InscryptionAPI.Triggers.IOnCardAssignedToSlotContext.html#InscryptionAPI_Triggers_IOnCardAssignedToSlotContext_RespondsToCardAssignedToSlotContext_
  commentId: Overload:InscryptionAPI.Triggers.IOnCardAssignedToSlotContext.RespondsToCardAssignedToSlotContext
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.IOnCardAssignedToSlotContext.RespondsToCardAssignedToSlotContext
  nameWithType: IOnCardAssignedToSlotContext.RespondsToCardAssignedToSlotContext
- uid: InscryptionAPI.Triggers.IOnCardAssignedToSlotNoResolve
  name: IOnCardAssignedToSlotNoResolve
  href: api/InscryptionAPI.Triggers.IOnCardAssignedToSlotNoResolve.html
  commentId: T:InscryptionAPI.Triggers.IOnCardAssignedToSlotNoResolve
  fullName: InscryptionAPI.Triggers.IOnCardAssignedToSlotNoResolve
  nameWithType: IOnCardAssignedToSlotNoResolve
- uid: InscryptionAPI.Triggers.IOnCardAssignedToSlotNoResolve.OnCardAssignedToSlotNoResolve(DiskCardGame.PlayableCard)
  name: OnCardAssignedToSlotNoResolve(PlayableCard)
  href: api/InscryptionAPI.Triggers.IOnCardAssignedToSlotNoResolve.html#InscryptionAPI_Triggers_IOnCardAssignedToSlotNoResolve_OnCardAssignedToSlotNoResolve_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Triggers.IOnCardAssignedToSlotNoResolve.OnCardAssignedToSlotNoResolve(DiskCardGame.PlayableCard)
  fullName: InscryptionAPI.Triggers.IOnCardAssignedToSlotNoResolve.OnCardAssignedToSlotNoResolve(DiskCardGame.PlayableCard)
  nameWithType: IOnCardAssignedToSlotNoResolve.OnCardAssignedToSlotNoResolve(PlayableCard)
- uid: InscryptionAPI.Triggers.IOnCardAssignedToSlotNoResolve.OnCardAssignedToSlotNoResolve*
  name: OnCardAssignedToSlotNoResolve
  href: api/InscryptionAPI.Triggers.IOnCardAssignedToSlotNoResolve.html#InscryptionAPI_Triggers_IOnCardAssignedToSlotNoResolve_OnCardAssignedToSlotNoResolve_
  commentId: Overload:InscryptionAPI.Triggers.IOnCardAssignedToSlotNoResolve.OnCardAssignedToSlotNoResolve
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.IOnCardAssignedToSlotNoResolve.OnCardAssignedToSlotNoResolve
  nameWithType: IOnCardAssignedToSlotNoResolve.OnCardAssignedToSlotNoResolve
- uid: InscryptionAPI.Triggers.IOnCardAssignedToSlotNoResolve.RespondsToCardAssignedToSlotNoResolve(DiskCardGame.PlayableCard)
  name: RespondsToCardAssignedToSlotNoResolve(PlayableCard)
  href: api/InscryptionAPI.Triggers.IOnCardAssignedToSlotNoResolve.html#InscryptionAPI_Triggers_IOnCardAssignedToSlotNoResolve_RespondsToCardAssignedToSlotNoResolve_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Triggers.IOnCardAssignedToSlotNoResolve.RespondsToCardAssignedToSlotNoResolve(DiskCardGame.PlayableCard)
  fullName: InscryptionAPI.Triggers.IOnCardAssignedToSlotNoResolve.RespondsToCardAssignedToSlotNoResolve(DiskCardGame.PlayableCard)
  nameWithType: IOnCardAssignedToSlotNoResolve.RespondsToCardAssignedToSlotNoResolve(PlayableCard)
- uid: InscryptionAPI.Triggers.IOnCardAssignedToSlotNoResolve.RespondsToCardAssignedToSlotNoResolve*
  name: RespondsToCardAssignedToSlotNoResolve
  href: api/InscryptionAPI.Triggers.IOnCardAssignedToSlotNoResolve.html#InscryptionAPI_Triggers_IOnCardAssignedToSlotNoResolve_RespondsToCardAssignedToSlotNoResolve_
  commentId: Overload:InscryptionAPI.Triggers.IOnCardAssignedToSlotNoResolve.RespondsToCardAssignedToSlotNoResolve
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.IOnCardAssignedToSlotNoResolve.RespondsToCardAssignedToSlotNoResolve
  nameWithType: IOnCardAssignedToSlotNoResolve.RespondsToCardAssignedToSlotNoResolve
- uid: InscryptionAPI.Triggers.IOnCardPassiveAttackBuffs
  name: IOnCardPassiveAttackBuffs
  href: api/InscryptionAPI.Triggers.IOnCardPassiveAttackBuffs.html
  commentId: T:InscryptionAPI.Triggers.IOnCardPassiveAttackBuffs
  fullName: InscryptionAPI.Triggers.IOnCardPassiveAttackBuffs
  nameWithType: IOnCardPassiveAttackBuffs
- uid: InscryptionAPI.Triggers.IOnCardPassiveAttackBuffs.CollectCardPassiveAttackBuffs(DiskCardGame.PlayableCard,System.Int32)
  name: CollectCardPassiveAttackBuffs(PlayableCard, Int32)
  href: api/InscryptionAPI.Triggers.IOnCardPassiveAttackBuffs.html#InscryptionAPI_Triggers_IOnCardPassiveAttackBuffs_CollectCardPassiveAttackBuffs_DiskCardGame_PlayableCard_System_Int32_
  commentId: M:InscryptionAPI.Triggers.IOnCardPassiveAttackBuffs.CollectCardPassiveAttackBuffs(DiskCardGame.PlayableCard,System.Int32)
  fullName: InscryptionAPI.Triggers.IOnCardPassiveAttackBuffs.CollectCardPassiveAttackBuffs(DiskCardGame.PlayableCard, System.Int32)
  nameWithType: IOnCardPassiveAttackBuffs.CollectCardPassiveAttackBuffs(PlayableCard, Int32)
- uid: InscryptionAPI.Triggers.IOnCardPassiveAttackBuffs.CollectCardPassiveAttackBuffs*
  name: CollectCardPassiveAttackBuffs
  href: api/InscryptionAPI.Triggers.IOnCardPassiveAttackBuffs.html#InscryptionAPI_Triggers_IOnCardPassiveAttackBuffs_CollectCardPassiveAttackBuffs_
  commentId: Overload:InscryptionAPI.Triggers.IOnCardPassiveAttackBuffs.CollectCardPassiveAttackBuffs
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.IOnCardPassiveAttackBuffs.CollectCardPassiveAttackBuffs
  nameWithType: IOnCardPassiveAttackBuffs.CollectCardPassiveAttackBuffs
- uid: InscryptionAPI.Triggers.IOnCardPassiveAttackBuffs.RespondsToCardPassiveAttackBuffs(DiskCardGame.PlayableCard,System.Int32)
  name: RespondsToCardPassiveAttackBuffs(PlayableCard, Int32)
  href: api/InscryptionAPI.Triggers.IOnCardPassiveAttackBuffs.html#InscryptionAPI_Triggers_IOnCardPassiveAttackBuffs_RespondsToCardPassiveAttackBuffs_DiskCardGame_PlayableCard_System_Int32_
  commentId: M:InscryptionAPI.Triggers.IOnCardPassiveAttackBuffs.RespondsToCardPassiveAttackBuffs(DiskCardGame.PlayableCard,System.Int32)
  fullName: InscryptionAPI.Triggers.IOnCardPassiveAttackBuffs.RespondsToCardPassiveAttackBuffs(DiskCardGame.PlayableCard, System.Int32)
  nameWithType: IOnCardPassiveAttackBuffs.RespondsToCardPassiveAttackBuffs(PlayableCard, Int32)
- uid: InscryptionAPI.Triggers.IOnCardPassiveAttackBuffs.RespondsToCardPassiveAttackBuffs*
  name: RespondsToCardPassiveAttackBuffs
  href: api/InscryptionAPI.Triggers.IOnCardPassiveAttackBuffs.html#InscryptionAPI_Triggers_IOnCardPassiveAttackBuffs_RespondsToCardPassiveAttackBuffs_
  commentId: Overload:InscryptionAPI.Triggers.IOnCardPassiveAttackBuffs.RespondsToCardPassiveAttackBuffs
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.IOnCardPassiveAttackBuffs.RespondsToCardPassiveAttackBuffs
  nameWithType: IOnCardPassiveAttackBuffs.RespondsToCardPassiveAttackBuffs
- uid: InscryptionAPI.Triggers.IOnCardPassiveHealthBuffs
  name: IOnCardPassiveHealthBuffs
  href: api/InscryptionAPI.Triggers.IOnCardPassiveHealthBuffs.html
  commentId: T:InscryptionAPI.Triggers.IOnCardPassiveHealthBuffs
  fullName: InscryptionAPI.Triggers.IOnCardPassiveHealthBuffs
  nameWithType: IOnCardPassiveHealthBuffs
- uid: InscryptionAPI.Triggers.IOnCardPassiveHealthBuffs.CollectCardPassiveHealthBuffs(DiskCardGame.PlayableCard,System.Int32)
  name: CollectCardPassiveHealthBuffs(PlayableCard, Int32)
  href: api/InscryptionAPI.Triggers.IOnCardPassiveHealthBuffs.html#InscryptionAPI_Triggers_IOnCardPassiveHealthBuffs_CollectCardPassiveHealthBuffs_DiskCardGame_PlayableCard_System_Int32_
  commentId: M:InscryptionAPI.Triggers.IOnCardPassiveHealthBuffs.CollectCardPassiveHealthBuffs(DiskCardGame.PlayableCard,System.Int32)
  fullName: InscryptionAPI.Triggers.IOnCardPassiveHealthBuffs.CollectCardPassiveHealthBuffs(DiskCardGame.PlayableCard, System.Int32)
  nameWithType: IOnCardPassiveHealthBuffs.CollectCardPassiveHealthBuffs(PlayableCard, Int32)
- uid: InscryptionAPI.Triggers.IOnCardPassiveHealthBuffs.CollectCardPassiveHealthBuffs*
  name: CollectCardPassiveHealthBuffs
  href: api/InscryptionAPI.Triggers.IOnCardPassiveHealthBuffs.html#InscryptionAPI_Triggers_IOnCardPassiveHealthBuffs_CollectCardPassiveHealthBuffs_
  commentId: Overload:InscryptionAPI.Triggers.IOnCardPassiveHealthBuffs.CollectCardPassiveHealthBuffs
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.IOnCardPassiveHealthBuffs.CollectCardPassiveHealthBuffs
  nameWithType: IOnCardPassiveHealthBuffs.CollectCardPassiveHealthBuffs
- uid: InscryptionAPI.Triggers.IOnCardPassiveHealthBuffs.RespondsToCardPassiveHealthBuffs(DiskCardGame.PlayableCard,System.Int32)
  name: RespondsToCardPassiveHealthBuffs(PlayableCard, Int32)
  href: api/InscryptionAPI.Triggers.IOnCardPassiveHealthBuffs.html#InscryptionAPI_Triggers_IOnCardPassiveHealthBuffs_RespondsToCardPassiveHealthBuffs_DiskCardGame_PlayableCard_System_Int32_
  commentId: M:InscryptionAPI.Triggers.IOnCardPassiveHealthBuffs.RespondsToCardPassiveHealthBuffs(DiskCardGame.PlayableCard,System.Int32)
  fullName: InscryptionAPI.Triggers.IOnCardPassiveHealthBuffs.RespondsToCardPassiveHealthBuffs(DiskCardGame.PlayableCard, System.Int32)
  nameWithType: IOnCardPassiveHealthBuffs.RespondsToCardPassiveHealthBuffs(PlayableCard, Int32)
- uid: InscryptionAPI.Triggers.IOnCardPassiveHealthBuffs.RespondsToCardPassiveHealthBuffs*
  name: RespondsToCardPassiveHealthBuffs
  href: api/InscryptionAPI.Triggers.IOnCardPassiveHealthBuffs.html#InscryptionAPI_Triggers_IOnCardPassiveHealthBuffs_RespondsToCardPassiveHealthBuffs_
  commentId: Overload:InscryptionAPI.Triggers.IOnCardPassiveHealthBuffs.RespondsToCardPassiveHealthBuffs
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.IOnCardPassiveHealthBuffs.RespondsToCardPassiveHealthBuffs
  nameWithType: IOnCardPassiveHealthBuffs.RespondsToCardPassiveHealthBuffs
- uid: InscryptionAPI.Triggers.IOnItemPreventedFromUse
  name: IOnItemPreventedFromUse
  href: api/InscryptionAPI.Triggers.IOnItemPreventedFromUse.html
  commentId: T:InscryptionAPI.Triggers.IOnItemPreventedFromUse
  fullName: InscryptionAPI.Triggers.IOnItemPreventedFromUse
  nameWithType: IOnItemPreventedFromUse
- uid: InscryptionAPI.Triggers.IOnItemPreventedFromUse.OnItemPreventedFromUse(System.String)
  name: OnItemPreventedFromUse(String)
  href: api/InscryptionAPI.Triggers.IOnItemPreventedFromUse.html#InscryptionAPI_Triggers_IOnItemPreventedFromUse_OnItemPreventedFromUse_System_String_
  commentId: M:InscryptionAPI.Triggers.IOnItemPreventedFromUse.OnItemPreventedFromUse(System.String)
  fullName: InscryptionAPI.Triggers.IOnItemPreventedFromUse.OnItemPreventedFromUse(System.String)
  nameWithType: IOnItemPreventedFromUse.OnItemPreventedFromUse(String)
- uid: InscryptionAPI.Triggers.IOnItemPreventedFromUse.OnItemPreventedFromUse*
  name: OnItemPreventedFromUse
  href: api/InscryptionAPI.Triggers.IOnItemPreventedFromUse.html#InscryptionAPI_Triggers_IOnItemPreventedFromUse_OnItemPreventedFromUse_
  commentId: Overload:InscryptionAPI.Triggers.IOnItemPreventedFromUse.OnItemPreventedFromUse
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.IOnItemPreventedFromUse.OnItemPreventedFromUse
  nameWithType: IOnItemPreventedFromUse.OnItemPreventedFromUse
- uid: InscryptionAPI.Triggers.IOnItemPreventedFromUse.RespondsToItemPreventedFromUse(System.String)
  name: RespondsToItemPreventedFromUse(String)
  href: api/InscryptionAPI.Triggers.IOnItemPreventedFromUse.html#InscryptionAPI_Triggers_IOnItemPreventedFromUse_RespondsToItemPreventedFromUse_System_String_
  commentId: M:InscryptionAPI.Triggers.IOnItemPreventedFromUse.RespondsToItemPreventedFromUse(System.String)
  fullName: InscryptionAPI.Triggers.IOnItemPreventedFromUse.RespondsToItemPreventedFromUse(System.String)
  nameWithType: IOnItemPreventedFromUse.RespondsToItemPreventedFromUse(String)
- uid: InscryptionAPI.Triggers.IOnItemPreventedFromUse.RespondsToItemPreventedFromUse*
  name: RespondsToItemPreventedFromUse
  href: api/InscryptionAPI.Triggers.IOnItemPreventedFromUse.html#InscryptionAPI_Triggers_IOnItemPreventedFromUse_RespondsToItemPreventedFromUse_
  commentId: Overload:InscryptionAPI.Triggers.IOnItemPreventedFromUse.RespondsToItemPreventedFromUse
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.IOnItemPreventedFromUse.RespondsToItemPreventedFromUse
  nameWithType: IOnItemPreventedFromUse.RespondsToItemPreventedFromUse
- uid: InscryptionAPI.Triggers.IOnOtherCardAddedToHand
  name: IOnOtherCardAddedToHand
  href: api/InscryptionAPI.Triggers.IOnOtherCardAddedToHand.html
  commentId: T:InscryptionAPI.Triggers.IOnOtherCardAddedToHand
  fullName: InscryptionAPI.Triggers.IOnOtherCardAddedToHand
  nameWithType: IOnOtherCardAddedToHand
- uid: InscryptionAPI.Triggers.IOnOtherCardAddedToHand.OnOtherCardAddedToHand(DiskCardGame.PlayableCard)
  name: OnOtherCardAddedToHand(PlayableCard)
  href: api/InscryptionAPI.Triggers.IOnOtherCardAddedToHand.html#InscryptionAPI_Triggers_IOnOtherCardAddedToHand_OnOtherCardAddedToHand_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Triggers.IOnOtherCardAddedToHand.OnOtherCardAddedToHand(DiskCardGame.PlayableCard)
  fullName: InscryptionAPI.Triggers.IOnOtherCardAddedToHand.OnOtherCardAddedToHand(DiskCardGame.PlayableCard)
  nameWithType: IOnOtherCardAddedToHand.OnOtherCardAddedToHand(PlayableCard)
- uid: InscryptionAPI.Triggers.IOnOtherCardAddedToHand.OnOtherCardAddedToHand*
  name: OnOtherCardAddedToHand
  href: api/InscryptionAPI.Triggers.IOnOtherCardAddedToHand.html#InscryptionAPI_Triggers_IOnOtherCardAddedToHand_OnOtherCardAddedToHand_
  commentId: Overload:InscryptionAPI.Triggers.IOnOtherCardAddedToHand.OnOtherCardAddedToHand
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.IOnOtherCardAddedToHand.OnOtherCardAddedToHand
  nameWithType: IOnOtherCardAddedToHand.OnOtherCardAddedToHand
- uid: InscryptionAPI.Triggers.IOnOtherCardAddedToHand.RespondsToOtherCardAddedToHand(DiskCardGame.PlayableCard)
  name: RespondsToOtherCardAddedToHand(PlayableCard)
  href: api/InscryptionAPI.Triggers.IOnOtherCardAddedToHand.html#InscryptionAPI_Triggers_IOnOtherCardAddedToHand_RespondsToOtherCardAddedToHand_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Triggers.IOnOtherCardAddedToHand.RespondsToOtherCardAddedToHand(DiskCardGame.PlayableCard)
  fullName: InscryptionAPI.Triggers.IOnOtherCardAddedToHand.RespondsToOtherCardAddedToHand(DiskCardGame.PlayableCard)
  nameWithType: IOnOtherCardAddedToHand.RespondsToOtherCardAddedToHand(PlayableCard)
- uid: InscryptionAPI.Triggers.IOnOtherCardAddedToHand.RespondsToOtherCardAddedToHand*
  name: RespondsToOtherCardAddedToHand
  href: api/InscryptionAPI.Triggers.IOnOtherCardAddedToHand.html#InscryptionAPI_Triggers_IOnOtherCardAddedToHand_RespondsToOtherCardAddedToHand_
  commentId: Overload:InscryptionAPI.Triggers.IOnOtherCardAddedToHand.RespondsToOtherCardAddedToHand
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.IOnOtherCardAddedToHand.RespondsToOtherCardAddedToHand
  nameWithType: IOnOtherCardAddedToHand.RespondsToOtherCardAddedToHand
- uid: InscryptionAPI.Triggers.IOnOtherCardAssignedToSlotInHand
  name: IOnOtherCardAssignedToSlotInHand
  href: api/InscryptionAPI.Triggers.IOnOtherCardAssignedToSlotInHand.html
  commentId: T:InscryptionAPI.Triggers.IOnOtherCardAssignedToSlotInHand
  fullName: InscryptionAPI.Triggers.IOnOtherCardAssignedToSlotInHand
  nameWithType: IOnOtherCardAssignedToSlotInHand
- uid: InscryptionAPI.Triggers.IOnOtherCardAssignedToSlotInHand.OnOtherCardAssignedToSlotInHand(DiskCardGame.PlayableCard)
  name: OnOtherCardAssignedToSlotInHand(PlayableCard)
  href: api/InscryptionAPI.Triggers.IOnOtherCardAssignedToSlotInHand.html#InscryptionAPI_Triggers_IOnOtherCardAssignedToSlotInHand_OnOtherCardAssignedToSlotInHand_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Triggers.IOnOtherCardAssignedToSlotInHand.OnOtherCardAssignedToSlotInHand(DiskCardGame.PlayableCard)
  fullName: InscryptionAPI.Triggers.IOnOtherCardAssignedToSlotInHand.OnOtherCardAssignedToSlotInHand(DiskCardGame.PlayableCard)
  nameWithType: IOnOtherCardAssignedToSlotInHand.OnOtherCardAssignedToSlotInHand(PlayableCard)
- uid: InscryptionAPI.Triggers.IOnOtherCardAssignedToSlotInHand.OnOtherCardAssignedToSlotInHand*
  name: OnOtherCardAssignedToSlotInHand
  href: api/InscryptionAPI.Triggers.IOnOtherCardAssignedToSlotInHand.html#InscryptionAPI_Triggers_IOnOtherCardAssignedToSlotInHand_OnOtherCardAssignedToSlotInHand_
  commentId: Overload:InscryptionAPI.Triggers.IOnOtherCardAssignedToSlotInHand.OnOtherCardAssignedToSlotInHand
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.IOnOtherCardAssignedToSlotInHand.OnOtherCardAssignedToSlotInHand
  nameWithType: IOnOtherCardAssignedToSlotInHand.OnOtherCardAssignedToSlotInHand
- uid: InscryptionAPI.Triggers.IOnOtherCardAssignedToSlotInHand.RespondsToOtherCardAssignedToSlotInHand(DiskCardGame.PlayableCard)
  name: RespondsToOtherCardAssignedToSlotInHand(PlayableCard)
  href: api/InscryptionAPI.Triggers.IOnOtherCardAssignedToSlotInHand.html#InscryptionAPI_Triggers_IOnOtherCardAssignedToSlotInHand_RespondsToOtherCardAssignedToSlotInHand_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Triggers.IOnOtherCardAssignedToSlotInHand.RespondsToOtherCardAssignedToSlotInHand(DiskCardGame.PlayableCard)
  fullName: InscryptionAPI.Triggers.IOnOtherCardAssignedToSlotInHand.RespondsToOtherCardAssignedToSlotInHand(DiskCardGame.PlayableCard)
  nameWithType: IOnOtherCardAssignedToSlotInHand.RespondsToOtherCardAssignedToSlotInHand(PlayableCard)
- uid: InscryptionAPI.Triggers.IOnOtherCardAssignedToSlotInHand.RespondsToOtherCardAssignedToSlotInHand*
  name: RespondsToOtherCardAssignedToSlotInHand
  href: api/InscryptionAPI.Triggers.IOnOtherCardAssignedToSlotInHand.html#InscryptionAPI_Triggers_IOnOtherCardAssignedToSlotInHand_RespondsToOtherCardAssignedToSlotInHand_
  commentId: Overload:InscryptionAPI.Triggers.IOnOtherCardAssignedToSlotInHand.RespondsToOtherCardAssignedToSlotInHand
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.IOnOtherCardAssignedToSlotInHand.RespondsToOtherCardAssignedToSlotInHand
  nameWithType: IOnOtherCardAssignedToSlotInHand.RespondsToOtherCardAssignedToSlotInHand
- uid: InscryptionAPI.Triggers.IOnOtherCardDealtDamageInHand
  name: IOnOtherCardDealtDamageInHand
  href: api/InscryptionAPI.Triggers.IOnOtherCardDealtDamageInHand.html
  commentId: T:InscryptionAPI.Triggers.IOnOtherCardDealtDamageInHand
  fullName: InscryptionAPI.Triggers.IOnOtherCardDealtDamageInHand
  nameWithType: IOnOtherCardDealtDamageInHand
- uid: InscryptionAPI.Triggers.IOnOtherCardDealtDamageInHand.OnOtherCardDealtDamageInHand(DiskCardGame.PlayableCard,System.Int32,DiskCardGame.PlayableCard)
  name: OnOtherCardDealtDamageInHand(PlayableCard, Int32, PlayableCard)
  href: api/InscryptionAPI.Triggers.IOnOtherCardDealtDamageInHand.html#InscryptionAPI_Triggers_IOnOtherCardDealtDamageInHand_OnOtherCardDealtDamageInHand_DiskCardGame_PlayableCard_System_Int32_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Triggers.IOnOtherCardDealtDamageInHand.OnOtherCardDealtDamageInHand(DiskCardGame.PlayableCard,System.Int32,DiskCardGame.PlayableCard)
  fullName: InscryptionAPI.Triggers.IOnOtherCardDealtDamageInHand.OnOtherCardDealtDamageInHand(DiskCardGame.PlayableCard, System.Int32, DiskCardGame.PlayableCard)
  nameWithType: IOnOtherCardDealtDamageInHand.OnOtherCardDealtDamageInHand(PlayableCard, Int32, PlayableCard)
- uid: InscryptionAPI.Triggers.IOnOtherCardDealtDamageInHand.OnOtherCardDealtDamageInHand*
  name: OnOtherCardDealtDamageInHand
  href: api/InscryptionAPI.Triggers.IOnOtherCardDealtDamageInHand.html#InscryptionAPI_Triggers_IOnOtherCardDealtDamageInHand_OnOtherCardDealtDamageInHand_
  commentId: Overload:InscryptionAPI.Triggers.IOnOtherCardDealtDamageInHand.OnOtherCardDealtDamageInHand
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.IOnOtherCardDealtDamageInHand.OnOtherCardDealtDamageInHand
  nameWithType: IOnOtherCardDealtDamageInHand.OnOtherCardDealtDamageInHand
- uid: InscryptionAPI.Triggers.IOnOtherCardDealtDamageInHand.RespondsToOtherCardDealtDamageInHand(DiskCardGame.PlayableCard,System.Int32,DiskCardGame.PlayableCard)
  name: RespondsToOtherCardDealtDamageInHand(PlayableCard, Int32, PlayableCard)
  href: api/InscryptionAPI.Triggers.IOnOtherCardDealtDamageInHand.html#InscryptionAPI_Triggers_IOnOtherCardDealtDamageInHand_RespondsToOtherCardDealtDamageInHand_DiskCardGame_PlayableCard_System_Int32_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Triggers.IOnOtherCardDealtDamageInHand.RespondsToOtherCardDealtDamageInHand(DiskCardGame.PlayableCard,System.Int32,DiskCardGame.PlayableCard)
  fullName: InscryptionAPI.Triggers.IOnOtherCardDealtDamageInHand.RespondsToOtherCardDealtDamageInHand(DiskCardGame.PlayableCard, System.Int32, DiskCardGame.PlayableCard)
  nameWithType: IOnOtherCardDealtDamageInHand.RespondsToOtherCardDealtDamageInHand(PlayableCard, Int32, PlayableCard)
- uid: InscryptionAPI.Triggers.IOnOtherCardDealtDamageInHand.RespondsToOtherCardDealtDamageInHand*
  name: RespondsToOtherCardDealtDamageInHand
  href: api/InscryptionAPI.Triggers.IOnOtherCardDealtDamageInHand.html#InscryptionAPI_Triggers_IOnOtherCardDealtDamageInHand_RespondsToOtherCardDealtDamageInHand_
  commentId: Overload:InscryptionAPI.Triggers.IOnOtherCardDealtDamageInHand.RespondsToOtherCardDealtDamageInHand
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.IOnOtherCardDealtDamageInHand.RespondsToOtherCardDealtDamageInHand
  nameWithType: IOnOtherCardDealtDamageInHand.RespondsToOtherCardDealtDamageInHand
- uid: InscryptionAPI.Triggers.IOnOtherCardDieInHand
  name: IOnOtherCardDieInHand
  href: api/InscryptionAPI.Triggers.IOnOtherCardDieInHand.html
  commentId: T:InscryptionAPI.Triggers.IOnOtherCardDieInHand
  fullName: InscryptionAPI.Triggers.IOnOtherCardDieInHand
  nameWithType: IOnOtherCardDieInHand
- uid: InscryptionAPI.Triggers.IOnOtherCardDieInHand.OnOtherCardDieInHand(DiskCardGame.PlayableCard,DiskCardGame.CardSlot,System.Boolean,DiskCardGame.PlayableCard)
  name: OnOtherCardDieInHand(PlayableCard, CardSlot, Boolean, PlayableCard)
  href: api/InscryptionAPI.Triggers.IOnOtherCardDieInHand.html#InscryptionAPI_Triggers_IOnOtherCardDieInHand_OnOtherCardDieInHand_DiskCardGame_PlayableCard_DiskCardGame_CardSlot_System_Boolean_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Triggers.IOnOtherCardDieInHand.OnOtherCardDieInHand(DiskCardGame.PlayableCard,DiskCardGame.CardSlot,System.Boolean,DiskCardGame.PlayableCard)
  fullName: InscryptionAPI.Triggers.IOnOtherCardDieInHand.OnOtherCardDieInHand(DiskCardGame.PlayableCard, DiskCardGame.CardSlot, System.Boolean, DiskCardGame.PlayableCard)
  nameWithType: IOnOtherCardDieInHand.OnOtherCardDieInHand(PlayableCard, CardSlot, Boolean, PlayableCard)
- uid: InscryptionAPI.Triggers.IOnOtherCardDieInHand.OnOtherCardDieInHand*
  name: OnOtherCardDieInHand
  href: api/InscryptionAPI.Triggers.IOnOtherCardDieInHand.html#InscryptionAPI_Triggers_IOnOtherCardDieInHand_OnOtherCardDieInHand_
  commentId: Overload:InscryptionAPI.Triggers.IOnOtherCardDieInHand.OnOtherCardDieInHand
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.IOnOtherCardDieInHand.OnOtherCardDieInHand
  nameWithType: IOnOtherCardDieInHand.OnOtherCardDieInHand
- uid: InscryptionAPI.Triggers.IOnOtherCardDieInHand.RespondsToOtherCardDieInHand(DiskCardGame.PlayableCard,DiskCardGame.CardSlot,System.Boolean,DiskCardGame.PlayableCard)
  name: RespondsToOtherCardDieInHand(PlayableCard, CardSlot, Boolean, PlayableCard)
  href: api/InscryptionAPI.Triggers.IOnOtherCardDieInHand.html#InscryptionAPI_Triggers_IOnOtherCardDieInHand_RespondsToOtherCardDieInHand_DiskCardGame_PlayableCard_DiskCardGame_CardSlot_System_Boolean_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Triggers.IOnOtherCardDieInHand.RespondsToOtherCardDieInHand(DiskCardGame.PlayableCard,DiskCardGame.CardSlot,System.Boolean,DiskCardGame.PlayableCard)
  fullName: InscryptionAPI.Triggers.IOnOtherCardDieInHand.RespondsToOtherCardDieInHand(DiskCardGame.PlayableCard, DiskCardGame.CardSlot, System.Boolean, DiskCardGame.PlayableCard)
  nameWithType: IOnOtherCardDieInHand.RespondsToOtherCardDieInHand(PlayableCard, CardSlot, Boolean, PlayableCard)
- uid: InscryptionAPI.Triggers.IOnOtherCardDieInHand.RespondsToOtherCardDieInHand*
  name: RespondsToOtherCardDieInHand
  href: api/InscryptionAPI.Triggers.IOnOtherCardDieInHand.html#InscryptionAPI_Triggers_IOnOtherCardDieInHand_RespondsToOtherCardDieInHand_
  commentId: Overload:InscryptionAPI.Triggers.IOnOtherCardDieInHand.RespondsToOtherCardDieInHand
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.IOnOtherCardDieInHand.RespondsToOtherCardDieInHand
  nameWithType: IOnOtherCardDieInHand.RespondsToOtherCardDieInHand
- uid: InscryptionAPI.Triggers.IOnOtherCardPreDeathInHand
  name: IOnOtherCardPreDeathInHand
  href: api/InscryptionAPI.Triggers.IOnOtherCardPreDeathInHand.html
  commentId: T:InscryptionAPI.Triggers.IOnOtherCardPreDeathInHand
  fullName: InscryptionAPI.Triggers.IOnOtherCardPreDeathInHand
  nameWithType: IOnOtherCardPreDeathInHand
- uid: InscryptionAPI.Triggers.IOnOtherCardPreDeathInHand.OnOtherCardPreDeathInHand(DiskCardGame.CardSlot,System.Boolean,DiskCardGame.PlayableCard)
  name: OnOtherCardPreDeathInHand(CardSlot, Boolean, PlayableCard)
  href: api/InscryptionAPI.Triggers.IOnOtherCardPreDeathInHand.html#InscryptionAPI_Triggers_IOnOtherCardPreDeathInHand_OnOtherCardPreDeathInHand_DiskCardGame_CardSlot_System_Boolean_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Triggers.IOnOtherCardPreDeathInHand.OnOtherCardPreDeathInHand(DiskCardGame.CardSlot,System.Boolean,DiskCardGame.PlayableCard)
  fullName: InscryptionAPI.Triggers.IOnOtherCardPreDeathInHand.OnOtherCardPreDeathInHand(DiskCardGame.CardSlot, System.Boolean, DiskCardGame.PlayableCard)
  nameWithType: IOnOtherCardPreDeathInHand.OnOtherCardPreDeathInHand(CardSlot, Boolean, PlayableCard)
- uid: InscryptionAPI.Triggers.IOnOtherCardPreDeathInHand.OnOtherCardPreDeathInHand*
  name: OnOtherCardPreDeathInHand
  href: api/InscryptionAPI.Triggers.IOnOtherCardPreDeathInHand.html#InscryptionAPI_Triggers_IOnOtherCardPreDeathInHand_OnOtherCardPreDeathInHand_
  commentId: Overload:InscryptionAPI.Triggers.IOnOtherCardPreDeathInHand.OnOtherCardPreDeathInHand
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.IOnOtherCardPreDeathInHand.OnOtherCardPreDeathInHand
  nameWithType: IOnOtherCardPreDeathInHand.OnOtherCardPreDeathInHand
- uid: InscryptionAPI.Triggers.IOnOtherCardPreDeathInHand.RespondsToOtherCardPreDeathInHand(DiskCardGame.CardSlot,System.Boolean,DiskCardGame.PlayableCard)
  name: RespondsToOtherCardPreDeathInHand(CardSlot, Boolean, PlayableCard)
  href: api/InscryptionAPI.Triggers.IOnOtherCardPreDeathInHand.html#InscryptionAPI_Triggers_IOnOtherCardPreDeathInHand_RespondsToOtherCardPreDeathInHand_DiskCardGame_CardSlot_System_Boolean_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Triggers.IOnOtherCardPreDeathInHand.RespondsToOtherCardPreDeathInHand(DiskCardGame.CardSlot,System.Boolean,DiskCardGame.PlayableCard)
  fullName: InscryptionAPI.Triggers.IOnOtherCardPreDeathInHand.RespondsToOtherCardPreDeathInHand(DiskCardGame.CardSlot, System.Boolean, DiskCardGame.PlayableCard)
  nameWithType: IOnOtherCardPreDeathInHand.RespondsToOtherCardPreDeathInHand(CardSlot, Boolean, PlayableCard)
- uid: InscryptionAPI.Triggers.IOnOtherCardPreDeathInHand.RespondsToOtherCardPreDeathInHand*
  name: RespondsToOtherCardPreDeathInHand
  href: api/InscryptionAPI.Triggers.IOnOtherCardPreDeathInHand.html#InscryptionAPI_Triggers_IOnOtherCardPreDeathInHand_RespondsToOtherCardPreDeathInHand_
  commentId: Overload:InscryptionAPI.Triggers.IOnOtherCardPreDeathInHand.RespondsToOtherCardPreDeathInHand
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.IOnOtherCardPreDeathInHand.RespondsToOtherCardPreDeathInHand
  nameWithType: IOnOtherCardPreDeathInHand.RespondsToOtherCardPreDeathInHand
- uid: InscryptionAPI.Triggers.IOnOtherCardResolveInHand
  name: IOnOtherCardResolveInHand
  href: api/InscryptionAPI.Triggers.IOnOtherCardResolveInHand.html
  commentId: T:InscryptionAPI.Triggers.IOnOtherCardResolveInHand
  fullName: InscryptionAPI.Triggers.IOnOtherCardResolveInHand
  nameWithType: IOnOtherCardResolveInHand
- uid: InscryptionAPI.Triggers.IOnOtherCardResolveInHand.OnOtherCardResolveInHand(DiskCardGame.PlayableCard)
  name: OnOtherCardResolveInHand(PlayableCard)
  href: api/InscryptionAPI.Triggers.IOnOtherCardResolveInHand.html#InscryptionAPI_Triggers_IOnOtherCardResolveInHand_OnOtherCardResolveInHand_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Triggers.IOnOtherCardResolveInHand.OnOtherCardResolveInHand(DiskCardGame.PlayableCard)
  fullName: InscryptionAPI.Triggers.IOnOtherCardResolveInHand.OnOtherCardResolveInHand(DiskCardGame.PlayableCard)
  nameWithType: IOnOtherCardResolveInHand.OnOtherCardResolveInHand(PlayableCard)
- uid: InscryptionAPI.Triggers.IOnOtherCardResolveInHand.OnOtherCardResolveInHand*
  name: OnOtherCardResolveInHand
  href: api/InscryptionAPI.Triggers.IOnOtherCardResolveInHand.html#InscryptionAPI_Triggers_IOnOtherCardResolveInHand_OnOtherCardResolveInHand_
  commentId: Overload:InscryptionAPI.Triggers.IOnOtherCardResolveInHand.OnOtherCardResolveInHand
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.IOnOtherCardResolveInHand.OnOtherCardResolveInHand
  nameWithType: IOnOtherCardResolveInHand.OnOtherCardResolveInHand
- uid: InscryptionAPI.Triggers.IOnOtherCardResolveInHand.RespondsToOtherCardResolveInHand(DiskCardGame.PlayableCard)
  name: RespondsToOtherCardResolveInHand(PlayableCard)
  href: api/InscryptionAPI.Triggers.IOnOtherCardResolveInHand.html#InscryptionAPI_Triggers_IOnOtherCardResolveInHand_RespondsToOtherCardResolveInHand_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Triggers.IOnOtherCardResolveInHand.RespondsToOtherCardResolveInHand(DiskCardGame.PlayableCard)
  fullName: InscryptionAPI.Triggers.IOnOtherCardResolveInHand.RespondsToOtherCardResolveInHand(DiskCardGame.PlayableCard)
  nameWithType: IOnOtherCardResolveInHand.RespondsToOtherCardResolveInHand(PlayableCard)
- uid: InscryptionAPI.Triggers.IOnOtherCardResolveInHand.RespondsToOtherCardResolveInHand*
  name: RespondsToOtherCardResolveInHand
  href: api/InscryptionAPI.Triggers.IOnOtherCardResolveInHand.html#InscryptionAPI_Triggers_IOnOtherCardResolveInHand_RespondsToOtherCardResolveInHand_
  commentId: Overload:InscryptionAPI.Triggers.IOnOtherCardResolveInHand.RespondsToOtherCardResolveInHand
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.IOnOtherCardResolveInHand.RespondsToOtherCardResolveInHand
  nameWithType: IOnOtherCardResolveInHand.RespondsToOtherCardResolveInHand
- uid: InscryptionAPI.Triggers.IOnPostItemUsed
  name: IOnPostItemUsed
  href: api/InscryptionAPI.Triggers.IOnPostItemUsed.html
  commentId: T:InscryptionAPI.Triggers.IOnPostItemUsed
  fullName: InscryptionAPI.Triggers.IOnPostItemUsed
  nameWithType: IOnPostItemUsed
- uid: InscryptionAPI.Triggers.IOnPostItemUsed.OnPostItemUsed(System.String,System.Boolean,System.Boolean)
  name: OnPostItemUsed(String, Boolean, Boolean)
  href: api/InscryptionAPI.Triggers.IOnPostItemUsed.html#InscryptionAPI_Triggers_IOnPostItemUsed_OnPostItemUsed_System_String_System_Boolean_System_Boolean_
  commentId: M:InscryptionAPI.Triggers.IOnPostItemUsed.OnPostItemUsed(System.String,System.Boolean,System.Boolean)
  fullName: InscryptionAPI.Triggers.IOnPostItemUsed.OnPostItemUsed(System.String, System.Boolean, System.Boolean)
  nameWithType: IOnPostItemUsed.OnPostItemUsed(String, Boolean, Boolean)
- uid: InscryptionAPI.Triggers.IOnPostItemUsed.OnPostItemUsed*
  name: OnPostItemUsed
  href: api/InscryptionAPI.Triggers.IOnPostItemUsed.html#InscryptionAPI_Triggers_IOnPostItemUsed_OnPostItemUsed_
  commentId: Overload:InscryptionAPI.Triggers.IOnPostItemUsed.OnPostItemUsed
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.IOnPostItemUsed.OnPostItemUsed
  nameWithType: IOnPostItemUsed.OnPostItemUsed
- uid: InscryptionAPI.Triggers.IOnPostItemUsed.RespondsToPostItemUsed(System.String,System.Boolean,System.Boolean)
  name: RespondsToPostItemUsed(String, Boolean, Boolean)
  href: api/InscryptionAPI.Triggers.IOnPostItemUsed.html#InscryptionAPI_Triggers_IOnPostItemUsed_RespondsToPostItemUsed_System_String_System_Boolean_System_Boolean_
  commentId: M:InscryptionAPI.Triggers.IOnPostItemUsed.RespondsToPostItemUsed(System.String,System.Boolean,System.Boolean)
  fullName: InscryptionAPI.Triggers.IOnPostItemUsed.RespondsToPostItemUsed(System.String, System.Boolean, System.Boolean)
  nameWithType: IOnPostItemUsed.RespondsToPostItemUsed(String, Boolean, Boolean)
- uid: InscryptionAPI.Triggers.IOnPostItemUsed.RespondsToPostItemUsed*
  name: RespondsToPostItemUsed
  href: api/InscryptionAPI.Triggers.IOnPostItemUsed.html#InscryptionAPI_Triggers_IOnPostItemUsed_RespondsToPostItemUsed_
  commentId: Overload:InscryptionAPI.Triggers.IOnPostItemUsed.RespondsToPostItemUsed
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.IOnPostItemUsed.RespondsToPostItemUsed
  nameWithType: IOnPostItemUsed.RespondsToPostItemUsed
- uid: InscryptionAPI.Triggers.IOnPostScalesChanged
  name: IOnPostScalesChanged
  href: api/InscryptionAPI.Triggers.IOnPostScalesChanged.html
  commentId: T:InscryptionAPI.Triggers.IOnPostScalesChanged
  fullName: InscryptionAPI.Triggers.IOnPostScalesChanged
  nameWithType: IOnPostScalesChanged
- uid: InscryptionAPI.Triggers.IOnPostScalesChanged.OnPostScalesChanged(System.Int32,System.Boolean,System.Int32,System.Boolean)
  name: OnPostScalesChanged(Int32, Boolean, Int32, Boolean)
  href: api/InscryptionAPI.Triggers.IOnPostScalesChanged.html#InscryptionAPI_Triggers_IOnPostScalesChanged_OnPostScalesChanged_System_Int32_System_Boolean_System_Int32_System_Boolean_
  commentId: M:InscryptionAPI.Triggers.IOnPostScalesChanged.OnPostScalesChanged(System.Int32,System.Boolean,System.Int32,System.Boolean)
  fullName: InscryptionAPI.Triggers.IOnPostScalesChanged.OnPostScalesChanged(System.Int32, System.Boolean, System.Int32, System.Boolean)
  nameWithType: IOnPostScalesChanged.OnPostScalesChanged(Int32, Boolean, Int32, Boolean)
- uid: InscryptionAPI.Triggers.IOnPostScalesChanged.OnPostScalesChanged*
  name: OnPostScalesChanged
  href: api/InscryptionAPI.Triggers.IOnPostScalesChanged.html#InscryptionAPI_Triggers_IOnPostScalesChanged_OnPostScalesChanged_
  commentId: Overload:InscryptionAPI.Triggers.IOnPostScalesChanged.OnPostScalesChanged
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.IOnPostScalesChanged.OnPostScalesChanged
  nameWithType: IOnPostScalesChanged.OnPostScalesChanged
- uid: InscryptionAPI.Triggers.IOnPostScalesChanged.RespondsToPostScalesChanged(System.Int32,System.Boolean,System.Int32,System.Boolean)
  name: RespondsToPostScalesChanged(Int32, Boolean, Int32, Boolean)
  href: api/InscryptionAPI.Triggers.IOnPostScalesChanged.html#InscryptionAPI_Triggers_IOnPostScalesChanged_RespondsToPostScalesChanged_System_Int32_System_Boolean_System_Int32_System_Boolean_
  commentId: M:InscryptionAPI.Triggers.IOnPostScalesChanged.RespondsToPostScalesChanged(System.Int32,System.Boolean,System.Int32,System.Boolean)
  fullName: InscryptionAPI.Triggers.IOnPostScalesChanged.RespondsToPostScalesChanged(System.Int32, System.Boolean, System.Int32, System.Boolean)
  nameWithType: IOnPostScalesChanged.RespondsToPostScalesChanged(Int32, Boolean, Int32, Boolean)
- uid: InscryptionAPI.Triggers.IOnPostScalesChanged.RespondsToPostScalesChanged*
  name: RespondsToPostScalesChanged
  href: api/InscryptionAPI.Triggers.IOnPostScalesChanged.html#InscryptionAPI_Triggers_IOnPostScalesChanged_RespondsToPostScalesChanged_
  commentId: Overload:InscryptionAPI.Triggers.IOnPostScalesChanged.RespondsToPostScalesChanged
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.IOnPostScalesChanged.RespondsToPostScalesChanged
  nameWithType: IOnPostScalesChanged.RespondsToPostScalesChanged
- uid: InscryptionAPI.Triggers.IOnPostSingularSlotAttackSlot
  name: IOnPostSingularSlotAttackSlot
  href: api/InscryptionAPI.Triggers.IOnPostSingularSlotAttackSlot.html
  commentId: T:InscryptionAPI.Triggers.IOnPostSingularSlotAttackSlot
  fullName: InscryptionAPI.Triggers.IOnPostSingularSlotAttackSlot
  nameWithType: IOnPostSingularSlotAttackSlot
- uid: InscryptionAPI.Triggers.IOnPostSingularSlotAttackSlot.OnPostSingularSlotAttackSlot(DiskCardGame.CardSlot,DiskCardGame.CardSlot)
  name: OnPostSingularSlotAttackSlot(CardSlot, CardSlot)
  href: api/InscryptionAPI.Triggers.IOnPostSingularSlotAttackSlot.html#InscryptionAPI_Triggers_IOnPostSingularSlotAttackSlot_OnPostSingularSlotAttackSlot_DiskCardGame_CardSlot_DiskCardGame_CardSlot_
  commentId: M:InscryptionAPI.Triggers.IOnPostSingularSlotAttackSlot.OnPostSingularSlotAttackSlot(DiskCardGame.CardSlot,DiskCardGame.CardSlot)
  fullName: InscryptionAPI.Triggers.IOnPostSingularSlotAttackSlot.OnPostSingularSlotAttackSlot(DiskCardGame.CardSlot, DiskCardGame.CardSlot)
  nameWithType: IOnPostSingularSlotAttackSlot.OnPostSingularSlotAttackSlot(CardSlot, CardSlot)
- uid: InscryptionAPI.Triggers.IOnPostSingularSlotAttackSlot.OnPostSingularSlotAttackSlot*
  name: OnPostSingularSlotAttackSlot
  href: api/InscryptionAPI.Triggers.IOnPostSingularSlotAttackSlot.html#InscryptionAPI_Triggers_IOnPostSingularSlotAttackSlot_OnPostSingularSlotAttackSlot_
  commentId: Overload:InscryptionAPI.Triggers.IOnPostSingularSlotAttackSlot.OnPostSingularSlotAttackSlot
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.IOnPostSingularSlotAttackSlot.OnPostSingularSlotAttackSlot
  nameWithType: IOnPostSingularSlotAttackSlot.OnPostSingularSlotAttackSlot
- uid: InscryptionAPI.Triggers.IOnPostSingularSlotAttackSlot.RespondsToPostSingularSlotAttackSlot(DiskCardGame.CardSlot,DiskCardGame.CardSlot)
  name: RespondsToPostSingularSlotAttackSlot(CardSlot, CardSlot)
  href: api/InscryptionAPI.Triggers.IOnPostSingularSlotAttackSlot.html#InscryptionAPI_Triggers_IOnPostSingularSlotAttackSlot_RespondsToPostSingularSlotAttackSlot_DiskCardGame_CardSlot_DiskCardGame_CardSlot_
  commentId: M:InscryptionAPI.Triggers.IOnPostSingularSlotAttackSlot.RespondsToPostSingularSlotAttackSlot(DiskCardGame.CardSlot,DiskCardGame.CardSlot)
  fullName: InscryptionAPI.Triggers.IOnPostSingularSlotAttackSlot.RespondsToPostSingularSlotAttackSlot(DiskCardGame.CardSlot, DiskCardGame.CardSlot)
  nameWithType: IOnPostSingularSlotAttackSlot.RespondsToPostSingularSlotAttackSlot(CardSlot, CardSlot)
- uid: InscryptionAPI.Triggers.IOnPostSingularSlotAttackSlot.RespondsToPostSingularSlotAttackSlot*
  name: RespondsToPostSingularSlotAttackSlot
  href: api/InscryptionAPI.Triggers.IOnPostSingularSlotAttackSlot.html#InscryptionAPI_Triggers_IOnPostSingularSlotAttackSlot_RespondsToPostSingularSlotAttackSlot_
  commentId: Overload:InscryptionAPI.Triggers.IOnPostSingularSlotAttackSlot.RespondsToPostSingularSlotAttackSlot
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.IOnPostSingularSlotAttackSlot.RespondsToPostSingularSlotAttackSlot
  nameWithType: IOnPostSingularSlotAttackSlot.RespondsToPostSingularSlotAttackSlot
- uid: InscryptionAPI.Triggers.IOnPostSlotAttackSequence
  name: IOnPostSlotAttackSequence
  href: api/InscryptionAPI.Triggers.IOnPostSlotAttackSequence.html
  commentId: T:InscryptionAPI.Triggers.IOnPostSlotAttackSequence
  fullName: InscryptionAPI.Triggers.IOnPostSlotAttackSequence
  nameWithType: IOnPostSlotAttackSequence
- uid: InscryptionAPI.Triggers.IOnPostSlotAttackSequence.OnPostSlotAttackSequence(DiskCardGame.CardSlot)
  name: OnPostSlotAttackSequence(CardSlot)
  href: api/InscryptionAPI.Triggers.IOnPostSlotAttackSequence.html#InscryptionAPI_Triggers_IOnPostSlotAttackSequence_OnPostSlotAttackSequence_DiskCardGame_CardSlot_
  commentId: M:InscryptionAPI.Triggers.IOnPostSlotAttackSequence.OnPostSlotAttackSequence(DiskCardGame.CardSlot)
  fullName: InscryptionAPI.Triggers.IOnPostSlotAttackSequence.OnPostSlotAttackSequence(DiskCardGame.CardSlot)
  nameWithType: IOnPostSlotAttackSequence.OnPostSlotAttackSequence(CardSlot)
- uid: InscryptionAPI.Triggers.IOnPostSlotAttackSequence.OnPostSlotAttackSequence*
  name: OnPostSlotAttackSequence
  href: api/InscryptionAPI.Triggers.IOnPostSlotAttackSequence.html#InscryptionAPI_Triggers_IOnPostSlotAttackSequence_OnPostSlotAttackSequence_
  commentId: Overload:InscryptionAPI.Triggers.IOnPostSlotAttackSequence.OnPostSlotAttackSequence
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.IOnPostSlotAttackSequence.OnPostSlotAttackSequence
  nameWithType: IOnPostSlotAttackSequence.OnPostSlotAttackSequence
- uid: InscryptionAPI.Triggers.IOnPostSlotAttackSequence.RespondsToPostSlotAttackSequence(DiskCardGame.CardSlot)
  name: RespondsToPostSlotAttackSequence(CardSlot)
  href: api/InscryptionAPI.Triggers.IOnPostSlotAttackSequence.html#InscryptionAPI_Triggers_IOnPostSlotAttackSequence_RespondsToPostSlotAttackSequence_DiskCardGame_CardSlot_
  commentId: M:InscryptionAPI.Triggers.IOnPostSlotAttackSequence.RespondsToPostSlotAttackSequence(DiskCardGame.CardSlot)
  fullName: InscryptionAPI.Triggers.IOnPostSlotAttackSequence.RespondsToPostSlotAttackSequence(DiskCardGame.CardSlot)
  nameWithType: IOnPostSlotAttackSequence.RespondsToPostSlotAttackSequence(CardSlot)
- uid: InscryptionAPI.Triggers.IOnPostSlotAttackSequence.RespondsToPostSlotAttackSequence*
  name: RespondsToPostSlotAttackSequence
  href: api/InscryptionAPI.Triggers.IOnPostSlotAttackSequence.html#InscryptionAPI_Triggers_IOnPostSlotAttackSequence_RespondsToPostSlotAttackSequence_
  commentId: Overload:InscryptionAPI.Triggers.IOnPostSlotAttackSequence.RespondsToPostSlotAttackSequence
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.IOnPostSlotAttackSequence.RespondsToPostSlotAttackSequence
  nameWithType: IOnPostSlotAttackSequence.RespondsToPostSlotAttackSequence
- uid: InscryptionAPI.Triggers.IOnPreItemUsed
  name: IOnPreItemUsed
  href: api/InscryptionAPI.Triggers.IOnPreItemUsed.html
  commentId: T:InscryptionAPI.Triggers.IOnPreItemUsed
  fullName: InscryptionAPI.Triggers.IOnPreItemUsed
  nameWithType: IOnPreItemUsed
- uid: InscryptionAPI.Triggers.IOnPreItemUsed.OnPreItemUsed(System.String,System.Boolean)
  name: OnPreItemUsed(String, Boolean)
  href: api/InscryptionAPI.Triggers.IOnPreItemUsed.html#InscryptionAPI_Triggers_IOnPreItemUsed_OnPreItemUsed_System_String_System_Boolean_
  commentId: M:InscryptionAPI.Triggers.IOnPreItemUsed.OnPreItemUsed(System.String,System.Boolean)
  fullName: InscryptionAPI.Triggers.IOnPreItemUsed.OnPreItemUsed(System.String, System.Boolean)
  nameWithType: IOnPreItemUsed.OnPreItemUsed(String, Boolean)
- uid: InscryptionAPI.Triggers.IOnPreItemUsed.OnPreItemUsed*
  name: OnPreItemUsed
  href: api/InscryptionAPI.Triggers.IOnPreItemUsed.html#InscryptionAPI_Triggers_IOnPreItemUsed_OnPreItemUsed_
  commentId: Overload:InscryptionAPI.Triggers.IOnPreItemUsed.OnPreItemUsed
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.IOnPreItemUsed.OnPreItemUsed
  nameWithType: IOnPreItemUsed.OnPreItemUsed
- uid: InscryptionAPI.Triggers.IOnPreItemUsed.RespondsToPreItemUsed(System.String,System.Boolean)
  name: RespondsToPreItemUsed(String, Boolean)
  href: api/InscryptionAPI.Triggers.IOnPreItemUsed.html#InscryptionAPI_Triggers_IOnPreItemUsed_RespondsToPreItemUsed_System_String_System_Boolean_
  commentId: M:InscryptionAPI.Triggers.IOnPreItemUsed.RespondsToPreItemUsed(System.String,System.Boolean)
  fullName: InscryptionAPI.Triggers.IOnPreItemUsed.RespondsToPreItemUsed(System.String, System.Boolean)
  nameWithType: IOnPreItemUsed.RespondsToPreItemUsed(String, Boolean)
- uid: InscryptionAPI.Triggers.IOnPreItemUsed.RespondsToPreItemUsed*
  name: RespondsToPreItemUsed
  href: api/InscryptionAPI.Triggers.IOnPreItemUsed.html#InscryptionAPI_Triggers_IOnPreItemUsed_RespondsToPreItemUsed_
  commentId: Overload:InscryptionAPI.Triggers.IOnPreItemUsed.RespondsToPreItemUsed
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.IOnPreItemUsed.RespondsToPreItemUsed
  nameWithType: IOnPreItemUsed.RespondsToPreItemUsed
- uid: InscryptionAPI.Triggers.IOnPreScalesChanged
  name: IOnPreScalesChanged
  href: api/InscryptionAPI.Triggers.IOnPreScalesChanged.html
  commentId: T:InscryptionAPI.Triggers.IOnPreScalesChanged
  fullName: InscryptionAPI.Triggers.IOnPreScalesChanged
  nameWithType: IOnPreScalesChanged
- uid: InscryptionAPI.Triggers.IOnPreScalesChanged.OnPreScalesChanged(System.Int32,System.Boolean,System.Int32,System.Boolean)
  name: OnPreScalesChanged(Int32, Boolean, Int32, Boolean)
  href: api/InscryptionAPI.Triggers.IOnPreScalesChanged.html#InscryptionAPI_Triggers_IOnPreScalesChanged_OnPreScalesChanged_System_Int32_System_Boolean_System_Int32_System_Boolean_
  commentId: M:InscryptionAPI.Triggers.IOnPreScalesChanged.OnPreScalesChanged(System.Int32,System.Boolean,System.Int32,System.Boolean)
  fullName: InscryptionAPI.Triggers.IOnPreScalesChanged.OnPreScalesChanged(System.Int32, System.Boolean, System.Int32, System.Boolean)
  nameWithType: IOnPreScalesChanged.OnPreScalesChanged(Int32, Boolean, Int32, Boolean)
- uid: InscryptionAPI.Triggers.IOnPreScalesChanged.OnPreScalesChanged*
  name: OnPreScalesChanged
  href: api/InscryptionAPI.Triggers.IOnPreScalesChanged.html#InscryptionAPI_Triggers_IOnPreScalesChanged_OnPreScalesChanged_
  commentId: Overload:InscryptionAPI.Triggers.IOnPreScalesChanged.OnPreScalesChanged
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.IOnPreScalesChanged.OnPreScalesChanged
  nameWithType: IOnPreScalesChanged.OnPreScalesChanged
- uid: InscryptionAPI.Triggers.IOnPreScalesChanged.RespondsToPreScalesChanged(System.Int32,System.Boolean,System.Int32,System.Boolean)
  name: RespondsToPreScalesChanged(Int32, Boolean, Int32, Boolean)
  href: api/InscryptionAPI.Triggers.IOnPreScalesChanged.html#InscryptionAPI_Triggers_IOnPreScalesChanged_RespondsToPreScalesChanged_System_Int32_System_Boolean_System_Int32_System_Boolean_
  commentId: M:InscryptionAPI.Triggers.IOnPreScalesChanged.RespondsToPreScalesChanged(System.Int32,System.Boolean,System.Int32,System.Boolean)
  fullName: InscryptionAPI.Triggers.IOnPreScalesChanged.RespondsToPreScalesChanged(System.Int32, System.Boolean, System.Int32, System.Boolean)
  nameWithType: IOnPreScalesChanged.RespondsToPreScalesChanged(Int32, Boolean, Int32, Boolean)
- uid: InscryptionAPI.Triggers.IOnPreScalesChanged.RespondsToPreScalesChanged*
  name: RespondsToPreScalesChanged
  href: api/InscryptionAPI.Triggers.IOnPreScalesChanged.html#InscryptionAPI_Triggers_IOnPreScalesChanged_RespondsToPreScalesChanged_
  commentId: Overload:InscryptionAPI.Triggers.IOnPreScalesChanged.RespondsToPreScalesChanged
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.IOnPreScalesChanged.RespondsToPreScalesChanged
  nameWithType: IOnPreScalesChanged.RespondsToPreScalesChanged
- uid: InscryptionAPI.Triggers.IOnPreScalesChangedRef
  name: IOnPreScalesChangedRef
  href: api/InscryptionAPI.Triggers.IOnPreScalesChangedRef.html
  commentId: T:InscryptionAPI.Triggers.IOnPreScalesChangedRef
  fullName: InscryptionAPI.Triggers.IOnPreScalesChangedRef
  nameWithType: IOnPreScalesChangedRef
- uid: InscryptionAPI.Triggers.IOnPreScalesChangedRef.CollectPreScalesChangedRef(System.Int32,System.Int32@,System.Boolean@)
  name: CollectPreScalesChangedRef(Int32, ref Int32, ref Boolean)
  href: api/InscryptionAPI.Triggers.IOnPreScalesChangedRef.html#InscryptionAPI_Triggers_IOnPreScalesChangedRef_CollectPreScalesChangedRef_System_Int32_System_Int32__System_Boolean__
  commentId: M:InscryptionAPI.Triggers.IOnPreScalesChangedRef.CollectPreScalesChangedRef(System.Int32,System.Int32@,System.Boolean@)
  name.vb: CollectPreScalesChangedRef(Int32, ByRef Int32, ByRef Boolean)
  fullName: InscryptionAPI.Triggers.IOnPreScalesChangedRef.CollectPreScalesChangedRef(System.Int32, ref System.Int32, ref System.Boolean)
  fullName.vb: InscryptionAPI.Triggers.IOnPreScalesChangedRef.CollectPreScalesChangedRef(System.Int32, ByRef System.Int32, ByRef System.Boolean)
  nameWithType: IOnPreScalesChangedRef.CollectPreScalesChangedRef(Int32, ref Int32, ref Boolean)
  nameWithType.vb: IOnPreScalesChangedRef.CollectPreScalesChangedRef(Int32, ByRef Int32, ByRef Boolean)
- uid: InscryptionAPI.Triggers.IOnPreScalesChangedRef.CollectPreScalesChangedRef*
  name: CollectPreScalesChangedRef
  href: api/InscryptionAPI.Triggers.IOnPreScalesChangedRef.html#InscryptionAPI_Triggers_IOnPreScalesChangedRef_CollectPreScalesChangedRef_
  commentId: Overload:InscryptionAPI.Triggers.IOnPreScalesChangedRef.CollectPreScalesChangedRef
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.IOnPreScalesChangedRef.CollectPreScalesChangedRef
  nameWithType: IOnPreScalesChangedRef.CollectPreScalesChangedRef
- uid: InscryptionAPI.Triggers.IOnPreScalesChangedRef.RespondsToPreScalesChangedRef(System.Int32,System.Int32,System.Boolean)
  name: RespondsToPreScalesChangedRef(Int32, Int32, Boolean)
  href: api/InscryptionAPI.Triggers.IOnPreScalesChangedRef.html#InscryptionAPI_Triggers_IOnPreScalesChangedRef_RespondsToPreScalesChangedRef_System_Int32_System_Int32_System_Boolean_
  commentId: M:InscryptionAPI.Triggers.IOnPreScalesChangedRef.RespondsToPreScalesChangedRef(System.Int32,System.Int32,System.Boolean)
  fullName: InscryptionAPI.Triggers.IOnPreScalesChangedRef.RespondsToPreScalesChangedRef(System.Int32, System.Int32, System.Boolean)
  nameWithType: IOnPreScalesChangedRef.RespondsToPreScalesChangedRef(Int32, Int32, Boolean)
- uid: InscryptionAPI.Triggers.IOnPreScalesChangedRef.RespondsToPreScalesChangedRef*
  name: RespondsToPreScalesChangedRef
  href: api/InscryptionAPI.Triggers.IOnPreScalesChangedRef.html#InscryptionAPI_Triggers_IOnPreScalesChangedRef_RespondsToPreScalesChangedRef_
  commentId: Overload:InscryptionAPI.Triggers.IOnPreScalesChangedRef.RespondsToPreScalesChangedRef
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.IOnPreScalesChangedRef.RespondsToPreScalesChangedRef
  nameWithType: IOnPreScalesChangedRef.RespondsToPreScalesChangedRef
- uid: InscryptionAPI.Triggers.IOnPreSlotAttackSequence
  name: IOnPreSlotAttackSequence
  href: api/InscryptionAPI.Triggers.IOnPreSlotAttackSequence.html
  commentId: T:InscryptionAPI.Triggers.IOnPreSlotAttackSequence
  fullName: InscryptionAPI.Triggers.IOnPreSlotAttackSequence
  nameWithType: IOnPreSlotAttackSequence
- uid: InscryptionAPI.Triggers.IOnPreSlotAttackSequence.OnPreSlotAttackSequence(DiskCardGame.CardSlot)
  name: OnPreSlotAttackSequence(CardSlot)
  href: api/InscryptionAPI.Triggers.IOnPreSlotAttackSequence.html#InscryptionAPI_Triggers_IOnPreSlotAttackSequence_OnPreSlotAttackSequence_DiskCardGame_CardSlot_
  commentId: M:InscryptionAPI.Triggers.IOnPreSlotAttackSequence.OnPreSlotAttackSequence(DiskCardGame.CardSlot)
  fullName: InscryptionAPI.Triggers.IOnPreSlotAttackSequence.OnPreSlotAttackSequence(DiskCardGame.CardSlot)
  nameWithType: IOnPreSlotAttackSequence.OnPreSlotAttackSequence(CardSlot)
- uid: InscryptionAPI.Triggers.IOnPreSlotAttackSequence.OnPreSlotAttackSequence*
  name: OnPreSlotAttackSequence
  href: api/InscryptionAPI.Triggers.IOnPreSlotAttackSequence.html#InscryptionAPI_Triggers_IOnPreSlotAttackSequence_OnPreSlotAttackSequence_
  commentId: Overload:InscryptionAPI.Triggers.IOnPreSlotAttackSequence.OnPreSlotAttackSequence
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.IOnPreSlotAttackSequence.OnPreSlotAttackSequence
  nameWithType: IOnPreSlotAttackSequence.OnPreSlotAttackSequence
- uid: InscryptionAPI.Triggers.IOnPreSlotAttackSequence.RespondsToPreSlotAttackSequence(DiskCardGame.CardSlot)
  name: RespondsToPreSlotAttackSequence(CardSlot)
  href: api/InscryptionAPI.Triggers.IOnPreSlotAttackSequence.html#InscryptionAPI_Triggers_IOnPreSlotAttackSequence_RespondsToPreSlotAttackSequence_DiskCardGame_CardSlot_
  commentId: M:InscryptionAPI.Triggers.IOnPreSlotAttackSequence.RespondsToPreSlotAttackSequence(DiskCardGame.CardSlot)
  fullName: InscryptionAPI.Triggers.IOnPreSlotAttackSequence.RespondsToPreSlotAttackSequence(DiskCardGame.CardSlot)
  nameWithType: IOnPreSlotAttackSequence.RespondsToPreSlotAttackSequence(CardSlot)
- uid: InscryptionAPI.Triggers.IOnPreSlotAttackSequence.RespondsToPreSlotAttackSequence*
  name: RespondsToPreSlotAttackSequence
  href: api/InscryptionAPI.Triggers.IOnPreSlotAttackSequence.html#InscryptionAPI_Triggers_IOnPreSlotAttackSequence_RespondsToPreSlotAttackSequence_
  commentId: Overload:InscryptionAPI.Triggers.IOnPreSlotAttackSequence.RespondsToPreSlotAttackSequence
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.IOnPreSlotAttackSequence.RespondsToPreSlotAttackSequence
  nameWithType: IOnPreSlotAttackSequence.RespondsToPreSlotAttackSequence
- uid: InscryptionAPI.Triggers.IOnTurnEndInHand
  name: IOnTurnEndInHand
  href: api/InscryptionAPI.Triggers.IOnTurnEndInHand.html
  commentId: T:InscryptionAPI.Triggers.IOnTurnEndInHand
  fullName: InscryptionAPI.Triggers.IOnTurnEndInHand
  nameWithType: IOnTurnEndInHand
- uid: InscryptionAPI.Triggers.IOnTurnEndInHand.OnTurnEndInHand(System.Boolean)
  name: OnTurnEndInHand(Boolean)
  href: api/InscryptionAPI.Triggers.IOnTurnEndInHand.html#InscryptionAPI_Triggers_IOnTurnEndInHand_OnTurnEndInHand_System_Boolean_
  commentId: M:InscryptionAPI.Triggers.IOnTurnEndInHand.OnTurnEndInHand(System.Boolean)
  fullName: InscryptionAPI.Triggers.IOnTurnEndInHand.OnTurnEndInHand(System.Boolean)
  nameWithType: IOnTurnEndInHand.OnTurnEndInHand(Boolean)
- uid: InscryptionAPI.Triggers.IOnTurnEndInHand.OnTurnEndInHand*
  name: OnTurnEndInHand
  href: api/InscryptionAPI.Triggers.IOnTurnEndInHand.html#InscryptionAPI_Triggers_IOnTurnEndInHand_OnTurnEndInHand_
  commentId: Overload:InscryptionAPI.Triggers.IOnTurnEndInHand.OnTurnEndInHand
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.IOnTurnEndInHand.OnTurnEndInHand
  nameWithType: IOnTurnEndInHand.OnTurnEndInHand
- uid: InscryptionAPI.Triggers.IOnTurnEndInHand.RespondsToTurnEndInHand(System.Boolean)
  name: RespondsToTurnEndInHand(Boolean)
  href: api/InscryptionAPI.Triggers.IOnTurnEndInHand.html#InscryptionAPI_Triggers_IOnTurnEndInHand_RespondsToTurnEndInHand_System_Boolean_
  commentId: M:InscryptionAPI.Triggers.IOnTurnEndInHand.RespondsToTurnEndInHand(System.Boolean)
  fullName: InscryptionAPI.Triggers.IOnTurnEndInHand.RespondsToTurnEndInHand(System.Boolean)
  nameWithType: IOnTurnEndInHand.RespondsToTurnEndInHand(Boolean)
- uid: InscryptionAPI.Triggers.IOnTurnEndInHand.RespondsToTurnEndInHand*
  name: RespondsToTurnEndInHand
  href: api/InscryptionAPI.Triggers.IOnTurnEndInHand.html#InscryptionAPI_Triggers_IOnTurnEndInHand_RespondsToTurnEndInHand_
  commentId: Overload:InscryptionAPI.Triggers.IOnTurnEndInHand.RespondsToTurnEndInHand
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.IOnTurnEndInHand.RespondsToTurnEndInHand
  nameWithType: IOnTurnEndInHand.RespondsToTurnEndInHand
- uid: InscryptionAPI.Triggers.IOnUpkeepInHand
  name: IOnUpkeepInHand
  href: api/InscryptionAPI.Triggers.IOnUpkeepInHand.html
  commentId: T:InscryptionAPI.Triggers.IOnUpkeepInHand
  fullName: InscryptionAPI.Triggers.IOnUpkeepInHand
  nameWithType: IOnUpkeepInHand
- uid: InscryptionAPI.Triggers.IOnUpkeepInHand.OnUpkeepInHand(System.Boolean)
  name: OnUpkeepInHand(Boolean)
  href: api/InscryptionAPI.Triggers.IOnUpkeepInHand.html#InscryptionAPI_Triggers_IOnUpkeepInHand_OnUpkeepInHand_System_Boolean_
  commentId: M:InscryptionAPI.Triggers.IOnUpkeepInHand.OnUpkeepInHand(System.Boolean)
  fullName: InscryptionAPI.Triggers.IOnUpkeepInHand.OnUpkeepInHand(System.Boolean)
  nameWithType: IOnUpkeepInHand.OnUpkeepInHand(Boolean)
- uid: InscryptionAPI.Triggers.IOnUpkeepInHand.OnUpkeepInHand*
  name: OnUpkeepInHand
  href: api/InscryptionAPI.Triggers.IOnUpkeepInHand.html#InscryptionAPI_Triggers_IOnUpkeepInHand_OnUpkeepInHand_
  commentId: Overload:InscryptionAPI.Triggers.IOnUpkeepInHand.OnUpkeepInHand
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.IOnUpkeepInHand.OnUpkeepInHand
  nameWithType: IOnUpkeepInHand.OnUpkeepInHand
- uid: InscryptionAPI.Triggers.IOnUpkeepInHand.RespondsToUpkeepInHand(System.Boolean)
  name: RespondsToUpkeepInHand(Boolean)
  href: api/InscryptionAPI.Triggers.IOnUpkeepInHand.html#InscryptionAPI_Triggers_IOnUpkeepInHand_RespondsToUpkeepInHand_System_Boolean_
  commentId: M:InscryptionAPI.Triggers.IOnUpkeepInHand.RespondsToUpkeepInHand(System.Boolean)
  fullName: InscryptionAPI.Triggers.IOnUpkeepInHand.RespondsToUpkeepInHand(System.Boolean)
  nameWithType: IOnUpkeepInHand.RespondsToUpkeepInHand(Boolean)
- uid: InscryptionAPI.Triggers.IOnUpkeepInHand.RespondsToUpkeepInHand*
  name: RespondsToUpkeepInHand
  href: api/InscryptionAPI.Triggers.IOnUpkeepInHand.html#InscryptionAPI_Triggers_IOnUpkeepInHand_RespondsToUpkeepInHand_
  commentId: Overload:InscryptionAPI.Triggers.IOnUpkeepInHand.RespondsToUpkeepInHand
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.IOnUpkeepInHand.RespondsToUpkeepInHand
  nameWithType: IOnUpkeepInHand.RespondsToUpkeepInHand
- uid: InscryptionAPI.Triggers.IPassiveAttackBuff
  name: IPassiveAttackBuff
  href: api/InscryptionAPI.Triggers.IPassiveAttackBuff.html
  commentId: T:InscryptionAPI.Triggers.IPassiveAttackBuff
  fullName: InscryptionAPI.Triggers.IPassiveAttackBuff
  nameWithType: IPassiveAttackBuff
- uid: InscryptionAPI.Triggers.IPassiveAttackBuff.GetPassiveAttackBuff(DiskCardGame.PlayableCard)
  name: GetPassiveAttackBuff(PlayableCard)
  href: api/InscryptionAPI.Triggers.IPassiveAttackBuff.html#InscryptionAPI_Triggers_IPassiveAttackBuff_GetPassiveAttackBuff_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Triggers.IPassiveAttackBuff.GetPassiveAttackBuff(DiskCardGame.PlayableCard)
  fullName: InscryptionAPI.Triggers.IPassiveAttackBuff.GetPassiveAttackBuff(DiskCardGame.PlayableCard)
  nameWithType: IPassiveAttackBuff.GetPassiveAttackBuff(PlayableCard)
- uid: InscryptionAPI.Triggers.IPassiveAttackBuff.GetPassiveAttackBuff*
  name: GetPassiveAttackBuff
  href: api/InscryptionAPI.Triggers.IPassiveAttackBuff.html#InscryptionAPI_Triggers_IPassiveAttackBuff_GetPassiveAttackBuff_
  commentId: Overload:InscryptionAPI.Triggers.IPassiveAttackBuff.GetPassiveAttackBuff
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.IPassiveAttackBuff.GetPassiveAttackBuff
  nameWithType: IPassiveAttackBuff.GetPassiveAttackBuff
- uid: InscryptionAPI.Triggers.IPassiveHealthBuff
  name: IPassiveHealthBuff
  href: api/InscryptionAPI.Triggers.IPassiveHealthBuff.html
  commentId: T:InscryptionAPI.Triggers.IPassiveHealthBuff
  fullName: InscryptionAPI.Triggers.IPassiveHealthBuff
  nameWithType: IPassiveHealthBuff
- uid: InscryptionAPI.Triggers.IPassiveHealthBuff.GetPassiveHealthBuff(DiskCardGame.PlayableCard)
  name: GetPassiveHealthBuff(PlayableCard)
  href: api/InscryptionAPI.Triggers.IPassiveHealthBuff.html#InscryptionAPI_Triggers_IPassiveHealthBuff_GetPassiveHealthBuff_DiskCardGame_PlayableCard_
  commentId: M:InscryptionAPI.Triggers.IPassiveHealthBuff.GetPassiveHealthBuff(DiskCardGame.PlayableCard)
  fullName: InscryptionAPI.Triggers.IPassiveHealthBuff.GetPassiveHealthBuff(DiskCardGame.PlayableCard)
  nameWithType: IPassiveHealthBuff.GetPassiveHealthBuff(PlayableCard)
- uid: InscryptionAPI.Triggers.IPassiveHealthBuff.GetPassiveHealthBuff*
  name: GetPassiveHealthBuff
  href: api/InscryptionAPI.Triggers.IPassiveHealthBuff.html#InscryptionAPI_Triggers_IPassiveHealthBuff_GetPassiveHealthBuff_
  commentId: Overload:InscryptionAPI.Triggers.IPassiveHealthBuff.GetPassiveHealthBuff
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.IPassiveHealthBuff.GetPassiveHealthBuff
  nameWithType: IPassiveHealthBuff.GetPassiveHealthBuff
- uid: InscryptionAPI.Triggers.ISetupAttackSequence
  name: ISetupAttackSequence
  href: api/InscryptionAPI.Triggers.ISetupAttackSequence.html
  commentId: T:InscryptionAPI.Triggers.ISetupAttackSequence
  fullName: InscryptionAPI.Triggers.ISetupAttackSequence
  nameWithType: ISetupAttackSequence
- uid: InscryptionAPI.Triggers.ISetupAttackSequence.CollectModifyAttackSlots(DiskCardGame.PlayableCard,InscryptionAPI.Triggers.OpposingSlotTriggerPriority,System.Collections.Generic.List{DiskCardGame.CardSlot},System.Collections.Generic.List{DiskCardGame.CardSlot},System.Int32@,System.Boolean@)
  name: CollectModifyAttackSlots(PlayableCard, OpposingSlotTriggerPriority, List<CardSlot>, List<CardSlot>, ref Int32, ref Boolean)
  href: api/InscryptionAPI.Triggers.ISetupAttackSequence.html#InscryptionAPI_Triggers_ISetupAttackSequence_CollectModifyAttackSlots_DiskCardGame_PlayableCard_InscryptionAPI_Triggers_OpposingSlotTriggerPriority_System_Collections_Generic_List_DiskCardGame_CardSlot__System_Collections_Generic_List_DiskCardGame_CardSlot__System_Int32__System_Boolean__
  commentId: M:InscryptionAPI.Triggers.ISetupAttackSequence.CollectModifyAttackSlots(DiskCardGame.PlayableCard,InscryptionAPI.Triggers.OpposingSlotTriggerPriority,System.Collections.Generic.List{DiskCardGame.CardSlot},System.Collections.Generic.List{DiskCardGame.CardSlot},System.Int32@,System.Boolean@)
  name.vb: CollectModifyAttackSlots(PlayableCard, OpposingSlotTriggerPriority, List(Of CardSlot), List(Of CardSlot), ByRef Int32, ByRef Boolean)
  fullName: InscryptionAPI.Triggers.ISetupAttackSequence.CollectModifyAttackSlots(DiskCardGame.PlayableCard, InscryptionAPI.Triggers.OpposingSlotTriggerPriority, System.Collections.Generic.List<DiskCardGame.CardSlot>, System.Collections.Generic.List<DiskCardGame.CardSlot>, ref System.Int32, ref System.Boolean)
  fullName.vb: InscryptionAPI.Triggers.ISetupAttackSequence.CollectModifyAttackSlots(DiskCardGame.PlayableCard, InscryptionAPI.Triggers.OpposingSlotTriggerPriority, System.Collections.Generic.List(Of DiskCardGame.CardSlot), System.Collections.Generic.List(Of DiskCardGame.CardSlot), ByRef System.Int32, ByRef System.Boolean)
  nameWithType: ISetupAttackSequence.CollectModifyAttackSlots(PlayableCard, OpposingSlotTriggerPriority, List<CardSlot>, List<CardSlot>, ref Int32, ref Boolean)
  nameWithType.vb: ISetupAttackSequence.CollectModifyAttackSlots(PlayableCard, OpposingSlotTriggerPriority, List(Of CardSlot), List(Of CardSlot), ByRef Int32, ByRef Boolean)
- uid: InscryptionAPI.Triggers.ISetupAttackSequence.CollectModifyAttackSlots*
  name: CollectModifyAttackSlots
  href: api/InscryptionAPI.Triggers.ISetupAttackSequence.html#InscryptionAPI_Triggers_ISetupAttackSequence_CollectModifyAttackSlots_
  commentId: Overload:InscryptionAPI.Triggers.ISetupAttackSequence.CollectModifyAttackSlots
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.ISetupAttackSequence.CollectModifyAttackSlots
  nameWithType: ISetupAttackSequence.CollectModifyAttackSlots
- uid: InscryptionAPI.Triggers.ISetupAttackSequence.GetTriggerPriority(DiskCardGame.PlayableCard,InscryptionAPI.Triggers.OpposingSlotTriggerPriority,System.Collections.Generic.List{DiskCardGame.CardSlot},System.Collections.Generic.List{DiskCardGame.CardSlot},System.Int32,System.Boolean)
  name: GetTriggerPriority(PlayableCard, OpposingSlotTriggerPriority, List<CardSlot>, List<CardSlot>, Int32, Boolean)
  href: api/InscryptionAPI.Triggers.ISetupAttackSequence.html#InscryptionAPI_Triggers_ISetupAttackSequence_GetTriggerPriority_DiskCardGame_PlayableCard_InscryptionAPI_Triggers_OpposingSlotTriggerPriority_System_Collections_Generic_List_DiskCardGame_CardSlot__System_Collections_Generic_List_DiskCardGame_CardSlot__System_Int32_System_Boolean_
  commentId: M:InscryptionAPI.Triggers.ISetupAttackSequence.GetTriggerPriority(DiskCardGame.PlayableCard,InscryptionAPI.Triggers.OpposingSlotTriggerPriority,System.Collections.Generic.List{DiskCardGame.CardSlot},System.Collections.Generic.List{DiskCardGame.CardSlot},System.Int32,System.Boolean)
  name.vb: GetTriggerPriority(PlayableCard, OpposingSlotTriggerPriority, List(Of CardSlot), List(Of CardSlot), Int32, Boolean)
  fullName: InscryptionAPI.Triggers.ISetupAttackSequence.GetTriggerPriority(DiskCardGame.PlayableCard, InscryptionAPI.Triggers.OpposingSlotTriggerPriority, System.Collections.Generic.List<DiskCardGame.CardSlot>, System.Collections.Generic.List<DiskCardGame.CardSlot>, System.Int32, System.Boolean)
  fullName.vb: InscryptionAPI.Triggers.ISetupAttackSequence.GetTriggerPriority(DiskCardGame.PlayableCard, InscryptionAPI.Triggers.OpposingSlotTriggerPriority, System.Collections.Generic.List(Of DiskCardGame.CardSlot), System.Collections.Generic.List(Of DiskCardGame.CardSlot), System.Int32, System.Boolean)
  nameWithType: ISetupAttackSequence.GetTriggerPriority(PlayableCard, OpposingSlotTriggerPriority, List<CardSlot>, List<CardSlot>, Int32, Boolean)
  nameWithType.vb: ISetupAttackSequence.GetTriggerPriority(PlayableCard, OpposingSlotTriggerPriority, List(Of CardSlot), List(Of CardSlot), Int32, Boolean)
- uid: InscryptionAPI.Triggers.ISetupAttackSequence.GetTriggerPriority*
  name: GetTriggerPriority
  href: api/InscryptionAPI.Triggers.ISetupAttackSequence.html#InscryptionAPI_Triggers_ISetupAttackSequence_GetTriggerPriority_
  commentId: Overload:InscryptionAPI.Triggers.ISetupAttackSequence.GetTriggerPriority
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.ISetupAttackSequence.GetTriggerPriority
  nameWithType: ISetupAttackSequence.GetTriggerPriority
- uid: InscryptionAPI.Triggers.ISetupAttackSequence.RespondsToModifyAttackSlots(DiskCardGame.PlayableCard,InscryptionAPI.Triggers.OpposingSlotTriggerPriority,System.Collections.Generic.List{DiskCardGame.CardSlot},System.Collections.Generic.List{DiskCardGame.CardSlot},System.Int32,System.Boolean)
  name: RespondsToModifyAttackSlots(PlayableCard, OpposingSlotTriggerPriority, List<CardSlot>, List<CardSlot>, Int32, Boolean)
  href: api/InscryptionAPI.Triggers.ISetupAttackSequence.html#InscryptionAPI_Triggers_ISetupAttackSequence_RespondsToModifyAttackSlots_DiskCardGame_PlayableCard_InscryptionAPI_Triggers_OpposingSlotTriggerPriority_System_Collections_Generic_List_DiskCardGame_CardSlot__System_Collections_Generic_List_DiskCardGame_CardSlot__System_Int32_System_Boolean_
  commentId: M:InscryptionAPI.Triggers.ISetupAttackSequence.RespondsToModifyAttackSlots(DiskCardGame.PlayableCard,InscryptionAPI.Triggers.OpposingSlotTriggerPriority,System.Collections.Generic.List{DiskCardGame.CardSlot},System.Collections.Generic.List{DiskCardGame.CardSlot},System.Int32,System.Boolean)
  name.vb: RespondsToModifyAttackSlots(PlayableCard, OpposingSlotTriggerPriority, List(Of CardSlot), List(Of CardSlot), Int32, Boolean)
  fullName: InscryptionAPI.Triggers.ISetupAttackSequence.RespondsToModifyAttackSlots(DiskCardGame.PlayableCard, InscryptionAPI.Triggers.OpposingSlotTriggerPriority, System.Collections.Generic.List<DiskCardGame.CardSlot>, System.Collections.Generic.List<DiskCardGame.CardSlot>, System.Int32, System.Boolean)
  fullName.vb: InscryptionAPI.Triggers.ISetupAttackSequence.RespondsToModifyAttackSlots(DiskCardGame.PlayableCard, InscryptionAPI.Triggers.OpposingSlotTriggerPriority, System.Collections.Generic.List(Of DiskCardGame.CardSlot), System.Collections.Generic.List(Of DiskCardGame.CardSlot), System.Int32, System.Boolean)
  nameWithType: ISetupAttackSequence.RespondsToModifyAttackSlots(PlayableCard, OpposingSlotTriggerPriority, List<CardSlot>, List<CardSlot>, Int32, Boolean)
  nameWithType.vb: ISetupAttackSequence.RespondsToModifyAttackSlots(PlayableCard, OpposingSlotTriggerPriority, List(Of CardSlot), List(Of CardSlot), Int32, Boolean)
- uid: InscryptionAPI.Triggers.ISetupAttackSequence.RespondsToModifyAttackSlots*
  name: RespondsToModifyAttackSlots
  href: api/InscryptionAPI.Triggers.ISetupAttackSequence.html#InscryptionAPI_Triggers_ISetupAttackSequence_RespondsToModifyAttackSlots_
  commentId: Overload:InscryptionAPI.Triggers.ISetupAttackSequence.RespondsToModifyAttackSlots
  isSpec: "True"
  fullName: InscryptionAPI.Triggers.ISetupAttackSequence.RespondsToModifyAttackSlots
  nameWithType: ISetupAttackSequence.RespondsToModifyAttackSlots
- uid: InscryptionAPI.Triggers.OpposingSlotTriggerPriority
  name: OpposingSlotTriggerPriority
  href: api/InscryptionAPI.Triggers.OpposingSlotTriggerPriority.html
  commentId: T:InscryptionAPI.Triggers.OpposingSlotTriggerPriority
  fullName: InscryptionAPI.Triggers.OpposingSlotTriggerPriority
  nameWithType: OpposingSlotTriggerPriority
- uid: InscryptionAPI.Triggers.OpposingSlotTriggerPriority.BringsBackOpposingSlot
  name: BringsBackOpposingSlot
  href: api/InscryptionAPI.Triggers.OpposingSlotTriggerPriority.html#InscryptionAPI_Triggers_OpposingSlotTriggerPriority_BringsBackOpposingSlot
  commentId: F:InscryptionAPI.Triggers.OpposingSlotTriggerPriority.BringsBackOpposingSlot
  fullName: InscryptionAPI.Triggers.OpposingSlotTriggerPriority.BringsBackOpposingSlot
  nameWithType: OpposingSlotTriggerPriority.BringsBackOpposingSlot
- uid: InscryptionAPI.Triggers.OpposingSlotTriggerPriority.Normal
  name: Normal
  href: api/InscryptionAPI.Triggers.OpposingSlotTriggerPriority.html#InscryptionAPI_Triggers_OpposingSlotTriggerPriority_Normal
  commentId: F:InscryptionAPI.Triggers.OpposingSlotTriggerPriority.Normal
  fullName: InscryptionAPI.Triggers.OpposingSlotTriggerPriority.Normal
  nameWithType: OpposingSlotTriggerPriority.Normal
- uid: InscryptionAPI.Triggers.OpposingSlotTriggerPriority.PostAdditionModification
  name: PostAdditionModification
  href: api/InscryptionAPI.Triggers.OpposingSlotTriggerPriority.html#InscryptionAPI_Triggers_OpposingSlotTriggerPriority_PostAdditionModification
  commentId: F:InscryptionAPI.Triggers.OpposingSlotTriggerPriority.PostAdditionModification
  fullName: InscryptionAPI.Triggers.OpposingSlotTriggerPriority.PostAdditionModification
  nameWithType: OpposingSlotTriggerPriority.PostAdditionModification
- uid: InscryptionAPI.Triggers.OpposingSlotTriggerPriority.ReplacesDefaultOpposingSlot
  name: ReplacesDefaultOpposingSlot
  href: api/InscryptionAPI.Triggers.OpposingSlotTriggerPriority.html#InscryptionAPI_Triggers_OpposingSlotTriggerPriority_ReplacesDefaultOpposingSlot
  commentId: F:InscryptionAPI.Triggers.OpposingSlotTriggerPriority.ReplacesDefaultOpposingSlot
  fullName: InscryptionAPI.Triggers.OpposingSlotTriggerPriority.ReplacesDefaultOpposingSlot
  nameWithType: OpposingSlotTriggerPriority.ReplacesDefaultOpposingSlot
