### YamlMime:ManagedReference
items:
- uid: InscryptionAPI.Encounters.NodeManager.NodePosition
  commentId: T:InscryptionAPI.Encounters.NodeManager.NodePosition
  id: NodeManager.NodePosition
  parent: InscryptionAPI.Encounters
  children:
  - InscryptionAPI.Encounters.NodeManager.NodePosition.Act1Available
  - InscryptionAPI.Encounters.NodeManager.NodePosition.CardChoiceRandom
  - InscryptionAPI.Encounters.NodeManager.NodePosition.MapStart
  - InscryptionAPI.Encounters.NodeManager.NodePosition.NotGenerated
  - InscryptionAPI.Encounters.NodeManager.NodePosition.PostBoss
  - InscryptionAPI.Encounters.NodeManager.NodePosition.PreBoss
  - InscryptionAPI.Encounters.NodeManager.NodePosition.SpecialEventRandom
  langs:
  - csharp
  - vb
  name: NodeManager.NodePosition
  nameWithType: NodeManager.NodePosition
  fullName: InscryptionAPI.Encounters.NodeManager.NodePosition
  type: Enum
  source:
    remote:
      path: InscryptionAPI/Encounters/NodeManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: NodePosition
    path: ../InscryptionAPI/Encounters/NodeManager.cs
    startLine: 11
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Encounters
  syntax:
    content: public enum NodePosition
    content.vb: Public Enum NodePosition
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: InscryptionAPI.Encounters.NodeManager.NodePosition.NotGenerated
  commentId: F:InscryptionAPI.Encounters.NodeManager.NodePosition.NotGenerated
  id: NotGenerated
  parent: InscryptionAPI.Encounters.NodeManager.NodePosition
  langs:
  - csharp
  - vb
  name: NotGenerated
  nameWithType: NodeManager.NodePosition.NotGenerated
  fullName: InscryptionAPI.Encounters.NodeManager.NodePosition.NotGenerated
  type: Field
  source:
    remote:
      path: InscryptionAPI/Encounters/NodeManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: NotGenerated
    path: ../InscryptionAPI/Encounters/NodeManager.cs
    startLine: 16
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Encounters
  summary: "\nThis node will not be autogenerated on the map, but can still be manually added\n"
  example: []
  syntax:
    content: NotGenerated = 0
    return:
      type: InscryptionAPI.Encounters.NodeManager.NodePosition
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: InscryptionAPI.Encounters.NodeManager.NodePosition.Act1Available
  commentId: F:InscryptionAPI.Encounters.NodeManager.NodePosition.Act1Available
  id: Act1Available
  parent: InscryptionAPI.Encounters.NodeManager.NodePosition
  langs:
  - csharp
  - vb
  name: Act1Available
  nameWithType: NodeManager.NodePosition.Act1Available
  fullName: InscryptionAPI.Encounters.NodeManager.NodePosition.Act1Available
  type: Field
  source:
    remote:
      path: InscryptionAPI/Encounters/NodeManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: Act1Available
    path: ../InscryptionAPI/Encounters/NodeManager.cs
    startLine: 21
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Encounters
  summary: "\nThis node can appear in Act 1 maps, not just in Kaycee&apos;s Mod map\n"
  example: []
  syntax:
    content: Act1Available = 1
    return:
      type: InscryptionAPI.Encounters.NodeManager.NodePosition
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: InscryptionAPI.Encounters.NodeManager.NodePosition.MapStart
  commentId: F:InscryptionAPI.Encounters.NodeManager.NodePosition.MapStart
  id: MapStart
  parent: InscryptionAPI.Encounters.NodeManager.NodePosition
  langs:
  - csharp
  - vb
  name: MapStart
  nameWithType: NodeManager.NodePosition.MapStart
  fullName: InscryptionAPI.Encounters.NodeManager.NodePosition.MapStart
  type: Field
  source:
    remote:
      path: InscryptionAPI/Encounters/NodeManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: MapStart
    path: ../InscryptionAPI/Encounters/NodeManager.cs
    startLine: 26
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Encounters
  summary: "\nThis node will be forced to appear at the start of each map, unless the node fails a prerequisite condition\n"
  example: []
  syntax:
    content: MapStart = 2
    return:
      type: InscryptionAPI.Encounters.NodeManager.NodePosition
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: InscryptionAPI.Encounters.NodeManager.NodePosition.CardChoiceRandom
  commentId: F:InscryptionAPI.Encounters.NodeManager.NodePosition.CardChoiceRandom
  id: CardChoiceRandom
  parent: InscryptionAPI.Encounters.NodeManager.NodePosition
  langs:
  - csharp
  - vb
  name: CardChoiceRandom
  nameWithType: NodeManager.NodePosition.CardChoiceRandom
  fullName: InscryptionAPI.Encounters.NodeManager.NodePosition.CardChoiceRandom
  type: Field
  source:
    remote:
      path: InscryptionAPI/Encounters/NodeManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: CardChoiceRandom
    path: ../InscryptionAPI/Encounters/NodeManager.cs
    startLine: 31
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Encounters
  summary: "\nThis node will appear in the pool of random events that happen right after a battle\n"
  example: []
  syntax:
    content: CardChoiceRandom = 4
    return:
      type: InscryptionAPI.Encounters.NodeManager.NodePosition
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: InscryptionAPI.Encounters.NodeManager.NodePosition.SpecialEventRandom
  commentId: F:InscryptionAPI.Encounters.NodeManager.NodePosition.SpecialEventRandom
  id: SpecialEventRandom
  parent: InscryptionAPI.Encounters.NodeManager.NodePosition
  langs:
  - csharp
  - vb
  name: SpecialEventRandom
  nameWithType: NodeManager.NodePosition.SpecialEventRandom
  fullName: InscryptionAPI.Encounters.NodeManager.NodePosition.SpecialEventRandom
  type: Field
  source:
    remote:
      path: InscryptionAPI/Encounters/NodeManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SpecialEventRandom
    path: ../InscryptionAPI/Encounters/NodeManager.cs
    startLine: 36
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Encounters
  summary: "\nThis node will appear in the pool of random events that happen right before a battle\n"
  example: []
  syntax:
    content: SpecialEventRandom = 8
    return:
      type: InscryptionAPI.Encounters.NodeManager.NodePosition
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: InscryptionAPI.Encounters.NodeManager.NodePosition.PreBoss
  commentId: F:InscryptionAPI.Encounters.NodeManager.NodePosition.PreBoss
  id: PreBoss
  parent: InscryptionAPI.Encounters.NodeManager.NodePosition
  langs:
  - csharp
  - vb
  name: PreBoss
  nameWithType: NodeManager.NodePosition.PreBoss
  fullName: InscryptionAPI.Encounters.NodeManager.NodePosition.PreBoss
  type: Field
  source:
    remote:
      path: InscryptionAPI/Encounters/NodeManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: PreBoss
    path: ../InscryptionAPI/Encounters/NodeManager.cs
    startLine: 41
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Encounters
  summary: "\nThis node will be forced to appear right before the boss of each map, unless the node fails a prerequisite condition\n"
  example: []
  syntax:
    content: PreBoss = 16
    return:
      type: InscryptionAPI.Encounters.NodeManager.NodePosition
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: InscryptionAPI.Encounters.NodeManager.NodePosition.PostBoss
  commentId: F:InscryptionAPI.Encounters.NodeManager.NodePosition.PostBoss
  id: PostBoss
  parent: InscryptionAPI.Encounters.NodeManager.NodePosition
  langs:
  - csharp
  - vb
  name: PostBoss
  nameWithType: NodeManager.NodePosition.PostBoss
  fullName: InscryptionAPI.Encounters.NodeManager.NodePosition.PostBoss
  type: Field
  source:
    remote:
      path: InscryptionAPI/Encounters/NodeManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: PostBoss
    path: ../InscryptionAPI/Encounters/NodeManager.cs
    startLine: 46
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Encounters
  summary: "\nThis node will be forced to appear right after the boss of each map, unless the node fails a prerequisite condition\n"
  example: []
  syntax:
    content: PostBoss = 32
    return:
      type: InscryptionAPI.Encounters.NodeManager.NodePosition
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: InscryptionAPI.Encounters
  commentId: N:InscryptionAPI.Encounters
  name: InscryptionAPI.Encounters
  nameWithType: InscryptionAPI.Encounters
  fullName: InscryptionAPI.Encounters
- uid: InscryptionAPI.Encounters.NodeManager.NodePosition
  commentId: T:InscryptionAPI.Encounters.NodeManager.NodePosition
  parent: InscryptionAPI.Encounters
  name: NodeManager.NodePosition
  nameWithType: NodeManager.NodePosition
  fullName: InscryptionAPI.Encounters.NodeManager.NodePosition
