### YamlMime:ManagedReference
items:
- uid: InscryptionAPI.Boons.BoonBehaviour
  commentId: T:InscryptionAPI.Boons.BoonBehaviour
  id: BoonBehaviour
  parent: InscryptionAPI.Boons
  children:
  - InscryptionAPI.Boons.BoonBehaviour.AnyInstancesOfType(DiskCardGame.BoonData.Type)
  - InscryptionAPI.Boons.BoonBehaviour.boon
  - InscryptionAPI.Boons.BoonBehaviour.CountInstancesOfType(DiskCardGame.BoonData.Type)
  - InscryptionAPI.Boons.BoonBehaviour.DestroyAllInstances
  - InscryptionAPI.Boons.BoonBehaviour.EnsureInstancesLoaded
  - InscryptionAPI.Boons.BoonBehaviour.FindInstancesOfType(DiskCardGame.BoonData.Type)
  - InscryptionAPI.Boons.BoonBehaviour.InstanceIndex
  - InscryptionAPI.Boons.BoonBehaviour.instanceNumber
  - InscryptionAPI.Boons.BoonBehaviour.Instances
  - InscryptionAPI.Boons.BoonBehaviour.OnDestroy
  - InscryptionAPI.Boons.BoonBehaviour.OnPostBattleCleanup
  - InscryptionAPI.Boons.BoonBehaviour.OnPostBoonActivation
  - InscryptionAPI.Boons.BoonBehaviour.OnPreBattleCleanup
  - InscryptionAPI.Boons.BoonBehaviour.OnPreBoonActivation
  - InscryptionAPI.Boons.BoonBehaviour.PlayBoonAnimation
  - InscryptionAPI.Boons.BoonBehaviour.RespondsToActivatedAbility(DiskCardGame.Ability)
  - InscryptionAPI.Boons.BoonBehaviour.RespondsToAttackEnded
  - InscryptionAPI.Boons.BoonBehaviour.RespondsToCardGettingAttacked(DiskCardGame.PlayableCard)
  - InscryptionAPI.Boons.BoonBehaviour.RespondsToDealDamage(System.Int32,DiskCardGame.PlayableCard)
  - InscryptionAPI.Boons.BoonBehaviour.RespondsToDealDamageDirectly(System.Int32)
  - InscryptionAPI.Boons.BoonBehaviour.RespondsToDie(System.Boolean,DiskCardGame.PlayableCard)
  - InscryptionAPI.Boons.BoonBehaviour.RespondsToDrawn
  - InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardAssignedToSlot(DiskCardGame.PlayableCard)
  - InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardDealtDamage(DiskCardGame.PlayableCard,System.Int32,DiskCardGame.PlayableCard)
  - InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardDie(DiskCardGame.PlayableCard,DiskCardGame.CardSlot,System.Boolean,DiskCardGame.PlayableCard)
  - InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardDrawn(DiskCardGame.PlayableCard)
  - InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardPreDeath(DiskCardGame.CardSlot,System.Boolean,DiskCardGame.PlayableCard)
  - InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardResolve(DiskCardGame.PlayableCard)
  - InscryptionAPI.Boons.BoonBehaviour.RespondsToPlayFromHand
  - InscryptionAPI.Boons.BoonBehaviour.RespondsToPreDeathAnimation(System.Boolean)
  - InscryptionAPI.Boons.BoonBehaviour.RespondsToResolveOnBoard
  - InscryptionAPI.Boons.BoonBehaviour.RespondsToSacrifice
  - InscryptionAPI.Boons.BoonBehaviour.RespondsToSlotTargetedForAttack(DiskCardGame.CardSlot,DiskCardGame.PlayableCard)
  - InscryptionAPI.Boons.BoonBehaviour.RespondsToTakeDamage(DiskCardGame.PlayableCard)
  - InscryptionAPI.Boons.BoonBehaviour.RespondsToTurnEnd(System.Boolean)
  - InscryptionAPI.Boons.BoonBehaviour.RespondsToUpkeep(System.Boolean)
  - InscryptionAPI.Boons.BoonBehaviour.RespondToActivatedAbility(DiskCardGame.Ability)
  - InscryptionAPI.Boons.BoonBehaviour.RespondToAttackEnded
  - InscryptionAPI.Boons.BoonBehaviour.RespondToCardGettingAttacked(DiskCardGame.PlayableCard)
  - InscryptionAPI.Boons.BoonBehaviour.RespondToDealDamage(System.Int32,DiskCardGame.PlayableCard)
  - InscryptionAPI.Boons.BoonBehaviour.RespondToDealDamageDirectly(System.Int32)
  - InscryptionAPI.Boons.BoonBehaviour.RespondToDie(System.Boolean,DiskCardGame.PlayableCard)
  - InscryptionAPI.Boons.BoonBehaviour.RespondToDrawn
  - InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardAssignedToSlot(DiskCardGame.PlayableCard)
  - InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardDealtDamage(DiskCardGame.PlayableCard,System.Int32,DiskCardGame.PlayableCard)
  - InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardDie(DiskCardGame.PlayableCard,DiskCardGame.CardSlot,System.Boolean,DiskCardGame.PlayableCard)
  - InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardDrawn(DiskCardGame.PlayableCard)
  - InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardPreDeath(DiskCardGame.CardSlot,System.Boolean,DiskCardGame.PlayableCard)
  - InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardResolve(DiskCardGame.PlayableCard)
  - InscryptionAPI.Boons.BoonBehaviour.RespondToPlayFromHand
  - InscryptionAPI.Boons.BoonBehaviour.RespondToPostBattleCleanup
  - InscryptionAPI.Boons.BoonBehaviour.RespondToPostBoonActivation
  - InscryptionAPI.Boons.BoonBehaviour.RespondToPreBattleCleanup
  - InscryptionAPI.Boons.BoonBehaviour.RespondToPreBoonActivation
  - InscryptionAPI.Boons.BoonBehaviour.RespondToPreDeathAnimation(System.Boolean)
  - InscryptionAPI.Boons.BoonBehaviour.RespondToResolveOnBoard
  - InscryptionAPI.Boons.BoonBehaviour.RespondToSacrifice
  - InscryptionAPI.Boons.BoonBehaviour.RespondToSlotTargetedForAttack(DiskCardGame.CardSlot,DiskCardGame.PlayableCard)
  - InscryptionAPI.Boons.BoonBehaviour.RespondToTakeDamage(DiskCardGame.PlayableCard)
  - InscryptionAPI.Boons.BoonBehaviour.RespondToTurnEnd(System.Boolean)
  - InscryptionAPI.Boons.BoonBehaviour.RespondToUpkeep(System.Boolean)
  - InscryptionAPI.Boons.BoonBehaviour.Start
  langs:
  - csharp
  - vb
  name: BoonBehaviour
  nameWithType: BoonBehaviour
  fullName: InscryptionAPI.Boons.BoonBehaviour
  type: Class
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: BoonBehaviour
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 5
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: 'public class BoonBehaviour : NonCardTriggerReceiver'
    content.vb: >-
      Public Class BoonBehaviour
          Inherits NonCardTriggerReceiver
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  - ManagedBehaviourBase
  - ManagedBehaviour
  - DiskCardGame.TriggerReceiver
  - DiskCardGame.NonCardTriggerReceiver
  inheritedMembers:
  - DiskCardGame.NonCardTriggerReceiver.appQuitting
  - DiskCardGame.NonCardTriggerReceiver.Awake
  - DiskCardGame.NonCardTriggerReceiver.OnApplicationQuit
  - DiskCardGame.NonCardTriggerReceiver.TriggerBeforeCards
  - DiskCardGame.TriggerReceiver.<Activating>k__BackingField
  - DiskCardGame.TriggerReceiver.<DestroyAfterActivation>k__BackingField
  - DiskCardGame.TriggerReceiver.Destroy
  - DiskCardGame.TriggerReceiver.OnUpkeep(System.Boolean)
  - DiskCardGame.TriggerReceiver.OnDrawn
  - DiskCardGame.TriggerReceiver.OnOtherCardDrawn(DiskCardGame.PlayableCard)
  - DiskCardGame.TriggerReceiver.OnPlayFromHand
  - DiskCardGame.TriggerReceiver.OnResolveOnBoard
  - DiskCardGame.TriggerReceiver.OnOtherCardResolve(DiskCardGame.PlayableCard)
  - DiskCardGame.TriggerReceiver.OnOtherCardAssignedToSlot(DiskCardGame.PlayableCard)
  - DiskCardGame.TriggerReceiver.OnSacrifice
  - DiskCardGame.TriggerReceiver.OnSlotTargetedForAttack(DiskCardGame.CardSlot,DiskCardGame.PlayableCard)
  - DiskCardGame.TriggerReceiver.OnCardGettingAttacked(DiskCardGame.PlayableCard)
  - DiskCardGame.TriggerReceiver.OnTakeDamage(DiskCardGame.PlayableCard)
  - DiskCardGame.TriggerReceiver.OnDealDamage(System.Int32,DiskCardGame.PlayableCard)
  - DiskCardGame.TriggerReceiver.OnDealDamageDirectly(System.Int32)
  - DiskCardGame.TriggerReceiver.OnOtherCardDealtDamage(DiskCardGame.PlayableCard,System.Int32,DiskCardGame.PlayableCard)
  - DiskCardGame.TriggerReceiver.OnDie(System.Boolean,DiskCardGame.PlayableCard)
  - DiskCardGame.TriggerReceiver.OnPreDeathAnimation(System.Boolean)
  - DiskCardGame.TriggerReceiver.OnOtherCardPreDeath(DiskCardGame.CardSlot,System.Boolean,DiskCardGame.PlayableCard)
  - DiskCardGame.TriggerReceiver.OnOtherCardDie(DiskCardGame.PlayableCard,DiskCardGame.CardSlot,System.Boolean,DiskCardGame.PlayableCard)
  - DiskCardGame.TriggerReceiver.OnAttackEnded
  - DiskCardGame.TriggerReceiver.OnTurnEnd(System.Boolean)
  - DiskCardGame.TriggerReceiver.OnActivatedAbility
  - DiskCardGame.TriggerReceiver.GetRandomSeed
  - DiskCardGame.TriggerReceiver.Priority
  - DiskCardGame.TriggerReceiver.Activating
  - DiskCardGame.TriggerReceiver.DestroyAfterActivation
  - ManagedBehaviour.ManagedUpdate
  - ManagedBehaviour.ManagedFixedUpdate
  - ManagedBehaviour.ManagedLateUpdate
  - ManagedBehaviour.OnEnable
  - ManagedBehaviour.Update
  - ManagedBehaviour.FixedUpdate
  - ManagedBehaviour.LateUpdate
  - ManagedBehaviour.ExecutionOrder
  - ManagedBehaviour.UpdateWhenPaused
  - UnityEngine.MonoBehaviour.IsInvoking
  - UnityEngine.MonoBehaviour.CancelInvoke
  - UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
  - UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
  - UnityEngine.MonoBehaviour.CancelInvoke(System.String)
  - UnityEngine.MonoBehaviour.IsInvoking(System.String)
  - UnityEngine.MonoBehaviour.StartCoroutine(System.String)
  - UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
  - UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
  - UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
  - UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
  - UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
  - UnityEngine.MonoBehaviour.StopCoroutine(System.String)
  - UnityEngine.MonoBehaviour.StopAllCoroutines
  - UnityEngine.MonoBehaviour.print(System.Object)
  - UnityEngine.MonoBehaviour.Internal_CancelInvokeAll(UnityEngine.MonoBehaviour)
  - UnityEngine.MonoBehaviour.Internal_IsInvokingAll(UnityEngine.MonoBehaviour)
  - UnityEngine.MonoBehaviour.InvokeDelayed(UnityEngine.MonoBehaviour,System.String,System.Single,System.Single)
  - UnityEngine.MonoBehaviour.CancelInvoke(UnityEngine.MonoBehaviour,System.String)
  - UnityEngine.MonoBehaviour.IsInvoking(UnityEngine.MonoBehaviour,System.String)
  - UnityEngine.MonoBehaviour.IsObjectMonoBehaviour(UnityEngine.Object)
  - UnityEngine.MonoBehaviour.StartCoroutineManaged(System.String,System.Object)
  - UnityEngine.MonoBehaviour.StartCoroutineManaged2(System.Collections.IEnumerator)
  - UnityEngine.MonoBehaviour.StopCoroutineManaged(UnityEngine.Coroutine)
  - UnityEngine.MonoBehaviour.StopCoroutineFromEnumeratorManaged(System.Collections.IEnumerator)
  - UnityEngine.MonoBehaviour.GetScriptClassName
  - UnityEngine.MonoBehaviour.useGUILayout
  - UnityEngine.Behaviour.enabled
  - UnityEngine.Behaviour.isActiveAndEnabled
  - UnityEngine.Component.GetComponent(System.Type)
  - UnityEngine.Component.GetComponentFastPath(System.Type,System.IntPtr)
  - UnityEngine.Component.GetComponent``1
  - UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
  - UnityEngine.Component.TryGetComponent``1({T}@)
  - UnityEngine.Component.GetComponent(System.String)
  - UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
  - UnityEngine.Component.GetComponentInChildren(System.Type)
  - UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
  - UnityEngine.Component.GetComponentInChildren``1
  - UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
  - UnityEngine.Component.GetComponentsInChildren(System.Type)
  - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
  - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{{T}})
  - UnityEngine.Component.GetComponentsInChildren``1
  - UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{{T}})
  - UnityEngine.Component.GetComponentInParent(System.Type)
  - UnityEngine.Component.GetComponentInParent``1
  - UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
  - UnityEngine.Component.GetComponentsInParent(System.Type)
  - UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
  - UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{{T}})
  - UnityEngine.Component.GetComponentsInParent``1
  - UnityEngine.Component.GetComponents(System.Type)
  - UnityEngine.Component.GetComponentsForListInternal(System.Type,System.Object)
  - UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
  - UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{{T}})
  - UnityEngine.Component.GetComponents``1
  - UnityEngine.Component.CompareTag(System.String)
  - UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
  - UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
  - UnityEngine.Component.SendMessageUpwards(System.String)
  - UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
  - UnityEngine.Component.SendMessage(System.String,System.Object)
  - UnityEngine.Component.SendMessage(System.String)
  - UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
  - UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
  - UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
  - UnityEngine.Component.BroadcastMessage(System.String,System.Object)
  - UnityEngine.Component.BroadcastMessage(System.String)
  - UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
  - UnityEngine.Component.transform
  - UnityEngine.Component.gameObject
  - UnityEngine.Component.tag
  - UnityEngine.Object.m_CachedPtr
  - UnityEngine.Object.OffsetOfInstanceIDInCPlusPlusObject
  - UnityEngine.Object.objectIsNullMessage
  - UnityEngine.Object.cloneDestroyedMessage
  - UnityEngine.Object.GetInstanceID
  - UnityEngine.Object.GetHashCode
  - UnityEngine.Object.Equals(System.Object)
  - UnityEngine.Object.CompareBaseObjects(UnityEngine.Object,UnityEngine.Object)
  - UnityEngine.Object.EnsureRunningOnMainThread
  - UnityEngine.Object.IsNativeObjectAlive(UnityEngine.Object)
  - UnityEngine.Object.GetCachedPtr
  - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
  - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  - UnityEngine.Object.Instantiate(UnityEngine.Object)
  - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
  - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
  - UnityEngine.Object.Instantiate``1({T})
  - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion)
  - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform)
  - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean)
  - UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
  - UnityEngine.Object.Destroy(UnityEngine.Object)
  - UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
  - UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
  - UnityEngine.Object.FindObjectsOfType(System.Type)
  - UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
  - UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
  - UnityEngine.Object.DestroyObject(UnityEngine.Object)
  - UnityEngine.Object.FindSceneObjectsOfType(System.Type)
  - UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
  - UnityEngine.Object.FindObjectsOfType``1
  - UnityEngine.Object.FindObjectOfType``1
  - UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
  - UnityEngine.Object.CheckNullArgument(System.Object,System.String)
  - UnityEngine.Object.FindObjectOfType(System.Type)
  - UnityEngine.Object.ToString
  - UnityEngine.Object.GetOffsetOfInstanceIDInCPlusPlusObject
  - UnityEngine.Object.CurrentThreadIsMainThread
  - UnityEngine.Object.Internal_CloneSingle(UnityEngine.Object)
  - UnityEngine.Object.Internal_CloneSingleWithParent(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
  - UnityEngine.Object.Internal_InstantiateSingle(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
  - UnityEngine.Object.Internal_InstantiateSingleWithParent(UnityEngine.Object,UnityEngine.Transform,UnityEngine.Vector3,UnityEngine.Quaternion)
  - UnityEngine.Object.ToString(UnityEngine.Object)
  - UnityEngine.Object.GetName(UnityEngine.Object)
  - UnityEngine.Object.IsPersistent(UnityEngine.Object)
  - UnityEngine.Object.SetName(UnityEngine.Object,System.String)
  - UnityEngine.Object.DoesObjectWithInstanceIDExist(System.Int32)
  - UnityEngine.Object.FindObjectFromInstanceID(System.Int32)
  - UnityEngine.Object.ForceLoadFromInstanceID(System.Int32)
  - UnityEngine.Object.Internal_InstantiateSingle_Injected(UnityEngine.Object,UnityEngine.Vector3@,UnityEngine.Quaternion@)
  - UnityEngine.Object.Internal_InstantiateSingleWithParent_Injected(UnityEngine.Object,UnityEngine.Transform,UnityEngine.Vector3@,UnityEngine.Quaternion@)
  - UnityEngine.Object.name
  - UnityEngine.Object.hideFlags
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: InscryptionAPI.Boons.BoonBehaviour.boon
  commentId: F:InscryptionAPI.Boons.BoonBehaviour.boon
  id: boon
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: boon
  nameWithType: BoonBehaviour.boon
  fullName: InscryptionAPI.Boons.BoonBehaviour.boon
  type: Field
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: boon
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 8
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public BoonManager.FullBoon boon
    return:
      type: InscryptionAPI.Boons.BoonManager.FullBoon
    content.vb: Public boon As BoonManager.FullBoon
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: InscryptionAPI.Boons.BoonBehaviour.instanceNumber
  commentId: F:InscryptionAPI.Boons.BoonBehaviour.instanceNumber
  id: instanceNumber
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: instanceNumber
  nameWithType: BoonBehaviour.instanceNumber
  fullName: InscryptionAPI.Boons.BoonBehaviour.instanceNumber
  type: Field
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: instanceNumber
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 9
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public int instanceNumber
    return:
      type: System.Int32
    content.vb: Public instanceNumber As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: InscryptionAPI.Boons.BoonBehaviour.InstanceIndex
  commentId: P:InscryptionAPI.Boons.BoonBehaviour.InstanceIndex
  id: InstanceIndex
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: InstanceIndex
  nameWithType: BoonBehaviour.InstanceIndex
  fullName: InscryptionAPI.Boons.BoonBehaviour.InstanceIndex
  type: Property
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: InstanceIndex
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 10
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public int InstanceIndex { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property InstanceIndex As Integer
  overload: InscryptionAPI.Boons.BoonBehaviour.InstanceIndex*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: InscryptionAPI.Boons.BoonBehaviour.Start
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.Start
  id: Start
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: BoonBehaviour.Start()
  fullName: InscryptionAPI.Boons.BoonBehaviour.Start()
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: Start
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 18
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public void Start()
    content.vb: Public Sub Start
  overload: InscryptionAPI.Boons.BoonBehaviour.Start*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: InscryptionAPI.Boons.BoonBehaviour.OnDestroy
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.OnDestroy
  id: OnDestroy
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: OnDestroy()
  nameWithType: BoonBehaviour.OnDestroy()
  fullName: InscryptionAPI.Boons.BoonBehaviour.OnDestroy()
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: OnDestroy
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 26
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public void OnDestroy()
    content.vb: Public Sub OnDestroy
  overload: InscryptionAPI.Boons.BoonBehaviour.OnDestroy*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: InscryptionAPI.Boons.BoonBehaviour.FindInstancesOfType(DiskCardGame.BoonData.Type)
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.FindInstancesOfType(DiskCardGame.BoonData.Type)
  id: FindInstancesOfType(DiskCardGame.BoonData.Type)
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: FindInstancesOfType(BoonData.Type)
  nameWithType: BoonBehaviour.FindInstancesOfType(BoonData.Type)
  fullName: InscryptionAPI.Boons.BoonBehaviour.FindInstancesOfType(DiskCardGame.BoonData.Type)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: FindInstancesOfType
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 31
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public static List<BoonBehaviour> FindInstancesOfType(BoonData.Type type)
    parameters:
    - id: type
      type: DiskCardGame.BoonData.Type
    return:
      type: List{InscryptionAPI.Boons.BoonBehaviour}
    content.vb: Public Shared Function FindInstancesOfType(type As BoonData.Type) As List(Of BoonBehaviour)
  overload: InscryptionAPI.Boons.BoonBehaviour.FindInstancesOfType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Boons.BoonBehaviour.CountInstancesOfType(DiskCardGame.BoonData.Type)
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.CountInstancesOfType(DiskCardGame.BoonData.Type)
  id: CountInstancesOfType(DiskCardGame.BoonData.Type)
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: CountInstancesOfType(BoonData.Type)
  nameWithType: BoonBehaviour.CountInstancesOfType(BoonData.Type)
  fullName: InscryptionAPI.Boons.BoonBehaviour.CountInstancesOfType(DiskCardGame.BoonData.Type)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: CountInstancesOfType
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 36
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public static int CountInstancesOfType(BoonData.Type type)
    parameters:
    - id: type
      type: DiskCardGame.BoonData.Type
    return:
      type: System.Int32
    content.vb: Public Shared Function CountInstancesOfType(type As BoonData.Type) As Integer
  overload: InscryptionAPI.Boons.BoonBehaviour.CountInstancesOfType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Boons.BoonBehaviour.AnyInstancesOfType(DiskCardGame.BoonData.Type)
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.AnyInstancesOfType(DiskCardGame.BoonData.Type)
  id: AnyInstancesOfType(DiskCardGame.BoonData.Type)
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: AnyInstancesOfType(BoonData.Type)
  nameWithType: BoonBehaviour.AnyInstancesOfType(BoonData.Type)
  fullName: InscryptionAPI.Boons.BoonBehaviour.AnyInstancesOfType(DiskCardGame.BoonData.Type)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: AnyInstancesOfType
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 41
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public static bool AnyInstancesOfType(BoonData.Type type)
    parameters:
    - id: type
      type: DiskCardGame.BoonData.Type
    return:
      type: System.Boolean
    content.vb: Public Shared Function AnyInstancesOfType(type As BoonData.Type) As Boolean
  overload: InscryptionAPI.Boons.BoonBehaviour.AnyInstancesOfType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Boons.BoonBehaviour.Instances
  commentId: P:InscryptionAPI.Boons.BoonBehaviour.Instances
  id: Instances
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: Instances
  nameWithType: BoonBehaviour.Instances
  fullName: InscryptionAPI.Boons.BoonBehaviour.Instances
  type: Property
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: Instances
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 46
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public static List<BoonBehaviour> Instances { get; }
    parameters: []
    return:
      type: List{InscryptionAPI.Boons.BoonBehaviour}
    content.vb: Public Shared ReadOnly Property Instances As List(Of BoonBehaviour)
  overload: InscryptionAPI.Boons.BoonBehaviour.Instances*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: InscryptionAPI.Boons.BoonBehaviour.DestroyAllInstances
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.DestroyAllInstances
  id: DestroyAllInstances
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: DestroyAllInstances()
  nameWithType: BoonBehaviour.DestroyAllInstances()
  fullName: InscryptionAPI.Boons.BoonBehaviour.DestroyAllInstances()
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: DestroyAllInstances
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 55
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public static void DestroyAllInstances()
    content.vb: Public Shared Sub DestroyAllInstances
  overload: InscryptionAPI.Boons.BoonBehaviour.DestroyAllInstances*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Boons.BoonBehaviour.EnsureInstancesLoaded
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.EnsureInstancesLoaded
  id: EnsureInstancesLoaded
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: EnsureInstancesLoaded()
  nameWithType: BoonBehaviour.EnsureInstancesLoaded()
  fullName: InscryptionAPI.Boons.BoonBehaviour.EnsureInstancesLoaded()
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: EnsureInstancesLoaded
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 69
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public static void EnsureInstancesLoaded()
    content.vb: Public Shared Sub EnsureInstancesLoaded
  overload: InscryptionAPI.Boons.BoonBehaviour.EnsureInstancesLoaded*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Boons.BoonBehaviour.PlayBoonAnimation
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.PlayBoonAnimation
  id: PlayBoonAnimation
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: PlayBoonAnimation()
  nameWithType: BoonBehaviour.PlayBoonAnimation()
  fullName: InscryptionAPI.Boons.BoonBehaviour.PlayBoonAnimation()
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: PlayBoonAnimation
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 78
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public IEnumerator PlayBoonAnimation()
    return:
      type: System.Collections.IEnumerator
    content.vb: Public Function PlayBoonAnimation As IEnumerator
  overload: InscryptionAPI.Boons.BoonBehaviour.PlayBoonAnimation*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToPreBoonActivation
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondToPreBoonActivation
  id: RespondToPreBoonActivation
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: RespondToPreBoonActivation()
  nameWithType: BoonBehaviour.RespondToPreBoonActivation()
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToPreBoonActivation()
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: RespondToPreBoonActivation
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 87
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public virtual bool RespondToPreBoonActivation()
    return:
      type: System.Boolean
    content.vb: Public Overridable Function RespondToPreBoonActivation As Boolean
  overload: InscryptionAPI.Boons.BoonBehaviour.RespondToPreBoonActivation*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: InscryptionAPI.Boons.BoonBehaviour.OnPreBoonActivation
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.OnPreBoonActivation
  id: OnPreBoonActivation
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: OnPreBoonActivation()
  nameWithType: BoonBehaviour.OnPreBoonActivation()
  fullName: InscryptionAPI.Boons.BoonBehaviour.OnPreBoonActivation()
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: OnPreBoonActivation
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 92
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public virtual IEnumerator OnPreBoonActivation()
    return:
      type: System.Collections.IEnumerator
    content.vb: Public Overridable Function OnPreBoonActivation As IEnumerator
  overload: InscryptionAPI.Boons.BoonBehaviour.OnPreBoonActivation*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToPostBoonActivation
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondToPostBoonActivation
  id: RespondToPostBoonActivation
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: RespondToPostBoonActivation()
  nameWithType: BoonBehaviour.RespondToPostBoonActivation()
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToPostBoonActivation()
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: RespondToPostBoonActivation
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 97
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public virtual bool RespondToPostBoonActivation()
    return:
      type: System.Boolean
    content.vb: Public Overridable Function RespondToPostBoonActivation As Boolean
  overload: InscryptionAPI.Boons.BoonBehaviour.RespondToPostBoonActivation*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: InscryptionAPI.Boons.BoonBehaviour.OnPostBoonActivation
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.OnPostBoonActivation
  id: OnPostBoonActivation
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: OnPostBoonActivation()
  nameWithType: BoonBehaviour.OnPostBoonActivation()
  fullName: InscryptionAPI.Boons.BoonBehaviour.OnPostBoonActivation()
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: OnPostBoonActivation
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 102
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public virtual IEnumerator OnPostBoonActivation()
    return:
      type: System.Collections.IEnumerator
    content.vb: Public Overridable Function OnPostBoonActivation As IEnumerator
  overload: InscryptionAPI.Boons.BoonBehaviour.OnPostBoonActivation*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToPreBattleCleanup
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondToPreBattleCleanup
  id: RespondToPreBattleCleanup
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: RespondToPreBattleCleanup()
  nameWithType: BoonBehaviour.RespondToPreBattleCleanup()
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToPreBattleCleanup()
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: RespondToPreBattleCleanup
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 107
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public virtual bool RespondToPreBattleCleanup()
    return:
      type: System.Boolean
    content.vb: Public Overridable Function RespondToPreBattleCleanup As Boolean
  overload: InscryptionAPI.Boons.BoonBehaviour.RespondToPreBattleCleanup*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: InscryptionAPI.Boons.BoonBehaviour.OnPreBattleCleanup
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.OnPreBattleCleanup
  id: OnPreBattleCleanup
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: OnPreBattleCleanup()
  nameWithType: BoonBehaviour.OnPreBattleCleanup()
  fullName: InscryptionAPI.Boons.BoonBehaviour.OnPreBattleCleanup()
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: OnPreBattleCleanup
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 112
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public virtual IEnumerator OnPreBattleCleanup()
    return:
      type: System.Collections.IEnumerator
    content.vb: Public Overridable Function OnPreBattleCleanup As IEnumerator
  overload: InscryptionAPI.Boons.BoonBehaviour.OnPreBattleCleanup*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToPostBattleCleanup
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondToPostBattleCleanup
  id: RespondToPostBattleCleanup
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: RespondToPostBattleCleanup()
  nameWithType: BoonBehaviour.RespondToPostBattleCleanup()
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToPostBattleCleanup()
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: RespondToPostBattleCleanup
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 117
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public virtual bool RespondToPostBattleCleanup()
    return:
      type: System.Boolean
    content.vb: Public Overridable Function RespondToPostBattleCleanup As Boolean
  overload: InscryptionAPI.Boons.BoonBehaviour.RespondToPostBattleCleanup*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: InscryptionAPI.Boons.BoonBehaviour.OnPostBattleCleanup
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.OnPostBattleCleanup
  id: OnPostBattleCleanup
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: OnPostBattleCleanup()
  nameWithType: BoonBehaviour.OnPostBattleCleanup()
  fullName: InscryptionAPI.Boons.BoonBehaviour.OnPostBattleCleanup()
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: OnPostBattleCleanup
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 122
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public virtual IEnumerator OnPostBattleCleanup()
    return:
      type: System.Collections.IEnumerator
    content.vb: Public Overridable Function OnPostBattleCleanup As IEnumerator
  overload: InscryptionAPI.Boons.BoonBehaviour.OnPostBattleCleanup*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToUpkeep(System.Boolean)
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondToUpkeep(System.Boolean)
  id: RespondToUpkeep(System.Boolean)
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: RespondToUpkeep(Boolean)
  nameWithType: BoonBehaviour.RespondToUpkeep(Boolean)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToUpkeep(System.Boolean)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: RespondToUpkeep
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 128
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public virtual bool RespondToUpkeep(bool playerUpkeep)
    parameters:
    - id: playerUpkeep
      type: System.Boolean
    return:
      type: System.Boolean
    content.vb: Public Overridable Function RespondToUpkeep(playerUpkeep As Boolean) As Boolean
  overload: InscryptionAPI.Boons.BoonBehaviour.RespondToUpkeep*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToDrawn
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondToDrawn
  id: RespondToDrawn
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: RespondToDrawn()
  nameWithType: BoonBehaviour.RespondToDrawn()
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToDrawn()
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: RespondToDrawn
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 133
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public virtual bool RespondToDrawn()
    return:
      type: System.Boolean
    content.vb: Public Overridable Function RespondToDrawn As Boolean
  overload: InscryptionAPI.Boons.BoonBehaviour.RespondToDrawn*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardDrawn(DiskCardGame.PlayableCard)
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardDrawn(DiskCardGame.PlayableCard)
  id: RespondToOtherCardDrawn(DiskCardGame.PlayableCard)
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: RespondToOtherCardDrawn(PlayableCard)
  nameWithType: BoonBehaviour.RespondToOtherCardDrawn(PlayableCard)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardDrawn(DiskCardGame.PlayableCard)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: RespondToOtherCardDrawn
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 138
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public virtual bool RespondToOtherCardDrawn(PlayableCard card)
    parameters:
    - id: card
      type: DiskCardGame.PlayableCard
    return:
      type: System.Boolean
    content.vb: Public Overridable Function RespondToOtherCardDrawn(card As PlayableCard) As Boolean
  overload: InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardDrawn*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToPlayFromHand
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondToPlayFromHand
  id: RespondToPlayFromHand
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: RespondToPlayFromHand()
  nameWithType: BoonBehaviour.RespondToPlayFromHand()
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToPlayFromHand()
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: RespondToPlayFromHand
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 143
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public virtual bool RespondToPlayFromHand()
    return:
      type: System.Boolean
    content.vb: Public Overridable Function RespondToPlayFromHand As Boolean
  overload: InscryptionAPI.Boons.BoonBehaviour.RespondToPlayFromHand*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToResolveOnBoard
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondToResolveOnBoard
  id: RespondToResolveOnBoard
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: RespondToResolveOnBoard()
  nameWithType: BoonBehaviour.RespondToResolveOnBoard()
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToResolveOnBoard()
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: RespondToResolveOnBoard
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 148
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public virtual bool RespondToResolveOnBoard()
    return:
      type: System.Boolean
    content.vb: Public Overridable Function RespondToResolveOnBoard As Boolean
  overload: InscryptionAPI.Boons.BoonBehaviour.RespondToResolveOnBoard*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardResolve(DiskCardGame.PlayableCard)
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardResolve(DiskCardGame.PlayableCard)
  id: RespondToOtherCardResolve(DiskCardGame.PlayableCard)
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: RespondToOtherCardResolve(PlayableCard)
  nameWithType: BoonBehaviour.RespondToOtherCardResolve(PlayableCard)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardResolve(DiskCardGame.PlayableCard)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: RespondToOtherCardResolve
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 153
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public virtual bool RespondToOtherCardResolve(PlayableCard otherCard)
    parameters:
    - id: otherCard
      type: DiskCardGame.PlayableCard
    return:
      type: System.Boolean
    content.vb: Public Overridable Function RespondToOtherCardResolve(otherCard As PlayableCard) As Boolean
  overload: InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardResolve*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardAssignedToSlot(DiskCardGame.PlayableCard)
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardAssignedToSlot(DiskCardGame.PlayableCard)
  id: RespondToOtherCardAssignedToSlot(DiskCardGame.PlayableCard)
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: RespondToOtherCardAssignedToSlot(PlayableCard)
  nameWithType: BoonBehaviour.RespondToOtherCardAssignedToSlot(PlayableCard)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardAssignedToSlot(DiskCardGame.PlayableCard)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: RespondToOtherCardAssignedToSlot
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 158
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public virtual bool RespondToOtherCardAssignedToSlot(PlayableCard otherCard)
    parameters:
    - id: otherCard
      type: DiskCardGame.PlayableCard
    return:
      type: System.Boolean
    content.vb: Public Overridable Function RespondToOtherCardAssignedToSlot(otherCard As PlayableCard) As Boolean
  overload: InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardAssignedToSlot*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToSacrifice
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondToSacrifice
  id: RespondToSacrifice
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: RespondToSacrifice()
  nameWithType: BoonBehaviour.RespondToSacrifice()
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToSacrifice()
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: RespondToSacrifice
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 163
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public virtual bool RespondToSacrifice()
    return:
      type: System.Boolean
    content.vb: Public Overridable Function RespondToSacrifice As Boolean
  overload: InscryptionAPI.Boons.BoonBehaviour.RespondToSacrifice*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToSlotTargetedForAttack(DiskCardGame.CardSlot,DiskCardGame.PlayableCard)
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondToSlotTargetedForAttack(DiskCardGame.CardSlot,DiskCardGame.PlayableCard)
  id: RespondToSlotTargetedForAttack(DiskCardGame.CardSlot,DiskCardGame.PlayableCard)
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: RespondToSlotTargetedForAttack(CardSlot, PlayableCard)
  nameWithType: BoonBehaviour.RespondToSlotTargetedForAttack(CardSlot, PlayableCard)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToSlotTargetedForAttack(DiskCardGame.CardSlot, DiskCardGame.PlayableCard)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: RespondToSlotTargetedForAttack
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 168
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public virtual bool RespondToSlotTargetedForAttack(CardSlot slot, PlayableCard attacker)
    parameters:
    - id: slot
      type: DiskCardGame.CardSlot
    - id: attacker
      type: DiskCardGame.PlayableCard
    return:
      type: System.Boolean
    content.vb: Public Overridable Function RespondToSlotTargetedForAttack(slot As CardSlot, attacker As PlayableCard) As Boolean
  overload: InscryptionAPI.Boons.BoonBehaviour.RespondToSlotTargetedForAttack*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToCardGettingAttacked(DiskCardGame.PlayableCard)
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondToCardGettingAttacked(DiskCardGame.PlayableCard)
  id: RespondToCardGettingAttacked(DiskCardGame.PlayableCard)
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: RespondToCardGettingAttacked(PlayableCard)
  nameWithType: BoonBehaviour.RespondToCardGettingAttacked(PlayableCard)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToCardGettingAttacked(DiskCardGame.PlayableCard)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: RespondToCardGettingAttacked
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 173
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public virtual bool RespondToCardGettingAttacked(PlayableCard source)
    parameters:
    - id: source
      type: DiskCardGame.PlayableCard
    return:
      type: System.Boolean
    content.vb: Public Overridable Function RespondToCardGettingAttacked(source As PlayableCard) As Boolean
  overload: InscryptionAPI.Boons.BoonBehaviour.RespondToCardGettingAttacked*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToTakeDamage(DiskCardGame.PlayableCard)
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondToTakeDamage(DiskCardGame.PlayableCard)
  id: RespondToTakeDamage(DiskCardGame.PlayableCard)
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: RespondToTakeDamage(PlayableCard)
  nameWithType: BoonBehaviour.RespondToTakeDamage(PlayableCard)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToTakeDamage(DiskCardGame.PlayableCard)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: RespondToTakeDamage
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 178
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public virtual bool RespondToTakeDamage(PlayableCard source)
    parameters:
    - id: source
      type: DiskCardGame.PlayableCard
    return:
      type: System.Boolean
    content.vb: Public Overridable Function RespondToTakeDamage(source As PlayableCard) As Boolean
  overload: InscryptionAPI.Boons.BoonBehaviour.RespondToTakeDamage*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToDealDamage(System.Int32,DiskCardGame.PlayableCard)
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondToDealDamage(System.Int32,DiskCardGame.PlayableCard)
  id: RespondToDealDamage(System.Int32,DiskCardGame.PlayableCard)
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: RespondToDealDamage(Int32, PlayableCard)
  nameWithType: BoonBehaviour.RespondToDealDamage(Int32, PlayableCard)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToDealDamage(System.Int32, DiskCardGame.PlayableCard)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: RespondToDealDamage
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 183
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public virtual bool RespondToDealDamage(int amount, PlayableCard target)
    parameters:
    - id: amount
      type: System.Int32
    - id: target
      type: DiskCardGame.PlayableCard
    return:
      type: System.Boolean
    content.vb: Public Overridable Function RespondToDealDamage(amount As Integer, target As PlayableCard) As Boolean
  overload: InscryptionAPI.Boons.BoonBehaviour.RespondToDealDamage*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToDealDamageDirectly(System.Int32)
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondToDealDamageDirectly(System.Int32)
  id: RespondToDealDamageDirectly(System.Int32)
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: RespondToDealDamageDirectly(Int32)
  nameWithType: BoonBehaviour.RespondToDealDamageDirectly(Int32)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToDealDamageDirectly(System.Int32)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: RespondToDealDamageDirectly
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 188
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public virtual bool RespondToDealDamageDirectly(int amount)
    parameters:
    - id: amount
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Overridable Function RespondToDealDamageDirectly(amount As Integer) As Boolean
  overload: InscryptionAPI.Boons.BoonBehaviour.RespondToDealDamageDirectly*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardDealtDamage(DiskCardGame.PlayableCard,System.Int32,DiskCardGame.PlayableCard)
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardDealtDamage(DiskCardGame.PlayableCard,System.Int32,DiskCardGame.PlayableCard)
  id: RespondToOtherCardDealtDamage(DiskCardGame.PlayableCard,System.Int32,DiskCardGame.PlayableCard)
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: RespondToOtherCardDealtDamage(PlayableCard, Int32, PlayableCard)
  nameWithType: BoonBehaviour.RespondToOtherCardDealtDamage(PlayableCard, Int32, PlayableCard)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardDealtDamage(DiskCardGame.PlayableCard, System.Int32, DiskCardGame.PlayableCard)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: RespondToOtherCardDealtDamage
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 193
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public virtual bool RespondToOtherCardDealtDamage(PlayableCard attacker, int amount, PlayableCard target)
    parameters:
    - id: attacker
      type: DiskCardGame.PlayableCard
    - id: amount
      type: System.Int32
    - id: target
      type: DiskCardGame.PlayableCard
    return:
      type: System.Boolean
    content.vb: Public Overridable Function RespondToOtherCardDealtDamage(attacker As PlayableCard, amount As Integer, target As PlayableCard) As Boolean
  overload: InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardDealtDamage*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToDie(System.Boolean,DiskCardGame.PlayableCard)
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondToDie(System.Boolean,DiskCardGame.PlayableCard)
  id: RespondToDie(System.Boolean,DiskCardGame.PlayableCard)
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: RespondToDie(Boolean, PlayableCard)
  nameWithType: BoonBehaviour.RespondToDie(Boolean, PlayableCard)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToDie(System.Boolean, DiskCardGame.PlayableCard)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: RespondToDie
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 198
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public virtual bool RespondToDie(bool wasSacrifice, PlayableCard killer)
    parameters:
    - id: wasSacrifice
      type: System.Boolean
    - id: killer
      type: DiskCardGame.PlayableCard
    return:
      type: System.Boolean
    content.vb: Public Overridable Function RespondToDie(wasSacrifice As Boolean, killer As PlayableCard) As Boolean
  overload: InscryptionAPI.Boons.BoonBehaviour.RespondToDie*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToPreDeathAnimation(System.Boolean)
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondToPreDeathAnimation(System.Boolean)
  id: RespondToPreDeathAnimation(System.Boolean)
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: RespondToPreDeathAnimation(Boolean)
  nameWithType: BoonBehaviour.RespondToPreDeathAnimation(Boolean)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToPreDeathAnimation(System.Boolean)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: RespondToPreDeathAnimation
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 203
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public virtual bool RespondToPreDeathAnimation(bool wasSacrifice)
    parameters:
    - id: wasSacrifice
      type: System.Boolean
    return:
      type: System.Boolean
    content.vb: Public Overridable Function RespondToPreDeathAnimation(wasSacrifice As Boolean) As Boolean
  overload: InscryptionAPI.Boons.BoonBehaviour.RespondToPreDeathAnimation*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardPreDeath(DiskCardGame.CardSlot,System.Boolean,DiskCardGame.PlayableCard)
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardPreDeath(DiskCardGame.CardSlot,System.Boolean,DiskCardGame.PlayableCard)
  id: RespondToOtherCardPreDeath(DiskCardGame.CardSlot,System.Boolean,DiskCardGame.PlayableCard)
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: RespondToOtherCardPreDeath(CardSlot, Boolean, PlayableCard)
  nameWithType: BoonBehaviour.RespondToOtherCardPreDeath(CardSlot, Boolean, PlayableCard)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardPreDeath(DiskCardGame.CardSlot, System.Boolean, DiskCardGame.PlayableCard)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: RespondToOtherCardPreDeath
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 208
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public virtual bool RespondToOtherCardPreDeath(CardSlot deathSlot, bool fromCombat, PlayableCard killer)
    parameters:
    - id: deathSlot
      type: DiskCardGame.CardSlot
    - id: fromCombat
      type: System.Boolean
    - id: killer
      type: DiskCardGame.PlayableCard
    return:
      type: System.Boolean
    content.vb: Public Overridable Function RespondToOtherCardPreDeath(deathSlot As CardSlot, fromCombat As Boolean, killer As PlayableCard) As Boolean
  overload: InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardPreDeath*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardDie(DiskCardGame.PlayableCard,DiskCardGame.CardSlot,System.Boolean,DiskCardGame.PlayableCard)
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardDie(DiskCardGame.PlayableCard,DiskCardGame.CardSlot,System.Boolean,DiskCardGame.PlayableCard)
  id: RespondToOtherCardDie(DiskCardGame.PlayableCard,DiskCardGame.CardSlot,System.Boolean,DiskCardGame.PlayableCard)
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: RespondToOtherCardDie(PlayableCard, CardSlot, Boolean, PlayableCard)
  nameWithType: BoonBehaviour.RespondToOtherCardDie(PlayableCard, CardSlot, Boolean, PlayableCard)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardDie(DiskCardGame.PlayableCard, DiskCardGame.CardSlot, System.Boolean, DiskCardGame.PlayableCard)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: RespondToOtherCardDie
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 213
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public virtual bool RespondToOtherCardDie(PlayableCard card, CardSlot deathSlot, bool fromCombat, PlayableCard killer)
    parameters:
    - id: card
      type: DiskCardGame.PlayableCard
    - id: deathSlot
      type: DiskCardGame.CardSlot
    - id: fromCombat
      type: System.Boolean
    - id: killer
      type: DiskCardGame.PlayableCard
    return:
      type: System.Boolean
    content.vb: Public Overridable Function RespondToOtherCardDie(card As PlayableCard, deathSlot As CardSlot, fromCombat As Boolean, killer As PlayableCard) As Boolean
  overload: InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardDie*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToAttackEnded
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondToAttackEnded
  id: RespondToAttackEnded
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: RespondToAttackEnded()
  nameWithType: BoonBehaviour.RespondToAttackEnded()
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToAttackEnded()
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: RespondToAttackEnded
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 218
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public virtual bool RespondToAttackEnded()
    return:
      type: System.Boolean
    content.vb: Public Overridable Function RespondToAttackEnded As Boolean
  overload: InscryptionAPI.Boons.BoonBehaviour.RespondToAttackEnded*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToTurnEnd(System.Boolean)
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondToTurnEnd(System.Boolean)
  id: RespondToTurnEnd(System.Boolean)
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: RespondToTurnEnd(Boolean)
  nameWithType: BoonBehaviour.RespondToTurnEnd(Boolean)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToTurnEnd(System.Boolean)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: RespondToTurnEnd
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 223
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public virtual bool RespondToTurnEnd(bool playerTurnEnd)
    parameters:
    - id: playerTurnEnd
      type: System.Boolean
    return:
      type: System.Boolean
    content.vb: Public Overridable Function RespondToTurnEnd(playerTurnEnd As Boolean) As Boolean
  overload: InscryptionAPI.Boons.BoonBehaviour.RespondToTurnEnd*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToActivatedAbility(DiskCardGame.Ability)
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondToActivatedAbility(DiskCardGame.Ability)
  id: RespondToActivatedAbility(DiskCardGame.Ability)
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: RespondToActivatedAbility(Ability)
  nameWithType: BoonBehaviour.RespondToActivatedAbility(Ability)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToActivatedAbility(DiskCardGame.Ability)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: RespondToActivatedAbility
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 228
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public virtual bool RespondToActivatedAbility(Ability ability)
    parameters:
    - id: ability
      type: DiskCardGame.Ability
    return:
      type: System.Boolean
    content.vb: Public Overridable Function RespondToActivatedAbility(ability As Ability) As Boolean
  overload: InscryptionAPI.Boons.BoonBehaviour.RespondToActivatedAbility*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToUpkeep(System.Boolean)
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondsToUpkeep(System.Boolean)
  id: RespondsToUpkeep(System.Boolean)
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: RespondsToUpkeep(Boolean)
  nameWithType: BoonBehaviour.RespondsToUpkeep(Boolean)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToUpkeep(System.Boolean)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: RespondsToUpkeep
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 233
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public sealed override bool RespondsToUpkeep(bool playerUpkeep)
    parameters:
    - id: playerUpkeep
      type: System.Boolean
    return:
      type: System.Boolean
    content.vb: Public NotOverridable Overrides Function RespondsToUpkeep(playerUpkeep As Boolean) As Boolean
  overridden: DiskCardGame.TriggerReceiver.RespondsToUpkeep(System.Boolean)
  overload: InscryptionAPI.Boons.BoonBehaviour.RespondsToUpkeep*
  modifiers.csharp:
  - public
  - sealed
  - override
  modifiers.vb:
  - Public
  - Overrides
  - NotOverridable
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToDrawn
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondsToDrawn
  id: RespondsToDrawn
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: RespondsToDrawn()
  nameWithType: BoonBehaviour.RespondsToDrawn()
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToDrawn()
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: RespondsToDrawn
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 238
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public sealed override bool RespondsToDrawn()
    return:
      type: System.Boolean
    content.vb: Public NotOverridable Overrides Function RespondsToDrawn As Boolean
  overridden: DiskCardGame.TriggerReceiver.RespondsToDrawn
  overload: InscryptionAPI.Boons.BoonBehaviour.RespondsToDrawn*
  modifiers.csharp:
  - public
  - sealed
  - override
  modifiers.vb:
  - Public
  - Overrides
  - NotOverridable
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardDrawn(DiskCardGame.PlayableCard)
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardDrawn(DiskCardGame.PlayableCard)
  id: RespondsToOtherCardDrawn(DiskCardGame.PlayableCard)
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: RespondsToOtherCardDrawn(PlayableCard)
  nameWithType: BoonBehaviour.RespondsToOtherCardDrawn(PlayableCard)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardDrawn(DiskCardGame.PlayableCard)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: RespondsToOtherCardDrawn
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 243
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public sealed override bool RespondsToOtherCardDrawn(PlayableCard card)
    parameters:
    - id: card
      type: DiskCardGame.PlayableCard
    return:
      type: System.Boolean
    content.vb: Public NotOverridable Overrides Function RespondsToOtherCardDrawn(card As PlayableCard) As Boolean
  overridden: DiskCardGame.TriggerReceiver.RespondsToOtherCardDrawn(DiskCardGame.PlayableCard)
  overload: InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardDrawn*
  modifiers.csharp:
  - public
  - sealed
  - override
  modifiers.vb:
  - Public
  - Overrides
  - NotOverridable
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToPlayFromHand
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondsToPlayFromHand
  id: RespondsToPlayFromHand
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: RespondsToPlayFromHand()
  nameWithType: BoonBehaviour.RespondsToPlayFromHand()
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToPlayFromHand()
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: RespondsToPlayFromHand
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 248
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public sealed override bool RespondsToPlayFromHand()
    return:
      type: System.Boolean
    content.vb: Public NotOverridable Overrides Function RespondsToPlayFromHand As Boolean
  overridden: DiskCardGame.TriggerReceiver.RespondsToPlayFromHand
  overload: InscryptionAPI.Boons.BoonBehaviour.RespondsToPlayFromHand*
  modifiers.csharp:
  - public
  - sealed
  - override
  modifiers.vb:
  - Public
  - Overrides
  - NotOverridable
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToResolveOnBoard
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondsToResolveOnBoard
  id: RespondsToResolveOnBoard
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: RespondsToResolveOnBoard()
  nameWithType: BoonBehaviour.RespondsToResolveOnBoard()
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToResolveOnBoard()
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: RespondsToResolveOnBoard
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 253
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public sealed override bool RespondsToResolveOnBoard()
    return:
      type: System.Boolean
    content.vb: Public NotOverridable Overrides Function RespondsToResolveOnBoard As Boolean
  overridden: DiskCardGame.TriggerReceiver.RespondsToResolveOnBoard
  overload: InscryptionAPI.Boons.BoonBehaviour.RespondsToResolveOnBoard*
  modifiers.csharp:
  - public
  - sealed
  - override
  modifiers.vb:
  - Public
  - Overrides
  - NotOverridable
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardResolve(DiskCardGame.PlayableCard)
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardResolve(DiskCardGame.PlayableCard)
  id: RespondsToOtherCardResolve(DiskCardGame.PlayableCard)
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: RespondsToOtherCardResolve(PlayableCard)
  nameWithType: BoonBehaviour.RespondsToOtherCardResolve(PlayableCard)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardResolve(DiskCardGame.PlayableCard)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: RespondsToOtherCardResolve
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 258
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public sealed override bool RespondsToOtherCardResolve(PlayableCard otherCard)
    parameters:
    - id: otherCard
      type: DiskCardGame.PlayableCard
    return:
      type: System.Boolean
    content.vb: Public NotOverridable Overrides Function RespondsToOtherCardResolve(otherCard As PlayableCard) As Boolean
  overridden: DiskCardGame.TriggerReceiver.RespondsToOtherCardResolve(DiskCardGame.PlayableCard)
  overload: InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardResolve*
  modifiers.csharp:
  - public
  - sealed
  - override
  modifiers.vb:
  - Public
  - Overrides
  - NotOverridable
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardAssignedToSlot(DiskCardGame.PlayableCard)
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardAssignedToSlot(DiskCardGame.PlayableCard)
  id: RespondsToOtherCardAssignedToSlot(DiskCardGame.PlayableCard)
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: RespondsToOtherCardAssignedToSlot(PlayableCard)
  nameWithType: BoonBehaviour.RespondsToOtherCardAssignedToSlot(PlayableCard)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardAssignedToSlot(DiskCardGame.PlayableCard)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: RespondsToOtherCardAssignedToSlot
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 263
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public sealed override bool RespondsToOtherCardAssignedToSlot(PlayableCard otherCard)
    parameters:
    - id: otherCard
      type: DiskCardGame.PlayableCard
    return:
      type: System.Boolean
    content.vb: Public NotOverridable Overrides Function RespondsToOtherCardAssignedToSlot(otherCard As PlayableCard) As Boolean
  overridden: DiskCardGame.TriggerReceiver.RespondsToOtherCardAssignedToSlot(DiskCardGame.PlayableCard)
  overload: InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardAssignedToSlot*
  modifiers.csharp:
  - public
  - sealed
  - override
  modifiers.vb:
  - Public
  - Overrides
  - NotOverridable
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToSacrifice
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondsToSacrifice
  id: RespondsToSacrifice
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: RespondsToSacrifice()
  nameWithType: BoonBehaviour.RespondsToSacrifice()
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToSacrifice()
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: RespondsToSacrifice
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 268
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public sealed override bool RespondsToSacrifice()
    return:
      type: System.Boolean
    content.vb: Public NotOverridable Overrides Function RespondsToSacrifice As Boolean
  overridden: DiskCardGame.TriggerReceiver.RespondsToSacrifice
  overload: InscryptionAPI.Boons.BoonBehaviour.RespondsToSacrifice*
  modifiers.csharp:
  - public
  - sealed
  - override
  modifiers.vb:
  - Public
  - Overrides
  - NotOverridable
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToSlotTargetedForAttack(DiskCardGame.CardSlot,DiskCardGame.PlayableCard)
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondsToSlotTargetedForAttack(DiskCardGame.CardSlot,DiskCardGame.PlayableCard)
  id: RespondsToSlotTargetedForAttack(DiskCardGame.CardSlot,DiskCardGame.PlayableCard)
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: RespondsToSlotTargetedForAttack(CardSlot, PlayableCard)
  nameWithType: BoonBehaviour.RespondsToSlotTargetedForAttack(CardSlot, PlayableCard)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToSlotTargetedForAttack(DiskCardGame.CardSlot, DiskCardGame.PlayableCard)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: RespondsToSlotTargetedForAttack
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 273
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public sealed override bool RespondsToSlotTargetedForAttack(CardSlot slot, PlayableCard attacker)
    parameters:
    - id: slot
      type: DiskCardGame.CardSlot
    - id: attacker
      type: DiskCardGame.PlayableCard
    return:
      type: System.Boolean
    content.vb: Public NotOverridable Overrides Function RespondsToSlotTargetedForAttack(slot As CardSlot, attacker As PlayableCard) As Boolean
  overridden: DiskCardGame.TriggerReceiver.RespondsToSlotTargetedForAttack(DiskCardGame.CardSlot,DiskCardGame.PlayableCard)
  overload: InscryptionAPI.Boons.BoonBehaviour.RespondsToSlotTargetedForAttack*
  modifiers.csharp:
  - public
  - sealed
  - override
  modifiers.vb:
  - Public
  - Overrides
  - NotOverridable
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToCardGettingAttacked(DiskCardGame.PlayableCard)
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondsToCardGettingAttacked(DiskCardGame.PlayableCard)
  id: RespondsToCardGettingAttacked(DiskCardGame.PlayableCard)
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: RespondsToCardGettingAttacked(PlayableCard)
  nameWithType: BoonBehaviour.RespondsToCardGettingAttacked(PlayableCard)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToCardGettingAttacked(DiskCardGame.PlayableCard)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: RespondsToCardGettingAttacked
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 278
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public sealed override bool RespondsToCardGettingAttacked(PlayableCard source)
    parameters:
    - id: source
      type: DiskCardGame.PlayableCard
    return:
      type: System.Boolean
    content.vb: Public NotOverridable Overrides Function RespondsToCardGettingAttacked(source As PlayableCard) As Boolean
  overridden: DiskCardGame.TriggerReceiver.RespondsToCardGettingAttacked(DiskCardGame.PlayableCard)
  overload: InscryptionAPI.Boons.BoonBehaviour.RespondsToCardGettingAttacked*
  modifiers.csharp:
  - public
  - sealed
  - override
  modifiers.vb:
  - Public
  - Overrides
  - NotOverridable
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToTakeDamage(DiskCardGame.PlayableCard)
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondsToTakeDamage(DiskCardGame.PlayableCard)
  id: RespondsToTakeDamage(DiskCardGame.PlayableCard)
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: RespondsToTakeDamage(PlayableCard)
  nameWithType: BoonBehaviour.RespondsToTakeDamage(PlayableCard)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToTakeDamage(DiskCardGame.PlayableCard)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: RespondsToTakeDamage
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 283
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public sealed override bool RespondsToTakeDamage(PlayableCard source)
    parameters:
    - id: source
      type: DiskCardGame.PlayableCard
    return:
      type: System.Boolean
    content.vb: Public NotOverridable Overrides Function RespondsToTakeDamage(source As PlayableCard) As Boolean
  overridden: DiskCardGame.TriggerReceiver.RespondsToTakeDamage(DiskCardGame.PlayableCard)
  overload: InscryptionAPI.Boons.BoonBehaviour.RespondsToTakeDamage*
  modifiers.csharp:
  - public
  - sealed
  - override
  modifiers.vb:
  - Public
  - Overrides
  - NotOverridable
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToDealDamage(System.Int32,DiskCardGame.PlayableCard)
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondsToDealDamage(System.Int32,DiskCardGame.PlayableCard)
  id: RespondsToDealDamage(System.Int32,DiskCardGame.PlayableCard)
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: RespondsToDealDamage(Int32, PlayableCard)
  nameWithType: BoonBehaviour.RespondsToDealDamage(Int32, PlayableCard)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToDealDamage(System.Int32, DiskCardGame.PlayableCard)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: RespondsToDealDamage
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 288
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public sealed override bool RespondsToDealDamage(int amount, PlayableCard target)
    parameters:
    - id: amount
      type: System.Int32
    - id: target
      type: DiskCardGame.PlayableCard
    return:
      type: System.Boolean
    content.vb: Public NotOverridable Overrides Function RespondsToDealDamage(amount As Integer, target As PlayableCard) As Boolean
  overridden: DiskCardGame.TriggerReceiver.RespondsToDealDamage(System.Int32,DiskCardGame.PlayableCard)
  overload: InscryptionAPI.Boons.BoonBehaviour.RespondsToDealDamage*
  modifiers.csharp:
  - public
  - sealed
  - override
  modifiers.vb:
  - Public
  - Overrides
  - NotOverridable
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToDealDamageDirectly(System.Int32)
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondsToDealDamageDirectly(System.Int32)
  id: RespondsToDealDamageDirectly(System.Int32)
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: RespondsToDealDamageDirectly(Int32)
  nameWithType: BoonBehaviour.RespondsToDealDamageDirectly(Int32)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToDealDamageDirectly(System.Int32)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: RespondsToDealDamageDirectly
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 293
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public sealed override bool RespondsToDealDamageDirectly(int amount)
    parameters:
    - id: amount
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public NotOverridable Overrides Function RespondsToDealDamageDirectly(amount As Integer) As Boolean
  overridden: DiskCardGame.TriggerReceiver.RespondsToDealDamageDirectly(System.Int32)
  overload: InscryptionAPI.Boons.BoonBehaviour.RespondsToDealDamageDirectly*
  modifiers.csharp:
  - public
  - sealed
  - override
  modifiers.vb:
  - Public
  - Overrides
  - NotOverridable
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardDealtDamage(DiskCardGame.PlayableCard,System.Int32,DiskCardGame.PlayableCard)
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardDealtDamage(DiskCardGame.PlayableCard,System.Int32,DiskCardGame.PlayableCard)
  id: RespondsToOtherCardDealtDamage(DiskCardGame.PlayableCard,System.Int32,DiskCardGame.PlayableCard)
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: RespondsToOtherCardDealtDamage(PlayableCard, Int32, PlayableCard)
  nameWithType: BoonBehaviour.RespondsToOtherCardDealtDamage(PlayableCard, Int32, PlayableCard)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardDealtDamage(DiskCardGame.PlayableCard, System.Int32, DiskCardGame.PlayableCard)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: RespondsToOtherCardDealtDamage
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 298
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public sealed override bool RespondsToOtherCardDealtDamage(PlayableCard attacker, int amount, PlayableCard target)
    parameters:
    - id: attacker
      type: DiskCardGame.PlayableCard
    - id: amount
      type: System.Int32
    - id: target
      type: DiskCardGame.PlayableCard
    return:
      type: System.Boolean
    content.vb: Public NotOverridable Overrides Function RespondsToOtherCardDealtDamage(attacker As PlayableCard, amount As Integer, target As PlayableCard) As Boolean
  overridden: DiskCardGame.TriggerReceiver.RespondsToOtherCardDealtDamage(DiskCardGame.PlayableCard,System.Int32,DiskCardGame.PlayableCard)
  overload: InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardDealtDamage*
  modifiers.csharp:
  - public
  - sealed
  - override
  modifiers.vb:
  - Public
  - Overrides
  - NotOverridable
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToDie(System.Boolean,DiskCardGame.PlayableCard)
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondsToDie(System.Boolean,DiskCardGame.PlayableCard)
  id: RespondsToDie(System.Boolean,DiskCardGame.PlayableCard)
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: RespondsToDie(Boolean, PlayableCard)
  nameWithType: BoonBehaviour.RespondsToDie(Boolean, PlayableCard)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToDie(System.Boolean, DiskCardGame.PlayableCard)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: RespondsToDie
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 303
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public sealed override bool RespondsToDie(bool wasSacrifice, PlayableCard killer)
    parameters:
    - id: wasSacrifice
      type: System.Boolean
    - id: killer
      type: DiskCardGame.PlayableCard
    return:
      type: System.Boolean
    content.vb: Public NotOverridable Overrides Function RespondsToDie(wasSacrifice As Boolean, killer As PlayableCard) As Boolean
  overridden: DiskCardGame.TriggerReceiver.RespondsToDie(System.Boolean,DiskCardGame.PlayableCard)
  overload: InscryptionAPI.Boons.BoonBehaviour.RespondsToDie*
  modifiers.csharp:
  - public
  - sealed
  - override
  modifiers.vb:
  - Public
  - Overrides
  - NotOverridable
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToPreDeathAnimation(System.Boolean)
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondsToPreDeathAnimation(System.Boolean)
  id: RespondsToPreDeathAnimation(System.Boolean)
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: RespondsToPreDeathAnimation(Boolean)
  nameWithType: BoonBehaviour.RespondsToPreDeathAnimation(Boolean)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToPreDeathAnimation(System.Boolean)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: RespondsToPreDeathAnimation
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 308
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public sealed override bool RespondsToPreDeathAnimation(bool wasSacrifice)
    parameters:
    - id: wasSacrifice
      type: System.Boolean
    return:
      type: System.Boolean
    content.vb: Public NotOverridable Overrides Function RespondsToPreDeathAnimation(wasSacrifice As Boolean) As Boolean
  overridden: DiskCardGame.TriggerReceiver.RespondsToPreDeathAnimation(System.Boolean)
  overload: InscryptionAPI.Boons.BoonBehaviour.RespondsToPreDeathAnimation*
  modifiers.csharp:
  - public
  - sealed
  - override
  modifiers.vb:
  - Public
  - Overrides
  - NotOverridable
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardPreDeath(DiskCardGame.CardSlot,System.Boolean,DiskCardGame.PlayableCard)
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardPreDeath(DiskCardGame.CardSlot,System.Boolean,DiskCardGame.PlayableCard)
  id: RespondsToOtherCardPreDeath(DiskCardGame.CardSlot,System.Boolean,DiskCardGame.PlayableCard)
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: RespondsToOtherCardPreDeath(CardSlot, Boolean, PlayableCard)
  nameWithType: BoonBehaviour.RespondsToOtherCardPreDeath(CardSlot, Boolean, PlayableCard)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardPreDeath(DiskCardGame.CardSlot, System.Boolean, DiskCardGame.PlayableCard)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: RespondsToOtherCardPreDeath
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 313
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public sealed override bool RespondsToOtherCardPreDeath(CardSlot deathSlot, bool fromCombat, PlayableCard killer)
    parameters:
    - id: deathSlot
      type: DiskCardGame.CardSlot
    - id: fromCombat
      type: System.Boolean
    - id: killer
      type: DiskCardGame.PlayableCard
    return:
      type: System.Boolean
    content.vb: Public NotOverridable Overrides Function RespondsToOtherCardPreDeath(deathSlot As CardSlot, fromCombat As Boolean, killer As PlayableCard) As Boolean
  overridden: DiskCardGame.TriggerReceiver.RespondsToOtherCardPreDeath(DiskCardGame.CardSlot,System.Boolean,DiskCardGame.PlayableCard)
  overload: InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardPreDeath*
  modifiers.csharp:
  - public
  - sealed
  - override
  modifiers.vb:
  - Public
  - Overrides
  - NotOverridable
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardDie(DiskCardGame.PlayableCard,DiskCardGame.CardSlot,System.Boolean,DiskCardGame.PlayableCard)
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardDie(DiskCardGame.PlayableCard,DiskCardGame.CardSlot,System.Boolean,DiskCardGame.PlayableCard)
  id: RespondsToOtherCardDie(DiskCardGame.PlayableCard,DiskCardGame.CardSlot,System.Boolean,DiskCardGame.PlayableCard)
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: RespondsToOtherCardDie(PlayableCard, CardSlot, Boolean, PlayableCard)
  nameWithType: BoonBehaviour.RespondsToOtherCardDie(PlayableCard, CardSlot, Boolean, PlayableCard)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardDie(DiskCardGame.PlayableCard, DiskCardGame.CardSlot, System.Boolean, DiskCardGame.PlayableCard)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: RespondsToOtherCardDie
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 318
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public sealed override bool RespondsToOtherCardDie(PlayableCard card, CardSlot deathSlot, bool fromCombat, PlayableCard killer)
    parameters:
    - id: card
      type: DiskCardGame.PlayableCard
    - id: deathSlot
      type: DiskCardGame.CardSlot
    - id: fromCombat
      type: System.Boolean
    - id: killer
      type: DiskCardGame.PlayableCard
    return:
      type: System.Boolean
    content.vb: Public NotOverridable Overrides Function RespondsToOtherCardDie(card As PlayableCard, deathSlot As CardSlot, fromCombat As Boolean, killer As PlayableCard) As Boolean
  overridden: DiskCardGame.TriggerReceiver.RespondsToOtherCardDie(DiskCardGame.PlayableCard,DiskCardGame.CardSlot,System.Boolean,DiskCardGame.PlayableCard)
  overload: InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardDie*
  modifiers.csharp:
  - public
  - sealed
  - override
  modifiers.vb:
  - Public
  - Overrides
  - NotOverridable
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToAttackEnded
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondsToAttackEnded
  id: RespondsToAttackEnded
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: RespondsToAttackEnded()
  nameWithType: BoonBehaviour.RespondsToAttackEnded()
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToAttackEnded()
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: RespondsToAttackEnded
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 323
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public sealed override bool RespondsToAttackEnded()
    return:
      type: System.Boolean
    content.vb: Public NotOverridable Overrides Function RespondsToAttackEnded As Boolean
  overridden: DiskCardGame.TriggerReceiver.RespondsToAttackEnded
  overload: InscryptionAPI.Boons.BoonBehaviour.RespondsToAttackEnded*
  modifiers.csharp:
  - public
  - sealed
  - override
  modifiers.vb:
  - Public
  - Overrides
  - NotOverridable
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToTurnEnd(System.Boolean)
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondsToTurnEnd(System.Boolean)
  id: RespondsToTurnEnd(System.Boolean)
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: RespondsToTurnEnd(Boolean)
  nameWithType: BoonBehaviour.RespondsToTurnEnd(Boolean)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToTurnEnd(System.Boolean)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: RespondsToTurnEnd
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 328
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public sealed override bool RespondsToTurnEnd(bool playerTurnEnd)
    parameters:
    - id: playerTurnEnd
      type: System.Boolean
    return:
      type: System.Boolean
    content.vb: Public NotOverridable Overrides Function RespondsToTurnEnd(playerTurnEnd As Boolean) As Boolean
  overridden: DiskCardGame.TriggerReceiver.RespondsToTurnEnd(System.Boolean)
  overload: InscryptionAPI.Boons.BoonBehaviour.RespondsToTurnEnd*
  modifiers.csharp:
  - public
  - sealed
  - override
  modifiers.vb:
  - Public
  - Overrides
  - NotOverridable
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToActivatedAbility(DiskCardGame.Ability)
  commentId: M:InscryptionAPI.Boons.BoonBehaviour.RespondsToActivatedAbility(DiskCardGame.Ability)
  id: RespondsToActivatedAbility(DiskCardGame.Ability)
  parent: InscryptionAPI.Boons.BoonBehaviour
  langs:
  - csharp
  - vb
  name: RespondsToActivatedAbility(Ability)
  nameWithType: BoonBehaviour.RespondsToActivatedAbility(Ability)
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToActivatedAbility(DiskCardGame.Ability)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonBehaviour.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: RespondsToActivatedAbility
    path: ../InscryptionAPI/Boons/BoonBehaviour.cs
    startLine: 333
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public sealed override bool RespondsToActivatedAbility(Ability ability)
    parameters:
    - id: ability
      type: DiskCardGame.Ability
    return:
      type: System.Boolean
    content.vb: Public NotOverridable Overrides Function RespondsToActivatedAbility(ability As Ability) As Boolean
  overridden: DiskCardGame.TriggerReceiver.RespondsToActivatedAbility(DiskCardGame.Ability)
  overload: InscryptionAPI.Boons.BoonBehaviour.RespondsToActivatedAbility*
  modifiers.csharp:
  - public
  - sealed
  - override
  modifiers.vb:
  - Public
  - Overrides
  - NotOverridable
references:
- uid: InscryptionAPI.Boons
  commentId: N:InscryptionAPI.Boons
  name: InscryptionAPI.Boons
  nameWithType: InscryptionAPI.Boons
  fullName: InscryptionAPI.Boons
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: ManagedBehaviourBase
  commentId: T:ManagedBehaviourBase
  isExternal: true
  name: ManagedBehaviourBase
  nameWithType: ManagedBehaviourBase
  fullName: ManagedBehaviourBase
- uid: ManagedBehaviour
  commentId: T:ManagedBehaviour
  isExternal: true
  name: ManagedBehaviour
  nameWithType: ManagedBehaviour
  fullName: ManagedBehaviour
- uid: DiskCardGame.TriggerReceiver
  commentId: T:DiskCardGame.TriggerReceiver
  parent: DiskCardGame
  isExternal: true
  name: TriggerReceiver
  nameWithType: TriggerReceiver
  fullName: DiskCardGame.TriggerReceiver
- uid: DiskCardGame.NonCardTriggerReceiver
  commentId: T:DiskCardGame.NonCardTriggerReceiver
  parent: DiskCardGame
  isExternal: true
  name: NonCardTriggerReceiver
  nameWithType: NonCardTriggerReceiver
  fullName: DiskCardGame.NonCardTriggerReceiver
- uid: DiskCardGame.NonCardTriggerReceiver.appQuitting
  commentId: F:DiskCardGame.NonCardTriggerReceiver.appQuitting
  parent: DiskCardGame.NonCardTriggerReceiver
  isExternal: true
  name: appQuitting
  nameWithType: NonCardTriggerReceiver.appQuitting
  fullName: DiskCardGame.NonCardTriggerReceiver.appQuitting
- uid: DiskCardGame.NonCardTriggerReceiver.Awake
  commentId: M:DiskCardGame.NonCardTriggerReceiver.Awake
  parent: DiskCardGame.NonCardTriggerReceiver
  isExternal: true
  name: Awake()
  nameWithType: NonCardTriggerReceiver.Awake()
  fullName: DiskCardGame.NonCardTriggerReceiver.Awake()
  spec.csharp:
  - uid: DiskCardGame.NonCardTriggerReceiver.Awake
    name: Awake
    nameWithType: NonCardTriggerReceiver.Awake
    fullName: DiskCardGame.NonCardTriggerReceiver.Awake
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiskCardGame.NonCardTriggerReceiver.Awake
    name: Awake
    nameWithType: NonCardTriggerReceiver.Awake
    fullName: DiskCardGame.NonCardTriggerReceiver.Awake
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DiskCardGame.NonCardTriggerReceiver.OnApplicationQuit
  commentId: M:DiskCardGame.NonCardTriggerReceiver.OnApplicationQuit
  parent: DiskCardGame.NonCardTriggerReceiver
  isExternal: true
  name: OnApplicationQuit()
  nameWithType: NonCardTriggerReceiver.OnApplicationQuit()
  fullName: DiskCardGame.NonCardTriggerReceiver.OnApplicationQuit()
  spec.csharp:
  - uid: DiskCardGame.NonCardTriggerReceiver.OnApplicationQuit
    name: OnApplicationQuit
    nameWithType: NonCardTriggerReceiver.OnApplicationQuit
    fullName: DiskCardGame.NonCardTriggerReceiver.OnApplicationQuit
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiskCardGame.NonCardTriggerReceiver.OnApplicationQuit
    name: OnApplicationQuit
    nameWithType: NonCardTriggerReceiver.OnApplicationQuit
    fullName: DiskCardGame.NonCardTriggerReceiver.OnApplicationQuit
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DiskCardGame.NonCardTriggerReceiver.TriggerBeforeCards
  commentId: P:DiskCardGame.NonCardTriggerReceiver.TriggerBeforeCards
  parent: DiskCardGame.NonCardTriggerReceiver
  isExternal: true
  name: TriggerBeforeCards
  nameWithType: NonCardTriggerReceiver.TriggerBeforeCards
  fullName: DiskCardGame.NonCardTriggerReceiver.TriggerBeforeCards
- uid: DiskCardGame.TriggerReceiver.<Activating>k__BackingField
  commentId: F:DiskCardGame.TriggerReceiver.<Activating>k__BackingField
  parent: DiskCardGame.TriggerReceiver
  isExternal: true
  name: <Activating>k__BackingField
  nameWithType: TriggerReceiver.<Activating>k__BackingField
  fullName: DiskCardGame.TriggerReceiver.<Activating>k__BackingField
- uid: DiskCardGame.TriggerReceiver.<DestroyAfterActivation>k__BackingField
  commentId: F:DiskCardGame.TriggerReceiver.<DestroyAfterActivation>k__BackingField
  parent: DiskCardGame.TriggerReceiver
  isExternal: true
  name: <DestroyAfterActivation>k__BackingField
  nameWithType: TriggerReceiver.<DestroyAfterActivation>k__BackingField
  fullName: DiskCardGame.TriggerReceiver.<DestroyAfterActivation>k__BackingField
- uid: DiskCardGame.TriggerReceiver.Destroy
  commentId: M:DiskCardGame.TriggerReceiver.Destroy
  parent: DiskCardGame.TriggerReceiver
  isExternal: true
  name: Destroy()
  nameWithType: TriggerReceiver.Destroy()
  fullName: DiskCardGame.TriggerReceiver.Destroy()
  spec.csharp:
  - uid: DiskCardGame.TriggerReceiver.Destroy
    name: Destroy
    nameWithType: TriggerReceiver.Destroy
    fullName: DiskCardGame.TriggerReceiver.Destroy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiskCardGame.TriggerReceiver.Destroy
    name: Destroy
    nameWithType: TriggerReceiver.Destroy
    fullName: DiskCardGame.TriggerReceiver.Destroy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DiskCardGame.TriggerReceiver.OnUpkeep(System.Boolean)
  commentId: M:DiskCardGame.TriggerReceiver.OnUpkeep(System.Boolean)
  parent: DiskCardGame.TriggerReceiver
  isExternal: true
  name: OnUpkeep(Boolean)
  nameWithType: TriggerReceiver.OnUpkeep(Boolean)
  fullName: DiskCardGame.TriggerReceiver.OnUpkeep(System.Boolean)
  spec.csharp:
  - uid: DiskCardGame.TriggerReceiver.OnUpkeep(System.Boolean)
    name: OnUpkeep
    nameWithType: TriggerReceiver.OnUpkeep
    fullName: DiskCardGame.TriggerReceiver.OnUpkeep
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiskCardGame.TriggerReceiver.OnUpkeep(System.Boolean)
    name: OnUpkeep
    nameWithType: TriggerReceiver.OnUpkeep
    fullName: DiskCardGame.TriggerReceiver.OnUpkeep
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DiskCardGame.TriggerReceiver.OnDrawn
  commentId: M:DiskCardGame.TriggerReceiver.OnDrawn
  parent: DiskCardGame.TriggerReceiver
  isExternal: true
  name: OnDrawn()
  nameWithType: TriggerReceiver.OnDrawn()
  fullName: DiskCardGame.TriggerReceiver.OnDrawn()
  spec.csharp:
  - uid: DiskCardGame.TriggerReceiver.OnDrawn
    name: OnDrawn
    nameWithType: TriggerReceiver.OnDrawn
    fullName: DiskCardGame.TriggerReceiver.OnDrawn
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiskCardGame.TriggerReceiver.OnDrawn
    name: OnDrawn
    nameWithType: TriggerReceiver.OnDrawn
    fullName: DiskCardGame.TriggerReceiver.OnDrawn
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DiskCardGame.TriggerReceiver.OnOtherCardDrawn(DiskCardGame.PlayableCard)
  commentId: M:DiskCardGame.TriggerReceiver.OnOtherCardDrawn(DiskCardGame.PlayableCard)
  parent: DiskCardGame.TriggerReceiver
  isExternal: true
  name: OnOtherCardDrawn(PlayableCard)
  nameWithType: TriggerReceiver.OnOtherCardDrawn(PlayableCard)
  fullName: DiskCardGame.TriggerReceiver.OnOtherCardDrawn(DiskCardGame.PlayableCard)
  spec.csharp:
  - uid: DiskCardGame.TriggerReceiver.OnOtherCardDrawn(DiskCardGame.PlayableCard)
    name: OnOtherCardDrawn
    nameWithType: TriggerReceiver.OnOtherCardDrawn
    fullName: DiskCardGame.TriggerReceiver.OnOtherCardDrawn
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DiskCardGame.PlayableCard
    name: PlayableCard
    nameWithType: PlayableCard
    fullName: DiskCardGame.PlayableCard
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiskCardGame.TriggerReceiver.OnOtherCardDrawn(DiskCardGame.PlayableCard)
    name: OnOtherCardDrawn
    nameWithType: TriggerReceiver.OnOtherCardDrawn
    fullName: DiskCardGame.TriggerReceiver.OnOtherCardDrawn
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DiskCardGame.PlayableCard
    name: PlayableCard
    nameWithType: PlayableCard
    fullName: DiskCardGame.PlayableCard
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DiskCardGame.TriggerReceiver.OnPlayFromHand
  commentId: M:DiskCardGame.TriggerReceiver.OnPlayFromHand
  parent: DiskCardGame.TriggerReceiver
  isExternal: true
  name: OnPlayFromHand()
  nameWithType: TriggerReceiver.OnPlayFromHand()
  fullName: DiskCardGame.TriggerReceiver.OnPlayFromHand()
  spec.csharp:
  - uid: DiskCardGame.TriggerReceiver.OnPlayFromHand
    name: OnPlayFromHand
    nameWithType: TriggerReceiver.OnPlayFromHand
    fullName: DiskCardGame.TriggerReceiver.OnPlayFromHand
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiskCardGame.TriggerReceiver.OnPlayFromHand
    name: OnPlayFromHand
    nameWithType: TriggerReceiver.OnPlayFromHand
    fullName: DiskCardGame.TriggerReceiver.OnPlayFromHand
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DiskCardGame.TriggerReceiver.OnResolveOnBoard
  commentId: M:DiskCardGame.TriggerReceiver.OnResolveOnBoard
  parent: DiskCardGame.TriggerReceiver
  isExternal: true
  name: OnResolveOnBoard()
  nameWithType: TriggerReceiver.OnResolveOnBoard()
  fullName: DiskCardGame.TriggerReceiver.OnResolveOnBoard()
  spec.csharp:
  - uid: DiskCardGame.TriggerReceiver.OnResolveOnBoard
    name: OnResolveOnBoard
    nameWithType: TriggerReceiver.OnResolveOnBoard
    fullName: DiskCardGame.TriggerReceiver.OnResolveOnBoard
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiskCardGame.TriggerReceiver.OnResolveOnBoard
    name: OnResolveOnBoard
    nameWithType: TriggerReceiver.OnResolveOnBoard
    fullName: DiskCardGame.TriggerReceiver.OnResolveOnBoard
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DiskCardGame.TriggerReceiver.OnOtherCardResolve(DiskCardGame.PlayableCard)
  commentId: M:DiskCardGame.TriggerReceiver.OnOtherCardResolve(DiskCardGame.PlayableCard)
  parent: DiskCardGame.TriggerReceiver
  isExternal: true
  name: OnOtherCardResolve(PlayableCard)
  nameWithType: TriggerReceiver.OnOtherCardResolve(PlayableCard)
  fullName: DiskCardGame.TriggerReceiver.OnOtherCardResolve(DiskCardGame.PlayableCard)
  spec.csharp:
  - uid: DiskCardGame.TriggerReceiver.OnOtherCardResolve(DiskCardGame.PlayableCard)
    name: OnOtherCardResolve
    nameWithType: TriggerReceiver.OnOtherCardResolve
    fullName: DiskCardGame.TriggerReceiver.OnOtherCardResolve
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DiskCardGame.PlayableCard
    name: PlayableCard
    nameWithType: PlayableCard
    fullName: DiskCardGame.PlayableCard
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiskCardGame.TriggerReceiver.OnOtherCardResolve(DiskCardGame.PlayableCard)
    name: OnOtherCardResolve
    nameWithType: TriggerReceiver.OnOtherCardResolve
    fullName: DiskCardGame.TriggerReceiver.OnOtherCardResolve
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DiskCardGame.PlayableCard
    name: PlayableCard
    nameWithType: PlayableCard
    fullName: DiskCardGame.PlayableCard
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DiskCardGame.TriggerReceiver.OnOtherCardAssignedToSlot(DiskCardGame.PlayableCard)
  commentId: M:DiskCardGame.TriggerReceiver.OnOtherCardAssignedToSlot(DiskCardGame.PlayableCard)
  parent: DiskCardGame.TriggerReceiver
  isExternal: true
  name: OnOtherCardAssignedToSlot(PlayableCard)
  nameWithType: TriggerReceiver.OnOtherCardAssignedToSlot(PlayableCard)
  fullName: DiskCardGame.TriggerReceiver.OnOtherCardAssignedToSlot(DiskCardGame.PlayableCard)
  spec.csharp:
  - uid: DiskCardGame.TriggerReceiver.OnOtherCardAssignedToSlot(DiskCardGame.PlayableCard)
    name: OnOtherCardAssignedToSlot
    nameWithType: TriggerReceiver.OnOtherCardAssignedToSlot
    fullName: DiskCardGame.TriggerReceiver.OnOtherCardAssignedToSlot
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DiskCardGame.PlayableCard
    name: PlayableCard
    nameWithType: PlayableCard
    fullName: DiskCardGame.PlayableCard
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiskCardGame.TriggerReceiver.OnOtherCardAssignedToSlot(DiskCardGame.PlayableCard)
    name: OnOtherCardAssignedToSlot
    nameWithType: TriggerReceiver.OnOtherCardAssignedToSlot
    fullName: DiskCardGame.TriggerReceiver.OnOtherCardAssignedToSlot
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DiskCardGame.PlayableCard
    name: PlayableCard
    nameWithType: PlayableCard
    fullName: DiskCardGame.PlayableCard
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DiskCardGame.TriggerReceiver.OnSacrifice
  commentId: M:DiskCardGame.TriggerReceiver.OnSacrifice
  parent: DiskCardGame.TriggerReceiver
  isExternal: true
  name: OnSacrifice()
  nameWithType: TriggerReceiver.OnSacrifice()
  fullName: DiskCardGame.TriggerReceiver.OnSacrifice()
  spec.csharp:
  - uid: DiskCardGame.TriggerReceiver.OnSacrifice
    name: OnSacrifice
    nameWithType: TriggerReceiver.OnSacrifice
    fullName: DiskCardGame.TriggerReceiver.OnSacrifice
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiskCardGame.TriggerReceiver.OnSacrifice
    name: OnSacrifice
    nameWithType: TriggerReceiver.OnSacrifice
    fullName: DiskCardGame.TriggerReceiver.OnSacrifice
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DiskCardGame.TriggerReceiver.OnSlotTargetedForAttack(DiskCardGame.CardSlot,DiskCardGame.PlayableCard)
  commentId: M:DiskCardGame.TriggerReceiver.OnSlotTargetedForAttack(DiskCardGame.CardSlot,DiskCardGame.PlayableCard)
  parent: DiskCardGame.TriggerReceiver
  isExternal: true
  name: OnSlotTargetedForAttack(CardSlot, PlayableCard)
  nameWithType: TriggerReceiver.OnSlotTargetedForAttack(CardSlot, PlayableCard)
  fullName: DiskCardGame.TriggerReceiver.OnSlotTargetedForAttack(DiskCardGame.CardSlot, DiskCardGame.PlayableCard)
  spec.csharp:
  - uid: DiskCardGame.TriggerReceiver.OnSlotTargetedForAttack(DiskCardGame.CardSlot,DiskCardGame.PlayableCard)
    name: OnSlotTargetedForAttack
    nameWithType: TriggerReceiver.OnSlotTargetedForAttack
    fullName: DiskCardGame.TriggerReceiver.OnSlotTargetedForAttack
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DiskCardGame.CardSlot
    name: CardSlot
    nameWithType: CardSlot
    fullName: DiskCardGame.CardSlot
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DiskCardGame.PlayableCard
    name: PlayableCard
    nameWithType: PlayableCard
    fullName: DiskCardGame.PlayableCard
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiskCardGame.TriggerReceiver.OnSlotTargetedForAttack(DiskCardGame.CardSlot,DiskCardGame.PlayableCard)
    name: OnSlotTargetedForAttack
    nameWithType: TriggerReceiver.OnSlotTargetedForAttack
    fullName: DiskCardGame.TriggerReceiver.OnSlotTargetedForAttack
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DiskCardGame.CardSlot
    name: CardSlot
    nameWithType: CardSlot
    fullName: DiskCardGame.CardSlot
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DiskCardGame.PlayableCard
    name: PlayableCard
    nameWithType: PlayableCard
    fullName: DiskCardGame.PlayableCard
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DiskCardGame.TriggerReceiver.OnCardGettingAttacked(DiskCardGame.PlayableCard)
  commentId: M:DiskCardGame.TriggerReceiver.OnCardGettingAttacked(DiskCardGame.PlayableCard)
  parent: DiskCardGame.TriggerReceiver
  isExternal: true
  name: OnCardGettingAttacked(PlayableCard)
  nameWithType: TriggerReceiver.OnCardGettingAttacked(PlayableCard)
  fullName: DiskCardGame.TriggerReceiver.OnCardGettingAttacked(DiskCardGame.PlayableCard)
  spec.csharp:
  - uid: DiskCardGame.TriggerReceiver.OnCardGettingAttacked(DiskCardGame.PlayableCard)
    name: OnCardGettingAttacked
    nameWithType: TriggerReceiver.OnCardGettingAttacked
    fullName: DiskCardGame.TriggerReceiver.OnCardGettingAttacked
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DiskCardGame.PlayableCard
    name: PlayableCard
    nameWithType: PlayableCard
    fullName: DiskCardGame.PlayableCard
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiskCardGame.TriggerReceiver.OnCardGettingAttacked(DiskCardGame.PlayableCard)
    name: OnCardGettingAttacked
    nameWithType: TriggerReceiver.OnCardGettingAttacked
    fullName: DiskCardGame.TriggerReceiver.OnCardGettingAttacked
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DiskCardGame.PlayableCard
    name: PlayableCard
    nameWithType: PlayableCard
    fullName: DiskCardGame.PlayableCard
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DiskCardGame.TriggerReceiver.OnTakeDamage(DiskCardGame.PlayableCard)
  commentId: M:DiskCardGame.TriggerReceiver.OnTakeDamage(DiskCardGame.PlayableCard)
  parent: DiskCardGame.TriggerReceiver
  isExternal: true
  name: OnTakeDamage(PlayableCard)
  nameWithType: TriggerReceiver.OnTakeDamage(PlayableCard)
  fullName: DiskCardGame.TriggerReceiver.OnTakeDamage(DiskCardGame.PlayableCard)
  spec.csharp:
  - uid: DiskCardGame.TriggerReceiver.OnTakeDamage(DiskCardGame.PlayableCard)
    name: OnTakeDamage
    nameWithType: TriggerReceiver.OnTakeDamage
    fullName: DiskCardGame.TriggerReceiver.OnTakeDamage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DiskCardGame.PlayableCard
    name: PlayableCard
    nameWithType: PlayableCard
    fullName: DiskCardGame.PlayableCard
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiskCardGame.TriggerReceiver.OnTakeDamage(DiskCardGame.PlayableCard)
    name: OnTakeDamage
    nameWithType: TriggerReceiver.OnTakeDamage
    fullName: DiskCardGame.TriggerReceiver.OnTakeDamage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DiskCardGame.PlayableCard
    name: PlayableCard
    nameWithType: PlayableCard
    fullName: DiskCardGame.PlayableCard
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DiskCardGame.TriggerReceiver.OnDealDamage(System.Int32,DiskCardGame.PlayableCard)
  commentId: M:DiskCardGame.TriggerReceiver.OnDealDamage(System.Int32,DiskCardGame.PlayableCard)
  parent: DiskCardGame.TriggerReceiver
  isExternal: true
  name: OnDealDamage(Int32, PlayableCard)
  nameWithType: TriggerReceiver.OnDealDamage(Int32, PlayableCard)
  fullName: DiskCardGame.TriggerReceiver.OnDealDamage(System.Int32, DiskCardGame.PlayableCard)
  spec.csharp:
  - uid: DiskCardGame.TriggerReceiver.OnDealDamage(System.Int32,DiskCardGame.PlayableCard)
    name: OnDealDamage
    nameWithType: TriggerReceiver.OnDealDamage
    fullName: DiskCardGame.TriggerReceiver.OnDealDamage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DiskCardGame.PlayableCard
    name: PlayableCard
    nameWithType: PlayableCard
    fullName: DiskCardGame.PlayableCard
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiskCardGame.TriggerReceiver.OnDealDamage(System.Int32,DiskCardGame.PlayableCard)
    name: OnDealDamage
    nameWithType: TriggerReceiver.OnDealDamage
    fullName: DiskCardGame.TriggerReceiver.OnDealDamage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DiskCardGame.PlayableCard
    name: PlayableCard
    nameWithType: PlayableCard
    fullName: DiskCardGame.PlayableCard
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DiskCardGame.TriggerReceiver.OnDealDamageDirectly(System.Int32)
  commentId: M:DiskCardGame.TriggerReceiver.OnDealDamageDirectly(System.Int32)
  parent: DiskCardGame.TriggerReceiver
  isExternal: true
  name: OnDealDamageDirectly(Int32)
  nameWithType: TriggerReceiver.OnDealDamageDirectly(Int32)
  fullName: DiskCardGame.TriggerReceiver.OnDealDamageDirectly(System.Int32)
  spec.csharp:
  - uid: DiskCardGame.TriggerReceiver.OnDealDamageDirectly(System.Int32)
    name: OnDealDamageDirectly
    nameWithType: TriggerReceiver.OnDealDamageDirectly
    fullName: DiskCardGame.TriggerReceiver.OnDealDamageDirectly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiskCardGame.TriggerReceiver.OnDealDamageDirectly(System.Int32)
    name: OnDealDamageDirectly
    nameWithType: TriggerReceiver.OnDealDamageDirectly
    fullName: DiskCardGame.TriggerReceiver.OnDealDamageDirectly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DiskCardGame.TriggerReceiver.OnOtherCardDealtDamage(DiskCardGame.PlayableCard,System.Int32,DiskCardGame.PlayableCard)
  commentId: M:DiskCardGame.TriggerReceiver.OnOtherCardDealtDamage(DiskCardGame.PlayableCard,System.Int32,DiskCardGame.PlayableCard)
  parent: DiskCardGame.TriggerReceiver
  isExternal: true
  name: OnOtherCardDealtDamage(PlayableCard, Int32, PlayableCard)
  nameWithType: TriggerReceiver.OnOtherCardDealtDamage(PlayableCard, Int32, PlayableCard)
  fullName: DiskCardGame.TriggerReceiver.OnOtherCardDealtDamage(DiskCardGame.PlayableCard, System.Int32, DiskCardGame.PlayableCard)
  spec.csharp:
  - uid: DiskCardGame.TriggerReceiver.OnOtherCardDealtDamage(DiskCardGame.PlayableCard,System.Int32,DiskCardGame.PlayableCard)
    name: OnOtherCardDealtDamage
    nameWithType: TriggerReceiver.OnOtherCardDealtDamage
    fullName: DiskCardGame.TriggerReceiver.OnOtherCardDealtDamage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DiskCardGame.PlayableCard
    name: PlayableCard
    nameWithType: PlayableCard
    fullName: DiskCardGame.PlayableCard
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DiskCardGame.PlayableCard
    name: PlayableCard
    nameWithType: PlayableCard
    fullName: DiskCardGame.PlayableCard
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiskCardGame.TriggerReceiver.OnOtherCardDealtDamage(DiskCardGame.PlayableCard,System.Int32,DiskCardGame.PlayableCard)
    name: OnOtherCardDealtDamage
    nameWithType: TriggerReceiver.OnOtherCardDealtDamage
    fullName: DiskCardGame.TriggerReceiver.OnOtherCardDealtDamage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DiskCardGame.PlayableCard
    name: PlayableCard
    nameWithType: PlayableCard
    fullName: DiskCardGame.PlayableCard
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DiskCardGame.PlayableCard
    name: PlayableCard
    nameWithType: PlayableCard
    fullName: DiskCardGame.PlayableCard
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DiskCardGame.TriggerReceiver.OnDie(System.Boolean,DiskCardGame.PlayableCard)
  commentId: M:DiskCardGame.TriggerReceiver.OnDie(System.Boolean,DiskCardGame.PlayableCard)
  parent: DiskCardGame.TriggerReceiver
  isExternal: true
  name: OnDie(Boolean, PlayableCard)
  nameWithType: TriggerReceiver.OnDie(Boolean, PlayableCard)
  fullName: DiskCardGame.TriggerReceiver.OnDie(System.Boolean, DiskCardGame.PlayableCard)
  spec.csharp:
  - uid: DiskCardGame.TriggerReceiver.OnDie(System.Boolean,DiskCardGame.PlayableCard)
    name: OnDie
    nameWithType: TriggerReceiver.OnDie
    fullName: DiskCardGame.TriggerReceiver.OnDie
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DiskCardGame.PlayableCard
    name: PlayableCard
    nameWithType: PlayableCard
    fullName: DiskCardGame.PlayableCard
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiskCardGame.TriggerReceiver.OnDie(System.Boolean,DiskCardGame.PlayableCard)
    name: OnDie
    nameWithType: TriggerReceiver.OnDie
    fullName: DiskCardGame.TriggerReceiver.OnDie
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DiskCardGame.PlayableCard
    name: PlayableCard
    nameWithType: PlayableCard
    fullName: DiskCardGame.PlayableCard
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DiskCardGame.TriggerReceiver.OnPreDeathAnimation(System.Boolean)
  commentId: M:DiskCardGame.TriggerReceiver.OnPreDeathAnimation(System.Boolean)
  parent: DiskCardGame.TriggerReceiver
  isExternal: true
  name: OnPreDeathAnimation(Boolean)
  nameWithType: TriggerReceiver.OnPreDeathAnimation(Boolean)
  fullName: DiskCardGame.TriggerReceiver.OnPreDeathAnimation(System.Boolean)
  spec.csharp:
  - uid: DiskCardGame.TriggerReceiver.OnPreDeathAnimation(System.Boolean)
    name: OnPreDeathAnimation
    nameWithType: TriggerReceiver.OnPreDeathAnimation
    fullName: DiskCardGame.TriggerReceiver.OnPreDeathAnimation
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiskCardGame.TriggerReceiver.OnPreDeathAnimation(System.Boolean)
    name: OnPreDeathAnimation
    nameWithType: TriggerReceiver.OnPreDeathAnimation
    fullName: DiskCardGame.TriggerReceiver.OnPreDeathAnimation
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DiskCardGame.TriggerReceiver.OnOtherCardPreDeath(DiskCardGame.CardSlot,System.Boolean,DiskCardGame.PlayableCard)
  commentId: M:DiskCardGame.TriggerReceiver.OnOtherCardPreDeath(DiskCardGame.CardSlot,System.Boolean,DiskCardGame.PlayableCard)
  parent: DiskCardGame.TriggerReceiver
  isExternal: true
  name: OnOtherCardPreDeath(CardSlot, Boolean, PlayableCard)
  nameWithType: TriggerReceiver.OnOtherCardPreDeath(CardSlot, Boolean, PlayableCard)
  fullName: DiskCardGame.TriggerReceiver.OnOtherCardPreDeath(DiskCardGame.CardSlot, System.Boolean, DiskCardGame.PlayableCard)
  spec.csharp:
  - uid: DiskCardGame.TriggerReceiver.OnOtherCardPreDeath(DiskCardGame.CardSlot,System.Boolean,DiskCardGame.PlayableCard)
    name: OnOtherCardPreDeath
    nameWithType: TriggerReceiver.OnOtherCardPreDeath
    fullName: DiskCardGame.TriggerReceiver.OnOtherCardPreDeath
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DiskCardGame.CardSlot
    name: CardSlot
    nameWithType: CardSlot
    fullName: DiskCardGame.CardSlot
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DiskCardGame.PlayableCard
    name: PlayableCard
    nameWithType: PlayableCard
    fullName: DiskCardGame.PlayableCard
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiskCardGame.TriggerReceiver.OnOtherCardPreDeath(DiskCardGame.CardSlot,System.Boolean,DiskCardGame.PlayableCard)
    name: OnOtherCardPreDeath
    nameWithType: TriggerReceiver.OnOtherCardPreDeath
    fullName: DiskCardGame.TriggerReceiver.OnOtherCardPreDeath
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DiskCardGame.CardSlot
    name: CardSlot
    nameWithType: CardSlot
    fullName: DiskCardGame.CardSlot
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DiskCardGame.PlayableCard
    name: PlayableCard
    nameWithType: PlayableCard
    fullName: DiskCardGame.PlayableCard
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DiskCardGame.TriggerReceiver.OnOtherCardDie(DiskCardGame.PlayableCard,DiskCardGame.CardSlot,System.Boolean,DiskCardGame.PlayableCard)
  commentId: M:DiskCardGame.TriggerReceiver.OnOtherCardDie(DiskCardGame.PlayableCard,DiskCardGame.CardSlot,System.Boolean,DiskCardGame.PlayableCard)
  parent: DiskCardGame.TriggerReceiver
  isExternal: true
  name: OnOtherCardDie(PlayableCard, CardSlot, Boolean, PlayableCard)
  nameWithType: TriggerReceiver.OnOtherCardDie(PlayableCard, CardSlot, Boolean, PlayableCard)
  fullName: DiskCardGame.TriggerReceiver.OnOtherCardDie(DiskCardGame.PlayableCard, DiskCardGame.CardSlot, System.Boolean, DiskCardGame.PlayableCard)
  spec.csharp:
  - uid: DiskCardGame.TriggerReceiver.OnOtherCardDie(DiskCardGame.PlayableCard,DiskCardGame.CardSlot,System.Boolean,DiskCardGame.PlayableCard)
    name: OnOtherCardDie
    nameWithType: TriggerReceiver.OnOtherCardDie
    fullName: DiskCardGame.TriggerReceiver.OnOtherCardDie
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DiskCardGame.PlayableCard
    name: PlayableCard
    nameWithType: PlayableCard
    fullName: DiskCardGame.PlayableCard
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DiskCardGame.CardSlot
    name: CardSlot
    nameWithType: CardSlot
    fullName: DiskCardGame.CardSlot
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DiskCardGame.PlayableCard
    name: PlayableCard
    nameWithType: PlayableCard
    fullName: DiskCardGame.PlayableCard
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiskCardGame.TriggerReceiver.OnOtherCardDie(DiskCardGame.PlayableCard,DiskCardGame.CardSlot,System.Boolean,DiskCardGame.PlayableCard)
    name: OnOtherCardDie
    nameWithType: TriggerReceiver.OnOtherCardDie
    fullName: DiskCardGame.TriggerReceiver.OnOtherCardDie
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DiskCardGame.PlayableCard
    name: PlayableCard
    nameWithType: PlayableCard
    fullName: DiskCardGame.PlayableCard
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DiskCardGame.CardSlot
    name: CardSlot
    nameWithType: CardSlot
    fullName: DiskCardGame.CardSlot
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DiskCardGame.PlayableCard
    name: PlayableCard
    nameWithType: PlayableCard
    fullName: DiskCardGame.PlayableCard
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DiskCardGame.TriggerReceiver.OnAttackEnded
  commentId: M:DiskCardGame.TriggerReceiver.OnAttackEnded
  parent: DiskCardGame.TriggerReceiver
  isExternal: true
  name: OnAttackEnded()
  nameWithType: TriggerReceiver.OnAttackEnded()
  fullName: DiskCardGame.TriggerReceiver.OnAttackEnded()
  spec.csharp:
  - uid: DiskCardGame.TriggerReceiver.OnAttackEnded
    name: OnAttackEnded
    nameWithType: TriggerReceiver.OnAttackEnded
    fullName: DiskCardGame.TriggerReceiver.OnAttackEnded
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiskCardGame.TriggerReceiver.OnAttackEnded
    name: OnAttackEnded
    nameWithType: TriggerReceiver.OnAttackEnded
    fullName: DiskCardGame.TriggerReceiver.OnAttackEnded
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DiskCardGame.TriggerReceiver.OnTurnEnd(System.Boolean)
  commentId: M:DiskCardGame.TriggerReceiver.OnTurnEnd(System.Boolean)
  parent: DiskCardGame.TriggerReceiver
  isExternal: true
  name: OnTurnEnd(Boolean)
  nameWithType: TriggerReceiver.OnTurnEnd(Boolean)
  fullName: DiskCardGame.TriggerReceiver.OnTurnEnd(System.Boolean)
  spec.csharp:
  - uid: DiskCardGame.TriggerReceiver.OnTurnEnd(System.Boolean)
    name: OnTurnEnd
    nameWithType: TriggerReceiver.OnTurnEnd
    fullName: DiskCardGame.TriggerReceiver.OnTurnEnd
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiskCardGame.TriggerReceiver.OnTurnEnd(System.Boolean)
    name: OnTurnEnd
    nameWithType: TriggerReceiver.OnTurnEnd
    fullName: DiskCardGame.TriggerReceiver.OnTurnEnd
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DiskCardGame.TriggerReceiver.OnActivatedAbility
  commentId: M:DiskCardGame.TriggerReceiver.OnActivatedAbility
  parent: DiskCardGame.TriggerReceiver
  isExternal: true
  name: OnActivatedAbility()
  nameWithType: TriggerReceiver.OnActivatedAbility()
  fullName: DiskCardGame.TriggerReceiver.OnActivatedAbility()
  spec.csharp:
  - uid: DiskCardGame.TriggerReceiver.OnActivatedAbility
    name: OnActivatedAbility
    nameWithType: TriggerReceiver.OnActivatedAbility
    fullName: DiskCardGame.TriggerReceiver.OnActivatedAbility
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiskCardGame.TriggerReceiver.OnActivatedAbility
    name: OnActivatedAbility
    nameWithType: TriggerReceiver.OnActivatedAbility
    fullName: DiskCardGame.TriggerReceiver.OnActivatedAbility
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DiskCardGame.TriggerReceiver.GetRandomSeed
  commentId: M:DiskCardGame.TriggerReceiver.GetRandomSeed
  parent: DiskCardGame.TriggerReceiver
  isExternal: true
  name: GetRandomSeed()
  nameWithType: TriggerReceiver.GetRandomSeed()
  fullName: DiskCardGame.TriggerReceiver.GetRandomSeed()
  spec.csharp:
  - uid: DiskCardGame.TriggerReceiver.GetRandomSeed
    name: GetRandomSeed
    nameWithType: TriggerReceiver.GetRandomSeed
    fullName: DiskCardGame.TriggerReceiver.GetRandomSeed
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiskCardGame.TriggerReceiver.GetRandomSeed
    name: GetRandomSeed
    nameWithType: TriggerReceiver.GetRandomSeed
    fullName: DiskCardGame.TriggerReceiver.GetRandomSeed
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DiskCardGame.TriggerReceiver.Priority
  commentId: P:DiskCardGame.TriggerReceiver.Priority
  parent: DiskCardGame.TriggerReceiver
  isExternal: true
  name: Priority
  nameWithType: TriggerReceiver.Priority
  fullName: DiskCardGame.TriggerReceiver.Priority
- uid: DiskCardGame.TriggerReceiver.Activating
  commentId: P:DiskCardGame.TriggerReceiver.Activating
  parent: DiskCardGame.TriggerReceiver
  isExternal: true
  name: Activating
  nameWithType: TriggerReceiver.Activating
  fullName: DiskCardGame.TriggerReceiver.Activating
- uid: DiskCardGame.TriggerReceiver.DestroyAfterActivation
  commentId: P:DiskCardGame.TriggerReceiver.DestroyAfterActivation
  parent: DiskCardGame.TriggerReceiver
  isExternal: true
  name: DestroyAfterActivation
  nameWithType: TriggerReceiver.DestroyAfterActivation
  fullName: DiskCardGame.TriggerReceiver.DestroyAfterActivation
- uid: ManagedBehaviour.ManagedUpdate
  commentId: M:ManagedBehaviour.ManagedUpdate
  parent: ManagedBehaviour
  isExternal: true
  name: ManagedUpdate()
  nameWithType: ManagedBehaviour.ManagedUpdate()
  fullName: ManagedBehaviour.ManagedUpdate()
  spec.csharp:
  - uid: ManagedBehaviour.ManagedUpdate
    name: ManagedUpdate
    nameWithType: ManagedBehaviour.ManagedUpdate
    fullName: ManagedBehaviour.ManagedUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ManagedBehaviour.ManagedUpdate
    name: ManagedUpdate
    nameWithType: ManagedBehaviour.ManagedUpdate
    fullName: ManagedBehaviour.ManagedUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ManagedBehaviour.ManagedFixedUpdate
  commentId: M:ManagedBehaviour.ManagedFixedUpdate
  parent: ManagedBehaviour
  isExternal: true
  name: ManagedFixedUpdate()
  nameWithType: ManagedBehaviour.ManagedFixedUpdate()
  fullName: ManagedBehaviour.ManagedFixedUpdate()
  spec.csharp:
  - uid: ManagedBehaviour.ManagedFixedUpdate
    name: ManagedFixedUpdate
    nameWithType: ManagedBehaviour.ManagedFixedUpdate
    fullName: ManagedBehaviour.ManagedFixedUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ManagedBehaviour.ManagedFixedUpdate
    name: ManagedFixedUpdate
    nameWithType: ManagedBehaviour.ManagedFixedUpdate
    fullName: ManagedBehaviour.ManagedFixedUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ManagedBehaviour.ManagedLateUpdate
  commentId: M:ManagedBehaviour.ManagedLateUpdate
  parent: ManagedBehaviour
  isExternal: true
  name: ManagedLateUpdate()
  nameWithType: ManagedBehaviour.ManagedLateUpdate()
  fullName: ManagedBehaviour.ManagedLateUpdate()
  spec.csharp:
  - uid: ManagedBehaviour.ManagedLateUpdate
    name: ManagedLateUpdate
    nameWithType: ManagedBehaviour.ManagedLateUpdate
    fullName: ManagedBehaviour.ManagedLateUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ManagedBehaviour.ManagedLateUpdate
    name: ManagedLateUpdate
    nameWithType: ManagedBehaviour.ManagedLateUpdate
    fullName: ManagedBehaviour.ManagedLateUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ManagedBehaviour.OnEnable
  commentId: M:ManagedBehaviour.OnEnable
  parent: ManagedBehaviour
  isExternal: true
  name: OnEnable()
  nameWithType: ManagedBehaviour.OnEnable()
  fullName: ManagedBehaviour.OnEnable()
  spec.csharp:
  - uid: ManagedBehaviour.OnEnable
    name: OnEnable
    nameWithType: ManagedBehaviour.OnEnable
    fullName: ManagedBehaviour.OnEnable
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ManagedBehaviour.OnEnable
    name: OnEnable
    nameWithType: ManagedBehaviour.OnEnable
    fullName: ManagedBehaviour.OnEnable
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ManagedBehaviour.Update
  commentId: M:ManagedBehaviour.Update
  parent: ManagedBehaviour
  isExternal: true
  name: Update()
  nameWithType: ManagedBehaviour.Update()
  fullName: ManagedBehaviour.Update()
  spec.csharp:
  - uid: ManagedBehaviour.Update
    name: Update
    nameWithType: ManagedBehaviour.Update
    fullName: ManagedBehaviour.Update
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ManagedBehaviour.Update
    name: Update
    nameWithType: ManagedBehaviour.Update
    fullName: ManagedBehaviour.Update
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ManagedBehaviour.FixedUpdate
  commentId: M:ManagedBehaviour.FixedUpdate
  parent: ManagedBehaviour
  isExternal: true
  name: FixedUpdate()
  nameWithType: ManagedBehaviour.FixedUpdate()
  fullName: ManagedBehaviour.FixedUpdate()
  spec.csharp:
  - uid: ManagedBehaviour.FixedUpdate
    name: FixedUpdate
    nameWithType: ManagedBehaviour.FixedUpdate
    fullName: ManagedBehaviour.FixedUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ManagedBehaviour.FixedUpdate
    name: FixedUpdate
    nameWithType: ManagedBehaviour.FixedUpdate
    fullName: ManagedBehaviour.FixedUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ManagedBehaviour.LateUpdate
  commentId: M:ManagedBehaviour.LateUpdate
  parent: ManagedBehaviour
  isExternal: true
  name: LateUpdate()
  nameWithType: ManagedBehaviour.LateUpdate()
  fullName: ManagedBehaviour.LateUpdate()
  spec.csharp:
  - uid: ManagedBehaviour.LateUpdate
    name: LateUpdate
    nameWithType: ManagedBehaviour.LateUpdate
    fullName: ManagedBehaviour.LateUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ManagedBehaviour.LateUpdate
    name: LateUpdate
    nameWithType: ManagedBehaviour.LateUpdate
    fullName: ManagedBehaviour.LateUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ManagedBehaviour.ExecutionOrder
  commentId: P:ManagedBehaviour.ExecutionOrder
  parent: ManagedBehaviour
  isExternal: true
  name: ExecutionOrder
  nameWithType: ManagedBehaviour.ExecutionOrder
  fullName: ManagedBehaviour.ExecutionOrder
- uid: ManagedBehaviour.UpdateWhenPaused
  commentId: P:ManagedBehaviour.UpdateWhenPaused
  parent: ManagedBehaviour
  isExternal: true
  name: UpdateWhenPaused
  nameWithType: ManagedBehaviour.UpdateWhenPaused
  fullName: ManagedBehaviour.UpdateWhenPaused
- uid: UnityEngine.MonoBehaviour.IsInvoking
  commentId: M:UnityEngine.MonoBehaviour.IsInvoking
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: IsInvoking()
  nameWithType: MonoBehaviour.IsInvoking()
  fullName: UnityEngine.MonoBehaviour.IsInvoking()
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.IsInvoking
    name: IsInvoking
    nameWithType: MonoBehaviour.IsInvoking
    fullName: UnityEngine.MonoBehaviour.IsInvoking
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.IsInvoking
    name: IsInvoking
    nameWithType: MonoBehaviour.IsInvoking
    fullName: UnityEngine.MonoBehaviour.IsInvoking
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.MonoBehaviour.CancelInvoke
  commentId: M:UnityEngine.MonoBehaviour.CancelInvoke
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: CancelInvoke()
  nameWithType: MonoBehaviour.CancelInvoke()
  fullName: UnityEngine.MonoBehaviour.CancelInvoke()
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.CancelInvoke
    name: CancelInvoke
    nameWithType: MonoBehaviour.CancelInvoke
    fullName: UnityEngine.MonoBehaviour.CancelInvoke
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.CancelInvoke
    name: CancelInvoke
    nameWithType: MonoBehaviour.CancelInvoke
    fullName: UnityEngine.MonoBehaviour.CancelInvoke
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
  commentId: M:UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: Invoke(String, Single)
  nameWithType: MonoBehaviour.Invoke(String, Single)
  fullName: UnityEngine.MonoBehaviour.Invoke(System.String, System.Single)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
    name: Invoke
    nameWithType: MonoBehaviour.Invoke
    fullName: UnityEngine.MonoBehaviour.Invoke
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
    name: Invoke
    nameWithType: MonoBehaviour.Invoke
    fullName: UnityEngine.MonoBehaviour.Invoke
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
  commentId: M:UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: InvokeRepeating(String, Single, Single)
  nameWithType: MonoBehaviour.InvokeRepeating(String, Single, Single)
  fullName: UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
    name: InvokeRepeating
    nameWithType: MonoBehaviour.InvokeRepeating
    fullName: UnityEngine.MonoBehaviour.InvokeRepeating
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
    name: InvokeRepeating
    nameWithType: MonoBehaviour.InvokeRepeating
    fullName: UnityEngine.MonoBehaviour.InvokeRepeating
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.MonoBehaviour.CancelInvoke(System.String)
  commentId: M:UnityEngine.MonoBehaviour.CancelInvoke(System.String)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: CancelInvoke(String)
  nameWithType: MonoBehaviour.CancelInvoke(String)
  fullName: UnityEngine.MonoBehaviour.CancelInvoke(System.String)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.CancelInvoke(System.String)
    name: CancelInvoke
    nameWithType: MonoBehaviour.CancelInvoke
    fullName: UnityEngine.MonoBehaviour.CancelInvoke
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.CancelInvoke(System.String)
    name: CancelInvoke
    nameWithType: MonoBehaviour.CancelInvoke
    fullName: UnityEngine.MonoBehaviour.CancelInvoke
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.MonoBehaviour.IsInvoking(System.String)
  commentId: M:UnityEngine.MonoBehaviour.IsInvoking(System.String)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: IsInvoking(String)
  nameWithType: MonoBehaviour.IsInvoking(String)
  fullName: UnityEngine.MonoBehaviour.IsInvoking(System.String)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.IsInvoking(System.String)
    name: IsInvoking
    nameWithType: MonoBehaviour.IsInvoking
    fullName: UnityEngine.MonoBehaviour.IsInvoking
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.IsInvoking(System.String)
    name: IsInvoking
    nameWithType: MonoBehaviour.IsInvoking
    fullName: UnityEngine.MonoBehaviour.IsInvoking
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.MonoBehaviour.StartCoroutine(System.String)
  commentId: M:UnityEngine.MonoBehaviour.StartCoroutine(System.String)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: StartCoroutine(String)
  nameWithType: MonoBehaviour.StartCoroutine(String)
  fullName: UnityEngine.MonoBehaviour.StartCoroutine(System.String)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.StartCoroutine(System.String)
    name: StartCoroutine
    nameWithType: MonoBehaviour.StartCoroutine
    fullName: UnityEngine.MonoBehaviour.StartCoroutine
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.StartCoroutine(System.String)
    name: StartCoroutine
    nameWithType: MonoBehaviour.StartCoroutine
    fullName: UnityEngine.MonoBehaviour.StartCoroutine
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
  commentId: M:UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: StartCoroutine(String, Object)
  nameWithType: MonoBehaviour.StartCoroutine(String, Object)
  fullName: UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
    name: StartCoroutine
    nameWithType: MonoBehaviour.StartCoroutine
    fullName: UnityEngine.MonoBehaviour.StartCoroutine
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
    name: StartCoroutine
    nameWithType: MonoBehaviour.StartCoroutine
    fullName: UnityEngine.MonoBehaviour.StartCoroutine
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
  commentId: M:UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: StartCoroutine(IEnumerator)
  nameWithType: MonoBehaviour.StartCoroutine(IEnumerator)
  fullName: UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
    name: StartCoroutine
    nameWithType: MonoBehaviour.StartCoroutine
    fullName: UnityEngine.MonoBehaviour.StartCoroutine
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.IEnumerator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
    name: StartCoroutine
    nameWithType: MonoBehaviour.StartCoroutine
    fullName: UnityEngine.MonoBehaviour.StartCoroutine
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.IEnumerator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
  commentId: M:UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: StartCoroutine_Auto(IEnumerator)
  nameWithType: MonoBehaviour.StartCoroutine_Auto(IEnumerator)
  fullName: UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
    name: StartCoroutine_Auto
    nameWithType: MonoBehaviour.StartCoroutine_Auto
    fullName: UnityEngine.MonoBehaviour.StartCoroutine_Auto
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.IEnumerator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
    name: StartCoroutine_Auto
    nameWithType: MonoBehaviour.StartCoroutine_Auto
    fullName: UnityEngine.MonoBehaviour.StartCoroutine_Auto
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.IEnumerator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
  commentId: M:UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: StopCoroutine(IEnumerator)
  nameWithType: MonoBehaviour.StopCoroutine(IEnumerator)
  fullName: UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
    name: StopCoroutine
    nameWithType: MonoBehaviour.StopCoroutine
    fullName: UnityEngine.MonoBehaviour.StopCoroutine
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.IEnumerator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
    name: StopCoroutine
    nameWithType: MonoBehaviour.StopCoroutine
    fullName: UnityEngine.MonoBehaviour.StopCoroutine
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.IEnumerator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
  commentId: M:UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: StopCoroutine(Coroutine)
  nameWithType: MonoBehaviour.StopCoroutine(Coroutine)
  fullName: UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
    name: StopCoroutine
    nameWithType: MonoBehaviour.StopCoroutine
    fullName: UnityEngine.MonoBehaviour.StopCoroutine
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Coroutine
    name: Coroutine
    nameWithType: Coroutine
    fullName: UnityEngine.Coroutine
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
    name: StopCoroutine
    nameWithType: MonoBehaviour.StopCoroutine
    fullName: UnityEngine.MonoBehaviour.StopCoroutine
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Coroutine
    name: Coroutine
    nameWithType: Coroutine
    fullName: UnityEngine.Coroutine
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.MonoBehaviour.StopCoroutine(System.String)
  commentId: M:UnityEngine.MonoBehaviour.StopCoroutine(System.String)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: StopCoroutine(String)
  nameWithType: MonoBehaviour.StopCoroutine(String)
  fullName: UnityEngine.MonoBehaviour.StopCoroutine(System.String)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.StopCoroutine(System.String)
    name: StopCoroutine
    nameWithType: MonoBehaviour.StopCoroutine
    fullName: UnityEngine.MonoBehaviour.StopCoroutine
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.StopCoroutine(System.String)
    name: StopCoroutine
    nameWithType: MonoBehaviour.StopCoroutine
    fullName: UnityEngine.MonoBehaviour.StopCoroutine
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.MonoBehaviour.StopAllCoroutines
  commentId: M:UnityEngine.MonoBehaviour.StopAllCoroutines
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: StopAllCoroutines()
  nameWithType: MonoBehaviour.StopAllCoroutines()
  fullName: UnityEngine.MonoBehaviour.StopAllCoroutines()
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.StopAllCoroutines
    name: StopAllCoroutines
    nameWithType: MonoBehaviour.StopAllCoroutines
    fullName: UnityEngine.MonoBehaviour.StopAllCoroutines
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.StopAllCoroutines
    name: StopAllCoroutines
    nameWithType: MonoBehaviour.StopAllCoroutines
    fullName: UnityEngine.MonoBehaviour.StopAllCoroutines
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.MonoBehaviour.print(System.Object)
  commentId: M:UnityEngine.MonoBehaviour.print(System.Object)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: print(Object)
  nameWithType: MonoBehaviour.print(Object)
  fullName: UnityEngine.MonoBehaviour.print(System.Object)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.print(System.Object)
    name: print
    nameWithType: MonoBehaviour.print
    fullName: UnityEngine.MonoBehaviour.print
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.print(System.Object)
    name: print
    nameWithType: MonoBehaviour.print
    fullName: UnityEngine.MonoBehaviour.print
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.MonoBehaviour.Internal_CancelInvokeAll(UnityEngine.MonoBehaviour)
  commentId: M:UnityEngine.MonoBehaviour.Internal_CancelInvokeAll(UnityEngine.MonoBehaviour)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: Internal_CancelInvokeAll(MonoBehaviour)
  nameWithType: MonoBehaviour.Internal_CancelInvokeAll(MonoBehaviour)
  fullName: UnityEngine.MonoBehaviour.Internal_CancelInvokeAll(UnityEngine.MonoBehaviour)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.Internal_CancelInvokeAll(UnityEngine.MonoBehaviour)
    name: Internal_CancelInvokeAll
    nameWithType: MonoBehaviour.Internal_CancelInvokeAll
    fullName: UnityEngine.MonoBehaviour.Internal_CancelInvokeAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.MonoBehaviour
    name: MonoBehaviour
    nameWithType: MonoBehaviour
    fullName: UnityEngine.MonoBehaviour
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.Internal_CancelInvokeAll(UnityEngine.MonoBehaviour)
    name: Internal_CancelInvokeAll
    nameWithType: MonoBehaviour.Internal_CancelInvokeAll
    fullName: UnityEngine.MonoBehaviour.Internal_CancelInvokeAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.MonoBehaviour
    name: MonoBehaviour
    nameWithType: MonoBehaviour
    fullName: UnityEngine.MonoBehaviour
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.MonoBehaviour.Internal_IsInvokingAll(UnityEngine.MonoBehaviour)
  commentId: M:UnityEngine.MonoBehaviour.Internal_IsInvokingAll(UnityEngine.MonoBehaviour)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: Internal_IsInvokingAll(MonoBehaviour)
  nameWithType: MonoBehaviour.Internal_IsInvokingAll(MonoBehaviour)
  fullName: UnityEngine.MonoBehaviour.Internal_IsInvokingAll(UnityEngine.MonoBehaviour)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.Internal_IsInvokingAll(UnityEngine.MonoBehaviour)
    name: Internal_IsInvokingAll
    nameWithType: MonoBehaviour.Internal_IsInvokingAll
    fullName: UnityEngine.MonoBehaviour.Internal_IsInvokingAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.MonoBehaviour
    name: MonoBehaviour
    nameWithType: MonoBehaviour
    fullName: UnityEngine.MonoBehaviour
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.Internal_IsInvokingAll(UnityEngine.MonoBehaviour)
    name: Internal_IsInvokingAll
    nameWithType: MonoBehaviour.Internal_IsInvokingAll
    fullName: UnityEngine.MonoBehaviour.Internal_IsInvokingAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.MonoBehaviour
    name: MonoBehaviour
    nameWithType: MonoBehaviour
    fullName: UnityEngine.MonoBehaviour
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.MonoBehaviour.InvokeDelayed(UnityEngine.MonoBehaviour,System.String,System.Single,System.Single)
  commentId: M:UnityEngine.MonoBehaviour.InvokeDelayed(UnityEngine.MonoBehaviour,System.String,System.Single,System.Single)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: InvokeDelayed(MonoBehaviour, String, Single, Single)
  nameWithType: MonoBehaviour.InvokeDelayed(MonoBehaviour, String, Single, Single)
  fullName: UnityEngine.MonoBehaviour.InvokeDelayed(UnityEngine.MonoBehaviour, System.String, System.Single, System.Single)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.InvokeDelayed(UnityEngine.MonoBehaviour,System.String,System.Single,System.Single)
    name: InvokeDelayed
    nameWithType: MonoBehaviour.InvokeDelayed
    fullName: UnityEngine.MonoBehaviour.InvokeDelayed
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.MonoBehaviour
    name: MonoBehaviour
    nameWithType: MonoBehaviour
    fullName: UnityEngine.MonoBehaviour
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.InvokeDelayed(UnityEngine.MonoBehaviour,System.String,System.Single,System.Single)
    name: InvokeDelayed
    nameWithType: MonoBehaviour.InvokeDelayed
    fullName: UnityEngine.MonoBehaviour.InvokeDelayed
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.MonoBehaviour
    name: MonoBehaviour
    nameWithType: MonoBehaviour
    fullName: UnityEngine.MonoBehaviour
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.MonoBehaviour.CancelInvoke(UnityEngine.MonoBehaviour,System.String)
  commentId: M:UnityEngine.MonoBehaviour.CancelInvoke(UnityEngine.MonoBehaviour,System.String)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: CancelInvoke(MonoBehaviour, String)
  nameWithType: MonoBehaviour.CancelInvoke(MonoBehaviour, String)
  fullName: UnityEngine.MonoBehaviour.CancelInvoke(UnityEngine.MonoBehaviour, System.String)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.CancelInvoke(UnityEngine.MonoBehaviour,System.String)
    name: CancelInvoke
    nameWithType: MonoBehaviour.CancelInvoke
    fullName: UnityEngine.MonoBehaviour.CancelInvoke
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.MonoBehaviour
    name: MonoBehaviour
    nameWithType: MonoBehaviour
    fullName: UnityEngine.MonoBehaviour
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.CancelInvoke(UnityEngine.MonoBehaviour,System.String)
    name: CancelInvoke
    nameWithType: MonoBehaviour.CancelInvoke
    fullName: UnityEngine.MonoBehaviour.CancelInvoke
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.MonoBehaviour
    name: MonoBehaviour
    nameWithType: MonoBehaviour
    fullName: UnityEngine.MonoBehaviour
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.MonoBehaviour.IsInvoking(UnityEngine.MonoBehaviour,System.String)
  commentId: M:UnityEngine.MonoBehaviour.IsInvoking(UnityEngine.MonoBehaviour,System.String)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: IsInvoking(MonoBehaviour, String)
  nameWithType: MonoBehaviour.IsInvoking(MonoBehaviour, String)
  fullName: UnityEngine.MonoBehaviour.IsInvoking(UnityEngine.MonoBehaviour, System.String)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.IsInvoking(UnityEngine.MonoBehaviour,System.String)
    name: IsInvoking
    nameWithType: MonoBehaviour.IsInvoking
    fullName: UnityEngine.MonoBehaviour.IsInvoking
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.MonoBehaviour
    name: MonoBehaviour
    nameWithType: MonoBehaviour
    fullName: UnityEngine.MonoBehaviour
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.IsInvoking(UnityEngine.MonoBehaviour,System.String)
    name: IsInvoking
    nameWithType: MonoBehaviour.IsInvoking
    fullName: UnityEngine.MonoBehaviour.IsInvoking
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.MonoBehaviour
    name: MonoBehaviour
    nameWithType: MonoBehaviour
    fullName: UnityEngine.MonoBehaviour
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.MonoBehaviour.IsObjectMonoBehaviour(UnityEngine.Object)
  commentId: M:UnityEngine.MonoBehaviour.IsObjectMonoBehaviour(UnityEngine.Object)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: IsObjectMonoBehaviour(Object)
  nameWithType: MonoBehaviour.IsObjectMonoBehaviour(Object)
  fullName: UnityEngine.MonoBehaviour.IsObjectMonoBehaviour(UnityEngine.Object)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.IsObjectMonoBehaviour(UnityEngine.Object)
    name: IsObjectMonoBehaviour
    nameWithType: MonoBehaviour.IsObjectMonoBehaviour
    fullName: UnityEngine.MonoBehaviour.IsObjectMonoBehaviour
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.IsObjectMonoBehaviour(UnityEngine.Object)
    name: IsObjectMonoBehaviour
    nameWithType: MonoBehaviour.IsObjectMonoBehaviour
    fullName: UnityEngine.MonoBehaviour.IsObjectMonoBehaviour
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.MonoBehaviour.StartCoroutineManaged(System.String,System.Object)
  commentId: M:UnityEngine.MonoBehaviour.StartCoroutineManaged(System.String,System.Object)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: StartCoroutineManaged(String, Object)
  nameWithType: MonoBehaviour.StartCoroutineManaged(String, Object)
  fullName: UnityEngine.MonoBehaviour.StartCoroutineManaged(System.String, System.Object)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.StartCoroutineManaged(System.String,System.Object)
    name: StartCoroutineManaged
    nameWithType: MonoBehaviour.StartCoroutineManaged
    fullName: UnityEngine.MonoBehaviour.StartCoroutineManaged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.StartCoroutineManaged(System.String,System.Object)
    name: StartCoroutineManaged
    nameWithType: MonoBehaviour.StartCoroutineManaged
    fullName: UnityEngine.MonoBehaviour.StartCoroutineManaged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.MonoBehaviour.StartCoroutineManaged2(System.Collections.IEnumerator)
  commentId: M:UnityEngine.MonoBehaviour.StartCoroutineManaged2(System.Collections.IEnumerator)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: StartCoroutineManaged2(IEnumerator)
  nameWithType: MonoBehaviour.StartCoroutineManaged2(IEnumerator)
  fullName: UnityEngine.MonoBehaviour.StartCoroutineManaged2(System.Collections.IEnumerator)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.StartCoroutineManaged2(System.Collections.IEnumerator)
    name: StartCoroutineManaged2
    nameWithType: MonoBehaviour.StartCoroutineManaged2
    fullName: UnityEngine.MonoBehaviour.StartCoroutineManaged2
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.IEnumerator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.StartCoroutineManaged2(System.Collections.IEnumerator)
    name: StartCoroutineManaged2
    nameWithType: MonoBehaviour.StartCoroutineManaged2
    fullName: UnityEngine.MonoBehaviour.StartCoroutineManaged2
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.IEnumerator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.MonoBehaviour.StopCoroutineManaged(UnityEngine.Coroutine)
  commentId: M:UnityEngine.MonoBehaviour.StopCoroutineManaged(UnityEngine.Coroutine)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: StopCoroutineManaged(Coroutine)
  nameWithType: MonoBehaviour.StopCoroutineManaged(Coroutine)
  fullName: UnityEngine.MonoBehaviour.StopCoroutineManaged(UnityEngine.Coroutine)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.StopCoroutineManaged(UnityEngine.Coroutine)
    name: StopCoroutineManaged
    nameWithType: MonoBehaviour.StopCoroutineManaged
    fullName: UnityEngine.MonoBehaviour.StopCoroutineManaged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Coroutine
    name: Coroutine
    nameWithType: Coroutine
    fullName: UnityEngine.Coroutine
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.StopCoroutineManaged(UnityEngine.Coroutine)
    name: StopCoroutineManaged
    nameWithType: MonoBehaviour.StopCoroutineManaged
    fullName: UnityEngine.MonoBehaviour.StopCoroutineManaged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Coroutine
    name: Coroutine
    nameWithType: Coroutine
    fullName: UnityEngine.Coroutine
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.MonoBehaviour.StopCoroutineFromEnumeratorManaged(System.Collections.IEnumerator)
  commentId: M:UnityEngine.MonoBehaviour.StopCoroutineFromEnumeratorManaged(System.Collections.IEnumerator)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: StopCoroutineFromEnumeratorManaged(IEnumerator)
  nameWithType: MonoBehaviour.StopCoroutineFromEnumeratorManaged(IEnumerator)
  fullName: UnityEngine.MonoBehaviour.StopCoroutineFromEnumeratorManaged(System.Collections.IEnumerator)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.StopCoroutineFromEnumeratorManaged(System.Collections.IEnumerator)
    name: StopCoroutineFromEnumeratorManaged
    nameWithType: MonoBehaviour.StopCoroutineFromEnumeratorManaged
    fullName: UnityEngine.MonoBehaviour.StopCoroutineFromEnumeratorManaged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.IEnumerator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.StopCoroutineFromEnumeratorManaged(System.Collections.IEnumerator)
    name: StopCoroutineFromEnumeratorManaged
    nameWithType: MonoBehaviour.StopCoroutineFromEnumeratorManaged
    fullName: UnityEngine.MonoBehaviour.StopCoroutineFromEnumeratorManaged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.IEnumerator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.MonoBehaviour.GetScriptClassName
  commentId: M:UnityEngine.MonoBehaviour.GetScriptClassName
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: GetScriptClassName()
  nameWithType: MonoBehaviour.GetScriptClassName()
  fullName: UnityEngine.MonoBehaviour.GetScriptClassName()
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.GetScriptClassName
    name: GetScriptClassName
    nameWithType: MonoBehaviour.GetScriptClassName
    fullName: UnityEngine.MonoBehaviour.GetScriptClassName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.GetScriptClassName
    name: GetScriptClassName
    nameWithType: MonoBehaviour.GetScriptClassName
    fullName: UnityEngine.MonoBehaviour.GetScriptClassName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.MonoBehaviour.useGUILayout
  commentId: P:UnityEngine.MonoBehaviour.useGUILayout
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: useGUILayout
  nameWithType: MonoBehaviour.useGUILayout
  fullName: UnityEngine.MonoBehaviour.useGUILayout
- uid: UnityEngine.Behaviour.enabled
  commentId: P:UnityEngine.Behaviour.enabled
  parent: UnityEngine.Behaviour
  isExternal: true
  name: enabled
  nameWithType: Behaviour.enabled
  fullName: UnityEngine.Behaviour.enabled
- uid: UnityEngine.Behaviour.isActiveAndEnabled
  commentId: P:UnityEngine.Behaviour.isActiveAndEnabled
  parent: UnityEngine.Behaviour
  isExternal: true
  name: isActiveAndEnabled
  nameWithType: Behaviour.isActiveAndEnabled
  fullName: UnityEngine.Behaviour.isActiveAndEnabled
- uid: UnityEngine.Component.GetComponent(System.Type)
  commentId: M:UnityEngine.Component.GetComponent(System.Type)
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponent(Type)
  nameWithType: Component.GetComponent(Type)
  fullName: UnityEngine.Component.GetComponent(System.Type)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponent(System.Type)
    name: GetComponent
    nameWithType: Component.GetComponent
    fullName: UnityEngine.Component.GetComponent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponent(System.Type)
    name: GetComponent
    nameWithType: Component.GetComponent
    fullName: UnityEngine.Component.GetComponent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponentFastPath(System.Type,System.IntPtr)
  commentId: M:UnityEngine.Component.GetComponentFastPath(System.Type,System.IntPtr)
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponentFastPath(Type, IntPtr)
  nameWithType: Component.GetComponentFastPath(Type, IntPtr)
  fullName: UnityEngine.Component.GetComponentFastPath(System.Type, System.IntPtr)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentFastPath(System.Type,System.IntPtr)
    name: GetComponentFastPath
    nameWithType: Component.GetComponentFastPath
    fullName: UnityEngine.Component.GetComponentFastPath
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    nameWithType: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentFastPath(System.Type,System.IntPtr)
    name: GetComponentFastPath
    nameWithType: Component.GetComponentFastPath
    fullName: UnityEngine.Component.GetComponentFastPath
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    nameWithType: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponent``1
  commentId: M:UnityEngine.Component.GetComponent``1
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponent<T>()
  nameWithType: Component.GetComponent<T>()
  fullName: UnityEngine.Component.GetComponent<T>()
  nameWithType.vb: Component.GetComponent(Of T)()
  fullName.vb: UnityEngine.Component.GetComponent(Of T)()
  name.vb: GetComponent(Of T)()
  spec.csharp:
  - uid: UnityEngine.Component.GetComponent``1
    name: GetComponent<T>
    nameWithType: Component.GetComponent<T>
    fullName: UnityEngine.Component.GetComponent<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponent``1
    name: GetComponent(Of T)
    nameWithType: Component.GetComponent(Of T)
    fullName: UnityEngine.Component.GetComponent(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
  commentId: M:UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
  parent: UnityEngine.Component
  isExternal: true
  name: TryGetComponent(Type, Component)
  nameWithType: Component.TryGetComponent(Type, Component)
  fullName: UnityEngine.Component.TryGetComponent(System.Type, UnityEngine.Component)
  spec.csharp:
  - uid: UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
    name: TryGetComponent
    nameWithType: Component.TryGetComponent
    fullName: UnityEngine.Component.TryGetComponent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Component
    name: Component
    nameWithType: Component
    fullName: UnityEngine.Component
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
    name: TryGetComponent
    nameWithType: Component.TryGetComponent
    fullName: UnityEngine.Component.TryGetComponent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Component
    name: Component
    nameWithType: Component
    fullName: UnityEngine.Component
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.TryGetComponent``1({T}@)
  commentId: M:UnityEngine.Component.TryGetComponent``1(``0@)
  parent: UnityEngine.Component
  definition: UnityEngine.Component.TryGetComponent``1(``0@)
  name: TryGetComponent<T>(T)
  nameWithType: Component.TryGetComponent<T>(T)
  fullName: UnityEngine.Component.TryGetComponent<T>(T)
  nameWithType.vb: Component.TryGetComponent(Of T)(T)
  fullName.vb: UnityEngine.Component.TryGetComponent(Of T)(T)
  name.vb: TryGetComponent(Of T)(T)
  spec.csharp:
  - uid: UnityEngine.Component.TryGetComponent``1(``0@)
    name: TryGetComponent<T>
    nameWithType: Component.TryGetComponent<T>
    fullName: UnityEngine.Component.TryGetComponent<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.TryGetComponent``1(``0@)
    name: TryGetComponent(Of T)
    nameWithType: Component.TryGetComponent(Of T)
    fullName: UnityEngine.Component.TryGetComponent(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponent(System.String)
  commentId: M:UnityEngine.Component.GetComponent(System.String)
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponent(String)
  nameWithType: Component.GetComponent(String)
  fullName: UnityEngine.Component.GetComponent(System.String)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponent(System.String)
    name: GetComponent
    nameWithType: Component.GetComponent
    fullName: UnityEngine.Component.GetComponent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponent(System.String)
    name: GetComponent
    nameWithType: Component.GetComponent
    fullName: UnityEngine.Component.GetComponent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
  commentId: M:UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponentInChildren(Type, Boolean)
  nameWithType: Component.GetComponentInChildren(Type, Boolean)
  fullName: UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
    name: GetComponentInChildren
    nameWithType: Component.GetComponentInChildren
    fullName: UnityEngine.Component.GetComponentInChildren
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
    name: GetComponentInChildren
    nameWithType: Component.GetComponentInChildren
    fullName: UnityEngine.Component.GetComponentInChildren
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponentInChildren(System.Type)
  commentId: M:UnityEngine.Component.GetComponentInChildren(System.Type)
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponentInChildren(Type)
  nameWithType: Component.GetComponentInChildren(Type)
  fullName: UnityEngine.Component.GetComponentInChildren(System.Type)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentInChildren(System.Type)
    name: GetComponentInChildren
    nameWithType: Component.GetComponentInChildren
    fullName: UnityEngine.Component.GetComponentInChildren
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentInChildren(System.Type)
    name: GetComponentInChildren
    nameWithType: Component.GetComponentInChildren
    fullName: UnityEngine.Component.GetComponentInChildren
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
  commentId: M:UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponentInChildren<T>(Boolean)
  nameWithType: Component.GetComponentInChildren<T>(Boolean)
  fullName: UnityEngine.Component.GetComponentInChildren<T>(System.Boolean)
  nameWithType.vb: Component.GetComponentInChildren(Of T)(Boolean)
  fullName.vb: UnityEngine.Component.GetComponentInChildren(Of T)(System.Boolean)
  name.vb: GetComponentInChildren(Of T)(Boolean)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
    name: GetComponentInChildren<T>
    nameWithType: Component.GetComponentInChildren<T>
    fullName: UnityEngine.Component.GetComponentInChildren<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
    name: GetComponentInChildren(Of T)
    nameWithType: Component.GetComponentInChildren(Of T)
    fullName: UnityEngine.Component.GetComponentInChildren(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponentInChildren``1
  commentId: M:UnityEngine.Component.GetComponentInChildren``1
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponentInChildren<T>()
  nameWithType: Component.GetComponentInChildren<T>()
  fullName: UnityEngine.Component.GetComponentInChildren<T>()
  nameWithType.vb: Component.GetComponentInChildren(Of T)()
  fullName.vb: UnityEngine.Component.GetComponentInChildren(Of T)()
  name.vb: GetComponentInChildren(Of T)()
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentInChildren``1
    name: GetComponentInChildren<T>
    nameWithType: Component.GetComponentInChildren<T>
    fullName: UnityEngine.Component.GetComponentInChildren<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentInChildren``1
    name: GetComponentInChildren(Of T)
    nameWithType: Component.GetComponentInChildren(Of T)
    fullName: UnityEngine.Component.GetComponentInChildren(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
  commentId: M:UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponentsInChildren(Type, Boolean)
  nameWithType: Component.GetComponentsInChildren(Type, Boolean)
  fullName: UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
    name: GetComponentsInChildren
    nameWithType: Component.GetComponentsInChildren
    fullName: UnityEngine.Component.GetComponentsInChildren
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
    name: GetComponentsInChildren
    nameWithType: Component.GetComponentsInChildren
    fullName: UnityEngine.Component.GetComponentsInChildren
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponentsInChildren(System.Type)
  commentId: M:UnityEngine.Component.GetComponentsInChildren(System.Type)
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponentsInChildren(Type)
  nameWithType: Component.GetComponentsInChildren(Type)
  fullName: UnityEngine.Component.GetComponentsInChildren(System.Type)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInChildren(System.Type)
    name: GetComponentsInChildren
    nameWithType: Component.GetComponentsInChildren
    fullName: UnityEngine.Component.GetComponentsInChildren
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInChildren(System.Type)
    name: GetComponentsInChildren
    nameWithType: Component.GetComponentsInChildren
    fullName: UnityEngine.Component.GetComponentsInChildren
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
  commentId: M:UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponentsInChildren<T>(Boolean)
  nameWithType: Component.GetComponentsInChildren<T>(Boolean)
  fullName: UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean)
  nameWithType.vb: Component.GetComponentsInChildren(Of T)(Boolean)
  fullName.vb: UnityEngine.Component.GetComponentsInChildren(Of T)(System.Boolean)
  name.vb: GetComponentsInChildren(Of T)(Boolean)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
    name: GetComponentsInChildren<T>
    nameWithType: Component.GetComponentsInChildren<T>
    fullName: UnityEngine.Component.GetComponentsInChildren<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
    name: GetComponentsInChildren(Of T)
    nameWithType: Component.GetComponentsInChildren(Of T)
    fullName: UnityEngine.Component.GetComponentsInChildren(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{{T}})
  commentId: M:UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{``0})
  parent: UnityEngine.Component
  definition: UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{``0})
  name: GetComponentsInChildren<T>(Boolean, List<T>)
  nameWithType: Component.GetComponentsInChildren<T>(Boolean, List<T>)
  fullName: UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>)
  nameWithType.vb: Component.GetComponentsInChildren(Of T)(Boolean, List(Of T))
  fullName.vb: UnityEngine.Component.GetComponentsInChildren(Of T)(System.Boolean, System.Collections.Generic.List(Of T))
  name.vb: GetComponentsInChildren(Of T)(Boolean, List(Of T))
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{``0})
    name: GetComponentsInChildren<T>
    nameWithType: Component.GetComponentsInChildren<T>
    fullName: UnityEngine.Component.GetComponentsInChildren<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{``0})
    name: GetComponentsInChildren(Of T)
    nameWithType: Component.GetComponentsInChildren(Of T)
    fullName: UnityEngine.Component.GetComponentsInChildren(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponentsInChildren``1
  commentId: M:UnityEngine.Component.GetComponentsInChildren``1
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponentsInChildren<T>()
  nameWithType: Component.GetComponentsInChildren<T>()
  fullName: UnityEngine.Component.GetComponentsInChildren<T>()
  nameWithType.vb: Component.GetComponentsInChildren(Of T)()
  fullName.vb: UnityEngine.Component.GetComponentsInChildren(Of T)()
  name.vb: GetComponentsInChildren(Of T)()
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInChildren``1
    name: GetComponentsInChildren<T>
    nameWithType: Component.GetComponentsInChildren<T>
    fullName: UnityEngine.Component.GetComponentsInChildren<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInChildren``1
    name: GetComponentsInChildren(Of T)
    nameWithType: Component.GetComponentsInChildren(Of T)
    fullName: UnityEngine.Component.GetComponentsInChildren(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{{T}})
  commentId: M:UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{``0})
  parent: UnityEngine.Component
  definition: UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{``0})
  name: GetComponentsInChildren<T>(List<T>)
  nameWithType: Component.GetComponentsInChildren<T>(List<T>)
  fullName: UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>)
  nameWithType.vb: Component.GetComponentsInChildren(Of T)(List(Of T))
  fullName.vb: UnityEngine.Component.GetComponentsInChildren(Of T)(System.Collections.Generic.List(Of T))
  name.vb: GetComponentsInChildren(Of T)(List(Of T))
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{``0})
    name: GetComponentsInChildren<T>
    nameWithType: Component.GetComponentsInChildren<T>
    fullName: UnityEngine.Component.GetComponentsInChildren<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{``0})
    name: GetComponentsInChildren(Of T)
    nameWithType: Component.GetComponentsInChildren(Of T)
    fullName: UnityEngine.Component.GetComponentsInChildren(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponentInParent(System.Type)
  commentId: M:UnityEngine.Component.GetComponentInParent(System.Type)
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponentInParent(Type)
  nameWithType: Component.GetComponentInParent(Type)
  fullName: UnityEngine.Component.GetComponentInParent(System.Type)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentInParent(System.Type)
    name: GetComponentInParent
    nameWithType: Component.GetComponentInParent
    fullName: UnityEngine.Component.GetComponentInParent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentInParent(System.Type)
    name: GetComponentInParent
    nameWithType: Component.GetComponentInParent
    fullName: UnityEngine.Component.GetComponentInParent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponentInParent``1
  commentId: M:UnityEngine.Component.GetComponentInParent``1
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponentInParent<T>()
  nameWithType: Component.GetComponentInParent<T>()
  fullName: UnityEngine.Component.GetComponentInParent<T>()
  nameWithType.vb: Component.GetComponentInParent(Of T)()
  fullName.vb: UnityEngine.Component.GetComponentInParent(Of T)()
  name.vb: GetComponentInParent(Of T)()
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentInParent``1
    name: GetComponentInParent<T>
    nameWithType: Component.GetComponentInParent<T>
    fullName: UnityEngine.Component.GetComponentInParent<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentInParent``1
    name: GetComponentInParent(Of T)
    nameWithType: Component.GetComponentInParent(Of T)
    fullName: UnityEngine.Component.GetComponentInParent(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
  commentId: M:UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponentsInParent(Type, Boolean)
  nameWithType: Component.GetComponentsInParent(Type, Boolean)
  fullName: UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
    name: GetComponentsInParent
    nameWithType: Component.GetComponentsInParent
    fullName: UnityEngine.Component.GetComponentsInParent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
    name: GetComponentsInParent
    nameWithType: Component.GetComponentsInParent
    fullName: UnityEngine.Component.GetComponentsInParent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponentsInParent(System.Type)
  commentId: M:UnityEngine.Component.GetComponentsInParent(System.Type)
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponentsInParent(Type)
  nameWithType: Component.GetComponentsInParent(Type)
  fullName: UnityEngine.Component.GetComponentsInParent(System.Type)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInParent(System.Type)
    name: GetComponentsInParent
    nameWithType: Component.GetComponentsInParent
    fullName: UnityEngine.Component.GetComponentsInParent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInParent(System.Type)
    name: GetComponentsInParent
    nameWithType: Component.GetComponentsInParent
    fullName: UnityEngine.Component.GetComponentsInParent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
  commentId: M:UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponentsInParent<T>(Boolean)
  nameWithType: Component.GetComponentsInParent<T>(Boolean)
  fullName: UnityEngine.Component.GetComponentsInParent<T>(System.Boolean)
  nameWithType.vb: Component.GetComponentsInParent(Of T)(Boolean)
  fullName.vb: UnityEngine.Component.GetComponentsInParent(Of T)(System.Boolean)
  name.vb: GetComponentsInParent(Of T)(Boolean)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
    name: GetComponentsInParent<T>
    nameWithType: Component.GetComponentsInParent<T>
    fullName: UnityEngine.Component.GetComponentsInParent<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
    name: GetComponentsInParent(Of T)
    nameWithType: Component.GetComponentsInParent(Of T)
    fullName: UnityEngine.Component.GetComponentsInParent(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{{T}})
  commentId: M:UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{``0})
  parent: UnityEngine.Component
  definition: UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{``0})
  name: GetComponentsInParent<T>(Boolean, List<T>)
  nameWithType: Component.GetComponentsInParent<T>(Boolean, List<T>)
  fullName: UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>)
  nameWithType.vb: Component.GetComponentsInParent(Of T)(Boolean, List(Of T))
  fullName.vb: UnityEngine.Component.GetComponentsInParent(Of T)(System.Boolean, System.Collections.Generic.List(Of T))
  name.vb: GetComponentsInParent(Of T)(Boolean, List(Of T))
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{``0})
    name: GetComponentsInParent<T>
    nameWithType: Component.GetComponentsInParent<T>
    fullName: UnityEngine.Component.GetComponentsInParent<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{``0})
    name: GetComponentsInParent(Of T)
    nameWithType: Component.GetComponentsInParent(Of T)
    fullName: UnityEngine.Component.GetComponentsInParent(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponentsInParent``1
  commentId: M:UnityEngine.Component.GetComponentsInParent``1
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponentsInParent<T>()
  nameWithType: Component.GetComponentsInParent<T>()
  fullName: UnityEngine.Component.GetComponentsInParent<T>()
  nameWithType.vb: Component.GetComponentsInParent(Of T)()
  fullName.vb: UnityEngine.Component.GetComponentsInParent(Of T)()
  name.vb: GetComponentsInParent(Of T)()
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInParent``1
    name: GetComponentsInParent<T>
    nameWithType: Component.GetComponentsInParent<T>
    fullName: UnityEngine.Component.GetComponentsInParent<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInParent``1
    name: GetComponentsInParent(Of T)
    nameWithType: Component.GetComponentsInParent(Of T)
    fullName: UnityEngine.Component.GetComponentsInParent(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponents(System.Type)
  commentId: M:UnityEngine.Component.GetComponents(System.Type)
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponents(Type)
  nameWithType: Component.GetComponents(Type)
  fullName: UnityEngine.Component.GetComponents(System.Type)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponents(System.Type)
    name: GetComponents
    nameWithType: Component.GetComponents
    fullName: UnityEngine.Component.GetComponents
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponents(System.Type)
    name: GetComponents
    nameWithType: Component.GetComponents
    fullName: UnityEngine.Component.GetComponents
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponentsForListInternal(System.Type,System.Object)
  commentId: M:UnityEngine.Component.GetComponentsForListInternal(System.Type,System.Object)
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponentsForListInternal(Type, Object)
  nameWithType: Component.GetComponentsForListInternal(Type, Object)
  fullName: UnityEngine.Component.GetComponentsForListInternal(System.Type, System.Object)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsForListInternal(System.Type,System.Object)
    name: GetComponentsForListInternal
    nameWithType: Component.GetComponentsForListInternal
    fullName: UnityEngine.Component.GetComponentsForListInternal
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsForListInternal(System.Type,System.Object)
    name: GetComponentsForListInternal
    nameWithType: Component.GetComponentsForListInternal
    fullName: UnityEngine.Component.GetComponentsForListInternal
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
  commentId: M:UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponents(Type, List<Component>)
  nameWithType: Component.GetComponents(Type, List<Component>)
  fullName: UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>)
  nameWithType.vb: Component.GetComponents(Type, List(Of Component))
  fullName.vb: UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List(Of UnityEngine.Component))
  name.vb: GetComponents(Type, List(Of Component))
  spec.csharp:
  - uid: UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
    name: GetComponents
    nameWithType: Component.GetComponents
    fullName: UnityEngine.Component.GetComponents
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: UnityEngine.Component
    name: Component
    nameWithType: Component
    fullName: UnityEngine.Component
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
    name: GetComponents
    nameWithType: Component.GetComponents
    fullName: UnityEngine.Component.GetComponents
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: UnityEngine.Component
    name: Component
    nameWithType: Component
    fullName: UnityEngine.Component
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{{T}})
  commentId: M:UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{``0})
  parent: UnityEngine.Component
  definition: UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{``0})
  name: GetComponents<T>(List<T>)
  nameWithType: Component.GetComponents<T>(List<T>)
  fullName: UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>)
  nameWithType.vb: Component.GetComponents(Of T)(List(Of T))
  fullName.vb: UnityEngine.Component.GetComponents(Of T)(System.Collections.Generic.List(Of T))
  name.vb: GetComponents(Of T)(List(Of T))
  spec.csharp:
  - uid: UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{``0})
    name: GetComponents<T>
    nameWithType: Component.GetComponents<T>
    fullName: UnityEngine.Component.GetComponents<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{``0})
    name: GetComponents(Of T)
    nameWithType: Component.GetComponents(Of T)
    fullName: UnityEngine.Component.GetComponents(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponents``1
  commentId: M:UnityEngine.Component.GetComponents``1
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponents<T>()
  nameWithType: Component.GetComponents<T>()
  fullName: UnityEngine.Component.GetComponents<T>()
  nameWithType.vb: Component.GetComponents(Of T)()
  fullName.vb: UnityEngine.Component.GetComponents(Of T)()
  name.vb: GetComponents(Of T)()
  spec.csharp:
  - uid: UnityEngine.Component.GetComponents``1
    name: GetComponents<T>
    nameWithType: Component.GetComponents<T>
    fullName: UnityEngine.Component.GetComponents<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponents``1
    name: GetComponents(Of T)
    nameWithType: Component.GetComponents(Of T)
    fullName: UnityEngine.Component.GetComponents(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.CompareTag(System.String)
  commentId: M:UnityEngine.Component.CompareTag(System.String)
  parent: UnityEngine.Component
  isExternal: true
  name: CompareTag(String)
  nameWithType: Component.CompareTag(String)
  fullName: UnityEngine.Component.CompareTag(System.String)
  spec.csharp:
  - uid: UnityEngine.Component.CompareTag(System.String)
    name: CompareTag
    nameWithType: Component.CompareTag
    fullName: UnityEngine.Component.CompareTag
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.CompareTag(System.String)
    name: CompareTag
    nameWithType: Component.CompareTag
    fullName: UnityEngine.Component.CompareTag
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
  commentId: M:UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
  parent: UnityEngine.Component
  isExternal: true
  name: SendMessageUpwards(String, Object, SendMessageOptions)
  nameWithType: Component.SendMessageUpwards(String, Object, SendMessageOptions)
  fullName: UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions)
  spec.csharp:
  - uid: UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
    name: SendMessageUpwards
    nameWithType: Component.SendMessageUpwards
    fullName: UnityEngine.Component.SendMessageUpwards
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.SendMessageOptions
    name: SendMessageOptions
    nameWithType: SendMessageOptions
    fullName: UnityEngine.SendMessageOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
    name: SendMessageUpwards
    nameWithType: Component.SendMessageUpwards
    fullName: UnityEngine.Component.SendMessageUpwards
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.SendMessageOptions
    name: SendMessageOptions
    nameWithType: SendMessageOptions
    fullName: UnityEngine.SendMessageOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
  commentId: M:UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
  parent: UnityEngine.Component
  isExternal: true
  name: SendMessageUpwards(String, Object)
  nameWithType: Component.SendMessageUpwards(String, Object)
  fullName: UnityEngine.Component.SendMessageUpwards(System.String, System.Object)
  spec.csharp:
  - uid: UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
    name: SendMessageUpwards
    nameWithType: Component.SendMessageUpwards
    fullName: UnityEngine.Component.SendMessageUpwards
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
    name: SendMessageUpwards
    nameWithType: Component.SendMessageUpwards
    fullName: UnityEngine.Component.SendMessageUpwards
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.SendMessageUpwards(System.String)
  commentId: M:UnityEngine.Component.SendMessageUpwards(System.String)
  parent: UnityEngine.Component
  isExternal: true
  name: SendMessageUpwards(String)
  nameWithType: Component.SendMessageUpwards(String)
  fullName: UnityEngine.Component.SendMessageUpwards(System.String)
  spec.csharp:
  - uid: UnityEngine.Component.SendMessageUpwards(System.String)
    name: SendMessageUpwards
    nameWithType: Component.SendMessageUpwards
    fullName: UnityEngine.Component.SendMessageUpwards
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.SendMessageUpwards(System.String)
    name: SendMessageUpwards
    nameWithType: Component.SendMessageUpwards
    fullName: UnityEngine.Component.SendMessageUpwards
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
  commentId: M:UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
  parent: UnityEngine.Component
  isExternal: true
  name: SendMessageUpwards(String, SendMessageOptions)
  nameWithType: Component.SendMessageUpwards(String, SendMessageOptions)
  fullName: UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions)
  spec.csharp:
  - uid: UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
    name: SendMessageUpwards
    nameWithType: Component.SendMessageUpwards
    fullName: UnityEngine.Component.SendMessageUpwards
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.SendMessageOptions
    name: SendMessageOptions
    nameWithType: SendMessageOptions
    fullName: UnityEngine.SendMessageOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
    name: SendMessageUpwards
    nameWithType: Component.SendMessageUpwards
    fullName: UnityEngine.Component.SendMessageUpwards
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.SendMessageOptions
    name: SendMessageOptions
    nameWithType: SendMessageOptions
    fullName: UnityEngine.SendMessageOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.SendMessage(System.String,System.Object)
  commentId: M:UnityEngine.Component.SendMessage(System.String,System.Object)
  parent: UnityEngine.Component
  isExternal: true
  name: SendMessage(String, Object)
  nameWithType: Component.SendMessage(String, Object)
  fullName: UnityEngine.Component.SendMessage(System.String, System.Object)
  spec.csharp:
  - uid: UnityEngine.Component.SendMessage(System.String,System.Object)
    name: SendMessage
    nameWithType: Component.SendMessage
    fullName: UnityEngine.Component.SendMessage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.SendMessage(System.String,System.Object)
    name: SendMessage
    nameWithType: Component.SendMessage
    fullName: UnityEngine.Component.SendMessage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.SendMessage(System.String)
  commentId: M:UnityEngine.Component.SendMessage(System.String)
  parent: UnityEngine.Component
  isExternal: true
  name: SendMessage(String)
  nameWithType: Component.SendMessage(String)
  fullName: UnityEngine.Component.SendMessage(System.String)
  spec.csharp:
  - uid: UnityEngine.Component.SendMessage(System.String)
    name: SendMessage
    nameWithType: Component.SendMessage
    fullName: UnityEngine.Component.SendMessage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.SendMessage(System.String)
    name: SendMessage
    nameWithType: Component.SendMessage
    fullName: UnityEngine.Component.SendMessage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
  commentId: M:UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
  parent: UnityEngine.Component
  isExternal: true
  name: SendMessage(String, Object, SendMessageOptions)
  nameWithType: Component.SendMessage(String, Object, SendMessageOptions)
  fullName: UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions)
  spec.csharp:
  - uid: UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    name: SendMessage
    nameWithType: Component.SendMessage
    fullName: UnityEngine.Component.SendMessage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.SendMessageOptions
    name: SendMessageOptions
    nameWithType: SendMessageOptions
    fullName: UnityEngine.SendMessageOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    name: SendMessage
    nameWithType: Component.SendMessage
    fullName: UnityEngine.Component.SendMessage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.SendMessageOptions
    name: SendMessageOptions
    nameWithType: SendMessageOptions
    fullName: UnityEngine.SendMessageOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
  commentId: M:UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
  parent: UnityEngine.Component
  isExternal: true
  name: SendMessage(String, SendMessageOptions)
  nameWithType: Component.SendMessage(String, SendMessageOptions)
  fullName: UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions)
  spec.csharp:
  - uid: UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
    name: SendMessage
    nameWithType: Component.SendMessage
    fullName: UnityEngine.Component.SendMessage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.SendMessageOptions
    name: SendMessageOptions
    nameWithType: SendMessageOptions
    fullName: UnityEngine.SendMessageOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
    name: SendMessage
    nameWithType: Component.SendMessage
    fullName: UnityEngine.Component.SendMessage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.SendMessageOptions
    name: SendMessageOptions
    nameWithType: SendMessageOptions
    fullName: UnityEngine.SendMessageOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
  commentId: M:UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
  parent: UnityEngine.Component
  isExternal: true
  name: BroadcastMessage(String, Object, SendMessageOptions)
  nameWithType: Component.BroadcastMessage(String, Object, SendMessageOptions)
  fullName: UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions)
  spec.csharp:
  - uid: UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    name: BroadcastMessage
    nameWithType: Component.BroadcastMessage
    fullName: UnityEngine.Component.BroadcastMessage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.SendMessageOptions
    name: SendMessageOptions
    nameWithType: SendMessageOptions
    fullName: UnityEngine.SendMessageOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    name: BroadcastMessage
    nameWithType: Component.BroadcastMessage
    fullName: UnityEngine.Component.BroadcastMessage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.SendMessageOptions
    name: SendMessageOptions
    nameWithType: SendMessageOptions
    fullName: UnityEngine.SendMessageOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.BroadcastMessage(System.String,System.Object)
  commentId: M:UnityEngine.Component.BroadcastMessage(System.String,System.Object)
  parent: UnityEngine.Component
  isExternal: true
  name: BroadcastMessage(String, Object)
  nameWithType: Component.BroadcastMessage(String, Object)
  fullName: UnityEngine.Component.BroadcastMessage(System.String, System.Object)
  spec.csharp:
  - uid: UnityEngine.Component.BroadcastMessage(System.String,System.Object)
    name: BroadcastMessage
    nameWithType: Component.BroadcastMessage
    fullName: UnityEngine.Component.BroadcastMessage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.BroadcastMessage(System.String,System.Object)
    name: BroadcastMessage
    nameWithType: Component.BroadcastMessage
    fullName: UnityEngine.Component.BroadcastMessage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.BroadcastMessage(System.String)
  commentId: M:UnityEngine.Component.BroadcastMessage(System.String)
  parent: UnityEngine.Component
  isExternal: true
  name: BroadcastMessage(String)
  nameWithType: Component.BroadcastMessage(String)
  fullName: UnityEngine.Component.BroadcastMessage(System.String)
  spec.csharp:
  - uid: UnityEngine.Component.BroadcastMessage(System.String)
    name: BroadcastMessage
    nameWithType: Component.BroadcastMessage
    fullName: UnityEngine.Component.BroadcastMessage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.BroadcastMessage(System.String)
    name: BroadcastMessage
    nameWithType: Component.BroadcastMessage
    fullName: UnityEngine.Component.BroadcastMessage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
  commentId: M:UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
  parent: UnityEngine.Component
  isExternal: true
  name: BroadcastMessage(String, SendMessageOptions)
  nameWithType: Component.BroadcastMessage(String, SendMessageOptions)
  fullName: UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions)
  spec.csharp:
  - uid: UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
    name: BroadcastMessage
    nameWithType: Component.BroadcastMessage
    fullName: UnityEngine.Component.BroadcastMessage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.SendMessageOptions
    name: SendMessageOptions
    nameWithType: SendMessageOptions
    fullName: UnityEngine.SendMessageOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
    name: BroadcastMessage
    nameWithType: Component.BroadcastMessage
    fullName: UnityEngine.Component.BroadcastMessage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.SendMessageOptions
    name: SendMessageOptions
    nameWithType: SendMessageOptions
    fullName: UnityEngine.SendMessageOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.transform
  commentId: P:UnityEngine.Component.transform
  parent: UnityEngine.Component
  isExternal: true
  name: transform
  nameWithType: Component.transform
  fullName: UnityEngine.Component.transform
- uid: UnityEngine.Component.gameObject
  commentId: P:UnityEngine.Component.gameObject
  parent: UnityEngine.Component
  isExternal: true
  name: gameObject
  nameWithType: Component.gameObject
  fullName: UnityEngine.Component.gameObject
- uid: UnityEngine.Component.tag
  commentId: P:UnityEngine.Component.tag
  parent: UnityEngine.Component
  isExternal: true
  name: tag
  nameWithType: Component.tag
  fullName: UnityEngine.Component.tag
- uid: UnityEngine.Object.m_CachedPtr
  commentId: F:UnityEngine.Object.m_CachedPtr
  parent: UnityEngine.Object
  isExternal: true
  name: m_CachedPtr
  nameWithType: Object.m_CachedPtr
  fullName: UnityEngine.Object.m_CachedPtr
- uid: UnityEngine.Object.OffsetOfInstanceIDInCPlusPlusObject
  commentId: F:UnityEngine.Object.OffsetOfInstanceIDInCPlusPlusObject
  parent: UnityEngine.Object
  isExternal: true
  name: OffsetOfInstanceIDInCPlusPlusObject
  nameWithType: Object.OffsetOfInstanceIDInCPlusPlusObject
  fullName: UnityEngine.Object.OffsetOfInstanceIDInCPlusPlusObject
- uid: UnityEngine.Object.objectIsNullMessage
  commentId: F:UnityEngine.Object.objectIsNullMessage
  parent: UnityEngine.Object
  isExternal: true
  name: objectIsNullMessage
  nameWithType: Object.objectIsNullMessage
  fullName: UnityEngine.Object.objectIsNullMessage
- uid: UnityEngine.Object.cloneDestroyedMessage
  commentId: F:UnityEngine.Object.cloneDestroyedMessage
  parent: UnityEngine.Object
  isExternal: true
  name: cloneDestroyedMessage
  nameWithType: Object.cloneDestroyedMessage
  fullName: UnityEngine.Object.cloneDestroyedMessage
- uid: UnityEngine.Object.GetInstanceID
  commentId: M:UnityEngine.Object.GetInstanceID
  parent: UnityEngine.Object
  isExternal: true
  name: GetInstanceID()
  nameWithType: Object.GetInstanceID()
  fullName: UnityEngine.Object.GetInstanceID()
  spec.csharp:
  - uid: UnityEngine.Object.GetInstanceID
    name: GetInstanceID
    nameWithType: Object.GetInstanceID
    fullName: UnityEngine.Object.GetInstanceID
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.GetInstanceID
    name: GetInstanceID
    nameWithType: Object.GetInstanceID
    fullName: UnityEngine.Object.GetInstanceID
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.GetHashCode
  commentId: M:UnityEngine.Object.GetHashCode
  parent: UnityEngine.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: UnityEngine.Object.GetHashCode()
  spec.csharp:
  - uid: UnityEngine.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: UnityEngine.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: UnityEngine.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.Equals(System.Object)
  commentId: M:UnityEngine.Object.Equals(System.Object)
  parent: UnityEngine.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: UnityEngine.Object.Equals(System.Object)
  spec.csharp:
  - uid: UnityEngine.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: UnityEngine.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: UnityEngine.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.CompareBaseObjects(UnityEngine.Object,UnityEngine.Object)
  commentId: M:UnityEngine.Object.CompareBaseObjects(UnityEngine.Object,UnityEngine.Object)
  parent: UnityEngine.Object
  isExternal: true
  name: CompareBaseObjects(Object, Object)
  nameWithType: Object.CompareBaseObjects(Object, Object)
  fullName: UnityEngine.Object.CompareBaseObjects(UnityEngine.Object, UnityEngine.Object)
  spec.csharp:
  - uid: UnityEngine.Object.CompareBaseObjects(UnityEngine.Object,UnityEngine.Object)
    name: CompareBaseObjects
    nameWithType: Object.CompareBaseObjects
    fullName: UnityEngine.Object.CompareBaseObjects
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.CompareBaseObjects(UnityEngine.Object,UnityEngine.Object)
    name: CompareBaseObjects
    nameWithType: Object.CompareBaseObjects
    fullName: UnityEngine.Object.CompareBaseObjects
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.EnsureRunningOnMainThread
  commentId: M:UnityEngine.Object.EnsureRunningOnMainThread
  parent: UnityEngine.Object
  isExternal: true
  name: EnsureRunningOnMainThread()
  nameWithType: Object.EnsureRunningOnMainThread()
  fullName: UnityEngine.Object.EnsureRunningOnMainThread()
  spec.csharp:
  - uid: UnityEngine.Object.EnsureRunningOnMainThread
    name: EnsureRunningOnMainThread
    nameWithType: Object.EnsureRunningOnMainThread
    fullName: UnityEngine.Object.EnsureRunningOnMainThread
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.EnsureRunningOnMainThread
    name: EnsureRunningOnMainThread
    nameWithType: Object.EnsureRunningOnMainThread
    fullName: UnityEngine.Object.EnsureRunningOnMainThread
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.IsNativeObjectAlive(UnityEngine.Object)
  commentId: M:UnityEngine.Object.IsNativeObjectAlive(UnityEngine.Object)
  parent: UnityEngine.Object
  isExternal: true
  name: IsNativeObjectAlive(Object)
  nameWithType: Object.IsNativeObjectAlive(Object)
  fullName: UnityEngine.Object.IsNativeObjectAlive(UnityEngine.Object)
  spec.csharp:
  - uid: UnityEngine.Object.IsNativeObjectAlive(UnityEngine.Object)
    name: IsNativeObjectAlive
    nameWithType: Object.IsNativeObjectAlive
    fullName: UnityEngine.Object.IsNativeObjectAlive
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.IsNativeObjectAlive(UnityEngine.Object)
    name: IsNativeObjectAlive
    nameWithType: Object.IsNativeObjectAlive
    fullName: UnityEngine.Object.IsNativeObjectAlive
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.GetCachedPtr
  commentId: M:UnityEngine.Object.GetCachedPtr
  parent: UnityEngine.Object
  isExternal: true
  name: GetCachedPtr()
  nameWithType: Object.GetCachedPtr()
  fullName: UnityEngine.Object.GetCachedPtr()
  spec.csharp:
  - uid: UnityEngine.Object.GetCachedPtr
    name: GetCachedPtr
    nameWithType: Object.GetCachedPtr
    fullName: UnityEngine.Object.GetCachedPtr
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.GetCachedPtr
    name: GetCachedPtr
    nameWithType: Object.GetCachedPtr
    fullName: UnityEngine.Object.GetCachedPtr
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
  commentId: M:UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
  parent: UnityEngine.Object
  isExternal: true
  name: Instantiate(Object, Vector3, Quaternion)
  nameWithType: Object.Instantiate(Object, Vector3, Quaternion)
  fullName: UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    name: Instantiate
    nameWithType: Object.Instantiate
    fullName: UnityEngine.Object.Instantiate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: UnityEngine.Quaternion
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    name: Instantiate
    nameWithType: Object.Instantiate
    fullName: UnityEngine.Object.Instantiate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: UnityEngine.Quaternion
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  commentId: M:UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  parent: UnityEngine.Object
  isExternal: true
  name: Instantiate(Object, Vector3, Quaternion, Transform)
  nameWithType: Object.Instantiate(Object, Vector3, Quaternion, Transform)
  fullName: UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    name: Instantiate
    nameWithType: Object.Instantiate
    fullName: UnityEngine.Object.Instantiate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: UnityEngine.Quaternion
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Transform
    name: Transform
    nameWithType: Transform
    fullName: UnityEngine.Transform
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    name: Instantiate
    nameWithType: Object.Instantiate
    fullName: UnityEngine.Object.Instantiate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: UnityEngine.Quaternion
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Transform
    name: Transform
    nameWithType: Transform
    fullName: UnityEngine.Transform
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.Instantiate(UnityEngine.Object)
  commentId: M:UnityEngine.Object.Instantiate(UnityEngine.Object)
  parent: UnityEngine.Object
  isExternal: true
  name: Instantiate(Object)
  nameWithType: Object.Instantiate(Object)
  fullName: UnityEngine.Object.Instantiate(UnityEngine.Object)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object)
    name: Instantiate
    nameWithType: Object.Instantiate
    fullName: UnityEngine.Object.Instantiate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object)
    name: Instantiate
    nameWithType: Object.Instantiate
    fullName: UnityEngine.Object.Instantiate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
  commentId: M:UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
  parent: UnityEngine.Object
  isExternal: true
  name: Instantiate(Object, Transform)
  nameWithType: Object.Instantiate(Object, Transform)
  fullName: UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
    name: Instantiate
    nameWithType: Object.Instantiate
    fullName: UnityEngine.Object.Instantiate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Transform
    name: Transform
    nameWithType: Transform
    fullName: UnityEngine.Transform
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
    name: Instantiate
    nameWithType: Object.Instantiate
    fullName: UnityEngine.Object.Instantiate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Transform
    name: Transform
    nameWithType: Transform
    fullName: UnityEngine.Transform
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
  commentId: M:UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
  parent: UnityEngine.Object
  isExternal: true
  name: Instantiate(Object, Transform, Boolean)
  nameWithType: Object.Instantiate(Object, Transform, Boolean)
  fullName: UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    name: Instantiate
    nameWithType: Object.Instantiate
    fullName: UnityEngine.Object.Instantiate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Transform
    name: Transform
    nameWithType: Transform
    fullName: UnityEngine.Transform
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    name: Instantiate
    nameWithType: Object.Instantiate
    fullName: UnityEngine.Object.Instantiate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Transform
    name: Transform
    nameWithType: Transform
    fullName: UnityEngine.Transform
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.Instantiate``1({T})
  commentId: M:UnityEngine.Object.Instantiate``1(``0)
  parent: UnityEngine.Object
  definition: UnityEngine.Object.Instantiate``1(``0)
  name: Instantiate<T>(T)
  nameWithType: Object.Instantiate<T>(T)
  fullName: UnityEngine.Object.Instantiate<T>(T)
  nameWithType.vb: Object.Instantiate(Of T)(T)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T)
  name.vb: Instantiate(Of T)(T)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0)
    name: Instantiate<T>
    nameWithType: Object.Instantiate<T>
    fullName: UnityEngine.Object.Instantiate<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0)
    name: Instantiate(Of T)
    nameWithType: Object.Instantiate(Of T)
    fullName: UnityEngine.Object.Instantiate(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
  parent: UnityEngine.Object
  definition: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
  name: Instantiate<T>(T, Vector3, Quaternion)
  nameWithType: Object.Instantiate<T>(T, Vector3, Quaternion)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion)
  nameWithType.vb: Object.Instantiate(Of T)(T, Vector3, Quaternion)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Vector3, UnityEngine.Quaternion)
  name.vb: Instantiate(Of T)(T, Vector3, Quaternion)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
    name: Instantiate<T>
    nameWithType: Object.Instantiate<T>
    fullName: UnityEngine.Object.Instantiate<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: UnityEngine.Quaternion
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
    name: Instantiate(Of T)
    nameWithType: Object.Instantiate(Of T)
    fullName: UnityEngine.Object.Instantiate(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: UnityEngine.Quaternion
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  parent: UnityEngine.Object
  definition: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  name: Instantiate<T>(T, Vector3, Quaternion, Transform)
  nameWithType: Object.Instantiate<T>(T, Vector3, Quaternion, Transform)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform)
  nameWithType.vb: Object.Instantiate(Of T)(T, Vector3, Quaternion, Transform)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform)
  name.vb: Instantiate(Of T)(T, Vector3, Quaternion, Transform)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    name: Instantiate<T>
    nameWithType: Object.Instantiate<T>
    fullName: UnityEngine.Object.Instantiate<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: UnityEngine.Quaternion
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Transform
    name: Transform
    nameWithType: Transform
    fullName: UnityEngine.Transform
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    name: Instantiate(Of T)
    nameWithType: Object.Instantiate(Of T)
    fullName: UnityEngine.Object.Instantiate(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: UnityEngine.Quaternion
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Transform
    name: Transform
    nameWithType: Transform
    fullName: UnityEngine.Transform
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
  parent: UnityEngine.Object
  definition: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
  name: Instantiate<T>(T, Transform)
  nameWithType: Object.Instantiate<T>(T, Transform)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform)
  nameWithType.vb: Object.Instantiate(Of T)(T, Transform)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Transform)
  name.vb: Instantiate(Of T)(T, Transform)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
    name: Instantiate<T>
    nameWithType: Object.Instantiate<T>
    fullName: UnityEngine.Object.Instantiate<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Transform
    name: Transform
    nameWithType: Transform
    fullName: UnityEngine.Transform
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
    name: Instantiate(Of T)
    nameWithType: Object.Instantiate(Of T)
    fullName: UnityEngine.Object.Instantiate(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Transform
    name: Transform
    nameWithType: Transform
    fullName: UnityEngine.Transform
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
  parent: UnityEngine.Object
  definition: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
  name: Instantiate<T>(T, Transform, Boolean)
  nameWithType: Object.Instantiate<T>(T, Transform, Boolean)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, System.Boolean)
  nameWithType.vb: Object.Instantiate(Of T)(T, Transform, Boolean)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Transform, System.Boolean)
  name.vb: Instantiate(Of T)(T, Transform, Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
    name: Instantiate<T>
    nameWithType: Object.Instantiate<T>
    fullName: UnityEngine.Object.Instantiate<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Transform
    name: Transform
    nameWithType: Transform
    fullName: UnityEngine.Transform
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
    name: Instantiate(Of T)
    nameWithType: Object.Instantiate(Of T)
    fullName: UnityEngine.Object.Instantiate(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Transform
    name: Transform
    nameWithType: Transform
    fullName: UnityEngine.Transform
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
  commentId: M:UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
  parent: UnityEngine.Object
  isExternal: true
  name: Destroy(Object, Single)
  nameWithType: Object.Destroy(Object, Single)
  fullName: UnityEngine.Object.Destroy(UnityEngine.Object, System.Single)
  spec.csharp:
  - uid: UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
    name: Destroy
    nameWithType: Object.Destroy
    fullName: UnityEngine.Object.Destroy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
    name: Destroy
    nameWithType: Object.Destroy
    fullName: UnityEngine.Object.Destroy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.Destroy(UnityEngine.Object)
  commentId: M:UnityEngine.Object.Destroy(UnityEngine.Object)
  parent: UnityEngine.Object
  isExternal: true
  name: Destroy(Object)
  nameWithType: Object.Destroy(Object)
  fullName: UnityEngine.Object.Destroy(UnityEngine.Object)
  spec.csharp:
  - uid: UnityEngine.Object.Destroy(UnityEngine.Object)
    name: Destroy
    nameWithType: Object.Destroy
    fullName: UnityEngine.Object.Destroy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.Destroy(UnityEngine.Object)
    name: Destroy
    nameWithType: Object.Destroy
    fullName: UnityEngine.Object.Destroy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
  commentId: M:UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
  parent: UnityEngine.Object
  isExternal: true
  name: DestroyImmediate(Object, Boolean)
  nameWithType: Object.DestroyImmediate(Object, Boolean)
  fullName: UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
    name: DestroyImmediate
    nameWithType: Object.DestroyImmediate
    fullName: UnityEngine.Object.DestroyImmediate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
    name: DestroyImmediate
    nameWithType: Object.DestroyImmediate
    fullName: UnityEngine.Object.DestroyImmediate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
  commentId: M:UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
  parent: UnityEngine.Object
  isExternal: true
  name: DestroyImmediate(Object)
  nameWithType: Object.DestroyImmediate(Object)
  fullName: UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
  spec.csharp:
  - uid: UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
    name: DestroyImmediate
    nameWithType: Object.DestroyImmediate
    fullName: UnityEngine.Object.DestroyImmediate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
    name: DestroyImmediate
    nameWithType: Object.DestroyImmediate
    fullName: UnityEngine.Object.DestroyImmediate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.FindObjectsOfType(System.Type)
  commentId: M:UnityEngine.Object.FindObjectsOfType(System.Type)
  parent: UnityEngine.Object
  isExternal: true
  name: FindObjectsOfType(Type)
  nameWithType: Object.FindObjectsOfType(Type)
  fullName: UnityEngine.Object.FindObjectsOfType(System.Type)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsOfType(System.Type)
    name: FindObjectsOfType
    nameWithType: Object.FindObjectsOfType
    fullName: UnityEngine.Object.FindObjectsOfType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsOfType(System.Type)
    name: FindObjectsOfType
    nameWithType: Object.FindObjectsOfType
    fullName: UnityEngine.Object.FindObjectsOfType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
  commentId: M:UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
  parent: UnityEngine.Object
  isExternal: true
  name: DontDestroyOnLoad(Object)
  nameWithType: Object.DontDestroyOnLoad(Object)
  fullName: UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
  spec.csharp:
  - uid: UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
    name: DontDestroyOnLoad
    nameWithType: Object.DontDestroyOnLoad
    fullName: UnityEngine.Object.DontDestroyOnLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
    name: DontDestroyOnLoad
    nameWithType: Object.DontDestroyOnLoad
    fullName: UnityEngine.Object.DontDestroyOnLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
  commentId: M:UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
  parent: UnityEngine.Object
  isExternal: true
  name: DestroyObject(Object, Single)
  nameWithType: Object.DestroyObject(Object, Single)
  fullName: UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single)
  spec.csharp:
  - uid: UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
    name: DestroyObject
    nameWithType: Object.DestroyObject
    fullName: UnityEngine.Object.DestroyObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
    name: DestroyObject
    nameWithType: Object.DestroyObject
    fullName: UnityEngine.Object.DestroyObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.DestroyObject(UnityEngine.Object)
  commentId: M:UnityEngine.Object.DestroyObject(UnityEngine.Object)
  parent: UnityEngine.Object
  isExternal: true
  name: DestroyObject(Object)
  nameWithType: Object.DestroyObject(Object)
  fullName: UnityEngine.Object.DestroyObject(UnityEngine.Object)
  spec.csharp:
  - uid: UnityEngine.Object.DestroyObject(UnityEngine.Object)
    name: DestroyObject
    nameWithType: Object.DestroyObject
    fullName: UnityEngine.Object.DestroyObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.DestroyObject(UnityEngine.Object)
    name: DestroyObject
    nameWithType: Object.DestroyObject
    fullName: UnityEngine.Object.DestroyObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.FindSceneObjectsOfType(System.Type)
  commentId: M:UnityEngine.Object.FindSceneObjectsOfType(System.Type)
  parent: UnityEngine.Object
  isExternal: true
  name: FindSceneObjectsOfType(Type)
  nameWithType: Object.FindSceneObjectsOfType(Type)
  fullName: UnityEngine.Object.FindSceneObjectsOfType(System.Type)
  spec.csharp:
  - uid: UnityEngine.Object.FindSceneObjectsOfType(System.Type)
    name: FindSceneObjectsOfType
    nameWithType: Object.FindSceneObjectsOfType
    fullName: UnityEngine.Object.FindSceneObjectsOfType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.FindSceneObjectsOfType(System.Type)
    name: FindSceneObjectsOfType
    nameWithType: Object.FindSceneObjectsOfType
    fullName: UnityEngine.Object.FindSceneObjectsOfType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
  commentId: M:UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
  parent: UnityEngine.Object
  isExternal: true
  name: FindObjectsOfTypeIncludingAssets(Type)
  nameWithType: Object.FindObjectsOfTypeIncludingAssets(Type)
  fullName: UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
    name: FindObjectsOfTypeIncludingAssets
    nameWithType: Object.FindObjectsOfTypeIncludingAssets
    fullName: UnityEngine.Object.FindObjectsOfTypeIncludingAssets
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
    name: FindObjectsOfTypeIncludingAssets
    nameWithType: Object.FindObjectsOfTypeIncludingAssets
    fullName: UnityEngine.Object.FindObjectsOfTypeIncludingAssets
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.FindObjectsOfType``1
  commentId: M:UnityEngine.Object.FindObjectsOfType``1
  parent: UnityEngine.Object
  isExternal: true
  name: FindObjectsOfType<T>()
  nameWithType: Object.FindObjectsOfType<T>()
  fullName: UnityEngine.Object.FindObjectsOfType<T>()
  nameWithType.vb: Object.FindObjectsOfType(Of T)()
  fullName.vb: UnityEngine.Object.FindObjectsOfType(Of T)()
  name.vb: FindObjectsOfType(Of T)()
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsOfType``1
    name: FindObjectsOfType<T>
    nameWithType: Object.FindObjectsOfType<T>
    fullName: UnityEngine.Object.FindObjectsOfType<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsOfType``1
    name: FindObjectsOfType(Of T)
    nameWithType: Object.FindObjectsOfType(Of T)
    fullName: UnityEngine.Object.FindObjectsOfType(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.FindObjectOfType``1
  commentId: M:UnityEngine.Object.FindObjectOfType``1
  parent: UnityEngine.Object
  isExternal: true
  name: FindObjectOfType<T>()
  nameWithType: Object.FindObjectOfType<T>()
  fullName: UnityEngine.Object.FindObjectOfType<T>()
  nameWithType.vb: Object.FindObjectOfType(Of T)()
  fullName.vb: UnityEngine.Object.FindObjectOfType(Of T)()
  name.vb: FindObjectOfType(Of T)()
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectOfType``1
    name: FindObjectOfType<T>
    nameWithType: Object.FindObjectOfType<T>
    fullName: UnityEngine.Object.FindObjectOfType<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectOfType``1
    name: FindObjectOfType(Of T)
    nameWithType: Object.FindObjectOfType(Of T)
    fullName: UnityEngine.Object.FindObjectOfType(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
  commentId: M:UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
  parent: UnityEngine.Object
  isExternal: true
  name: FindObjectsOfTypeAll(Type)
  nameWithType: Object.FindObjectsOfTypeAll(Type)
  fullName: UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
    name: FindObjectsOfTypeAll
    nameWithType: Object.FindObjectsOfTypeAll
    fullName: UnityEngine.Object.FindObjectsOfTypeAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
    name: FindObjectsOfTypeAll
    nameWithType: Object.FindObjectsOfTypeAll
    fullName: UnityEngine.Object.FindObjectsOfTypeAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.CheckNullArgument(System.Object,System.String)
  commentId: M:UnityEngine.Object.CheckNullArgument(System.Object,System.String)
  parent: UnityEngine.Object
  isExternal: true
  name: CheckNullArgument(Object, String)
  nameWithType: Object.CheckNullArgument(Object, String)
  fullName: UnityEngine.Object.CheckNullArgument(System.Object, System.String)
  spec.csharp:
  - uid: UnityEngine.Object.CheckNullArgument(System.Object,System.String)
    name: CheckNullArgument
    nameWithType: Object.CheckNullArgument
    fullName: UnityEngine.Object.CheckNullArgument
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.CheckNullArgument(System.Object,System.String)
    name: CheckNullArgument
    nameWithType: Object.CheckNullArgument
    fullName: UnityEngine.Object.CheckNullArgument
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.FindObjectOfType(System.Type)
  commentId: M:UnityEngine.Object.FindObjectOfType(System.Type)
  parent: UnityEngine.Object
  isExternal: true
  name: FindObjectOfType(Type)
  nameWithType: Object.FindObjectOfType(Type)
  fullName: UnityEngine.Object.FindObjectOfType(System.Type)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectOfType(System.Type)
    name: FindObjectOfType
    nameWithType: Object.FindObjectOfType
    fullName: UnityEngine.Object.FindObjectOfType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectOfType(System.Type)
    name: FindObjectOfType
    nameWithType: Object.FindObjectOfType
    fullName: UnityEngine.Object.FindObjectOfType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.ToString
  commentId: M:UnityEngine.Object.ToString
  parent: UnityEngine.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: UnityEngine.Object.ToString()
  spec.csharp:
  - uid: UnityEngine.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: UnityEngine.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: UnityEngine.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.GetOffsetOfInstanceIDInCPlusPlusObject
  commentId: M:UnityEngine.Object.GetOffsetOfInstanceIDInCPlusPlusObject
  parent: UnityEngine.Object
  isExternal: true
  name: GetOffsetOfInstanceIDInCPlusPlusObject()
  nameWithType: Object.GetOffsetOfInstanceIDInCPlusPlusObject()
  fullName: UnityEngine.Object.GetOffsetOfInstanceIDInCPlusPlusObject()
  spec.csharp:
  - uid: UnityEngine.Object.GetOffsetOfInstanceIDInCPlusPlusObject
    name: GetOffsetOfInstanceIDInCPlusPlusObject
    nameWithType: Object.GetOffsetOfInstanceIDInCPlusPlusObject
    fullName: UnityEngine.Object.GetOffsetOfInstanceIDInCPlusPlusObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.GetOffsetOfInstanceIDInCPlusPlusObject
    name: GetOffsetOfInstanceIDInCPlusPlusObject
    nameWithType: Object.GetOffsetOfInstanceIDInCPlusPlusObject
    fullName: UnityEngine.Object.GetOffsetOfInstanceIDInCPlusPlusObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.CurrentThreadIsMainThread
  commentId: M:UnityEngine.Object.CurrentThreadIsMainThread
  parent: UnityEngine.Object
  isExternal: true
  name: CurrentThreadIsMainThread()
  nameWithType: Object.CurrentThreadIsMainThread()
  fullName: UnityEngine.Object.CurrentThreadIsMainThread()
  spec.csharp:
  - uid: UnityEngine.Object.CurrentThreadIsMainThread
    name: CurrentThreadIsMainThread
    nameWithType: Object.CurrentThreadIsMainThread
    fullName: UnityEngine.Object.CurrentThreadIsMainThread
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.CurrentThreadIsMainThread
    name: CurrentThreadIsMainThread
    nameWithType: Object.CurrentThreadIsMainThread
    fullName: UnityEngine.Object.CurrentThreadIsMainThread
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.Internal_CloneSingle(UnityEngine.Object)
  commentId: M:UnityEngine.Object.Internal_CloneSingle(UnityEngine.Object)
  parent: UnityEngine.Object
  isExternal: true
  name: Internal_CloneSingle(Object)
  nameWithType: Object.Internal_CloneSingle(Object)
  fullName: UnityEngine.Object.Internal_CloneSingle(UnityEngine.Object)
  spec.csharp:
  - uid: UnityEngine.Object.Internal_CloneSingle(UnityEngine.Object)
    name: Internal_CloneSingle
    nameWithType: Object.Internal_CloneSingle
    fullName: UnityEngine.Object.Internal_CloneSingle
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.Internal_CloneSingle(UnityEngine.Object)
    name: Internal_CloneSingle
    nameWithType: Object.Internal_CloneSingle
    fullName: UnityEngine.Object.Internal_CloneSingle
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.Internal_CloneSingleWithParent(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
  commentId: M:UnityEngine.Object.Internal_CloneSingleWithParent(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
  parent: UnityEngine.Object
  isExternal: true
  name: Internal_CloneSingleWithParent(Object, Transform, Boolean)
  nameWithType: Object.Internal_CloneSingleWithParent(Object, Transform, Boolean)
  fullName: UnityEngine.Object.Internal_CloneSingleWithParent(UnityEngine.Object, UnityEngine.Transform, System.Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.Internal_CloneSingleWithParent(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    name: Internal_CloneSingleWithParent
    nameWithType: Object.Internal_CloneSingleWithParent
    fullName: UnityEngine.Object.Internal_CloneSingleWithParent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Transform
    name: Transform
    nameWithType: Transform
    fullName: UnityEngine.Transform
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.Internal_CloneSingleWithParent(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    name: Internal_CloneSingleWithParent
    nameWithType: Object.Internal_CloneSingleWithParent
    fullName: UnityEngine.Object.Internal_CloneSingleWithParent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Transform
    name: Transform
    nameWithType: Transform
    fullName: UnityEngine.Transform
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.Internal_InstantiateSingle(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
  commentId: M:UnityEngine.Object.Internal_InstantiateSingle(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
  parent: UnityEngine.Object
  isExternal: true
  name: Internal_InstantiateSingle(Object, Vector3, Quaternion)
  nameWithType: Object.Internal_InstantiateSingle(Object, Vector3, Quaternion)
  fullName: UnityEngine.Object.Internal_InstantiateSingle(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion)
  spec.csharp:
  - uid: UnityEngine.Object.Internal_InstantiateSingle(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    name: Internal_InstantiateSingle
    nameWithType: Object.Internal_InstantiateSingle
    fullName: UnityEngine.Object.Internal_InstantiateSingle
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: UnityEngine.Quaternion
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.Internal_InstantiateSingle(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    name: Internal_InstantiateSingle
    nameWithType: Object.Internal_InstantiateSingle
    fullName: UnityEngine.Object.Internal_InstantiateSingle
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: UnityEngine.Quaternion
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.Internal_InstantiateSingleWithParent(UnityEngine.Object,UnityEngine.Transform,UnityEngine.Vector3,UnityEngine.Quaternion)
  commentId: M:UnityEngine.Object.Internal_InstantiateSingleWithParent(UnityEngine.Object,UnityEngine.Transform,UnityEngine.Vector3,UnityEngine.Quaternion)
  parent: UnityEngine.Object
  isExternal: true
  name: Internal_InstantiateSingleWithParent(Object, Transform, Vector3, Quaternion)
  nameWithType: Object.Internal_InstantiateSingleWithParent(Object, Transform, Vector3, Quaternion)
  fullName: UnityEngine.Object.Internal_InstantiateSingleWithParent(UnityEngine.Object, UnityEngine.Transform, UnityEngine.Vector3, UnityEngine.Quaternion)
  spec.csharp:
  - uid: UnityEngine.Object.Internal_InstantiateSingleWithParent(UnityEngine.Object,UnityEngine.Transform,UnityEngine.Vector3,UnityEngine.Quaternion)
    name: Internal_InstantiateSingleWithParent
    nameWithType: Object.Internal_InstantiateSingleWithParent
    fullName: UnityEngine.Object.Internal_InstantiateSingleWithParent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Transform
    name: Transform
    nameWithType: Transform
    fullName: UnityEngine.Transform
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: UnityEngine.Quaternion
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.Internal_InstantiateSingleWithParent(UnityEngine.Object,UnityEngine.Transform,UnityEngine.Vector3,UnityEngine.Quaternion)
    name: Internal_InstantiateSingleWithParent
    nameWithType: Object.Internal_InstantiateSingleWithParent
    fullName: UnityEngine.Object.Internal_InstantiateSingleWithParent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Transform
    name: Transform
    nameWithType: Transform
    fullName: UnityEngine.Transform
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: UnityEngine.Quaternion
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.ToString(UnityEngine.Object)
  commentId: M:UnityEngine.Object.ToString(UnityEngine.Object)
  parent: UnityEngine.Object
  isExternal: true
  name: ToString(Object)
  nameWithType: Object.ToString(Object)
  fullName: UnityEngine.Object.ToString(UnityEngine.Object)
  spec.csharp:
  - uid: UnityEngine.Object.ToString(UnityEngine.Object)
    name: ToString
    nameWithType: Object.ToString
    fullName: UnityEngine.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.ToString(UnityEngine.Object)
    name: ToString
    nameWithType: Object.ToString
    fullName: UnityEngine.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.GetName(UnityEngine.Object)
  commentId: M:UnityEngine.Object.GetName(UnityEngine.Object)
  parent: UnityEngine.Object
  isExternal: true
  name: GetName(Object)
  nameWithType: Object.GetName(Object)
  fullName: UnityEngine.Object.GetName(UnityEngine.Object)
  spec.csharp:
  - uid: UnityEngine.Object.GetName(UnityEngine.Object)
    name: GetName
    nameWithType: Object.GetName
    fullName: UnityEngine.Object.GetName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.GetName(UnityEngine.Object)
    name: GetName
    nameWithType: Object.GetName
    fullName: UnityEngine.Object.GetName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.IsPersistent(UnityEngine.Object)
  commentId: M:UnityEngine.Object.IsPersistent(UnityEngine.Object)
  parent: UnityEngine.Object
  isExternal: true
  name: IsPersistent(Object)
  nameWithType: Object.IsPersistent(Object)
  fullName: UnityEngine.Object.IsPersistent(UnityEngine.Object)
  spec.csharp:
  - uid: UnityEngine.Object.IsPersistent(UnityEngine.Object)
    name: IsPersistent
    nameWithType: Object.IsPersistent
    fullName: UnityEngine.Object.IsPersistent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.IsPersistent(UnityEngine.Object)
    name: IsPersistent
    nameWithType: Object.IsPersistent
    fullName: UnityEngine.Object.IsPersistent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.SetName(UnityEngine.Object,System.String)
  commentId: M:UnityEngine.Object.SetName(UnityEngine.Object,System.String)
  parent: UnityEngine.Object
  isExternal: true
  name: SetName(Object, String)
  nameWithType: Object.SetName(Object, String)
  fullName: UnityEngine.Object.SetName(UnityEngine.Object, System.String)
  spec.csharp:
  - uid: UnityEngine.Object.SetName(UnityEngine.Object,System.String)
    name: SetName
    nameWithType: Object.SetName
    fullName: UnityEngine.Object.SetName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.SetName(UnityEngine.Object,System.String)
    name: SetName
    nameWithType: Object.SetName
    fullName: UnityEngine.Object.SetName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.DoesObjectWithInstanceIDExist(System.Int32)
  commentId: M:UnityEngine.Object.DoesObjectWithInstanceIDExist(System.Int32)
  parent: UnityEngine.Object
  isExternal: true
  name: DoesObjectWithInstanceIDExist(Int32)
  nameWithType: Object.DoesObjectWithInstanceIDExist(Int32)
  fullName: UnityEngine.Object.DoesObjectWithInstanceIDExist(System.Int32)
  spec.csharp:
  - uid: UnityEngine.Object.DoesObjectWithInstanceIDExist(System.Int32)
    name: DoesObjectWithInstanceIDExist
    nameWithType: Object.DoesObjectWithInstanceIDExist
    fullName: UnityEngine.Object.DoesObjectWithInstanceIDExist
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.DoesObjectWithInstanceIDExist(System.Int32)
    name: DoesObjectWithInstanceIDExist
    nameWithType: Object.DoesObjectWithInstanceIDExist
    fullName: UnityEngine.Object.DoesObjectWithInstanceIDExist
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.FindObjectFromInstanceID(System.Int32)
  commentId: M:UnityEngine.Object.FindObjectFromInstanceID(System.Int32)
  parent: UnityEngine.Object
  isExternal: true
  name: FindObjectFromInstanceID(Int32)
  nameWithType: Object.FindObjectFromInstanceID(Int32)
  fullName: UnityEngine.Object.FindObjectFromInstanceID(System.Int32)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectFromInstanceID(System.Int32)
    name: FindObjectFromInstanceID
    nameWithType: Object.FindObjectFromInstanceID
    fullName: UnityEngine.Object.FindObjectFromInstanceID
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectFromInstanceID(System.Int32)
    name: FindObjectFromInstanceID
    nameWithType: Object.FindObjectFromInstanceID
    fullName: UnityEngine.Object.FindObjectFromInstanceID
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.ForceLoadFromInstanceID(System.Int32)
  commentId: M:UnityEngine.Object.ForceLoadFromInstanceID(System.Int32)
  parent: UnityEngine.Object
  isExternal: true
  name: ForceLoadFromInstanceID(Int32)
  nameWithType: Object.ForceLoadFromInstanceID(Int32)
  fullName: UnityEngine.Object.ForceLoadFromInstanceID(System.Int32)
  spec.csharp:
  - uid: UnityEngine.Object.ForceLoadFromInstanceID(System.Int32)
    name: ForceLoadFromInstanceID
    nameWithType: Object.ForceLoadFromInstanceID
    fullName: UnityEngine.Object.ForceLoadFromInstanceID
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.ForceLoadFromInstanceID(System.Int32)
    name: ForceLoadFromInstanceID
    nameWithType: Object.ForceLoadFromInstanceID
    fullName: UnityEngine.Object.ForceLoadFromInstanceID
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.Internal_InstantiateSingle_Injected(UnityEngine.Object,UnityEngine.Vector3@,UnityEngine.Quaternion@)
  commentId: M:UnityEngine.Object.Internal_InstantiateSingle_Injected(UnityEngine.Object,UnityEngine.Vector3@,UnityEngine.Quaternion@)
  parent: UnityEngine.Object
  isExternal: true
  name: Internal_InstantiateSingle_Injected(Object, Vector3, Quaternion)
  nameWithType: Object.Internal_InstantiateSingle_Injected(Object, Vector3, Quaternion)
  fullName: UnityEngine.Object.Internal_InstantiateSingle_Injected(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion)
  spec.csharp:
  - uid: UnityEngine.Object.Internal_InstantiateSingle_Injected(UnityEngine.Object,UnityEngine.Vector3@,UnityEngine.Quaternion@)
    name: Internal_InstantiateSingle_Injected
    nameWithType: Object.Internal_InstantiateSingle_Injected
    fullName: UnityEngine.Object.Internal_InstantiateSingle_Injected
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: UnityEngine.Quaternion
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.Internal_InstantiateSingle_Injected(UnityEngine.Object,UnityEngine.Vector3@,UnityEngine.Quaternion@)
    name: Internal_InstantiateSingle_Injected
    nameWithType: Object.Internal_InstantiateSingle_Injected
    fullName: UnityEngine.Object.Internal_InstantiateSingle_Injected
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: UnityEngine.Quaternion
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.Internal_InstantiateSingleWithParent_Injected(UnityEngine.Object,UnityEngine.Transform,UnityEngine.Vector3@,UnityEngine.Quaternion@)
  commentId: M:UnityEngine.Object.Internal_InstantiateSingleWithParent_Injected(UnityEngine.Object,UnityEngine.Transform,UnityEngine.Vector3@,UnityEngine.Quaternion@)
  parent: UnityEngine.Object
  isExternal: true
  name: Internal_InstantiateSingleWithParent_Injected(Object, Transform, Vector3, Quaternion)
  nameWithType: Object.Internal_InstantiateSingleWithParent_Injected(Object, Transform, Vector3, Quaternion)
  fullName: UnityEngine.Object.Internal_InstantiateSingleWithParent_Injected(UnityEngine.Object, UnityEngine.Transform, UnityEngine.Vector3, UnityEngine.Quaternion)
  spec.csharp:
  - uid: UnityEngine.Object.Internal_InstantiateSingleWithParent_Injected(UnityEngine.Object,UnityEngine.Transform,UnityEngine.Vector3@,UnityEngine.Quaternion@)
    name: Internal_InstantiateSingleWithParent_Injected
    nameWithType: Object.Internal_InstantiateSingleWithParent_Injected
    fullName: UnityEngine.Object.Internal_InstantiateSingleWithParent_Injected
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Transform
    name: Transform
    nameWithType: Transform
    fullName: UnityEngine.Transform
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: UnityEngine.Quaternion
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.Internal_InstantiateSingleWithParent_Injected(UnityEngine.Object,UnityEngine.Transform,UnityEngine.Vector3@,UnityEngine.Quaternion@)
    name: Internal_InstantiateSingleWithParent_Injected
    nameWithType: Object.Internal_InstantiateSingleWithParent_Injected
    fullName: UnityEngine.Object.Internal_InstantiateSingleWithParent_Injected
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Transform
    name: Transform
    nameWithType: Transform
    fullName: UnityEngine.Transform
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: UnityEngine.Quaternion
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.name
  commentId: P:UnityEngine.Object.name
  parent: UnityEngine.Object
  isExternal: true
  name: name
  nameWithType: Object.name
  fullName: UnityEngine.Object.name
- uid: UnityEngine.Object.hideFlags
  commentId: P:UnityEngine.Object.hideFlags
  parent: UnityEngine.Object
  isExternal: true
  name: hideFlags
  nameWithType: Object.hideFlags
  fullName: UnityEngine.Object.hideFlags
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: DiskCardGame
  commentId: N:DiskCardGame
  isExternal: true
  name: DiskCardGame
  nameWithType: DiskCardGame
  fullName: DiskCardGame
- uid: UnityEngine.Component.TryGetComponent``1(``0@)
  commentId: M:UnityEngine.Component.TryGetComponent``1(``0@)
  isExternal: true
  name: TryGetComponent<T>(T)
  nameWithType: Component.TryGetComponent<T>(T)
  fullName: UnityEngine.Component.TryGetComponent<T>(T)
  nameWithType.vb: Component.TryGetComponent(Of T)(T)
  fullName.vb: UnityEngine.Component.TryGetComponent(Of T)(T)
  name.vb: TryGetComponent(Of T)(T)
  spec.csharp:
  - uid: UnityEngine.Component.TryGetComponent``1(``0@)
    name: TryGetComponent<T>
    nameWithType: Component.TryGetComponent<T>
    fullName: UnityEngine.Component.TryGetComponent<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.TryGetComponent``1(``0@)
    name: TryGetComponent(Of T)
    nameWithType: Component.TryGetComponent(Of T)
    fullName: UnityEngine.Component.TryGetComponent(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{``0})
  commentId: M:UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{``0})
  isExternal: true
  name: GetComponentsInChildren<T>(Boolean, List<T>)
  nameWithType: Component.GetComponentsInChildren<T>(Boolean, List<T>)
  fullName: UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>)
  nameWithType.vb: Component.GetComponentsInChildren(Of T)(Boolean, List(Of T))
  fullName.vb: UnityEngine.Component.GetComponentsInChildren(Of T)(System.Boolean, System.Collections.Generic.List(Of T))
  name.vb: GetComponentsInChildren(Of T)(Boolean, List(Of T))
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{``0})
    name: GetComponentsInChildren<T>
    nameWithType: Component.GetComponentsInChildren<T>
    fullName: UnityEngine.Component.GetComponentsInChildren<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{``0})
    name: GetComponentsInChildren(Of T)
    nameWithType: Component.GetComponentsInChildren(Of T)
    fullName: UnityEngine.Component.GetComponentsInChildren(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{``0})
  commentId: M:UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{``0})
  isExternal: true
  name: GetComponentsInChildren<T>(List<T>)
  nameWithType: Component.GetComponentsInChildren<T>(List<T>)
  fullName: UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>)
  nameWithType.vb: Component.GetComponentsInChildren(Of T)(List(Of T))
  fullName.vb: UnityEngine.Component.GetComponentsInChildren(Of T)(System.Collections.Generic.List(Of T))
  name.vb: GetComponentsInChildren(Of T)(List(Of T))
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{``0})
    name: GetComponentsInChildren<T>
    nameWithType: Component.GetComponentsInChildren<T>
    fullName: UnityEngine.Component.GetComponentsInChildren<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{``0})
    name: GetComponentsInChildren(Of T)
    nameWithType: Component.GetComponentsInChildren(Of T)
    fullName: UnityEngine.Component.GetComponentsInChildren(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{``0})
  commentId: M:UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{``0})
  isExternal: true
  name: GetComponentsInParent<T>(Boolean, List<T>)
  nameWithType: Component.GetComponentsInParent<T>(Boolean, List<T>)
  fullName: UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>)
  nameWithType.vb: Component.GetComponentsInParent(Of T)(Boolean, List(Of T))
  fullName.vb: UnityEngine.Component.GetComponentsInParent(Of T)(System.Boolean, System.Collections.Generic.List(Of T))
  name.vb: GetComponentsInParent(Of T)(Boolean, List(Of T))
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{``0})
    name: GetComponentsInParent<T>
    nameWithType: Component.GetComponentsInParent<T>
    fullName: UnityEngine.Component.GetComponentsInParent<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{``0})
    name: GetComponentsInParent(Of T)
    nameWithType: Component.GetComponentsInParent(Of T)
    fullName: UnityEngine.Component.GetComponentsInParent(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{``0})
  commentId: M:UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{``0})
  isExternal: true
  name: GetComponents<T>(List<T>)
  nameWithType: Component.GetComponents<T>(List<T>)
  fullName: UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>)
  nameWithType.vb: Component.GetComponents(Of T)(List(Of T))
  fullName.vb: UnityEngine.Component.GetComponents(Of T)(System.Collections.Generic.List(Of T))
  name.vb: GetComponents(Of T)(List(Of T))
  spec.csharp:
  - uid: UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{``0})
    name: GetComponents<T>
    nameWithType: Component.GetComponents<T>
    fullName: UnityEngine.Component.GetComponents<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{``0})
    name: GetComponents(Of T)
    nameWithType: Component.GetComponents(Of T)
    fullName: UnityEngine.Component.GetComponents(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.Instantiate``1(``0)
  commentId: M:UnityEngine.Object.Instantiate``1(``0)
  isExternal: true
  name: Instantiate<T>(T)
  nameWithType: Object.Instantiate<T>(T)
  fullName: UnityEngine.Object.Instantiate<T>(T)
  nameWithType.vb: Object.Instantiate(Of T)(T)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T)
  name.vb: Instantiate(Of T)(T)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0)
    name: Instantiate<T>
    nameWithType: Object.Instantiate<T>
    fullName: UnityEngine.Object.Instantiate<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0)
    name: Instantiate(Of T)
    nameWithType: Object.Instantiate(Of T)
    fullName: UnityEngine.Object.Instantiate(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
  isExternal: true
  name: Instantiate<T>(T, Vector3, Quaternion)
  nameWithType: Object.Instantiate<T>(T, Vector3, Quaternion)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion)
  nameWithType.vb: Object.Instantiate(Of T)(T, Vector3, Quaternion)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Vector3, UnityEngine.Quaternion)
  name.vb: Instantiate(Of T)(T, Vector3, Quaternion)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
    name: Instantiate<T>
    nameWithType: Object.Instantiate<T>
    fullName: UnityEngine.Object.Instantiate<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: UnityEngine.Quaternion
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
    name: Instantiate(Of T)
    nameWithType: Object.Instantiate(Of T)
    fullName: UnityEngine.Object.Instantiate(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: UnityEngine.Quaternion
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  isExternal: true
  name: Instantiate<T>(T, Vector3, Quaternion, Transform)
  nameWithType: Object.Instantiate<T>(T, Vector3, Quaternion, Transform)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform)
  nameWithType.vb: Object.Instantiate(Of T)(T, Vector3, Quaternion, Transform)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform)
  name.vb: Instantiate(Of T)(T, Vector3, Quaternion, Transform)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    name: Instantiate<T>
    nameWithType: Object.Instantiate<T>
    fullName: UnityEngine.Object.Instantiate<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: UnityEngine.Quaternion
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Transform
    name: Transform
    nameWithType: Transform
    fullName: UnityEngine.Transform
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    name: Instantiate(Of T)
    nameWithType: Object.Instantiate(Of T)
    fullName: UnityEngine.Object.Instantiate(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: UnityEngine.Quaternion
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Transform
    name: Transform
    nameWithType: Transform
    fullName: UnityEngine.Transform
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
  isExternal: true
  name: Instantiate<T>(T, Transform)
  nameWithType: Object.Instantiate<T>(T, Transform)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform)
  nameWithType.vb: Object.Instantiate(Of T)(T, Transform)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Transform)
  name.vb: Instantiate(Of T)(T, Transform)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
    name: Instantiate<T>
    nameWithType: Object.Instantiate<T>
    fullName: UnityEngine.Object.Instantiate<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Transform
    name: Transform
    nameWithType: Transform
    fullName: UnityEngine.Transform
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
    name: Instantiate(Of T)
    nameWithType: Object.Instantiate(Of T)
    fullName: UnityEngine.Object.Instantiate(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Transform
    name: Transform
    nameWithType: Transform
    fullName: UnityEngine.Transform
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
  isExternal: true
  name: Instantiate<T>(T, Transform, Boolean)
  nameWithType: Object.Instantiate<T>(T, Transform, Boolean)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, System.Boolean)
  nameWithType.vb: Object.Instantiate(Of T)(T, Transform, Boolean)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Transform, System.Boolean)
  name.vb: Instantiate(Of T)(T, Transform, Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
    name: Instantiate<T>
    nameWithType: Object.Instantiate<T>
    fullName: UnityEngine.Object.Instantiate<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Transform
    name: Transform
    nameWithType: Transform
    fullName: UnityEngine.Transform
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
    name: Instantiate(Of T)
    nameWithType: Object.Instantiate(Of T)
    fullName: UnityEngine.Object.Instantiate(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Transform
    name: Transform
    nameWithType: Transform
    fullName: UnityEngine.Transform
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InscryptionAPI.Boons.BoonManager.FullBoon
  commentId: T:InscryptionAPI.Boons.BoonManager.FullBoon
  parent: InscryptionAPI.Boons
  name: BoonManager.FullBoon
  nameWithType: BoonManager.FullBoon
  fullName: InscryptionAPI.Boons.BoonManager.FullBoon
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: InscryptionAPI.Boons.BoonBehaviour.InstanceIndex*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.InstanceIndex
  name: InstanceIndex
  nameWithType: BoonBehaviour.InstanceIndex
  fullName: InscryptionAPI.Boons.BoonBehaviour.InstanceIndex
- uid: InscryptionAPI.Boons.BoonBehaviour.Start*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.Start
  name: Start
  nameWithType: BoonBehaviour.Start
  fullName: InscryptionAPI.Boons.BoonBehaviour.Start
- uid: InscryptionAPI.Boons.BoonBehaviour.OnDestroy*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.OnDestroy
  name: OnDestroy
  nameWithType: BoonBehaviour.OnDestroy
  fullName: InscryptionAPI.Boons.BoonBehaviour.OnDestroy
- uid: InscryptionAPI.Boons.BoonBehaviour.FindInstancesOfType*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.FindInstancesOfType
  name: FindInstancesOfType
  nameWithType: BoonBehaviour.FindInstancesOfType
  fullName: InscryptionAPI.Boons.BoonBehaviour.FindInstancesOfType
- uid: DiskCardGame.BoonData.Type
  commentId: T:DiskCardGame.BoonData.Type
  parent: DiskCardGame
  isExternal: true
  name: BoonData.Type
  nameWithType: BoonData.Type
  fullName: DiskCardGame.BoonData.Type
- uid: List{InscryptionAPI.Boons.BoonBehaviour}
  commentId: '!:List{InscryptionAPI.Boons.BoonBehaviour}'
  definition: List`1
  name: List<BoonBehaviour>
  nameWithType: List<BoonBehaviour>
  fullName: List<InscryptionAPI.Boons.BoonBehaviour>
  nameWithType.vb: List(Of BoonBehaviour)
  fullName.vb: List(Of InscryptionAPI.Boons.BoonBehaviour)
  name.vb: List(Of BoonBehaviour)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InscryptionAPI.Boons.BoonBehaviour
    name: BoonBehaviour
    nameWithType: BoonBehaviour
    fullName: InscryptionAPI.Boons.BoonBehaviour
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InscryptionAPI.Boons.BoonBehaviour
    name: BoonBehaviour
    nameWithType: BoonBehaviour
    fullName: InscryptionAPI.Boons.BoonBehaviour
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: InscryptionAPI.Boons.BoonBehaviour.CountInstancesOfType*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.CountInstancesOfType
  name: CountInstancesOfType
  nameWithType: BoonBehaviour.CountInstancesOfType
  fullName: InscryptionAPI.Boons.BoonBehaviour.CountInstancesOfType
- uid: InscryptionAPI.Boons.BoonBehaviour.AnyInstancesOfType*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.AnyInstancesOfType
  name: AnyInstancesOfType
  nameWithType: BoonBehaviour.AnyInstancesOfType
  fullName: InscryptionAPI.Boons.BoonBehaviour.AnyInstancesOfType
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: InscryptionAPI.Boons.BoonBehaviour.Instances*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.Instances
  name: Instances
  nameWithType: BoonBehaviour.Instances
  fullName: InscryptionAPI.Boons.BoonBehaviour.Instances
- uid: InscryptionAPI.Boons.BoonBehaviour.DestroyAllInstances*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.DestroyAllInstances
  name: DestroyAllInstances
  nameWithType: BoonBehaviour.DestroyAllInstances
  fullName: InscryptionAPI.Boons.BoonBehaviour.DestroyAllInstances
- uid: InscryptionAPI.Boons.BoonBehaviour.EnsureInstancesLoaded*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.EnsureInstancesLoaded
  name: EnsureInstancesLoaded
  nameWithType: BoonBehaviour.EnsureInstancesLoaded
  fullName: InscryptionAPI.Boons.BoonBehaviour.EnsureInstancesLoaded
- uid: InscryptionAPI.Boons.BoonBehaviour.PlayBoonAnimation*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.PlayBoonAnimation
  name: PlayBoonAnimation
  nameWithType: BoonBehaviour.PlayBoonAnimation
  fullName: InscryptionAPI.Boons.BoonBehaviour.PlayBoonAnimation
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToPreBoonActivation*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondToPreBoonActivation
  name: RespondToPreBoonActivation
  nameWithType: BoonBehaviour.RespondToPreBoonActivation
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToPreBoonActivation
- uid: InscryptionAPI.Boons.BoonBehaviour.OnPreBoonActivation*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.OnPreBoonActivation
  name: OnPreBoonActivation
  nameWithType: BoonBehaviour.OnPreBoonActivation
  fullName: InscryptionAPI.Boons.BoonBehaviour.OnPreBoonActivation
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToPostBoonActivation*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondToPostBoonActivation
  name: RespondToPostBoonActivation
  nameWithType: BoonBehaviour.RespondToPostBoonActivation
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToPostBoonActivation
- uid: InscryptionAPI.Boons.BoonBehaviour.OnPostBoonActivation*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.OnPostBoonActivation
  name: OnPostBoonActivation
  nameWithType: BoonBehaviour.OnPostBoonActivation
  fullName: InscryptionAPI.Boons.BoonBehaviour.OnPostBoonActivation
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToPreBattleCleanup*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondToPreBattleCleanup
  name: RespondToPreBattleCleanup
  nameWithType: BoonBehaviour.RespondToPreBattleCleanup
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToPreBattleCleanup
- uid: InscryptionAPI.Boons.BoonBehaviour.OnPreBattleCleanup*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.OnPreBattleCleanup
  name: OnPreBattleCleanup
  nameWithType: BoonBehaviour.OnPreBattleCleanup
  fullName: InscryptionAPI.Boons.BoonBehaviour.OnPreBattleCleanup
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToPostBattleCleanup*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondToPostBattleCleanup
  name: RespondToPostBattleCleanup
  nameWithType: BoonBehaviour.RespondToPostBattleCleanup
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToPostBattleCleanup
- uid: InscryptionAPI.Boons.BoonBehaviour.OnPostBattleCleanup*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.OnPostBattleCleanup
  name: OnPostBattleCleanup
  nameWithType: BoonBehaviour.OnPostBattleCleanup
  fullName: InscryptionAPI.Boons.BoonBehaviour.OnPostBattleCleanup
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToUpkeep*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondToUpkeep
  name: RespondToUpkeep
  nameWithType: BoonBehaviour.RespondToUpkeep
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToUpkeep
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToDrawn*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondToDrawn
  name: RespondToDrawn
  nameWithType: BoonBehaviour.RespondToDrawn
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToDrawn
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardDrawn*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardDrawn
  name: RespondToOtherCardDrawn
  nameWithType: BoonBehaviour.RespondToOtherCardDrawn
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardDrawn
- uid: DiskCardGame.PlayableCard
  commentId: T:DiskCardGame.PlayableCard
  parent: DiskCardGame
  isExternal: true
  name: PlayableCard
  nameWithType: PlayableCard
  fullName: DiskCardGame.PlayableCard
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToPlayFromHand*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondToPlayFromHand
  name: RespondToPlayFromHand
  nameWithType: BoonBehaviour.RespondToPlayFromHand
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToPlayFromHand
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToResolveOnBoard*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondToResolveOnBoard
  name: RespondToResolveOnBoard
  nameWithType: BoonBehaviour.RespondToResolveOnBoard
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToResolveOnBoard
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardResolve*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardResolve
  name: RespondToOtherCardResolve
  nameWithType: BoonBehaviour.RespondToOtherCardResolve
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardResolve
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardAssignedToSlot*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardAssignedToSlot
  name: RespondToOtherCardAssignedToSlot
  nameWithType: BoonBehaviour.RespondToOtherCardAssignedToSlot
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardAssignedToSlot
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToSacrifice*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondToSacrifice
  name: RespondToSacrifice
  nameWithType: BoonBehaviour.RespondToSacrifice
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToSacrifice
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToSlotTargetedForAttack*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondToSlotTargetedForAttack
  name: RespondToSlotTargetedForAttack
  nameWithType: BoonBehaviour.RespondToSlotTargetedForAttack
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToSlotTargetedForAttack
- uid: DiskCardGame.CardSlot
  commentId: T:DiskCardGame.CardSlot
  parent: DiskCardGame
  isExternal: true
  name: CardSlot
  nameWithType: CardSlot
  fullName: DiskCardGame.CardSlot
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToCardGettingAttacked*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondToCardGettingAttacked
  name: RespondToCardGettingAttacked
  nameWithType: BoonBehaviour.RespondToCardGettingAttacked
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToCardGettingAttacked
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToTakeDamage*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondToTakeDamage
  name: RespondToTakeDamage
  nameWithType: BoonBehaviour.RespondToTakeDamage
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToTakeDamage
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToDealDamage*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondToDealDamage
  name: RespondToDealDamage
  nameWithType: BoonBehaviour.RespondToDealDamage
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToDealDamage
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToDealDamageDirectly*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondToDealDamageDirectly
  name: RespondToDealDamageDirectly
  nameWithType: BoonBehaviour.RespondToDealDamageDirectly
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToDealDamageDirectly
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardDealtDamage*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardDealtDamage
  name: RespondToOtherCardDealtDamage
  nameWithType: BoonBehaviour.RespondToOtherCardDealtDamage
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardDealtDamage
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToDie*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondToDie
  name: RespondToDie
  nameWithType: BoonBehaviour.RespondToDie
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToDie
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToPreDeathAnimation*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondToPreDeathAnimation
  name: RespondToPreDeathAnimation
  nameWithType: BoonBehaviour.RespondToPreDeathAnimation
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToPreDeathAnimation
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardPreDeath*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardPreDeath
  name: RespondToOtherCardPreDeath
  nameWithType: BoonBehaviour.RespondToOtherCardPreDeath
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardPreDeath
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardDie*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardDie
  name: RespondToOtherCardDie
  nameWithType: BoonBehaviour.RespondToOtherCardDie
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToOtherCardDie
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToAttackEnded*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondToAttackEnded
  name: RespondToAttackEnded
  nameWithType: BoonBehaviour.RespondToAttackEnded
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToAttackEnded
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToTurnEnd*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondToTurnEnd
  name: RespondToTurnEnd
  nameWithType: BoonBehaviour.RespondToTurnEnd
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToTurnEnd
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondToActivatedAbility*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondToActivatedAbility
  name: RespondToActivatedAbility
  nameWithType: BoonBehaviour.RespondToActivatedAbility
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondToActivatedAbility
- uid: DiskCardGame.Ability
  commentId: T:DiskCardGame.Ability
  parent: DiskCardGame
  isExternal: true
  name: Ability
  nameWithType: Ability
  fullName: DiskCardGame.Ability
- uid: DiskCardGame.TriggerReceiver.RespondsToUpkeep(System.Boolean)
  commentId: M:DiskCardGame.TriggerReceiver.RespondsToUpkeep(System.Boolean)
  parent: DiskCardGame.TriggerReceiver
  isExternal: true
  name: RespondsToUpkeep(Boolean)
  nameWithType: TriggerReceiver.RespondsToUpkeep(Boolean)
  fullName: DiskCardGame.TriggerReceiver.RespondsToUpkeep(System.Boolean)
  spec.csharp:
  - uid: DiskCardGame.TriggerReceiver.RespondsToUpkeep(System.Boolean)
    name: RespondsToUpkeep
    nameWithType: TriggerReceiver.RespondsToUpkeep
    fullName: DiskCardGame.TriggerReceiver.RespondsToUpkeep
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiskCardGame.TriggerReceiver.RespondsToUpkeep(System.Boolean)
    name: RespondsToUpkeep
    nameWithType: TriggerReceiver.RespondsToUpkeep
    fullName: DiskCardGame.TriggerReceiver.RespondsToUpkeep
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToUpkeep*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondsToUpkeep
  name: RespondsToUpkeep
  nameWithType: BoonBehaviour.RespondsToUpkeep
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToUpkeep
- uid: DiskCardGame.TriggerReceiver.RespondsToDrawn
  commentId: M:DiskCardGame.TriggerReceiver.RespondsToDrawn
  parent: DiskCardGame.TriggerReceiver
  isExternal: true
  name: RespondsToDrawn()
  nameWithType: TriggerReceiver.RespondsToDrawn()
  fullName: DiskCardGame.TriggerReceiver.RespondsToDrawn()
  spec.csharp:
  - uid: DiskCardGame.TriggerReceiver.RespondsToDrawn
    name: RespondsToDrawn
    nameWithType: TriggerReceiver.RespondsToDrawn
    fullName: DiskCardGame.TriggerReceiver.RespondsToDrawn
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiskCardGame.TriggerReceiver.RespondsToDrawn
    name: RespondsToDrawn
    nameWithType: TriggerReceiver.RespondsToDrawn
    fullName: DiskCardGame.TriggerReceiver.RespondsToDrawn
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToDrawn*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondsToDrawn
  name: RespondsToDrawn
  nameWithType: BoonBehaviour.RespondsToDrawn
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToDrawn
- uid: DiskCardGame.TriggerReceiver.RespondsToOtherCardDrawn(DiskCardGame.PlayableCard)
  commentId: M:DiskCardGame.TriggerReceiver.RespondsToOtherCardDrawn(DiskCardGame.PlayableCard)
  parent: DiskCardGame.TriggerReceiver
  isExternal: true
  name: RespondsToOtherCardDrawn(PlayableCard)
  nameWithType: TriggerReceiver.RespondsToOtherCardDrawn(PlayableCard)
  fullName: DiskCardGame.TriggerReceiver.RespondsToOtherCardDrawn(DiskCardGame.PlayableCard)
  spec.csharp:
  - uid: DiskCardGame.TriggerReceiver.RespondsToOtherCardDrawn(DiskCardGame.PlayableCard)
    name: RespondsToOtherCardDrawn
    nameWithType: TriggerReceiver.RespondsToOtherCardDrawn
    fullName: DiskCardGame.TriggerReceiver.RespondsToOtherCardDrawn
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DiskCardGame.PlayableCard
    name: PlayableCard
    nameWithType: PlayableCard
    fullName: DiskCardGame.PlayableCard
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiskCardGame.TriggerReceiver.RespondsToOtherCardDrawn(DiskCardGame.PlayableCard)
    name: RespondsToOtherCardDrawn
    nameWithType: TriggerReceiver.RespondsToOtherCardDrawn
    fullName: DiskCardGame.TriggerReceiver.RespondsToOtherCardDrawn
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DiskCardGame.PlayableCard
    name: PlayableCard
    nameWithType: PlayableCard
    fullName: DiskCardGame.PlayableCard
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardDrawn*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardDrawn
  name: RespondsToOtherCardDrawn
  nameWithType: BoonBehaviour.RespondsToOtherCardDrawn
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardDrawn
- uid: DiskCardGame.TriggerReceiver.RespondsToPlayFromHand
  commentId: M:DiskCardGame.TriggerReceiver.RespondsToPlayFromHand
  parent: DiskCardGame.TriggerReceiver
  isExternal: true
  name: RespondsToPlayFromHand()
  nameWithType: TriggerReceiver.RespondsToPlayFromHand()
  fullName: DiskCardGame.TriggerReceiver.RespondsToPlayFromHand()
  spec.csharp:
  - uid: DiskCardGame.TriggerReceiver.RespondsToPlayFromHand
    name: RespondsToPlayFromHand
    nameWithType: TriggerReceiver.RespondsToPlayFromHand
    fullName: DiskCardGame.TriggerReceiver.RespondsToPlayFromHand
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiskCardGame.TriggerReceiver.RespondsToPlayFromHand
    name: RespondsToPlayFromHand
    nameWithType: TriggerReceiver.RespondsToPlayFromHand
    fullName: DiskCardGame.TriggerReceiver.RespondsToPlayFromHand
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToPlayFromHand*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondsToPlayFromHand
  name: RespondsToPlayFromHand
  nameWithType: BoonBehaviour.RespondsToPlayFromHand
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToPlayFromHand
- uid: DiskCardGame.TriggerReceiver.RespondsToResolveOnBoard
  commentId: M:DiskCardGame.TriggerReceiver.RespondsToResolveOnBoard
  parent: DiskCardGame.TriggerReceiver
  isExternal: true
  name: RespondsToResolveOnBoard()
  nameWithType: TriggerReceiver.RespondsToResolveOnBoard()
  fullName: DiskCardGame.TriggerReceiver.RespondsToResolveOnBoard()
  spec.csharp:
  - uid: DiskCardGame.TriggerReceiver.RespondsToResolveOnBoard
    name: RespondsToResolveOnBoard
    nameWithType: TriggerReceiver.RespondsToResolveOnBoard
    fullName: DiskCardGame.TriggerReceiver.RespondsToResolveOnBoard
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiskCardGame.TriggerReceiver.RespondsToResolveOnBoard
    name: RespondsToResolveOnBoard
    nameWithType: TriggerReceiver.RespondsToResolveOnBoard
    fullName: DiskCardGame.TriggerReceiver.RespondsToResolveOnBoard
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToResolveOnBoard*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondsToResolveOnBoard
  name: RespondsToResolveOnBoard
  nameWithType: BoonBehaviour.RespondsToResolveOnBoard
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToResolveOnBoard
- uid: DiskCardGame.TriggerReceiver.RespondsToOtherCardResolve(DiskCardGame.PlayableCard)
  commentId: M:DiskCardGame.TriggerReceiver.RespondsToOtherCardResolve(DiskCardGame.PlayableCard)
  parent: DiskCardGame.TriggerReceiver
  isExternal: true
  name: RespondsToOtherCardResolve(PlayableCard)
  nameWithType: TriggerReceiver.RespondsToOtherCardResolve(PlayableCard)
  fullName: DiskCardGame.TriggerReceiver.RespondsToOtherCardResolve(DiskCardGame.PlayableCard)
  spec.csharp:
  - uid: DiskCardGame.TriggerReceiver.RespondsToOtherCardResolve(DiskCardGame.PlayableCard)
    name: RespondsToOtherCardResolve
    nameWithType: TriggerReceiver.RespondsToOtherCardResolve
    fullName: DiskCardGame.TriggerReceiver.RespondsToOtherCardResolve
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DiskCardGame.PlayableCard
    name: PlayableCard
    nameWithType: PlayableCard
    fullName: DiskCardGame.PlayableCard
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiskCardGame.TriggerReceiver.RespondsToOtherCardResolve(DiskCardGame.PlayableCard)
    name: RespondsToOtherCardResolve
    nameWithType: TriggerReceiver.RespondsToOtherCardResolve
    fullName: DiskCardGame.TriggerReceiver.RespondsToOtherCardResolve
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DiskCardGame.PlayableCard
    name: PlayableCard
    nameWithType: PlayableCard
    fullName: DiskCardGame.PlayableCard
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardResolve*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardResolve
  name: RespondsToOtherCardResolve
  nameWithType: BoonBehaviour.RespondsToOtherCardResolve
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardResolve
- uid: DiskCardGame.TriggerReceiver.RespondsToOtherCardAssignedToSlot(DiskCardGame.PlayableCard)
  commentId: M:DiskCardGame.TriggerReceiver.RespondsToOtherCardAssignedToSlot(DiskCardGame.PlayableCard)
  parent: DiskCardGame.TriggerReceiver
  isExternal: true
  name: RespondsToOtherCardAssignedToSlot(PlayableCard)
  nameWithType: TriggerReceiver.RespondsToOtherCardAssignedToSlot(PlayableCard)
  fullName: DiskCardGame.TriggerReceiver.RespondsToOtherCardAssignedToSlot(DiskCardGame.PlayableCard)
  spec.csharp:
  - uid: DiskCardGame.TriggerReceiver.RespondsToOtherCardAssignedToSlot(DiskCardGame.PlayableCard)
    name: RespondsToOtherCardAssignedToSlot
    nameWithType: TriggerReceiver.RespondsToOtherCardAssignedToSlot
    fullName: DiskCardGame.TriggerReceiver.RespondsToOtherCardAssignedToSlot
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DiskCardGame.PlayableCard
    name: PlayableCard
    nameWithType: PlayableCard
    fullName: DiskCardGame.PlayableCard
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiskCardGame.TriggerReceiver.RespondsToOtherCardAssignedToSlot(DiskCardGame.PlayableCard)
    name: RespondsToOtherCardAssignedToSlot
    nameWithType: TriggerReceiver.RespondsToOtherCardAssignedToSlot
    fullName: DiskCardGame.TriggerReceiver.RespondsToOtherCardAssignedToSlot
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DiskCardGame.PlayableCard
    name: PlayableCard
    nameWithType: PlayableCard
    fullName: DiskCardGame.PlayableCard
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardAssignedToSlot*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardAssignedToSlot
  name: RespondsToOtherCardAssignedToSlot
  nameWithType: BoonBehaviour.RespondsToOtherCardAssignedToSlot
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardAssignedToSlot
- uid: DiskCardGame.TriggerReceiver.RespondsToSacrifice
  commentId: M:DiskCardGame.TriggerReceiver.RespondsToSacrifice
  parent: DiskCardGame.TriggerReceiver
  isExternal: true
  name: RespondsToSacrifice()
  nameWithType: TriggerReceiver.RespondsToSacrifice()
  fullName: DiskCardGame.TriggerReceiver.RespondsToSacrifice()
  spec.csharp:
  - uid: DiskCardGame.TriggerReceiver.RespondsToSacrifice
    name: RespondsToSacrifice
    nameWithType: TriggerReceiver.RespondsToSacrifice
    fullName: DiskCardGame.TriggerReceiver.RespondsToSacrifice
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiskCardGame.TriggerReceiver.RespondsToSacrifice
    name: RespondsToSacrifice
    nameWithType: TriggerReceiver.RespondsToSacrifice
    fullName: DiskCardGame.TriggerReceiver.RespondsToSacrifice
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToSacrifice*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondsToSacrifice
  name: RespondsToSacrifice
  nameWithType: BoonBehaviour.RespondsToSacrifice
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToSacrifice
- uid: DiskCardGame.TriggerReceiver.RespondsToSlotTargetedForAttack(DiskCardGame.CardSlot,DiskCardGame.PlayableCard)
  commentId: M:DiskCardGame.TriggerReceiver.RespondsToSlotTargetedForAttack(DiskCardGame.CardSlot,DiskCardGame.PlayableCard)
  parent: DiskCardGame.TriggerReceiver
  isExternal: true
  name: RespondsToSlotTargetedForAttack(CardSlot, PlayableCard)
  nameWithType: TriggerReceiver.RespondsToSlotTargetedForAttack(CardSlot, PlayableCard)
  fullName: DiskCardGame.TriggerReceiver.RespondsToSlotTargetedForAttack(DiskCardGame.CardSlot, DiskCardGame.PlayableCard)
  spec.csharp:
  - uid: DiskCardGame.TriggerReceiver.RespondsToSlotTargetedForAttack(DiskCardGame.CardSlot,DiskCardGame.PlayableCard)
    name: RespondsToSlotTargetedForAttack
    nameWithType: TriggerReceiver.RespondsToSlotTargetedForAttack
    fullName: DiskCardGame.TriggerReceiver.RespondsToSlotTargetedForAttack
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DiskCardGame.CardSlot
    name: CardSlot
    nameWithType: CardSlot
    fullName: DiskCardGame.CardSlot
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DiskCardGame.PlayableCard
    name: PlayableCard
    nameWithType: PlayableCard
    fullName: DiskCardGame.PlayableCard
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiskCardGame.TriggerReceiver.RespondsToSlotTargetedForAttack(DiskCardGame.CardSlot,DiskCardGame.PlayableCard)
    name: RespondsToSlotTargetedForAttack
    nameWithType: TriggerReceiver.RespondsToSlotTargetedForAttack
    fullName: DiskCardGame.TriggerReceiver.RespondsToSlotTargetedForAttack
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DiskCardGame.CardSlot
    name: CardSlot
    nameWithType: CardSlot
    fullName: DiskCardGame.CardSlot
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DiskCardGame.PlayableCard
    name: PlayableCard
    nameWithType: PlayableCard
    fullName: DiskCardGame.PlayableCard
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToSlotTargetedForAttack*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondsToSlotTargetedForAttack
  name: RespondsToSlotTargetedForAttack
  nameWithType: BoonBehaviour.RespondsToSlotTargetedForAttack
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToSlotTargetedForAttack
- uid: DiskCardGame.TriggerReceiver.RespondsToCardGettingAttacked(DiskCardGame.PlayableCard)
  commentId: M:DiskCardGame.TriggerReceiver.RespondsToCardGettingAttacked(DiskCardGame.PlayableCard)
  parent: DiskCardGame.TriggerReceiver
  isExternal: true
  name: RespondsToCardGettingAttacked(PlayableCard)
  nameWithType: TriggerReceiver.RespondsToCardGettingAttacked(PlayableCard)
  fullName: DiskCardGame.TriggerReceiver.RespondsToCardGettingAttacked(DiskCardGame.PlayableCard)
  spec.csharp:
  - uid: DiskCardGame.TriggerReceiver.RespondsToCardGettingAttacked(DiskCardGame.PlayableCard)
    name: RespondsToCardGettingAttacked
    nameWithType: TriggerReceiver.RespondsToCardGettingAttacked
    fullName: DiskCardGame.TriggerReceiver.RespondsToCardGettingAttacked
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DiskCardGame.PlayableCard
    name: PlayableCard
    nameWithType: PlayableCard
    fullName: DiskCardGame.PlayableCard
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiskCardGame.TriggerReceiver.RespondsToCardGettingAttacked(DiskCardGame.PlayableCard)
    name: RespondsToCardGettingAttacked
    nameWithType: TriggerReceiver.RespondsToCardGettingAttacked
    fullName: DiskCardGame.TriggerReceiver.RespondsToCardGettingAttacked
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DiskCardGame.PlayableCard
    name: PlayableCard
    nameWithType: PlayableCard
    fullName: DiskCardGame.PlayableCard
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToCardGettingAttacked*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondsToCardGettingAttacked
  name: RespondsToCardGettingAttacked
  nameWithType: BoonBehaviour.RespondsToCardGettingAttacked
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToCardGettingAttacked
- uid: DiskCardGame.TriggerReceiver.RespondsToTakeDamage(DiskCardGame.PlayableCard)
  commentId: M:DiskCardGame.TriggerReceiver.RespondsToTakeDamage(DiskCardGame.PlayableCard)
  parent: DiskCardGame.TriggerReceiver
  isExternal: true
  name: RespondsToTakeDamage(PlayableCard)
  nameWithType: TriggerReceiver.RespondsToTakeDamage(PlayableCard)
  fullName: DiskCardGame.TriggerReceiver.RespondsToTakeDamage(DiskCardGame.PlayableCard)
  spec.csharp:
  - uid: DiskCardGame.TriggerReceiver.RespondsToTakeDamage(DiskCardGame.PlayableCard)
    name: RespondsToTakeDamage
    nameWithType: TriggerReceiver.RespondsToTakeDamage
    fullName: DiskCardGame.TriggerReceiver.RespondsToTakeDamage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DiskCardGame.PlayableCard
    name: PlayableCard
    nameWithType: PlayableCard
    fullName: DiskCardGame.PlayableCard
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiskCardGame.TriggerReceiver.RespondsToTakeDamage(DiskCardGame.PlayableCard)
    name: RespondsToTakeDamage
    nameWithType: TriggerReceiver.RespondsToTakeDamage
    fullName: DiskCardGame.TriggerReceiver.RespondsToTakeDamage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DiskCardGame.PlayableCard
    name: PlayableCard
    nameWithType: PlayableCard
    fullName: DiskCardGame.PlayableCard
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToTakeDamage*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondsToTakeDamage
  name: RespondsToTakeDamage
  nameWithType: BoonBehaviour.RespondsToTakeDamage
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToTakeDamage
- uid: DiskCardGame.TriggerReceiver.RespondsToDealDamage(System.Int32,DiskCardGame.PlayableCard)
  commentId: M:DiskCardGame.TriggerReceiver.RespondsToDealDamage(System.Int32,DiskCardGame.PlayableCard)
  parent: DiskCardGame.TriggerReceiver
  isExternal: true
  name: RespondsToDealDamage(Int32, PlayableCard)
  nameWithType: TriggerReceiver.RespondsToDealDamage(Int32, PlayableCard)
  fullName: DiskCardGame.TriggerReceiver.RespondsToDealDamage(System.Int32, DiskCardGame.PlayableCard)
  spec.csharp:
  - uid: DiskCardGame.TriggerReceiver.RespondsToDealDamage(System.Int32,DiskCardGame.PlayableCard)
    name: RespondsToDealDamage
    nameWithType: TriggerReceiver.RespondsToDealDamage
    fullName: DiskCardGame.TriggerReceiver.RespondsToDealDamage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DiskCardGame.PlayableCard
    name: PlayableCard
    nameWithType: PlayableCard
    fullName: DiskCardGame.PlayableCard
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiskCardGame.TriggerReceiver.RespondsToDealDamage(System.Int32,DiskCardGame.PlayableCard)
    name: RespondsToDealDamage
    nameWithType: TriggerReceiver.RespondsToDealDamage
    fullName: DiskCardGame.TriggerReceiver.RespondsToDealDamage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DiskCardGame.PlayableCard
    name: PlayableCard
    nameWithType: PlayableCard
    fullName: DiskCardGame.PlayableCard
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToDealDamage*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondsToDealDamage
  name: RespondsToDealDamage
  nameWithType: BoonBehaviour.RespondsToDealDamage
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToDealDamage
- uid: DiskCardGame.TriggerReceiver.RespondsToDealDamageDirectly(System.Int32)
  commentId: M:DiskCardGame.TriggerReceiver.RespondsToDealDamageDirectly(System.Int32)
  parent: DiskCardGame.TriggerReceiver
  isExternal: true
  name: RespondsToDealDamageDirectly(Int32)
  nameWithType: TriggerReceiver.RespondsToDealDamageDirectly(Int32)
  fullName: DiskCardGame.TriggerReceiver.RespondsToDealDamageDirectly(System.Int32)
  spec.csharp:
  - uid: DiskCardGame.TriggerReceiver.RespondsToDealDamageDirectly(System.Int32)
    name: RespondsToDealDamageDirectly
    nameWithType: TriggerReceiver.RespondsToDealDamageDirectly
    fullName: DiskCardGame.TriggerReceiver.RespondsToDealDamageDirectly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiskCardGame.TriggerReceiver.RespondsToDealDamageDirectly(System.Int32)
    name: RespondsToDealDamageDirectly
    nameWithType: TriggerReceiver.RespondsToDealDamageDirectly
    fullName: DiskCardGame.TriggerReceiver.RespondsToDealDamageDirectly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToDealDamageDirectly*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondsToDealDamageDirectly
  name: RespondsToDealDamageDirectly
  nameWithType: BoonBehaviour.RespondsToDealDamageDirectly
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToDealDamageDirectly
- uid: DiskCardGame.TriggerReceiver.RespondsToOtherCardDealtDamage(DiskCardGame.PlayableCard,System.Int32,DiskCardGame.PlayableCard)
  commentId: M:DiskCardGame.TriggerReceiver.RespondsToOtherCardDealtDamage(DiskCardGame.PlayableCard,System.Int32,DiskCardGame.PlayableCard)
  parent: DiskCardGame.TriggerReceiver
  isExternal: true
  name: RespondsToOtherCardDealtDamage(PlayableCard, Int32, PlayableCard)
  nameWithType: TriggerReceiver.RespondsToOtherCardDealtDamage(PlayableCard, Int32, PlayableCard)
  fullName: DiskCardGame.TriggerReceiver.RespondsToOtherCardDealtDamage(DiskCardGame.PlayableCard, System.Int32, DiskCardGame.PlayableCard)
  spec.csharp:
  - uid: DiskCardGame.TriggerReceiver.RespondsToOtherCardDealtDamage(DiskCardGame.PlayableCard,System.Int32,DiskCardGame.PlayableCard)
    name: RespondsToOtherCardDealtDamage
    nameWithType: TriggerReceiver.RespondsToOtherCardDealtDamage
    fullName: DiskCardGame.TriggerReceiver.RespondsToOtherCardDealtDamage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DiskCardGame.PlayableCard
    name: PlayableCard
    nameWithType: PlayableCard
    fullName: DiskCardGame.PlayableCard
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DiskCardGame.PlayableCard
    name: PlayableCard
    nameWithType: PlayableCard
    fullName: DiskCardGame.PlayableCard
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiskCardGame.TriggerReceiver.RespondsToOtherCardDealtDamage(DiskCardGame.PlayableCard,System.Int32,DiskCardGame.PlayableCard)
    name: RespondsToOtherCardDealtDamage
    nameWithType: TriggerReceiver.RespondsToOtherCardDealtDamage
    fullName: DiskCardGame.TriggerReceiver.RespondsToOtherCardDealtDamage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DiskCardGame.PlayableCard
    name: PlayableCard
    nameWithType: PlayableCard
    fullName: DiskCardGame.PlayableCard
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DiskCardGame.PlayableCard
    name: PlayableCard
    nameWithType: PlayableCard
    fullName: DiskCardGame.PlayableCard
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardDealtDamage*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardDealtDamage
  name: RespondsToOtherCardDealtDamage
  nameWithType: BoonBehaviour.RespondsToOtherCardDealtDamage
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardDealtDamage
- uid: DiskCardGame.TriggerReceiver.RespondsToDie(System.Boolean,DiskCardGame.PlayableCard)
  commentId: M:DiskCardGame.TriggerReceiver.RespondsToDie(System.Boolean,DiskCardGame.PlayableCard)
  parent: DiskCardGame.TriggerReceiver
  isExternal: true
  name: RespondsToDie(Boolean, PlayableCard)
  nameWithType: TriggerReceiver.RespondsToDie(Boolean, PlayableCard)
  fullName: DiskCardGame.TriggerReceiver.RespondsToDie(System.Boolean, DiskCardGame.PlayableCard)
  spec.csharp:
  - uid: DiskCardGame.TriggerReceiver.RespondsToDie(System.Boolean,DiskCardGame.PlayableCard)
    name: RespondsToDie
    nameWithType: TriggerReceiver.RespondsToDie
    fullName: DiskCardGame.TriggerReceiver.RespondsToDie
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DiskCardGame.PlayableCard
    name: PlayableCard
    nameWithType: PlayableCard
    fullName: DiskCardGame.PlayableCard
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiskCardGame.TriggerReceiver.RespondsToDie(System.Boolean,DiskCardGame.PlayableCard)
    name: RespondsToDie
    nameWithType: TriggerReceiver.RespondsToDie
    fullName: DiskCardGame.TriggerReceiver.RespondsToDie
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DiskCardGame.PlayableCard
    name: PlayableCard
    nameWithType: PlayableCard
    fullName: DiskCardGame.PlayableCard
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToDie*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondsToDie
  name: RespondsToDie
  nameWithType: BoonBehaviour.RespondsToDie
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToDie
- uid: DiskCardGame.TriggerReceiver.RespondsToPreDeathAnimation(System.Boolean)
  commentId: M:DiskCardGame.TriggerReceiver.RespondsToPreDeathAnimation(System.Boolean)
  parent: DiskCardGame.TriggerReceiver
  isExternal: true
  name: RespondsToPreDeathAnimation(Boolean)
  nameWithType: TriggerReceiver.RespondsToPreDeathAnimation(Boolean)
  fullName: DiskCardGame.TriggerReceiver.RespondsToPreDeathAnimation(System.Boolean)
  spec.csharp:
  - uid: DiskCardGame.TriggerReceiver.RespondsToPreDeathAnimation(System.Boolean)
    name: RespondsToPreDeathAnimation
    nameWithType: TriggerReceiver.RespondsToPreDeathAnimation
    fullName: DiskCardGame.TriggerReceiver.RespondsToPreDeathAnimation
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiskCardGame.TriggerReceiver.RespondsToPreDeathAnimation(System.Boolean)
    name: RespondsToPreDeathAnimation
    nameWithType: TriggerReceiver.RespondsToPreDeathAnimation
    fullName: DiskCardGame.TriggerReceiver.RespondsToPreDeathAnimation
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToPreDeathAnimation*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondsToPreDeathAnimation
  name: RespondsToPreDeathAnimation
  nameWithType: BoonBehaviour.RespondsToPreDeathAnimation
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToPreDeathAnimation
- uid: DiskCardGame.TriggerReceiver.RespondsToOtherCardPreDeath(DiskCardGame.CardSlot,System.Boolean,DiskCardGame.PlayableCard)
  commentId: M:DiskCardGame.TriggerReceiver.RespondsToOtherCardPreDeath(DiskCardGame.CardSlot,System.Boolean,DiskCardGame.PlayableCard)
  parent: DiskCardGame.TriggerReceiver
  isExternal: true
  name: RespondsToOtherCardPreDeath(CardSlot, Boolean, PlayableCard)
  nameWithType: TriggerReceiver.RespondsToOtherCardPreDeath(CardSlot, Boolean, PlayableCard)
  fullName: DiskCardGame.TriggerReceiver.RespondsToOtherCardPreDeath(DiskCardGame.CardSlot, System.Boolean, DiskCardGame.PlayableCard)
  spec.csharp:
  - uid: DiskCardGame.TriggerReceiver.RespondsToOtherCardPreDeath(DiskCardGame.CardSlot,System.Boolean,DiskCardGame.PlayableCard)
    name: RespondsToOtherCardPreDeath
    nameWithType: TriggerReceiver.RespondsToOtherCardPreDeath
    fullName: DiskCardGame.TriggerReceiver.RespondsToOtherCardPreDeath
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DiskCardGame.CardSlot
    name: CardSlot
    nameWithType: CardSlot
    fullName: DiskCardGame.CardSlot
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DiskCardGame.PlayableCard
    name: PlayableCard
    nameWithType: PlayableCard
    fullName: DiskCardGame.PlayableCard
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiskCardGame.TriggerReceiver.RespondsToOtherCardPreDeath(DiskCardGame.CardSlot,System.Boolean,DiskCardGame.PlayableCard)
    name: RespondsToOtherCardPreDeath
    nameWithType: TriggerReceiver.RespondsToOtherCardPreDeath
    fullName: DiskCardGame.TriggerReceiver.RespondsToOtherCardPreDeath
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DiskCardGame.CardSlot
    name: CardSlot
    nameWithType: CardSlot
    fullName: DiskCardGame.CardSlot
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DiskCardGame.PlayableCard
    name: PlayableCard
    nameWithType: PlayableCard
    fullName: DiskCardGame.PlayableCard
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardPreDeath*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardPreDeath
  name: RespondsToOtherCardPreDeath
  nameWithType: BoonBehaviour.RespondsToOtherCardPreDeath
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardPreDeath
- uid: DiskCardGame.TriggerReceiver.RespondsToOtherCardDie(DiskCardGame.PlayableCard,DiskCardGame.CardSlot,System.Boolean,DiskCardGame.PlayableCard)
  commentId: M:DiskCardGame.TriggerReceiver.RespondsToOtherCardDie(DiskCardGame.PlayableCard,DiskCardGame.CardSlot,System.Boolean,DiskCardGame.PlayableCard)
  parent: DiskCardGame.TriggerReceiver
  isExternal: true
  name: RespondsToOtherCardDie(PlayableCard, CardSlot, Boolean, PlayableCard)
  nameWithType: TriggerReceiver.RespondsToOtherCardDie(PlayableCard, CardSlot, Boolean, PlayableCard)
  fullName: DiskCardGame.TriggerReceiver.RespondsToOtherCardDie(DiskCardGame.PlayableCard, DiskCardGame.CardSlot, System.Boolean, DiskCardGame.PlayableCard)
  spec.csharp:
  - uid: DiskCardGame.TriggerReceiver.RespondsToOtherCardDie(DiskCardGame.PlayableCard,DiskCardGame.CardSlot,System.Boolean,DiskCardGame.PlayableCard)
    name: RespondsToOtherCardDie
    nameWithType: TriggerReceiver.RespondsToOtherCardDie
    fullName: DiskCardGame.TriggerReceiver.RespondsToOtherCardDie
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DiskCardGame.PlayableCard
    name: PlayableCard
    nameWithType: PlayableCard
    fullName: DiskCardGame.PlayableCard
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DiskCardGame.CardSlot
    name: CardSlot
    nameWithType: CardSlot
    fullName: DiskCardGame.CardSlot
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DiskCardGame.PlayableCard
    name: PlayableCard
    nameWithType: PlayableCard
    fullName: DiskCardGame.PlayableCard
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiskCardGame.TriggerReceiver.RespondsToOtherCardDie(DiskCardGame.PlayableCard,DiskCardGame.CardSlot,System.Boolean,DiskCardGame.PlayableCard)
    name: RespondsToOtherCardDie
    nameWithType: TriggerReceiver.RespondsToOtherCardDie
    fullName: DiskCardGame.TriggerReceiver.RespondsToOtherCardDie
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DiskCardGame.PlayableCard
    name: PlayableCard
    nameWithType: PlayableCard
    fullName: DiskCardGame.PlayableCard
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DiskCardGame.CardSlot
    name: CardSlot
    nameWithType: CardSlot
    fullName: DiskCardGame.CardSlot
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DiskCardGame.PlayableCard
    name: PlayableCard
    nameWithType: PlayableCard
    fullName: DiskCardGame.PlayableCard
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardDie*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardDie
  name: RespondsToOtherCardDie
  nameWithType: BoonBehaviour.RespondsToOtherCardDie
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToOtherCardDie
- uid: DiskCardGame.TriggerReceiver.RespondsToAttackEnded
  commentId: M:DiskCardGame.TriggerReceiver.RespondsToAttackEnded
  parent: DiskCardGame.TriggerReceiver
  isExternal: true
  name: RespondsToAttackEnded()
  nameWithType: TriggerReceiver.RespondsToAttackEnded()
  fullName: DiskCardGame.TriggerReceiver.RespondsToAttackEnded()
  spec.csharp:
  - uid: DiskCardGame.TriggerReceiver.RespondsToAttackEnded
    name: RespondsToAttackEnded
    nameWithType: TriggerReceiver.RespondsToAttackEnded
    fullName: DiskCardGame.TriggerReceiver.RespondsToAttackEnded
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiskCardGame.TriggerReceiver.RespondsToAttackEnded
    name: RespondsToAttackEnded
    nameWithType: TriggerReceiver.RespondsToAttackEnded
    fullName: DiskCardGame.TriggerReceiver.RespondsToAttackEnded
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToAttackEnded*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondsToAttackEnded
  name: RespondsToAttackEnded
  nameWithType: BoonBehaviour.RespondsToAttackEnded
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToAttackEnded
- uid: DiskCardGame.TriggerReceiver.RespondsToTurnEnd(System.Boolean)
  commentId: M:DiskCardGame.TriggerReceiver.RespondsToTurnEnd(System.Boolean)
  parent: DiskCardGame.TriggerReceiver
  isExternal: true
  name: RespondsToTurnEnd(Boolean)
  nameWithType: TriggerReceiver.RespondsToTurnEnd(Boolean)
  fullName: DiskCardGame.TriggerReceiver.RespondsToTurnEnd(System.Boolean)
  spec.csharp:
  - uid: DiskCardGame.TriggerReceiver.RespondsToTurnEnd(System.Boolean)
    name: RespondsToTurnEnd
    nameWithType: TriggerReceiver.RespondsToTurnEnd
    fullName: DiskCardGame.TriggerReceiver.RespondsToTurnEnd
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiskCardGame.TriggerReceiver.RespondsToTurnEnd(System.Boolean)
    name: RespondsToTurnEnd
    nameWithType: TriggerReceiver.RespondsToTurnEnd
    fullName: DiskCardGame.TriggerReceiver.RespondsToTurnEnd
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToTurnEnd*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondsToTurnEnd
  name: RespondsToTurnEnd
  nameWithType: BoonBehaviour.RespondsToTurnEnd
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToTurnEnd
- uid: DiskCardGame.TriggerReceiver.RespondsToActivatedAbility(DiskCardGame.Ability)
  commentId: M:DiskCardGame.TriggerReceiver.RespondsToActivatedAbility(DiskCardGame.Ability)
  parent: DiskCardGame.TriggerReceiver
  isExternal: true
  name: RespondsToActivatedAbility(Ability)
  nameWithType: TriggerReceiver.RespondsToActivatedAbility(Ability)
  fullName: DiskCardGame.TriggerReceiver.RespondsToActivatedAbility(DiskCardGame.Ability)
  spec.csharp:
  - uid: DiskCardGame.TriggerReceiver.RespondsToActivatedAbility(DiskCardGame.Ability)
    name: RespondsToActivatedAbility
    nameWithType: TriggerReceiver.RespondsToActivatedAbility
    fullName: DiskCardGame.TriggerReceiver.RespondsToActivatedAbility
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DiskCardGame.Ability
    name: Ability
    nameWithType: Ability
    fullName: DiskCardGame.Ability
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiskCardGame.TriggerReceiver.RespondsToActivatedAbility(DiskCardGame.Ability)
    name: RespondsToActivatedAbility
    nameWithType: TriggerReceiver.RespondsToActivatedAbility
    fullName: DiskCardGame.TriggerReceiver.RespondsToActivatedAbility
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DiskCardGame.Ability
    name: Ability
    nameWithType: Ability
    fullName: DiskCardGame.Ability
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InscryptionAPI.Boons.BoonBehaviour.RespondsToActivatedAbility*
  commentId: Overload:InscryptionAPI.Boons.BoonBehaviour.RespondsToActivatedAbility
  name: RespondsToActivatedAbility
  nameWithType: BoonBehaviour.RespondsToActivatedAbility
  fullName: InscryptionAPI.Boons.BoonBehaviour.RespondsToActivatedAbility
