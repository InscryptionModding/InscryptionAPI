### YamlMime:ManagedReference
items:
- uid: InscryptionCommunityPatch.Card.StackAbilityIcons
  commentId: T:InscryptionCommunityPatch.Card.StackAbilityIcons
  id: StackAbilityIcons
  parent: InscryptionCommunityPatch.Card
  children:
  - InscryptionCommunityPatch.Card.StackAbilityIcons.AddIconNumber(DiskCardGame.Ability,DiskCardGame.CardInfo,DiskCardGame.PlayableCard,DiskCardGame.AbilityIconInteractable@)
  - InscryptionCommunityPatch.Card.StackAbilityIcons.ClearStackableIcons(List{DiskCardGame.Ability}@)
  - InscryptionCommunityPatch.Card.StackAbilityIcons.GetStackedGBCDescriptionLocalized(System.String@)
  - InscryptionCommunityPatch.Card.StackAbilityIcons.PatchPixelCardStacks(GBC.PixelCardAbilityIcons@,List{DiskCardGame.Ability},DiskCardGame.PlayableCard)
  - InscryptionCommunityPatch.Card.StackAbilityIcons.StackDescription(System.String)
  langs:
  - csharp
  - vb
  name: StackAbilityIcons
  nameWithType: StackAbilityIcons
  fullName: InscryptionCommunityPatch.Card.StackAbilityIcons
  type: Class
  source:
    remote:
      path: InscryptionCommunityPatch/Card/StackAbilityIcons.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: StackAbilityIcons
    path: ../InscryptionCommunityPatch/Card/StackAbilityIcons.cs
    startLine: 8
  assemblies:
  - InscryptionCommunityPatch
  namespace: InscryptionCommunityPatch.Card
  syntax:
    content: >-
      [HarmonyPatch]

      public static class StackAbilityIcons
    content.vb: >-
      <HarmonyPatch>

      Public Module StackAbilityIcons
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: HarmonyLib.HarmonyPatch
    ctor: HarmonyLib.HarmonyPatch.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: InscryptionCommunityPatch.Card.StackAbilityIcons.ClearStackableIcons(List{DiskCardGame.Ability}@)
  commentId: M:InscryptionCommunityPatch.Card.StackAbilityIcons.ClearStackableIcons(List{DiskCardGame.Ability}@)
  id: ClearStackableIcons(List{DiskCardGame.Ability}@)
  parent: InscryptionCommunityPatch.Card.StackAbilityIcons
  langs:
  - csharp
  - vb
  name: ClearStackableIcons(ref List<Ability>)
  nameWithType: StackAbilityIcons.ClearStackableIcons(ref List<Ability>)
  fullName: InscryptionCommunityPatch.Card.StackAbilityIcons.ClearStackableIcons(ref List<DiskCardGame.Ability>)
  type: Method
  source:
    remote:
      path: InscryptionCommunityPatch/Card/StackAbilityIcons.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: ClearStackableIcons
    path: ../InscryptionCommunityPatch/Card/StackAbilityIcons.cs
    startLine: 100
  assemblies:
  - InscryptionCommunityPatch
  namespace: InscryptionCommunityPatch.Card
  syntax:
    content: >-
      [HarmonyPatch(typeof(CardAbilityIcons), "GetDistinctShownAbilities")]

      [HarmonyPostfix]

      public static void ClearStackableIcons(ref List<Ability> __result)
    parameters:
    - id: __result
      type: List{DiskCardGame.Ability}
    content.vb: >-
      <HarmonyPatch(GetType(CardAbilityIcons), "GetDistinctShownAbilities")>

      <HarmonyPostfix>

      Public Shared Sub ClearStackableIcons(ByRef __result As List(Of Ability))
  overload: InscryptionCommunityPatch.Card.StackAbilityIcons.ClearStackableIcons*
  attributes:
  - type: HarmonyLib.HarmonyPatch
    ctor: HarmonyLib.HarmonyPatch.#ctor(System.Type,System.String)
    arguments:
    - type: System.Type
      value: DiskCardGame.CardAbilityIcons
    - type: System.String
      value: GetDistinctShownAbilities
  - type: HarmonyLib.HarmonyPostfix
    ctor: HarmonyLib.HarmonyPostfix.#ctor
    arguments: []
  nameWithType.vb: StackAbilityIcons.ClearStackableIcons(ByRef List(Of Ability))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionCommunityPatch.Card.StackAbilityIcons.ClearStackableIcons(ByRef List(Of DiskCardGame.Ability))
  name.vb: ClearStackableIcons(ByRef List(Of Ability))
- uid: InscryptionCommunityPatch.Card.StackAbilityIcons.AddIconNumber(DiskCardGame.Ability,DiskCardGame.CardInfo,DiskCardGame.PlayableCard,DiskCardGame.AbilityIconInteractable@)
  commentId: M:InscryptionCommunityPatch.Card.StackAbilityIcons.AddIconNumber(DiskCardGame.Ability,DiskCardGame.CardInfo,DiskCardGame.PlayableCard,DiskCardGame.AbilityIconInteractable@)
  id: AddIconNumber(DiskCardGame.Ability,DiskCardGame.CardInfo,DiskCardGame.PlayableCard,DiskCardGame.AbilityIconInteractable@)
  parent: InscryptionCommunityPatch.Card.StackAbilityIcons
  langs:
  - csharp
  - vb
  name: AddIconNumber(Ability, CardInfo, PlayableCard, ref AbilityIconInteractable)
  nameWithType: StackAbilityIcons.AddIconNumber(Ability, CardInfo, PlayableCard, ref AbilityIconInteractable)
  fullName: InscryptionCommunityPatch.Card.StackAbilityIcons.AddIconNumber(DiskCardGame.Ability, DiskCardGame.CardInfo, DiskCardGame.PlayableCard, ref DiskCardGame.AbilityIconInteractable)
  type: Method
  source:
    remote:
      path: InscryptionCommunityPatch/Card/StackAbilityIcons.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: AddIconNumber
    path: ../InscryptionCommunityPatch/Card/StackAbilityIcons.cs
    startLine: 318
  assemblies:
  - InscryptionCommunityPatch
  namespace: InscryptionCommunityPatch.Card
  syntax:
    content: >-
      [HarmonyPatch(typeof(AbilityIconInteractable), "AssignAbility")]

      [HarmonyPostfix]

      public static void AddIconNumber(Ability ability, CardInfo info, PlayableCard card, ref AbilityIconInteractable __instance)
    parameters:
    - id: ability
      type: DiskCardGame.Ability
    - id: info
      type: DiskCardGame.CardInfo
    - id: card
      type: DiskCardGame.PlayableCard
    - id: __instance
      type: DiskCardGame.AbilityIconInteractable
    content.vb: >-
      <HarmonyPatch(GetType(AbilityIconInteractable), "AssignAbility")>

      <HarmonyPostfix>

      Public Shared Sub AddIconNumber(ability As Ability, info As CardInfo, card As PlayableCard, ByRef __instance As AbilityIconInteractable)
  overload: InscryptionCommunityPatch.Card.StackAbilityIcons.AddIconNumber*
  attributes:
  - type: HarmonyLib.HarmonyPatch
    ctor: HarmonyLib.HarmonyPatch.#ctor(System.Type,System.String)
    arguments:
    - type: System.Type
      value: DiskCardGame.AbilityIconInteractable
    - type: System.String
      value: AssignAbility
  - type: HarmonyLib.HarmonyPostfix
    ctor: HarmonyLib.HarmonyPostfix.#ctor
    arguments: []
  nameWithType.vb: StackAbilityIcons.AddIconNumber(Ability, CardInfo, PlayableCard, ByRef AbilityIconInteractable)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionCommunityPatch.Card.StackAbilityIcons.AddIconNumber(DiskCardGame.Ability, DiskCardGame.CardInfo, DiskCardGame.PlayableCard, ByRef DiskCardGame.AbilityIconInteractable)
  name.vb: AddIconNumber(Ability, CardInfo, PlayableCard, ByRef AbilityIconInteractable)
- uid: InscryptionCommunityPatch.Card.StackAbilityIcons.PatchPixelCardStacks(GBC.PixelCardAbilityIcons@,List{DiskCardGame.Ability},DiskCardGame.PlayableCard)
  commentId: M:InscryptionCommunityPatch.Card.StackAbilityIcons.PatchPixelCardStacks(GBC.PixelCardAbilityIcons@,List{DiskCardGame.Ability},DiskCardGame.PlayableCard)
  id: PatchPixelCardStacks(GBC.PixelCardAbilityIcons@,List{DiskCardGame.Ability},DiskCardGame.PlayableCard)
  parent: InscryptionCommunityPatch.Card.StackAbilityIcons
  langs:
  - csharp
  - vb
  name: PatchPixelCardStacks(ref PixelCardAbilityIcons, List<Ability>, PlayableCard)
  nameWithType: StackAbilityIcons.PatchPixelCardStacks(ref PixelCardAbilityIcons, List<Ability>, PlayableCard)
  fullName: InscryptionCommunityPatch.Card.StackAbilityIcons.PatchPixelCardStacks(ref GBC.PixelCardAbilityIcons, List<DiskCardGame.Ability>, DiskCardGame.PlayableCard)
  type: Method
  source:
    remote:
      path: InscryptionCommunityPatch/Card/StackAbilityIcons.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: PatchPixelCardStacks
    path: ../InscryptionCommunityPatch/Card/StackAbilityIcons.cs
    startLine: 348
  assemblies:
  - InscryptionCommunityPatch
  namespace: InscryptionCommunityPatch.Card
  syntax:
    content: >-
      [HarmonyPrefix]

      public static bool PatchPixelCardStacks(ref PixelCardAbilityIcons __instance, List<Ability> abilities, PlayableCard card)
    parameters:
    - id: __instance
      type: GBC.PixelCardAbilityIcons
    - id: abilities
      type: List{DiskCardGame.Ability}
    - id: card
      type: DiskCardGame.PlayableCard
    return:
      type: System.Boolean
    content.vb: >-
      <HarmonyPrefix>

      Public Shared Function PatchPixelCardStacks(ByRef __instance As PixelCardAbilityIcons, abilities As List(Of Ability), card As PlayableCard) As Boolean
  overload: InscryptionCommunityPatch.Card.StackAbilityIcons.PatchPixelCardStacks*
  attributes:
  - type: HarmonyLib.HarmonyPrefix
    ctor: HarmonyLib.HarmonyPrefix.#ctor
    arguments: []
  nameWithType.vb: StackAbilityIcons.PatchPixelCardStacks(ByRef PixelCardAbilityIcons, List(Of Ability), PlayableCard)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionCommunityPatch.Card.StackAbilityIcons.PatchPixelCardStacks(ByRef GBC.PixelCardAbilityIcons, List(Of DiskCardGame.Ability), DiskCardGame.PlayableCard)
  name.vb: PatchPixelCardStacks(ByRef PixelCardAbilityIcons, List(Of Ability), PlayableCard)
- uid: InscryptionCommunityPatch.Card.StackAbilityIcons.StackDescription(System.String)
  commentId: M:InscryptionCommunityPatch.Card.StackAbilityIcons.StackDescription(System.String)
  id: StackDescription(System.String)
  parent: InscryptionCommunityPatch.Card.StackAbilityIcons
  langs:
  - csharp
  - vb
  name: StackDescription(String)
  nameWithType: StackAbilityIcons.StackDescription(String)
  fullName: InscryptionCommunityPatch.Card.StackAbilityIcons.StackDescription(System.String)
  type: Method
  source:
    remote:
      path: InscryptionCommunityPatch/Card/StackAbilityIcons.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: StackDescription
    path: ../InscryptionCommunityPatch/Card/StackAbilityIcons.cs
    startLine: 444
  assemblies:
  - InscryptionCommunityPatch
  namespace: InscryptionCommunityPatch.Card
  syntax:
    content: public static string StackDescription(string input)
    parameters:
    - id: input
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function StackDescription(input As String) As String
  overload: InscryptionCommunityPatch.Card.StackAbilityIcons.StackDescription*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionCommunityPatch.Card.StackAbilityIcons.GetStackedGBCDescriptionLocalized(System.String@)
  commentId: M:InscryptionCommunityPatch.Card.StackAbilityIcons.GetStackedGBCDescriptionLocalized(System.String@)
  id: GetStackedGBCDescriptionLocalized(System.String@)
  parent: InscryptionCommunityPatch.Card.StackAbilityIcons
  langs:
  - csharp
  - vb
  name: GetStackedGBCDescriptionLocalized(ref String)
  nameWithType: StackAbilityIcons.GetStackedGBCDescriptionLocalized(ref String)
  fullName: InscryptionCommunityPatch.Card.StackAbilityIcons.GetStackedGBCDescriptionLocalized(ref System.String)
  type: Method
  source:
    remote:
      path: InscryptionCommunityPatch/Card/StackAbilityIcons.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: GetStackedGBCDescriptionLocalized
    path: ../InscryptionCommunityPatch/Card/StackAbilityIcons.cs
    startLine: 470
  assemblies:
  - InscryptionCommunityPatch
  namespace: InscryptionCommunityPatch.Card
  syntax:
    content: >-
      [HarmonyPatch(typeof(CardInfo), "GetGBCDescriptionLocalized")]

      [HarmonyPostfix]

      public static void GetStackedGBCDescriptionLocalized(ref string __result)
    parameters:
    - id: __result
      type: System.String
    content.vb: >-
      <HarmonyPatch(GetType(CardInfo), "GetGBCDescriptionLocalized")>

      <HarmonyPostfix>

      Public Shared Sub GetStackedGBCDescriptionLocalized(ByRef __result As String)
  overload: InscryptionCommunityPatch.Card.StackAbilityIcons.GetStackedGBCDescriptionLocalized*
  attributes:
  - type: HarmonyLib.HarmonyPatch
    ctor: HarmonyLib.HarmonyPatch.#ctor(System.Type,System.String)
    arguments:
    - type: System.Type
      value: DiskCardGame.CardInfo
    - type: System.String
      value: GetGBCDescriptionLocalized
  - type: HarmonyLib.HarmonyPostfix
    ctor: HarmonyLib.HarmonyPostfix.#ctor
    arguments: []
  nameWithType.vb: StackAbilityIcons.GetStackedGBCDescriptionLocalized(ByRef String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionCommunityPatch.Card.StackAbilityIcons.GetStackedGBCDescriptionLocalized(ByRef System.String)
  name.vb: GetStackedGBCDescriptionLocalized(ByRef String)
references:
- uid: InscryptionCommunityPatch.Card
  commentId: N:InscryptionCommunityPatch.Card
  name: InscryptionCommunityPatch.Card
  nameWithType: InscryptionCommunityPatch.Card
  fullName: InscryptionCommunityPatch.Card
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: InscryptionCommunityPatch.Card.StackAbilityIcons.ClearStackableIcons*
  commentId: Overload:InscryptionCommunityPatch.Card.StackAbilityIcons.ClearStackableIcons
  name: ClearStackableIcons
  nameWithType: StackAbilityIcons.ClearStackableIcons
  fullName: InscryptionCommunityPatch.Card.StackAbilityIcons.ClearStackableIcons
- uid: List{DiskCardGame.Ability}
  commentId: '!:List{DiskCardGame.Ability}'
  definition: List`1
  name: List<Ability>
  nameWithType: List<Ability>
  fullName: List<DiskCardGame.Ability>
  nameWithType.vb: List(Of Ability)
  fullName.vb: List(Of DiskCardGame.Ability)
  name.vb: List(Of Ability)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DiskCardGame.Ability
    name: Ability
    nameWithType: Ability
    fullName: DiskCardGame.Ability
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DiskCardGame.Ability
    name: Ability
    nameWithType: Ability
    fullName: DiskCardGame.Ability
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: InscryptionCommunityPatch.Card.StackAbilityIcons.AddIconNumber*
  commentId: Overload:InscryptionCommunityPatch.Card.StackAbilityIcons.AddIconNumber
  name: AddIconNumber
  nameWithType: StackAbilityIcons.AddIconNumber
  fullName: InscryptionCommunityPatch.Card.StackAbilityIcons.AddIconNumber
- uid: DiskCardGame.Ability
  commentId: T:DiskCardGame.Ability
  parent: DiskCardGame
  isExternal: true
  name: Ability
  nameWithType: Ability
  fullName: DiskCardGame.Ability
- uid: DiskCardGame.CardInfo
  commentId: T:DiskCardGame.CardInfo
  parent: DiskCardGame
  isExternal: true
  name: CardInfo
  nameWithType: CardInfo
  fullName: DiskCardGame.CardInfo
- uid: DiskCardGame.PlayableCard
  commentId: T:DiskCardGame.PlayableCard
  parent: DiskCardGame
  isExternal: true
  name: PlayableCard
  nameWithType: PlayableCard
  fullName: DiskCardGame.PlayableCard
- uid: DiskCardGame.AbilityIconInteractable
  commentId: T:DiskCardGame.AbilityIconInteractable
  parent: DiskCardGame
  isExternal: true
  name: AbilityIconInteractable
  nameWithType: AbilityIconInteractable
  fullName: DiskCardGame.AbilityIconInteractable
- uid: DiskCardGame
  commentId: N:DiskCardGame
  isExternal: true
  name: DiskCardGame
  nameWithType: DiskCardGame
  fullName: DiskCardGame
- uid: InscryptionCommunityPatch.Card.StackAbilityIcons.PatchPixelCardStacks*
  commentId: Overload:InscryptionCommunityPatch.Card.StackAbilityIcons.PatchPixelCardStacks
  name: PatchPixelCardStacks
  nameWithType: StackAbilityIcons.PatchPixelCardStacks
  fullName: InscryptionCommunityPatch.Card.StackAbilityIcons.PatchPixelCardStacks
- uid: GBC.PixelCardAbilityIcons
  commentId: T:GBC.PixelCardAbilityIcons
  parent: GBC
  isExternal: true
  name: PixelCardAbilityIcons
  nameWithType: PixelCardAbilityIcons
  fullName: GBC.PixelCardAbilityIcons
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: GBC
  commentId: N:GBC
  isExternal: true
  name: GBC
  nameWithType: GBC
  fullName: GBC
- uid: InscryptionCommunityPatch.Card.StackAbilityIcons.StackDescription*
  commentId: Overload:InscryptionCommunityPatch.Card.StackAbilityIcons.StackDescription
  name: StackDescription
  nameWithType: StackAbilityIcons.StackDescription
  fullName: InscryptionCommunityPatch.Card.StackAbilityIcons.StackDescription
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: InscryptionCommunityPatch.Card.StackAbilityIcons.GetStackedGBCDescriptionLocalized*
  commentId: Overload:InscryptionCommunityPatch.Card.StackAbilityIcons.GetStackedGBCDescriptionLocalized
  name: GetStackedGBCDescriptionLocalized
  nameWithType: StackAbilityIcons.GetStackedGBCDescriptionLocalized
  fullName: InscryptionCommunityPatch.Card.StackAbilityIcons.GetStackedGBCDescriptionLocalized
