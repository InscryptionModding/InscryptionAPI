### YamlMime:ManagedReference
items:
- uid: InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer
  commentId: T:InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer
  id: SpecialSequenceManager.FullSpecialSequencer
  parent: InscryptionAPI.Encounters
  children:
  - InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.#ctor(System.String,Type)
  - InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.Id
  - InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.SpecialSequencer
  langs:
  - csharp
  - vb
  name: SpecialSequenceManager.FullSpecialSequencer
  nameWithType: SpecialSequenceManager.FullSpecialSequencer
  fullName: InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer
  type: Class
  source:
    remote:
      path: InscryptionAPI/Encounters/SpecialSequenceManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: FullSpecialSequencer
    path: ../InscryptionAPI/Encounters/SpecialSequenceManager.cs
    startLine: 10
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Encounters
  syntax:
    content: public class FullSpecialSequencer
    content.vb: Public Class FullSpecialSequencer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.Id
  commentId: F:InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.Id
  id: Id
  parent: InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: SpecialSequenceManager.FullSpecialSequencer.Id
  fullName: InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.Id
  type: Field
  source:
    remote:
      path: InscryptionAPI/Encounters/SpecialSequenceManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: Id
    path: ../InscryptionAPI/Encounters/SpecialSequenceManager.cs
    startLine: 12
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Encounters
  syntax:
    content: public readonly string Id
    return:
      type: System.String
    content.vb: Public ReadOnly Id As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.SpecialSequencer
  commentId: P:InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.SpecialSequencer
  id: SpecialSequencer
  parent: InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer
  langs:
  - csharp
  - vb
  name: SpecialSequencer
  nameWithType: SpecialSequenceManager.FullSpecialSequencer.SpecialSequencer
  fullName: InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.SpecialSequencer
  type: Property
  source:
    remote:
      path: InscryptionAPI/Encounters/SpecialSequenceManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SpecialSequencer
    path: ../InscryptionAPI/Encounters/SpecialSequenceManager.cs
    startLine: 15
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Encounters
  syntax:
    content: public Type SpecialSequencer { get; }
    parameters: []
    return:
      type: Type
    content.vb: Public ReadOnly Property SpecialSequencer As Type
  overload: InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.SpecialSequencer*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.#ctor(System.String,Type)
  commentId: M:InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.#ctor(System.String,Type)
  id: '#ctor(System.String,Type)'
  parent: InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer
  langs:
  - csharp
  - vb
  name: FullSpecialSequencer(String, Type)
  nameWithType: SpecialSequenceManager.FullSpecialSequencer.FullSpecialSequencer(String, Type)
  fullName: InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.FullSpecialSequencer(System.String, Type)
  type: Constructor
  source:
    remote:
      path: InscryptionAPI/Encounters/SpecialSequenceManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: .ctor
    path: ../InscryptionAPI/Encounters/SpecialSequenceManager.cs
    startLine: 17
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Encounters
  syntax:
    content: public FullSpecialSequencer(string id, Type specialSequencer)
    parameters:
    - id: id
      type: System.String
    - id: specialSequencer
      type: Type
    content.vb: Public Sub New(id As String, specialSequencer As Type)
  overload: InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: InscryptionAPI.Encounters
  commentId: N:InscryptionAPI.Encounters
  name: InscryptionAPI.Encounters
  nameWithType: InscryptionAPI.Encounters
  fullName: InscryptionAPI.Encounters
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.SpecialSequencer*
  commentId: Overload:InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.SpecialSequencer
  name: SpecialSequencer
  nameWithType: SpecialSequenceManager.FullSpecialSequencer.SpecialSequencer
  fullName: InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.SpecialSequencer
- uid: Type
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: Type
- uid: InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.#ctor*
  commentId: Overload:InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.#ctor
  name: FullSpecialSequencer
  nameWithType: SpecialSequenceManager.FullSpecialSequencer.FullSpecialSequencer
  fullName: InscryptionAPI.Encounters.SpecialSequenceManager.FullSpecialSequencer.FullSpecialSequencer
