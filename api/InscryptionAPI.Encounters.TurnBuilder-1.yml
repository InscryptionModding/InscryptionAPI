### YamlMime:ManagedReference
items:
- uid: InscryptionAPI.Encounters.TurnBuilder`1
  commentId: T:InscryptionAPI.Encounters.TurnBuilder`1
  id: TurnBuilder`1
  parent: InscryptionAPI.Encounters
  children:
  - InscryptionAPI.Encounters.TurnBuilder`1.#ctor
  - InscryptionAPI.Encounters.TurnBuilder`1.SetBlueprint(`0)
  langs:
  - csharp
  - vb
  name: TurnBuilder<T>
  nameWithType: TurnBuilder<T>
  fullName: InscryptionAPI.Encounters.TurnBuilder<T>
  type: Class
  source:
    remote:
      path: InscryptionAPI/Encounters/TurnBuilder.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: TurnBuilder
    path: ../InscryptionAPI/Encounters/TurnBuilder.cs
    startLine: 6
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Encounters
  syntax:
    content: >-
      public class TurnBuilder<T>
          where T : EncounterBlueprintData
    typeParameters:
    - id: T
    content.vb: Public Class TurnBuilder(Of T As EncounterBlueprintData)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - InscryptionAPI.Encounters.TurnBuilder`1.InscryptionAPI.Encounters.TurnExtensions.AddCardBlueprint``1(System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.String)
  - InscryptionAPI.Encounters.TurnBuilder`1.InscryptionAPI.Encounters.TurnExtensions.Build``1
  nameWithType.vb: TurnBuilder(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: InscryptionAPI.Encounters.TurnBuilder(Of T)
  name.vb: TurnBuilder(Of T)
- uid: InscryptionAPI.Encounters.TurnBuilder`1.#ctor
  commentId: M:InscryptionAPI.Encounters.TurnBuilder`1.#ctor
  id: '#ctor'
  parent: InscryptionAPI.Encounters.TurnBuilder`1
  langs:
  - csharp
  - vb
  name: TurnBuilder()
  nameWithType: TurnBuilder<T>.TurnBuilder()
  fullName: InscryptionAPI.Encounters.TurnBuilder<T>.TurnBuilder()
  type: Constructor
  source:
    remote:
      path: InscryptionAPI/Encounters/TurnBuilder.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: .ctor
    path: ../InscryptionAPI/Encounters/TurnBuilder.cs
    startLine: 11
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Encounters
  syntax:
    content: public TurnBuilder()
    content.vb: Public Sub New
  overload: InscryptionAPI.Encounters.TurnBuilder`1.#ctor*
  nameWithType.vb: TurnBuilder(Of T).TurnBuilder()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: InscryptionAPI.Encounters.TurnBuilder(Of T).TurnBuilder()
- uid: InscryptionAPI.Encounters.TurnBuilder`1.SetBlueprint(`0)
  commentId: M:InscryptionAPI.Encounters.TurnBuilder`1.SetBlueprint(`0)
  id: SetBlueprint(`0)
  parent: InscryptionAPI.Encounters.TurnBuilder`1
  langs:
  - csharp
  - vb
  name: SetBlueprint(T)
  nameWithType: TurnBuilder<T>.SetBlueprint(T)
  fullName: InscryptionAPI.Encounters.TurnBuilder<T>.SetBlueprint(T)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Encounters/TurnBuilder.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SetBlueprint
    path: ../InscryptionAPI/Encounters/TurnBuilder.cs
    startLine: 16
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Encounters
  syntax:
    content: public void SetBlueprint(T blueprint)
    parameters:
    - id: blueprint
      type: '{T}'
    content.vb: Public Sub SetBlueprint(blueprint As T)
  overload: InscryptionAPI.Encounters.TurnBuilder`1.SetBlueprint*
  nameWithType.vb: TurnBuilder(Of T).SetBlueprint(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: InscryptionAPI.Encounters.TurnBuilder(Of T).SetBlueprint(T)
references:
- uid: InscryptionAPI.Encounters
  commentId: N:InscryptionAPI.Encounters
  name: InscryptionAPI.Encounters
  nameWithType: InscryptionAPI.Encounters
  fullName: InscryptionAPI.Encounters
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InscryptionAPI.Encounters.TurnBuilder`1.InscryptionAPI.Encounters.TurnExtensions.AddCardBlueprint``1(System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.String)
  commentId: M:InscryptionAPI.Encounters.TurnExtensions.AddCardBlueprint``1(InscryptionAPI.Encounters.TurnBuilder{``0},System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.String)
  parent: InscryptionAPI.Encounters.TurnExtensions
  definition: InscryptionAPI.Encounters.TurnExtensions.AddCardBlueprint``1(InscryptionAPI.Encounters.TurnBuilder{``0},System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.String)
  name: AddCardBlueprint<T>(String, Int32, Int32, Int32, Boolean, Int32, String)
  nameWithType: TurnExtensions.AddCardBlueprint<T>(String, Int32, Int32, Int32, Boolean, Int32, String)
  fullName: InscryptionAPI.Encounters.TurnExtensions.AddCardBlueprint<T>(System.String, System.Int32, System.Int32, System.Int32, System.Boolean, System.Int32, System.String)
  nameWithType.vb: TurnExtensions.AddCardBlueprint(Of T)(String, Int32, Int32, Int32, Boolean, Int32, String)
  fullName.vb: InscryptionAPI.Encounters.TurnExtensions.AddCardBlueprint(Of T)(System.String, System.Int32, System.Int32, System.Int32, System.Boolean, System.Int32, System.String)
  name.vb: AddCardBlueprint(Of T)(String, Int32, Int32, Int32, Boolean, Int32, String)
  spec.csharp:
  - uid: InscryptionAPI.Encounters.TurnExtensions.AddCardBlueprint``1(System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.String)
    name: AddCardBlueprint<T>
    nameWithType: TurnExtensions.AddCardBlueprint<T>
    fullName: InscryptionAPI.Encounters.TurnExtensions.AddCardBlueprint<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InscryptionAPI.Encounters.TurnExtensions.AddCardBlueprint``1(System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.String)
    name: AddCardBlueprint(Of T)
    nameWithType: TurnExtensions.AddCardBlueprint(Of T)
    fullName: InscryptionAPI.Encounters.TurnExtensions.AddCardBlueprint(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InscryptionAPI.Encounters.TurnBuilder`1.InscryptionAPI.Encounters.TurnExtensions.Build``1
  commentId: M:InscryptionAPI.Encounters.TurnExtensions.Build``1(InscryptionAPI.Encounters.TurnBuilder{``0})
  parent: InscryptionAPI.Encounters.TurnExtensions
  definition: InscryptionAPI.Encounters.TurnExtensions.Build``1(InscryptionAPI.Encounters.TurnBuilder{``0})
  name: Build<T>()
  nameWithType: TurnExtensions.Build<T>()
  fullName: InscryptionAPI.Encounters.TurnExtensions.Build<T>()
  nameWithType.vb: TurnExtensions.Build(Of T)()
  fullName.vb: InscryptionAPI.Encounters.TurnExtensions.Build(Of T)()
  name.vb: Build(Of T)()
  spec.csharp:
  - uid: InscryptionAPI.Encounters.TurnExtensions.Build``1
    name: Build<T>
    nameWithType: TurnExtensions.Build<T>
    fullName: InscryptionAPI.Encounters.TurnExtensions.Build<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InscryptionAPI.Encounters.TurnExtensions.Build``1
    name: Build(Of T)
    nameWithType: TurnExtensions.Build(Of T)
    fullName: InscryptionAPI.Encounters.TurnExtensions.Build(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: InscryptionAPI.Encounters.TurnExtensions.AddCardBlueprint``1(InscryptionAPI.Encounters.TurnBuilder{``0},System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.String)
  commentId: M:InscryptionAPI.Encounters.TurnExtensions.AddCardBlueprint``1(InscryptionAPI.Encounters.TurnBuilder{``0},System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.String)
  isExternal: true
  name: AddCardBlueprint<T>(TurnBuilder<T>, String, Int32, Int32, Int32, Boolean, Int32, String)
  nameWithType: TurnExtensions.AddCardBlueprint<T>(TurnBuilder<T>, String, Int32, Int32, Int32, Boolean, Int32, String)
  fullName: InscryptionAPI.Encounters.TurnExtensions.AddCardBlueprint<T>(InscryptionAPI.Encounters.TurnBuilder<T>, System.String, System.Int32, System.Int32, System.Int32, System.Boolean, System.Int32, System.String)
  nameWithType.vb: TurnExtensions.AddCardBlueprint(Of T)(TurnBuilder(Of T), String, Int32, Int32, Int32, Boolean, Int32, String)
  fullName.vb: InscryptionAPI.Encounters.TurnExtensions.AddCardBlueprint(Of T)(InscryptionAPI.Encounters.TurnBuilder(Of T), System.String, System.Int32, System.Int32, System.Int32, System.Boolean, System.Int32, System.String)
  name.vb: AddCardBlueprint(Of T)(TurnBuilder(Of T), String, Int32, Int32, Int32, Boolean, Int32, String)
  spec.csharp:
  - uid: InscryptionAPI.Encounters.TurnExtensions.AddCardBlueprint``1(InscryptionAPI.Encounters.TurnBuilder{``0},System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.String)
    name: AddCardBlueprint<T>
    nameWithType: TurnExtensions.AddCardBlueprint<T>
    fullName: InscryptionAPI.Encounters.TurnExtensions.AddCardBlueprint<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: InscryptionAPI.Encounters.TurnBuilder`1
    name: TurnBuilder
    nameWithType: TurnBuilder
    fullName: InscryptionAPI.Encounters.TurnBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InscryptionAPI.Encounters.TurnExtensions.AddCardBlueprint``1(InscryptionAPI.Encounters.TurnBuilder{``0},System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.String)
    name: AddCardBlueprint(Of T)
    nameWithType: TurnExtensions.AddCardBlueprint(Of T)
    fullName: InscryptionAPI.Encounters.TurnExtensions.AddCardBlueprint(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: InscryptionAPI.Encounters.TurnBuilder`1
    name: TurnBuilder
    nameWithType: TurnBuilder
    fullName: InscryptionAPI.Encounters.TurnBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InscryptionAPI.Encounters.TurnExtensions
  commentId: T:InscryptionAPI.Encounters.TurnExtensions
  parent: InscryptionAPI.Encounters
  name: TurnExtensions
  nameWithType: TurnExtensions
  fullName: InscryptionAPI.Encounters.TurnExtensions
- uid: InscryptionAPI.Encounters.TurnExtensions.Build``1(InscryptionAPI.Encounters.TurnBuilder{``0})
  commentId: M:InscryptionAPI.Encounters.TurnExtensions.Build``1(InscryptionAPI.Encounters.TurnBuilder{``0})
  name: Build<T>(TurnBuilder<T>)
  nameWithType: TurnExtensions.Build<T>(TurnBuilder<T>)
  fullName: InscryptionAPI.Encounters.TurnExtensions.Build<T>(InscryptionAPI.Encounters.TurnBuilder<T>)
  nameWithType.vb: TurnExtensions.Build(Of T)(TurnBuilder(Of T))
  fullName.vb: InscryptionAPI.Encounters.TurnExtensions.Build(Of T)(InscryptionAPI.Encounters.TurnBuilder(Of T))
  name.vb: Build(Of T)(TurnBuilder(Of T))
  spec.csharp:
  - uid: InscryptionAPI.Encounters.TurnExtensions.Build``1(InscryptionAPI.Encounters.TurnBuilder{``0})
    name: Build<T>
    nameWithType: TurnExtensions.Build<T>
    fullName: InscryptionAPI.Encounters.TurnExtensions.Build<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: InscryptionAPI.Encounters.TurnBuilder`1
    name: TurnBuilder
    nameWithType: TurnBuilder
    fullName: InscryptionAPI.Encounters.TurnBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InscryptionAPI.Encounters.TurnExtensions.Build``1(InscryptionAPI.Encounters.TurnBuilder{``0})
    name: Build(Of T)
    nameWithType: TurnExtensions.Build(Of T)
    fullName: InscryptionAPI.Encounters.TurnExtensions.Build(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: InscryptionAPI.Encounters.TurnBuilder`1
    name: TurnBuilder
    nameWithType: TurnBuilder
    fullName: InscryptionAPI.Encounters.TurnBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InscryptionAPI.Encounters.TurnBuilder`1.#ctor*
  commentId: Overload:InscryptionAPI.Encounters.TurnBuilder`1.#ctor
  name: TurnBuilder
  nameWithType: TurnBuilder<T>.TurnBuilder
  fullName: InscryptionAPI.Encounters.TurnBuilder<T>.TurnBuilder
  nameWithType.vb: TurnBuilder(Of T).TurnBuilder
  fullName.vb: InscryptionAPI.Encounters.TurnBuilder(Of T).TurnBuilder
- uid: InscryptionAPI.Encounters.TurnBuilder`1.SetBlueprint*
  commentId: Overload:InscryptionAPI.Encounters.TurnBuilder`1.SetBlueprint
  name: SetBlueprint
  nameWithType: TurnBuilder<T>.SetBlueprint
  fullName: InscryptionAPI.Encounters.TurnBuilder<T>.SetBlueprint
  nameWithType.vb: TurnBuilder(Of T).SetBlueprint
  fullName.vb: InscryptionAPI.Encounters.TurnBuilder(Of T).SetBlueprint
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
