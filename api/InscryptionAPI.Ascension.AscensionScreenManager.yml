### YamlMime:ManagedReference
items:
- uid: InscryptionAPI.Ascension.AscensionScreenManager
  commentId: T:InscryptionAPI.Ascension.AscensionScreenManager
  id: AscensionScreenManager
  parent: InscryptionAPI.Ascension
  children:
  - InscryptionAPI.Ascension.AscensionScreenManager.DeactivateAllCustomScreens
  - InscryptionAPI.Ascension.AscensionScreenManager.HoverTextFirstCustomScreen(DiskCardGame.AscensionChallengeScreen@)
  - InscryptionAPI.Ascension.AscensionScreenManager.InitializeAllScreens
  - InscryptionAPI.Ascension.AscensionScreenManager.InitializeScreensOnStart
  - InscryptionAPI.Ascension.AscensionScreenManager.RegisterScreen``1
  - InscryptionAPI.Ascension.AscensionScreenManager.SwitchToScreen(System.Collections.IEnumerator,DiskCardGame.AscensionMenuScreens.Screen)
  - InscryptionAPI.Ascension.AscensionScreenManager.TransitionToSideDeckScreen(DiskCardGame.AscensionChallengeScreen@)
  langs:
  - csharp
  - vb
  name: AscensionScreenManager
  nameWithType: AscensionScreenManager
  fullName: InscryptionAPI.Ascension.AscensionScreenManager
  type: Class
  source:
    remote:
      path: InscryptionAPI/Ascension/AscensionScreenManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: AscensionScreenManager
    path: ../InscryptionAPI/Ascension/AscensionScreenManager.cs
    startLine: 7
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Ascension
  syntax:
    content: >-
      [HarmonyPatch]

      public static class AscensionScreenManager
    content.vb: >-
      <HarmonyPatch>

      Public Module AscensionScreenManager
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: HarmonyLib.HarmonyPatch
    ctor: HarmonyLib.HarmonyPatch.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: InscryptionAPI.Ascension.AscensionScreenManager.RegisterScreen``1
  commentId: M:InscryptionAPI.Ascension.AscensionScreenManager.RegisterScreen``1
  id: RegisterScreen``1
  parent: InscryptionAPI.Ascension.AscensionScreenManager
  langs:
  - csharp
  - vb
  name: RegisterScreen<T>()
  nameWithType: AscensionScreenManager.RegisterScreen<T>()
  fullName: InscryptionAPI.Ascension.AscensionScreenManager.RegisterScreen<T>()
  type: Method
  source:
    remote:
      path: InscryptionAPI/Ascension/AscensionScreenManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: RegisterScreen
    path: ../InscryptionAPI/Ascension/AscensionScreenManager.cs
    startLine: 20
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Ascension
  syntax:
    content: >-
      public static void RegisterScreen<T>()
          where T : AscensionRunSetupScreenBase
    typeParameters:
    - id: T
    content.vb: Public Shared Sub RegisterScreen(Of T As AscensionRunSetupScreenBase)
  overload: InscryptionAPI.Ascension.AscensionScreenManager.RegisterScreen*
  nameWithType.vb: AscensionScreenManager.RegisterScreen(Of T)()
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionAPI.Ascension.AscensionScreenManager.RegisterScreen(Of T)()
  name.vb: RegisterScreen(Of T)()
- uid: InscryptionAPI.Ascension.AscensionScreenManager.InitializeAllScreens
  commentId: M:InscryptionAPI.Ascension.AscensionScreenManager.InitializeAllScreens
  id: InitializeAllScreens
  parent: InscryptionAPI.Ascension.AscensionScreenManager
  langs:
  - csharp
  - vb
  name: InitializeAllScreens()
  nameWithType: AscensionScreenManager.InitializeAllScreens()
  fullName: InscryptionAPI.Ascension.AscensionScreenManager.InitializeAllScreens()
  type: Method
  source:
    remote:
      path: InscryptionAPI/Ascension/AscensionScreenManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: InitializeAllScreens
    path: ../InscryptionAPI/Ascension/AscensionScreenManager.cs
    startLine: 34
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Ascension
  syntax:
    content: public static void InitializeAllScreens()
    content.vb: Public Shared Sub InitializeAllScreens
  overload: InscryptionAPI.Ascension.AscensionScreenManager.InitializeAllScreens*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Ascension.AscensionScreenManager.TransitionToSideDeckScreen(DiskCardGame.AscensionChallengeScreen@)
  commentId: M:InscryptionAPI.Ascension.AscensionScreenManager.TransitionToSideDeckScreen(DiskCardGame.AscensionChallengeScreen@)
  id: TransitionToSideDeckScreen(DiskCardGame.AscensionChallengeScreen@)
  parent: InscryptionAPI.Ascension.AscensionScreenManager
  langs:
  - csharp
  - vb
  name: TransitionToSideDeckScreen(ref AscensionChallengeScreen)
  nameWithType: AscensionScreenManager.TransitionToSideDeckScreen(ref AscensionChallengeScreen)
  fullName: InscryptionAPI.Ascension.AscensionScreenManager.TransitionToSideDeckScreen(ref DiskCardGame.AscensionChallengeScreen)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Ascension/AscensionScreenManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: TransitionToSideDeckScreen
    path: ../InscryptionAPI/Ascension/AscensionScreenManager.cs
    startLine: 103
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Ascension
  syntax:
    content: >-
      [HarmonyPatch(typeof(AscensionChallengeScreen), "OnContinuePressed")]

      [HarmonyPrefix]

      public static bool TransitionToSideDeckScreen(ref AscensionChallengeScreen __instance)
    parameters:
    - id: __instance
      type: DiskCardGame.AscensionChallengeScreen
    return:
      type: System.Boolean
    content.vb: >-
      <HarmonyPatch(GetType(AscensionChallengeScreen), "OnContinuePressed")>

      <HarmonyPrefix>

      Public Shared Function TransitionToSideDeckScreen(ByRef __instance As AscensionChallengeScreen) As Boolean
  overload: InscryptionAPI.Ascension.AscensionScreenManager.TransitionToSideDeckScreen*
  attributes:
  - type: HarmonyLib.HarmonyPatch
    ctor: HarmonyLib.HarmonyPatch.#ctor(System.Type,System.String)
    arguments:
    - type: System.Type
      value: DiskCardGame.AscensionChallengeScreen
    - type: System.String
      value: OnContinuePressed
  - type: HarmonyLib.HarmonyPrefix
    ctor: HarmonyLib.HarmonyPrefix.#ctor
    arguments: []
  nameWithType.vb: AscensionScreenManager.TransitionToSideDeckScreen(ByRef AscensionChallengeScreen)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionAPI.Ascension.AscensionScreenManager.TransitionToSideDeckScreen(ByRef DiskCardGame.AscensionChallengeScreen)
  name.vb: TransitionToSideDeckScreen(ByRef AscensionChallengeScreen)
- uid: InscryptionAPI.Ascension.AscensionScreenManager.SwitchToScreen(System.Collections.IEnumerator,DiskCardGame.AscensionMenuScreens.Screen)
  commentId: M:InscryptionAPI.Ascension.AscensionScreenManager.SwitchToScreen(System.Collections.IEnumerator,DiskCardGame.AscensionMenuScreens.Screen)
  id: SwitchToScreen(System.Collections.IEnumerator,DiskCardGame.AscensionMenuScreens.Screen)
  parent: InscryptionAPI.Ascension.AscensionScreenManager
  langs:
  - csharp
  - vb
  name: SwitchToScreen(IEnumerator, AscensionMenuScreens.Screen)
  nameWithType: AscensionScreenManager.SwitchToScreen(IEnumerator, AscensionMenuScreens.Screen)
  fullName: InscryptionAPI.Ascension.AscensionScreenManager.SwitchToScreen(System.Collections.IEnumerator, DiskCardGame.AscensionMenuScreens.Screen)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Ascension/AscensionScreenManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SwitchToScreen
    path: ../InscryptionAPI/Ascension/AscensionScreenManager.cs
    startLine: 114
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Ascension
  syntax:
    content: >-
      [HarmonyPatch(typeof(AscensionMenuScreens), "ScreenSwitchSequence")]

      [HarmonyPostfix]

      public static IEnumerator SwitchToScreen(IEnumerator sequenceEvent, AscensionMenuScreens.Screen screen)
    parameters:
    - id: sequenceEvent
      type: System.Collections.IEnumerator
    - id: screen
      type: DiskCardGame.AscensionMenuScreens.Screen
    return:
      type: System.Collections.IEnumerator
    content.vb: >-
      <HarmonyPatch(GetType(AscensionMenuScreens), "ScreenSwitchSequence")>

      <HarmonyPostfix>

      Public Shared Function SwitchToScreen(sequenceEvent As IEnumerator, screen As AscensionMenuScreens.Screen) As IEnumerator
  overload: InscryptionAPI.Ascension.AscensionScreenManager.SwitchToScreen*
  attributes:
  - type: HarmonyLib.HarmonyPatch
    ctor: HarmonyLib.HarmonyPatch.#ctor(System.Type,System.String)
    arguments:
    - type: System.Type
      value: DiskCardGame.AscensionMenuScreens
    - type: System.String
      value: ScreenSwitchSequence
  - type: HarmonyLib.HarmonyPostfix
    ctor: HarmonyLib.HarmonyPostfix.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Ascension.AscensionScreenManager.InitializeScreensOnStart
  commentId: M:InscryptionAPI.Ascension.AscensionScreenManager.InitializeScreensOnStart
  id: InitializeScreensOnStart
  parent: InscryptionAPI.Ascension.AscensionScreenManager
  langs:
  - csharp
  - vb
  name: InitializeScreensOnStart()
  nameWithType: AscensionScreenManager.InitializeScreensOnStart()
  fullName: InscryptionAPI.Ascension.AscensionScreenManager.InitializeScreensOnStart()
  type: Method
  source:
    remote:
      path: InscryptionAPI/Ascension/AscensionScreenManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: InitializeScreensOnStart
    path: ../InscryptionAPI/Ascension/AscensionScreenManager.cs
    startLine: 129
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Ascension
  syntax:
    content: >-
      [HarmonyPatch(typeof(AscensionMenuScreens), "ConfigurePostGameScreens")]

      [HarmonyPostfix]

      public static void InitializeScreensOnStart()
    content.vb: >-
      <HarmonyPatch(GetType(AscensionMenuScreens), "ConfigurePostGameScreens")>

      <HarmonyPostfix>

      Public Shared Sub InitializeScreensOnStart
  overload: InscryptionAPI.Ascension.AscensionScreenManager.InitializeScreensOnStart*
  attributes:
  - type: HarmonyLib.HarmonyPatch
    ctor: HarmonyLib.HarmonyPatch.#ctor(System.Type,System.String)
    arguments:
    - type: System.Type
      value: DiskCardGame.AscensionMenuScreens
    - type: System.String
      value: ConfigurePostGameScreens
  - type: HarmonyLib.HarmonyPostfix
    ctor: HarmonyLib.HarmonyPostfix.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Ascension.AscensionScreenManager.DeactivateAllCustomScreens
  commentId: M:InscryptionAPI.Ascension.AscensionScreenManager.DeactivateAllCustomScreens
  id: DeactivateAllCustomScreens
  parent: InscryptionAPI.Ascension.AscensionScreenManager
  langs:
  - csharp
  - vb
  name: DeactivateAllCustomScreens()
  nameWithType: AscensionScreenManager.DeactivateAllCustomScreens()
  fullName: InscryptionAPI.Ascension.AscensionScreenManager.DeactivateAllCustomScreens()
  type: Method
  source:
    remote:
      path: InscryptionAPI/Ascension/AscensionScreenManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: DeactivateAllCustomScreens
    path: ../InscryptionAPI/Ascension/AscensionScreenManager.cs
    startLine: 136
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Ascension
  syntax:
    content: >-
      [HarmonyPatch(typeof(AscensionMenuScreens), "DeactivateAllScreens")]

      [HarmonyPostfix]

      public static void DeactivateAllCustomScreens()
    content.vb: >-
      <HarmonyPatch(GetType(AscensionMenuScreens), "DeactivateAllScreens")>

      <HarmonyPostfix>

      Public Shared Sub DeactivateAllCustomScreens
  overload: InscryptionAPI.Ascension.AscensionScreenManager.DeactivateAllCustomScreens*
  attributes:
  - type: HarmonyLib.HarmonyPatch
    ctor: HarmonyLib.HarmonyPatch.#ctor(System.Type,System.String)
    arguments:
    - type: System.Type
      value: DiskCardGame.AscensionMenuScreens
    - type: System.String
      value: DeactivateAllScreens
  - type: HarmonyLib.HarmonyPostfix
    ctor: HarmonyLib.HarmonyPostfix.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Ascension.AscensionScreenManager.HoverTextFirstCustomScreen(DiskCardGame.AscensionChallengeScreen@)
  commentId: M:InscryptionAPI.Ascension.AscensionScreenManager.HoverTextFirstCustomScreen(DiskCardGame.AscensionChallengeScreen@)
  id: HoverTextFirstCustomScreen(DiskCardGame.AscensionChallengeScreen@)
  parent: InscryptionAPI.Ascension.AscensionScreenManager
  langs:
  - csharp
  - vb
  name: HoverTextFirstCustomScreen(ref AscensionChallengeScreen)
  nameWithType: AscensionScreenManager.HoverTextFirstCustomScreen(ref AscensionChallengeScreen)
  fullName: InscryptionAPI.Ascension.AscensionScreenManager.HoverTextFirstCustomScreen(ref DiskCardGame.AscensionChallengeScreen)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Ascension/AscensionScreenManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: HoverTextFirstCustomScreen
    path: ../InscryptionAPI/Ascension/AscensionScreenManager.cs
    startLine: 146
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Ascension
  syntax:
    content: >-
      [HarmonyPatch(typeof(AscensionChallengeScreen), "OnContinueCursorEnter")]

      [HarmonyPrefix]

      public static bool HoverTextFirstCustomScreen(ref AscensionChallengeScreen __instance)
    parameters:
    - id: __instance
      type: DiskCardGame.AscensionChallengeScreen
    return:
      type: System.Boolean
    content.vb: >-
      <HarmonyPatch(GetType(AscensionChallengeScreen), "OnContinueCursorEnter")>

      <HarmonyPrefix>

      Public Shared Function HoverTextFirstCustomScreen(ByRef __instance As AscensionChallengeScreen) As Boolean
  overload: InscryptionAPI.Ascension.AscensionScreenManager.HoverTextFirstCustomScreen*
  attributes:
  - type: HarmonyLib.HarmonyPatch
    ctor: HarmonyLib.HarmonyPatch.#ctor(System.Type,System.String)
    arguments:
    - type: System.Type
      value: DiskCardGame.AscensionChallengeScreen
    - type: System.String
      value: OnContinueCursorEnter
  - type: HarmonyLib.HarmonyPrefix
    ctor: HarmonyLib.HarmonyPrefix.#ctor
    arguments: []
  nameWithType.vb: AscensionScreenManager.HoverTextFirstCustomScreen(ByRef AscensionChallengeScreen)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionAPI.Ascension.AscensionScreenManager.HoverTextFirstCustomScreen(ByRef DiskCardGame.AscensionChallengeScreen)
  name.vb: HoverTextFirstCustomScreen(ByRef AscensionChallengeScreen)
references:
- uid: InscryptionAPI.Ascension
  commentId: N:InscryptionAPI.Ascension
  name: InscryptionAPI.Ascension
  nameWithType: InscryptionAPI.Ascension
  fullName: InscryptionAPI.Ascension
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: InscryptionAPI.Ascension.AscensionScreenManager.RegisterScreen*
  commentId: Overload:InscryptionAPI.Ascension.AscensionScreenManager.RegisterScreen
  name: RegisterScreen
  nameWithType: AscensionScreenManager.RegisterScreen
  fullName: InscryptionAPI.Ascension.AscensionScreenManager.RegisterScreen
- uid: InscryptionAPI.Ascension.AscensionScreenManager.InitializeAllScreens*
  commentId: Overload:InscryptionAPI.Ascension.AscensionScreenManager.InitializeAllScreens
  name: InitializeAllScreens
  nameWithType: AscensionScreenManager.InitializeAllScreens
  fullName: InscryptionAPI.Ascension.AscensionScreenManager.InitializeAllScreens
- uid: InscryptionAPI.Ascension.AscensionScreenManager.TransitionToSideDeckScreen*
  commentId: Overload:InscryptionAPI.Ascension.AscensionScreenManager.TransitionToSideDeckScreen
  name: TransitionToSideDeckScreen
  nameWithType: AscensionScreenManager.TransitionToSideDeckScreen
  fullName: InscryptionAPI.Ascension.AscensionScreenManager.TransitionToSideDeckScreen
- uid: DiskCardGame.AscensionChallengeScreen
  commentId: T:DiskCardGame.AscensionChallengeScreen
  parent: DiskCardGame
  isExternal: true
  name: AscensionChallengeScreen
  nameWithType: AscensionChallengeScreen
  fullName: DiskCardGame.AscensionChallengeScreen
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: DiskCardGame
  commentId: N:DiskCardGame
  isExternal: true
  name: DiskCardGame
  nameWithType: DiskCardGame
  fullName: DiskCardGame
- uid: InscryptionAPI.Ascension.AscensionScreenManager.SwitchToScreen*
  commentId: Overload:InscryptionAPI.Ascension.AscensionScreenManager.SwitchToScreen
  name: SwitchToScreen
  nameWithType: AscensionScreenManager.SwitchToScreen
  fullName: InscryptionAPI.Ascension.AscensionScreenManager.SwitchToScreen
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: DiskCardGame.AscensionMenuScreens.Screen
  commentId: T:DiskCardGame.AscensionMenuScreens.Screen
  parent: DiskCardGame
  isExternal: true
  name: AscensionMenuScreens.Screen
  nameWithType: AscensionMenuScreens.Screen
  fullName: DiskCardGame.AscensionMenuScreens.Screen
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: InscryptionAPI.Ascension.AscensionScreenManager.InitializeScreensOnStart*
  commentId: Overload:InscryptionAPI.Ascension.AscensionScreenManager.InitializeScreensOnStart
  name: InitializeScreensOnStart
  nameWithType: AscensionScreenManager.InitializeScreensOnStart
  fullName: InscryptionAPI.Ascension.AscensionScreenManager.InitializeScreensOnStart
- uid: InscryptionAPI.Ascension.AscensionScreenManager.DeactivateAllCustomScreens*
  commentId: Overload:InscryptionAPI.Ascension.AscensionScreenManager.DeactivateAllCustomScreens
  name: DeactivateAllCustomScreens
  nameWithType: AscensionScreenManager.DeactivateAllCustomScreens
  fullName: InscryptionAPI.Ascension.AscensionScreenManager.DeactivateAllCustomScreens
- uid: InscryptionAPI.Ascension.AscensionScreenManager.HoverTextFirstCustomScreen*
  commentId: Overload:InscryptionAPI.Ascension.AscensionScreenManager.HoverTextFirstCustomScreen
  name: HoverTextFirstCustomScreen
  nameWithType: AscensionScreenManager.HoverTextFirstCustomScreen
  fullName: InscryptionAPI.Ascension.AscensionScreenManager.HoverTextFirstCustomScreen
