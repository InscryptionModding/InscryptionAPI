### YamlMime:ManagedReference
items:
- uid: APIPlugin.CustomRegion
  commentId: T:APIPlugin.CustomRegion
  id: CustomRegion
  parent: APIPlugin
  children:
  - APIPlugin.CustomRegion.#ctor(System.String)
  - APIPlugin.CustomRegion.AdjustRegion(DiskCardGame.RegionData)
  - APIPlugin.CustomRegion.ambientLoopId
  - APIPlugin.CustomRegion.boardLightColor
  - APIPlugin.CustomRegion.bosses
  - APIPlugin.CustomRegion.bossPrepCondition
  - APIPlugin.CustomRegion.bossPrepEncounter
  - APIPlugin.CustomRegion.cardsLightColor
  - APIPlugin.CustomRegion.consumableItems
  - APIPlugin.CustomRegion.dominantTribes
  - APIPlugin.CustomRegion.dustParticlesDisabled
  - APIPlugin.CustomRegion.encounters
  - APIPlugin.CustomRegion.fillerScenery
  - APIPlugin.CustomRegion.fogAlpha
  - APIPlugin.CustomRegion.fogEnabled
  - APIPlugin.CustomRegion.fogProfile
  - APIPlugin.CustomRegion.likelyCards
  - APIPlugin.CustomRegion.mapAlbedo
  - APIPlugin.CustomRegion.mapEmission
  - APIPlugin.CustomRegion.mapEmissionColor
  - APIPlugin.CustomRegion.mapParticlesPrefabs
  - APIPlugin.CustomRegion.ModifyRegions(List{DiskCardGame.RegionData})
  - APIPlugin.CustomRegion.name
  - APIPlugin.CustomRegion.predefinedNodes
  - APIPlugin.CustomRegion.predefinedScenery
  - APIPlugin.CustomRegion.scarceScenery
  - APIPlugin.CustomRegion.silenceCabinAmbience
  - APIPlugin.CustomRegion.terrainCards
  - APIPlugin.CustomRegion.tier
  langs:
  - csharp
  - vb
  name: CustomRegion
  nameWithType: CustomRegion
  fullName: APIPlugin.CustomRegion
  type: Class
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomRegion.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: CustomRegion
    path: ../InscryptionAPI/Compatibility/CustomRegion.cs
    startLine: 7
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public class CustomRegion
    content.vb: Public Class CustomRegion
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: APIPlugin.CustomRegion.#ctor(System.String)
  commentId: M:APIPlugin.CustomRegion.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: APIPlugin.CustomRegion
  langs:
  - csharp
  - vb
  name: CustomRegion(String)
  nameWithType: CustomRegion.CustomRegion(String)
  fullName: APIPlugin.CustomRegion.CustomRegion(System.String)
  type: Constructor
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomRegion.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: .ctor
    path: ../InscryptionAPI/Compatibility/CustomRegion.cs
    startLine: 10
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public CustomRegion(string name)
    parameters:
    - id: name
      type: System.String
    content.vb: Public Sub New(name As String)
  overload: APIPlugin.CustomRegion.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomRegion.ModifyRegions(List{DiskCardGame.RegionData})
  commentId: M:APIPlugin.CustomRegion.ModifyRegions(List{DiskCardGame.RegionData})
  id: ModifyRegions(List{DiskCardGame.RegionData})
  parent: APIPlugin.CustomRegion
  langs:
  - csharp
  - vb
  name: ModifyRegions(List<RegionData>)
  nameWithType: CustomRegion.ModifyRegions(List<RegionData>)
  fullName: APIPlugin.CustomRegion.ModifyRegions(List<DiskCardGame.RegionData>)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomRegion.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: ModifyRegions
    path: ../InscryptionAPI/Compatibility/CustomRegion.cs
    startLine: 16
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public List<RegionData> ModifyRegions(List<RegionData> regions)
    parameters:
    - id: regions
      type: List{DiskCardGame.RegionData}
    return:
      type: List{DiskCardGame.RegionData}
    content.vb: Public Function ModifyRegions(regions As List(Of RegionData)) As List(Of RegionData)
  overload: APIPlugin.CustomRegion.ModifyRegions*
  nameWithType.vb: CustomRegion.ModifyRegions(List(Of RegionData))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: APIPlugin.CustomRegion.ModifyRegions(List(Of DiskCardGame.RegionData))
  name.vb: ModifyRegions(List(Of RegionData))
- uid: APIPlugin.CustomRegion.AdjustRegion(DiskCardGame.RegionData)
  commentId: M:APIPlugin.CustomRegion.AdjustRegion(DiskCardGame.RegionData)
  id: AdjustRegion(DiskCardGame.RegionData)
  parent: APIPlugin.CustomRegion
  langs:
  - csharp
  - vb
  name: AdjustRegion(RegionData)
  nameWithType: CustomRegion.AdjustRegion(RegionData)
  fullName: APIPlugin.CustomRegion.AdjustRegion(DiskCardGame.RegionData)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomRegion.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: AdjustRegion
    path: ../InscryptionAPI/Compatibility/CustomRegion.cs
    startLine: 25
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public RegionData AdjustRegion(RegionData region)
    parameters:
    - id: region
      type: DiskCardGame.RegionData
    return:
      type: DiskCardGame.RegionData
    content.vb: Public Function AdjustRegion(region As RegionData) As RegionData
  overload: APIPlugin.CustomRegion.AdjustRegion*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomRegion.name
  commentId: F:APIPlugin.CustomRegion.name
  id: name
  parent: APIPlugin.CustomRegion
  langs:
  - csharp
  - vb
  name: name
  nameWithType: CustomRegion.name
  fullName: APIPlugin.CustomRegion.name
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomRegion.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: name
    path: ../InscryptionAPI/Compatibility/CustomRegion.cs
    startLine: 31
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public string name
    return:
      type: System.String
    content.vb: Public name As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomRegion.tier
  commentId: F:APIPlugin.CustomRegion.tier
  id: tier
  parent: APIPlugin.CustomRegion
  langs:
  - csharp
  - vb
  name: tier
  nameWithType: CustomRegion.tier
  fullName: APIPlugin.CustomRegion.tier
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomRegion.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: tier
    path: ../InscryptionAPI/Compatibility/CustomRegion.cs
    startLine: 32
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public int? tier
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public tier As Integer?
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomRegion.terrainCards
  commentId: F:APIPlugin.CustomRegion.terrainCards
  id: terrainCards
  parent: APIPlugin.CustomRegion
  langs:
  - csharp
  - vb
  name: terrainCards
  nameWithType: CustomRegion.terrainCards
  fullName: APIPlugin.CustomRegion.terrainCards
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomRegion.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: terrainCards
    path: ../InscryptionAPI/Compatibility/CustomRegion.cs
    startLine: 33
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public List<CardInfo> terrainCards
    return:
      type: List{DiskCardGame.CardInfo}
    content.vb: Public terrainCards As List(Of CardInfo)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomRegion.consumableItems
  commentId: F:APIPlugin.CustomRegion.consumableItems
  id: consumableItems
  parent: APIPlugin.CustomRegion
  langs:
  - csharp
  - vb
  name: consumableItems
  nameWithType: CustomRegion.consumableItems
  fullName: APIPlugin.CustomRegion.consumableItems
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomRegion.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: consumableItems
    path: ../InscryptionAPI/Compatibility/CustomRegion.cs
    startLine: 34
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public List<ConsumableItemData> consumableItems
    return:
      type: List{DiskCardGame.ConsumableItemData}
    content.vb: Public consumableItems As List(Of ConsumableItemData)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomRegion.encounters
  commentId: F:APIPlugin.CustomRegion.encounters
  id: encounters
  parent: APIPlugin.CustomRegion
  langs:
  - csharp
  - vb
  name: encounters
  nameWithType: CustomRegion.encounters
  fullName: APIPlugin.CustomRegion.encounters
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomRegion.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: encounters
    path: ../InscryptionAPI/Compatibility/CustomRegion.cs
    startLine: 35
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public List<EncounterBlueprintData> encounters
    return:
      type: List{DiskCardGame.EncounterBlueprintData}
    content.vb: Public encounters As List(Of EncounterBlueprintData)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomRegion.bosses
  commentId: F:APIPlugin.CustomRegion.bosses
  id: bosses
  parent: APIPlugin.CustomRegion
  langs:
  - csharp
  - vb
  name: bosses
  nameWithType: CustomRegion.bosses
  fullName: APIPlugin.CustomRegion.bosses
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomRegion.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: bosses
    path: ../InscryptionAPI/Compatibility/CustomRegion.cs
    startLine: 36
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public List<Opponent.Type> bosses
    return:
      type: List{DiskCardGame.Opponent.Type}
    content.vb: Public bosses As List(Of Opponent.Type)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomRegion.likelyCards
  commentId: F:APIPlugin.CustomRegion.likelyCards
  id: likelyCards
  parent: APIPlugin.CustomRegion
  langs:
  - csharp
  - vb
  name: likelyCards
  nameWithType: CustomRegion.likelyCards
  fullName: APIPlugin.CustomRegion.likelyCards
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomRegion.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: likelyCards
    path: ../InscryptionAPI/Compatibility/CustomRegion.cs
    startLine: 37
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public List<CardInfo> likelyCards
    return:
      type: List{DiskCardGame.CardInfo}
    content.vb: Public likelyCards As List(Of CardInfo)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomRegion.dominantTribes
  commentId: F:APIPlugin.CustomRegion.dominantTribes
  id: dominantTribes
  parent: APIPlugin.CustomRegion
  langs:
  - csharp
  - vb
  name: dominantTribes
  nameWithType: CustomRegion.dominantTribes
  fullName: APIPlugin.CustomRegion.dominantTribes
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomRegion.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: dominantTribes
    path: ../InscryptionAPI/Compatibility/CustomRegion.cs
    startLine: 38
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public List<Tribe> dominantTribes
    return:
      type: List{DiskCardGame.Tribe}
    content.vb: Public dominantTribes As List(Of Tribe)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomRegion.predefinedNodes
  commentId: F:APIPlugin.CustomRegion.predefinedNodes
  id: predefinedNodes
  parent: APIPlugin.CustomRegion
  langs:
  - csharp
  - vb
  name: predefinedNodes
  nameWithType: CustomRegion.predefinedNodes
  fullName: APIPlugin.CustomRegion.predefinedNodes
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomRegion.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: predefinedNodes
    path: ../InscryptionAPI/Compatibility/CustomRegion.cs
    startLine: 39
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public PredefinedNodes predefinedNodes
    return:
      type: DiskCardGame.PredefinedNodes
    content.vb: Public predefinedNodes As PredefinedNodes
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomRegion.bossPrepEncounter
  commentId: F:APIPlugin.CustomRegion.bossPrepEncounter
  id: bossPrepEncounter
  parent: APIPlugin.CustomRegion
  langs:
  - csharp
  - vb
  name: bossPrepEncounter
  nameWithType: CustomRegion.bossPrepEncounter
  fullName: APIPlugin.CustomRegion.bossPrepEncounter
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomRegion.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: bossPrepEncounter
    path: ../InscryptionAPI/Compatibility/CustomRegion.cs
    startLine: 40
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public EncounterBlueprintData bossPrepEncounter
    return:
      type: DiskCardGame.EncounterBlueprintData
    content.vb: Public bossPrepEncounter As EncounterBlueprintData
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomRegion.bossPrepCondition
  commentId: F:APIPlugin.CustomRegion.bossPrepCondition
  id: bossPrepCondition
  parent: APIPlugin.CustomRegion
  langs:
  - csharp
  - vb
  name: bossPrepCondition
  nameWithType: CustomRegion.bossPrepCondition
  fullName: APIPlugin.CustomRegion.bossPrepCondition
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomRegion.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: bossPrepCondition
    path: ../InscryptionAPI/Compatibility/CustomRegion.cs
    startLine: 41
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public StoryEventCondition bossPrepCondition
    return:
      type: DiskCardGame.StoryEventCondition
    content.vb: Public bossPrepCondition As StoryEventCondition
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomRegion.scarceScenery
  commentId: F:APIPlugin.CustomRegion.scarceScenery
  id: scarceScenery
  parent: APIPlugin.CustomRegion
  langs:
  - csharp
  - vb
  name: scarceScenery
  nameWithType: CustomRegion.scarceScenery
  fullName: APIPlugin.CustomRegion.scarceScenery
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomRegion.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: scarceScenery
    path: ../InscryptionAPI/Compatibility/CustomRegion.cs
    startLine: 42
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public List<ScarceSceneryEntry> scarceScenery
    return:
      type: List{DiskCardGame.ScarceSceneryEntry}
    content.vb: Public scarceScenery As List(Of ScarceSceneryEntry)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomRegion.fillerScenery
  commentId: F:APIPlugin.CustomRegion.fillerScenery
  id: fillerScenery
  parent: APIPlugin.CustomRegion
  langs:
  - csharp
  - vb
  name: fillerScenery
  nameWithType: CustomRegion.fillerScenery
  fullName: APIPlugin.CustomRegion.fillerScenery
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomRegion.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: fillerScenery
    path: ../InscryptionAPI/Compatibility/CustomRegion.cs
    startLine: 43
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public List<FillerSceneryEntry> fillerScenery
    return:
      type: List{DiskCardGame.FillerSceneryEntry}
    content.vb: Public fillerScenery As List(Of FillerSceneryEntry)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomRegion.predefinedScenery
  commentId: F:APIPlugin.CustomRegion.predefinedScenery
  id: predefinedScenery
  parent: APIPlugin.CustomRegion
  langs:
  - csharp
  - vb
  name: predefinedScenery
  nameWithType: CustomRegion.predefinedScenery
  fullName: APIPlugin.CustomRegion.predefinedScenery
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomRegion.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: predefinedScenery
    path: ../InscryptionAPI/Compatibility/CustomRegion.cs
    startLine: 44
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public PredefinedScenery predefinedScenery
    return:
      type: DiskCardGame.PredefinedScenery
    content.vb: Public predefinedScenery As PredefinedScenery
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomRegion.ambientLoopId
  commentId: F:APIPlugin.CustomRegion.ambientLoopId
  id: ambientLoopId
  parent: APIPlugin.CustomRegion
  langs:
  - csharp
  - vb
  name: ambientLoopId
  nameWithType: CustomRegion.ambientLoopId
  fullName: APIPlugin.CustomRegion.ambientLoopId
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomRegion.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: ambientLoopId
    path: ../InscryptionAPI/Compatibility/CustomRegion.cs
    startLine: 45
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public string ambientLoopId
    return:
      type: System.String
    content.vb: Public ambientLoopId As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomRegion.silenceCabinAmbience
  commentId: F:APIPlugin.CustomRegion.silenceCabinAmbience
  id: silenceCabinAmbience
  parent: APIPlugin.CustomRegion
  langs:
  - csharp
  - vb
  name: silenceCabinAmbience
  nameWithType: CustomRegion.silenceCabinAmbience
  fullName: APIPlugin.CustomRegion.silenceCabinAmbience
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomRegion.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: silenceCabinAmbience
    path: ../InscryptionAPI/Compatibility/CustomRegion.cs
    startLine: 46
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public bool? silenceCabinAmbience
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public silenceCabinAmbience As Boolean?
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomRegion.boardLightColor
  commentId: F:APIPlugin.CustomRegion.boardLightColor
  id: boardLightColor
  parent: APIPlugin.CustomRegion
  langs:
  - csharp
  - vb
  name: boardLightColor
  nameWithType: CustomRegion.boardLightColor
  fullName: APIPlugin.CustomRegion.boardLightColor
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomRegion.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: boardLightColor
    path: ../InscryptionAPI/Compatibility/CustomRegion.cs
    startLine: 47
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public Color? boardLightColor
    return:
      type: System.Nullable{UnityEngine.Color}
    content.vb: Public boardLightColor As Color?
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomRegion.cardsLightColor
  commentId: F:APIPlugin.CustomRegion.cardsLightColor
  id: cardsLightColor
  parent: APIPlugin.CustomRegion
  langs:
  - csharp
  - vb
  name: cardsLightColor
  nameWithType: CustomRegion.cardsLightColor
  fullName: APIPlugin.CustomRegion.cardsLightColor
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomRegion.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: cardsLightColor
    path: ../InscryptionAPI/Compatibility/CustomRegion.cs
    startLine: 48
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public Color? cardsLightColor
    return:
      type: System.Nullable{UnityEngine.Color}
    content.vb: Public cardsLightColor As Color?
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomRegion.dustParticlesDisabled
  commentId: F:APIPlugin.CustomRegion.dustParticlesDisabled
  id: dustParticlesDisabled
  parent: APIPlugin.CustomRegion
  langs:
  - csharp
  - vb
  name: dustParticlesDisabled
  nameWithType: CustomRegion.dustParticlesDisabled
  fullName: APIPlugin.CustomRegion.dustParticlesDisabled
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomRegion.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: dustParticlesDisabled
    path: ../InscryptionAPI/Compatibility/CustomRegion.cs
    startLine: 49
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public bool? dustParticlesDisabled
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public dustParticlesDisabled As Boolean?
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomRegion.fogEnabled
  commentId: F:APIPlugin.CustomRegion.fogEnabled
  id: fogEnabled
  parent: APIPlugin.CustomRegion
  langs:
  - csharp
  - vb
  name: fogEnabled
  nameWithType: CustomRegion.fogEnabled
  fullName: APIPlugin.CustomRegion.fogEnabled
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomRegion.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: fogEnabled
    path: ../InscryptionAPI/Compatibility/CustomRegion.cs
    startLine: 50
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public bool? fogEnabled
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public fogEnabled As Boolean?
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomRegion.fogProfile
  commentId: F:APIPlugin.CustomRegion.fogProfile
  id: fogProfile
  parent: APIPlugin.CustomRegion
  langs:
  - csharp
  - vb
  name: fogProfile
  nameWithType: CustomRegion.fogProfile
  fullName: APIPlugin.CustomRegion.fogProfile
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomRegion.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: fogProfile
    path: ../InscryptionAPI/Compatibility/CustomRegion.cs
    startLine: 51
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public VolumetricFogProfile fogProfile
    return:
      type: VolumetricFogAndMist.VolumetricFogProfile
    content.vb: Public fogProfile As VolumetricFogProfile
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomRegion.fogAlpha
  commentId: F:APIPlugin.CustomRegion.fogAlpha
  id: fogAlpha
  parent: APIPlugin.CustomRegion
  langs:
  - csharp
  - vb
  name: fogAlpha
  nameWithType: CustomRegion.fogAlpha
  fullName: APIPlugin.CustomRegion.fogAlpha
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomRegion.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: fogAlpha
    path: ../InscryptionAPI/Compatibility/CustomRegion.cs
    startLine: 52
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public float? fogAlpha
    return:
      type: System.Nullable{System.Single}
    content.vb: Public fogAlpha As Single?
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomRegion.mapAlbedo
  commentId: F:APIPlugin.CustomRegion.mapAlbedo
  id: mapAlbedo
  parent: APIPlugin.CustomRegion
  langs:
  - csharp
  - vb
  name: mapAlbedo
  nameWithType: CustomRegion.mapAlbedo
  fullName: APIPlugin.CustomRegion.mapAlbedo
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomRegion.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: mapAlbedo
    path: ../InscryptionAPI/Compatibility/CustomRegion.cs
    startLine: 53
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public Texture mapAlbedo
    return:
      type: UnityEngine.Texture
    content.vb: Public mapAlbedo As Texture
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomRegion.mapEmission
  commentId: F:APIPlugin.CustomRegion.mapEmission
  id: mapEmission
  parent: APIPlugin.CustomRegion
  langs:
  - csharp
  - vb
  name: mapEmission
  nameWithType: CustomRegion.mapEmission
  fullName: APIPlugin.CustomRegion.mapEmission
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomRegion.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: mapEmission
    path: ../InscryptionAPI/Compatibility/CustomRegion.cs
    startLine: 54
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public Texture mapEmission
    return:
      type: UnityEngine.Texture
    content.vb: Public mapEmission As Texture
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomRegion.mapEmissionColor
  commentId: F:APIPlugin.CustomRegion.mapEmissionColor
  id: mapEmissionColor
  parent: APIPlugin.CustomRegion
  langs:
  - csharp
  - vb
  name: mapEmissionColor
  nameWithType: CustomRegion.mapEmissionColor
  fullName: APIPlugin.CustomRegion.mapEmissionColor
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomRegion.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: mapEmissionColor
    path: ../InscryptionAPI/Compatibility/CustomRegion.cs
    startLine: 55
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public Color? mapEmissionColor
    return:
      type: System.Nullable{UnityEngine.Color}
    content.vb: Public mapEmissionColor As Color?
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomRegion.mapParticlesPrefabs
  commentId: F:APIPlugin.CustomRegion.mapParticlesPrefabs
  id: mapParticlesPrefabs
  parent: APIPlugin.CustomRegion
  langs:
  - csharp
  - vb
  name: mapParticlesPrefabs
  nameWithType: CustomRegion.mapParticlesPrefabs
  fullName: APIPlugin.CustomRegion.mapParticlesPrefabs
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomRegion.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: mapParticlesPrefabs
    path: ../InscryptionAPI/Compatibility/CustomRegion.cs
    startLine: 56
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public List<GameObject> mapParticlesPrefabs
    return:
      type: List{UnityEngine.GameObject}
    content.vb: Public mapParticlesPrefabs As List(Of GameObject)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: APIPlugin
  commentId: N:APIPlugin
  name: APIPlugin
  nameWithType: APIPlugin
  fullName: APIPlugin
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: APIPlugin.CustomRegion.#ctor*
  commentId: Overload:APIPlugin.CustomRegion.#ctor
  name: CustomRegion
  nameWithType: CustomRegion.CustomRegion
  fullName: APIPlugin.CustomRegion.CustomRegion
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: APIPlugin.CustomRegion.ModifyRegions*
  commentId: Overload:APIPlugin.CustomRegion.ModifyRegions
  name: ModifyRegions
  nameWithType: CustomRegion.ModifyRegions
  fullName: APIPlugin.CustomRegion.ModifyRegions
- uid: List{DiskCardGame.RegionData}
  commentId: '!:List{DiskCardGame.RegionData}'
  definition: List`1
  name: List<RegionData>
  nameWithType: List<RegionData>
  fullName: List<DiskCardGame.RegionData>
  nameWithType.vb: List(Of RegionData)
  fullName.vb: List(Of DiskCardGame.RegionData)
  name.vb: List(Of RegionData)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DiskCardGame.RegionData
    name: RegionData
    nameWithType: RegionData
    fullName: DiskCardGame.RegionData
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DiskCardGame.RegionData
    name: RegionData
    nameWithType: RegionData
    fullName: DiskCardGame.RegionData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: APIPlugin.CustomRegion.AdjustRegion*
  commentId: Overload:APIPlugin.CustomRegion.AdjustRegion
  name: AdjustRegion
  nameWithType: CustomRegion.AdjustRegion
  fullName: APIPlugin.CustomRegion.AdjustRegion
- uid: DiskCardGame.RegionData
  commentId: T:DiskCardGame.RegionData
  parent: DiskCardGame
  isExternal: true
  name: RegionData
  nameWithType: RegionData
  fullName: DiskCardGame.RegionData
- uid: DiskCardGame
  commentId: N:DiskCardGame
  isExternal: true
  name: DiskCardGame
  nameWithType: DiskCardGame
  fullName: DiskCardGame
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: List{DiskCardGame.CardInfo}
  commentId: '!:List{DiskCardGame.CardInfo}'
  definition: List`1
  name: List<CardInfo>
  nameWithType: List<CardInfo>
  fullName: List<DiskCardGame.CardInfo>
  nameWithType.vb: List(Of CardInfo)
  fullName.vb: List(Of DiskCardGame.CardInfo)
  name.vb: List(Of CardInfo)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DiskCardGame.CardInfo
    name: CardInfo
    nameWithType: CardInfo
    fullName: DiskCardGame.CardInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DiskCardGame.CardInfo
    name: CardInfo
    nameWithType: CardInfo
    fullName: DiskCardGame.CardInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: List{DiskCardGame.ConsumableItemData}
  commentId: '!:List{DiskCardGame.ConsumableItemData}'
  definition: List`1
  name: List<ConsumableItemData>
  nameWithType: List<ConsumableItemData>
  fullName: List<DiskCardGame.ConsumableItemData>
  nameWithType.vb: List(Of ConsumableItemData)
  fullName.vb: List(Of DiskCardGame.ConsumableItemData)
  name.vb: List(Of ConsumableItemData)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DiskCardGame.ConsumableItemData
    name: ConsumableItemData
    nameWithType: ConsumableItemData
    fullName: DiskCardGame.ConsumableItemData
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DiskCardGame.ConsumableItemData
    name: ConsumableItemData
    nameWithType: ConsumableItemData
    fullName: DiskCardGame.ConsumableItemData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: List{DiskCardGame.EncounterBlueprintData}
  commentId: '!:List{DiskCardGame.EncounterBlueprintData}'
  definition: List`1
  name: List<EncounterBlueprintData>
  nameWithType: List<EncounterBlueprintData>
  fullName: List<DiskCardGame.EncounterBlueprintData>
  nameWithType.vb: List(Of EncounterBlueprintData)
  fullName.vb: List(Of DiskCardGame.EncounterBlueprintData)
  name.vb: List(Of EncounterBlueprintData)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DiskCardGame.EncounterBlueprintData
    name: EncounterBlueprintData
    nameWithType: EncounterBlueprintData
    fullName: DiskCardGame.EncounterBlueprintData
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DiskCardGame.EncounterBlueprintData
    name: EncounterBlueprintData
    nameWithType: EncounterBlueprintData
    fullName: DiskCardGame.EncounterBlueprintData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: List{DiskCardGame.Opponent.Type}
  commentId: '!:List{DiskCardGame.Opponent.Type}'
  definition: List`1
  name: List<Opponent.Type>
  nameWithType: List<Opponent.Type>
  fullName: List<DiskCardGame.Opponent.Type>
  nameWithType.vb: List(Of Opponent.Type)
  fullName.vb: List(Of DiskCardGame.Opponent.Type)
  name.vb: List(Of Opponent.Type)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DiskCardGame.Opponent.Type
    name: Opponent.Type
    nameWithType: Opponent.Type
    fullName: DiskCardGame.Opponent.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DiskCardGame.Opponent.Type
    name: Opponent.Type
    nameWithType: Opponent.Type
    fullName: DiskCardGame.Opponent.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: List{DiskCardGame.Tribe}
  commentId: '!:List{DiskCardGame.Tribe}'
  definition: List`1
  name: List<Tribe>
  nameWithType: List<Tribe>
  fullName: List<DiskCardGame.Tribe>
  nameWithType.vb: List(Of Tribe)
  fullName.vb: List(Of DiskCardGame.Tribe)
  name.vb: List(Of Tribe)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DiskCardGame.Tribe
    name: Tribe
    nameWithType: Tribe
    fullName: DiskCardGame.Tribe
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DiskCardGame.Tribe
    name: Tribe
    nameWithType: Tribe
    fullName: DiskCardGame.Tribe
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DiskCardGame.PredefinedNodes
  commentId: T:DiskCardGame.PredefinedNodes
  parent: DiskCardGame
  isExternal: true
  name: PredefinedNodes
  nameWithType: PredefinedNodes
  fullName: DiskCardGame.PredefinedNodes
- uid: DiskCardGame.EncounterBlueprintData
  commentId: T:DiskCardGame.EncounterBlueprintData
  parent: DiskCardGame
  isExternal: true
  name: EncounterBlueprintData
  nameWithType: EncounterBlueprintData
  fullName: DiskCardGame.EncounterBlueprintData
- uid: DiskCardGame.StoryEventCondition
  commentId: T:DiskCardGame.StoryEventCondition
  parent: DiskCardGame
  isExternal: true
  name: StoryEventCondition
  nameWithType: StoryEventCondition
  fullName: DiskCardGame.StoryEventCondition
- uid: List{DiskCardGame.ScarceSceneryEntry}
  commentId: '!:List{DiskCardGame.ScarceSceneryEntry}'
  definition: List`1
  name: List<ScarceSceneryEntry>
  nameWithType: List<ScarceSceneryEntry>
  fullName: List<DiskCardGame.ScarceSceneryEntry>
  nameWithType.vb: List(Of ScarceSceneryEntry)
  fullName.vb: List(Of DiskCardGame.ScarceSceneryEntry)
  name.vb: List(Of ScarceSceneryEntry)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DiskCardGame.ScarceSceneryEntry
    name: ScarceSceneryEntry
    nameWithType: ScarceSceneryEntry
    fullName: DiskCardGame.ScarceSceneryEntry
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DiskCardGame.ScarceSceneryEntry
    name: ScarceSceneryEntry
    nameWithType: ScarceSceneryEntry
    fullName: DiskCardGame.ScarceSceneryEntry
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: List{DiskCardGame.FillerSceneryEntry}
  commentId: '!:List{DiskCardGame.FillerSceneryEntry}'
  definition: List`1
  name: List<FillerSceneryEntry>
  nameWithType: List<FillerSceneryEntry>
  fullName: List<DiskCardGame.FillerSceneryEntry>
  nameWithType.vb: List(Of FillerSceneryEntry)
  fullName.vb: List(Of DiskCardGame.FillerSceneryEntry)
  name.vb: List(Of FillerSceneryEntry)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DiskCardGame.FillerSceneryEntry
    name: FillerSceneryEntry
    nameWithType: FillerSceneryEntry
    fullName: DiskCardGame.FillerSceneryEntry
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DiskCardGame.FillerSceneryEntry
    name: FillerSceneryEntry
    nameWithType: FillerSceneryEntry
    fullName: DiskCardGame.FillerSceneryEntry
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DiskCardGame.PredefinedScenery
  commentId: T:DiskCardGame.PredefinedScenery
  parent: DiskCardGame
  isExternal: true
  name: PredefinedScenery
  nameWithType: PredefinedScenery
  fullName: DiskCardGame.PredefinedScenery
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{UnityEngine.Color}
  commentId: T:System.Nullable{UnityEngine.Color}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Color>
  nameWithType: Nullable<Color>
  fullName: System.Nullable<UnityEngine.Color>
  nameWithType.vb: Nullable(Of Color)
  fullName.vb: System.Nullable(Of UnityEngine.Color)
  name.vb: Nullable(Of Color)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: UnityEngine.Color
    name: Color
    nameWithType: Color
    fullName: UnityEngine.Color
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: UnityEngine.Color
    name: Color
    nameWithType: Color
    fullName: UnityEngine.Color
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VolumetricFogAndMist.VolumetricFogProfile
  commentId: T:VolumetricFogAndMist.VolumetricFogProfile
  parent: VolumetricFogAndMist
  isExternal: true
  name: VolumetricFogProfile
  nameWithType: VolumetricFogProfile
  fullName: VolumetricFogAndMist.VolumetricFogProfile
- uid: VolumetricFogAndMist
  commentId: N:VolumetricFogAndMist
  isExternal: true
  name: VolumetricFogAndMist
  nameWithType: VolumetricFogAndMist
  fullName: VolumetricFogAndMist
- uid: System.Nullable{System.Single}
  commentId: T:System.Nullable{System.Single}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Single>
  nameWithType: Nullable<Single>
  fullName: System.Nullable<System.Single>
  nameWithType.vb: Nullable(Of Single)
  fullName.vb: System.Nullable(Of System.Single)
  name.vb: Nullable(Of Single)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Texture
  commentId: T:UnityEngine.Texture
  parent: UnityEngine
  isExternal: true
  name: Texture
  nameWithType: Texture
  fullName: UnityEngine.Texture
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: List{UnityEngine.GameObject}
  commentId: '!:List{UnityEngine.GameObject}'
  definition: List`1
  name: List<GameObject>
  nameWithType: List<GameObject>
  fullName: List<UnityEngine.GameObject>
  nameWithType.vb: List(Of GameObject)
  fullName.vb: List(Of UnityEngine.GameObject)
  name.vb: List(Of GameObject)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: UnityEngine.GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: UnityEngine.GameObject
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: UnityEngine.GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: UnityEngine.GameObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
