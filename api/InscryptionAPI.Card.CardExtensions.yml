### YamlMime:ManagedReference
items:
- uid: InscryptionAPI.Card.CardExtensions
  commentId: T:InscryptionAPI.Card.CardExtensions
  id: CardExtensions
  parent: InscryptionAPI.Card
  children:
  - InscryptionAPI.Card.CardExtensions.AddAbilities(DiskCardGame.CardInfo,DiskCardGame.Ability[])
  - InscryptionAPI.Card.CardExtensions.AddAppearances(DiskCardGame.CardInfo,DiskCardGame.CardAppearanceBehaviour.Appearance[])
  - InscryptionAPI.Card.CardExtensions.AddDecal(DiskCardGame.CardInfo,System.String[])
  - InscryptionAPI.Card.CardExtensions.AddDecal(DiskCardGame.CardInfo,UnityEngine.Texture[])
  - InscryptionAPI.Card.CardExtensions.AddMetaCategories(DiskCardGame.CardInfo,DiskCardGame.CardMetaCategory[])
  - InscryptionAPI.Card.CardExtensions.AddSpecialAbilities(DiskCardGame.CardInfo,DiskCardGame.SpecialTriggeredAbility[])
  - InscryptionAPI.Card.CardExtensions.AddTraits(DiskCardGame.CardInfo,DiskCardGame.Trait[])
  - InscryptionAPI.Card.CardExtensions.AddTribes(DiskCardGame.CardInfo,DiskCardGame.Tribe[])
  - InscryptionAPI.Card.CardExtensions.CardByName(IEnumerable{DiskCardGame.CardInfo},System.String)
  - InscryptionAPI.Card.CardExtensions.CreateBlueprint(DiskCardGame.CardInfo)
  - InscryptionAPI.Card.CardExtensions.CreateBlueprint(System.String)
  - InscryptionAPI.Card.CardExtensions.DoesNotHaveAbility(DiskCardGame.CardInfo,DiskCardGame.Ability)
  - InscryptionAPI.Card.CardExtensions.DoesNotHaveAbility(DiskCardGame.PlayableCard,DiskCardGame.Ability)
  - InscryptionAPI.Card.CardExtensions.DoesNotHaveSpecialAbility(DiskCardGame.CardInfo,DiskCardGame.SpecialTriggeredAbility)
  - InscryptionAPI.Card.CardExtensions.DoesNotHaveSpecialAbility(DiskCardGame.PlayableCard,DiskCardGame.SpecialTriggeredAbility)
  - InscryptionAPI.Card.CardExtensions.GetCardInfo(System.String)
  - InscryptionAPI.Card.CardExtensions.GetExtendedProperty(DiskCardGame.CardInfo,System.String)
  - InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsBool(DiskCardGame.CardInfo,System.String)
  - InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsFloat(DiskCardGame.CardInfo,System.String)
  - InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsInt(DiskCardGame.CardInfo,System.String)
  - InscryptionAPI.Card.CardExtensions.GetModPrefix(DiskCardGame.CardInfo)
  - InscryptionAPI.Card.CardExtensions.GetModTag(DiskCardGame.CardInfo)
  - InscryptionAPI.Card.CardExtensions.HasSpecialAbility(DiskCardGame.PlayableCard,DiskCardGame.SpecialTriggeredAbility)
  - InscryptionAPI.Card.CardExtensions.IsBaseGameCard(DiskCardGame.CardInfo)
  - InscryptionAPI.Card.CardExtensions.SetAltPortrait(DiskCardGame.CardInfo,System.String)
  - InscryptionAPI.Card.CardExtensions.SetAltPortrait(DiskCardGame.CardInfo,UnityEngine.Sprite)
  - InscryptionAPI.Card.CardExtensions.SetAltPortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  - InscryptionAPI.Card.CardExtensions.SetBaseAttackAndHealth(DiskCardGame.CardInfo,System.Nullable{System.Int32},System.Nullable{System.Int32})
  - InscryptionAPI.Card.CardExtensions.SetBasic(DiskCardGame.CardInfo,System.String,System.Int32,System.Int32,System.String)
  - InscryptionAPI.Card.CardExtensions.SetBloodCost(DiskCardGame.CardInfo,System.Nullable{System.Int32})
  - InscryptionAPI.Card.CardExtensions.SetBonesCost(DiskCardGame.CardInfo,System.Nullable{System.Int32})
  - InscryptionAPI.Card.CardExtensions.SetCost(DiskCardGame.CardInfo,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},List{DiskCardGame.GemType})
  - InscryptionAPI.Card.CardExtensions.SetDefaultPart1Card(DiskCardGame.CardInfo)
  - InscryptionAPI.Card.CardExtensions.SetDefaultPart3Card(DiskCardGame.CardInfo)
  - InscryptionAPI.Card.CardExtensions.SetDisplayedName(DiskCardGame.CardInfo,System.String)
  - InscryptionAPI.Card.CardExtensions.SetEmissiveAltPortrait(DiskCardGame.CardInfo,System.String)
  - InscryptionAPI.Card.CardExtensions.SetEmissiveAltPortrait(DiskCardGame.CardInfo,UnityEngine.Sprite)
  - InscryptionAPI.Card.CardExtensions.SetEmissiveAltPortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  - InscryptionAPI.Card.CardExtensions.SetEmissivePortrait(DiskCardGame.CardInfo,System.String)
  - InscryptionAPI.Card.CardExtensions.SetEmissivePortrait(DiskCardGame.CardInfo,UnityEngine.Sprite)
  - InscryptionAPI.Card.CardExtensions.SetEmissivePortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  - InscryptionAPI.Card.CardExtensions.SetEnergyCost(DiskCardGame.CardInfo,System.Nullable{System.Int32})
  - InscryptionAPI.Card.CardExtensions.SetEvolve(DiskCardGame.CardInfo,DiskCardGame.CardInfo,System.Int32,IEnumerable{DiskCardGame.CardModificationInfo})
  - InscryptionAPI.Card.CardExtensions.SetEvolve(DiskCardGame.CardInfo,System.String,System.Int32,IEnumerable{DiskCardGame.CardModificationInfo})
  - InscryptionAPI.Card.CardExtensions.SetExtendedProperty(DiskCardGame.CardInfo,System.String,System.Object)
  - InscryptionAPI.Card.CardExtensions.SetGBCPlayable(DiskCardGame.CardInfo,CardTemple)
  - InscryptionAPI.Card.CardExtensions.SetGemsCost(DiskCardGame.CardInfo,List{DiskCardGame.GemType})
  - InscryptionAPI.Card.CardExtensions.SetIceCube(DiskCardGame.CardInfo,DiskCardGame.CardInfo,IEnumerable{DiskCardGame.CardModificationInfo})
  - InscryptionAPI.Card.CardExtensions.SetIceCube(DiskCardGame.CardInfo,System.String,IEnumerable{DiskCardGame.CardModificationInfo})
  - InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.CardInfo,System.String)
  - InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  - InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.TailParams,System.String,DiskCardGame.CardInfo)
  - InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.TailParams,UnityEngine.Sprite,DiskCardGame.CardInfo)
  - InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.TailParams,UnityEngine.Texture2D,DiskCardGame.CardInfo,System.Nullable{UnityEngine.FilterMode})
  - InscryptionAPI.Card.CardExtensions.SetName(DiskCardGame.CardInfo,System.String,System.String)
  - InscryptionAPI.Card.CardExtensions.SetNames(DiskCardGame.CardInfo,System.String,System.String,System.String)
  - InscryptionAPI.Card.CardExtensions.SetPixelPortrait(DiskCardGame.CardInfo,System.String)
  - InscryptionAPI.Card.CardExtensions.SetPixelPortrait(DiskCardGame.CardInfo,UnityEngine.Sprite)
  - InscryptionAPI.Card.CardExtensions.SetPixelPortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  - InscryptionAPI.Card.CardExtensions.SetPortrait(DiskCardGame.CardInfo,System.String)
  - InscryptionAPI.Card.CardExtensions.SetPortrait(DiskCardGame.CardInfo,UnityEngine.Sprite)
  - InscryptionAPI.Card.CardExtensions.SetPortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  - InscryptionAPI.Card.CardExtensions.SetPortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  - InscryptionAPI.Card.CardExtensions.SetPortraitAndEmission(DiskCardGame.CardInfo,System.String,System.String)
  - InscryptionAPI.Card.CardExtensions.SetPortraitAndEmission(DiskCardGame.CardInfo,UnityEngine.Sprite,UnityEngine.Sprite)
  - InscryptionAPI.Card.CardExtensions.SetPortraitAndEmission(DiskCardGame.CardInfo,UnityEngine.Texture2D,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  - InscryptionAPI.Card.CardExtensions.SetRare(DiskCardGame.CardInfo)
  - InscryptionAPI.Card.CardExtensions.SetSpecialAbilities(DiskCardGame.CardInfo,DiskCardGame.SpecialTriggeredAbility[])
  - InscryptionAPI.Card.CardExtensions.SetStatIcon(DiskCardGame.CardInfo,DiskCardGame.SpecialStatIcon)
  - InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo,DiskCardGame.CardInfo,UnityEngine.Sprite,IEnumerable{DiskCardGame.CardModificationInfo})
  - InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo,DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode},IEnumerable{DiskCardGame.CardModificationInfo})
  - InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo,System.String,System.String,IEnumerable{DiskCardGame.CardModificationInfo})
  - InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo,System.String,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode},IEnumerable{DiskCardGame.CardModificationInfo})
  - InscryptionAPI.Card.CardExtensions.SetTerrain(DiskCardGame.CardInfo)
  - InscryptionAPI.Card.CardExtensions.SetTraits(DiskCardGame.CardInfo,DiskCardGame.Trait[])
  - InscryptionAPI.Card.CardExtensions.SetTribes(DiskCardGame.CardInfo,DiskCardGame.Tribe[])
  langs:
  - csharp
  - vb
  name: CardExtensions
  nameWithType: CardExtensions
  fullName: InscryptionAPI.Card.CardExtensions
  type: Class
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: CardExtensions
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 7
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  syntax:
    content: public static class CardExtensions
    content.vb: Public Module CardExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: InscryptionAPI.Card.CardExtensions.CardByName(IEnumerable{DiskCardGame.CardInfo},System.String)
  commentId: M:InscryptionAPI.Card.CardExtensions.CardByName(IEnumerable{DiskCardGame.CardInfo},System.String)
  id: CardByName(IEnumerable{DiskCardGame.CardInfo},System.String)
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: CardByName(IEnumerable<CardInfo>, String)
  nameWithType: CardExtensions.CardByName(IEnumerable<CardInfo>, String)
  fullName: InscryptionAPI.Card.CardExtensions.CardByName(IEnumerable<DiskCardGame.CardInfo>, System.String)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: CardByName
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 15
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nGets the first card matching the given name, or null if it does not exist\n"
  example: []
  syntax:
    content: public static CardInfo CardByName(this IEnumerable<CardInfo> cards, string name)
    parameters:
    - id: cards
      type: IEnumerable{DiskCardGame.CardInfo}
      description: An enumeration of Inscryption cards
    - id: name
      type: System.String
      description: The name to search for (case sensitive).
    return:
      type: DiskCardGame.CardInfo
      description: The first matching card, or null if no match
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CardByName(cards As IEnumerable(Of CardInfo), name As String) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.CardByName*
  nameWithType.vb: CardExtensions.CardByName(IEnumerable(Of CardInfo), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionAPI.Card.CardExtensions.CardByName(IEnumerable(Of DiskCardGame.CardInfo), System.String)
  name.vb: CardByName(IEnumerable(Of CardInfo), String)
- uid: InscryptionAPI.Card.CardExtensions.AddAbilities(DiskCardGame.CardInfo,DiskCardGame.Ability[])
  commentId: M:InscryptionAPI.Card.CardExtensions.AddAbilities(DiskCardGame.CardInfo,DiskCardGame.Ability[])
  id: AddAbilities(DiskCardGame.CardInfo,DiskCardGame.Ability[])
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: AddAbilities(CardInfo, Ability[])
  nameWithType: CardExtensions.AddAbilities(CardInfo, Ability[])
  fullName: InscryptionAPI.Card.CardExtensions.AddAbilities(DiskCardGame.CardInfo, DiskCardGame.Ability[])
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: AddAbilities
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 33
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nAdds any number of abilities to the the card. Abilities can be added multiple times.\n"
  example: []
  syntax:
    content: public static CardInfo AddAbilities(this CardInfo info, params Ability[] abilities)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: abilities
      type: DiskCardGame.Ability[]
      description: The abilities to add
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddAbilities(info As CardInfo, ParamArray abilities As Ability()) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.AddAbilities*
  nameWithType.vb: CardExtensions.AddAbilities(CardInfo, Ability())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionAPI.Card.CardExtensions.AddAbilities(DiskCardGame.CardInfo, DiskCardGame.Ability())
  name.vb: AddAbilities(CardInfo, Ability())
- uid: InscryptionAPI.Card.CardExtensions.AddAppearances(DiskCardGame.CardInfo,DiskCardGame.CardAppearanceBehaviour.Appearance[])
  commentId: M:InscryptionAPI.Card.CardExtensions.AddAppearances(DiskCardGame.CardInfo,DiskCardGame.CardAppearanceBehaviour.Appearance[])
  id: AddAppearances(DiskCardGame.CardInfo,DiskCardGame.CardAppearanceBehaviour.Appearance[])
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: AddAppearances(CardInfo, CardAppearanceBehaviour.Appearance[])
  nameWithType: CardExtensions.AddAppearances(CardInfo, CardAppearanceBehaviour.Appearance[])
  fullName: InscryptionAPI.Card.CardExtensions.AddAppearances(DiskCardGame.CardInfo, DiskCardGame.CardAppearanceBehaviour.Appearance[])
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: AddAppearances
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 46
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nAdds any number of appearance behaviors to the the card. Duplicate appearance behaviors are ignored.\n"
  example: []
  syntax:
    content: public static CardInfo AddAppearances(this CardInfo info, params CardAppearanceBehaviour.Appearance[] appearances)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: appearances
      type: DiskCardGame.CardAppearanceBehaviour.Appearance[]
      description: The appearances to add
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddAppearances(info As CardInfo, ParamArray appearances As CardAppearanceBehaviour.Appearance()) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.AddAppearances*
  nameWithType.vb: CardExtensions.AddAppearances(CardInfo, CardAppearanceBehaviour.Appearance())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionAPI.Card.CardExtensions.AddAppearances(DiskCardGame.CardInfo, DiskCardGame.CardAppearanceBehaviour.Appearance())
  name.vb: AddAppearances(CardInfo, CardAppearanceBehaviour.Appearance())
- uid: InscryptionAPI.Card.CardExtensions.AddDecal(DiskCardGame.CardInfo,UnityEngine.Texture[])
  commentId: M:InscryptionAPI.Card.CardExtensions.AddDecal(DiskCardGame.CardInfo,UnityEngine.Texture[])
  id: AddDecal(DiskCardGame.CardInfo,UnityEngine.Texture[])
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: AddDecal(CardInfo, Texture[])
  nameWithType: CardExtensions.AddDecal(CardInfo, Texture[])
  fullName: InscryptionAPI.Card.CardExtensions.AddDecal(DiskCardGame.CardInfo, UnityEngine.Texture[])
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: AddDecal
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 61
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nAdds any number of decals to the the card. Duplicate decals are ignored.\n"
  example: []
  syntax:
    content: public static CardInfo AddDecal(this CardInfo info, params Texture[] decals)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: decals
      type: UnityEngine.Texture[]
      description: The decals to add
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddDecal(info As CardInfo, ParamArray decals As Texture()) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.AddDecal*
  nameWithType.vb: CardExtensions.AddDecal(CardInfo, Texture())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionAPI.Card.CardExtensions.AddDecal(DiskCardGame.CardInfo, UnityEngine.Texture())
  name.vb: AddDecal(CardInfo, Texture())
- uid: InscryptionAPI.Card.CardExtensions.AddDecal(DiskCardGame.CardInfo,System.String[])
  commentId: M:InscryptionAPI.Card.CardExtensions.AddDecal(DiskCardGame.CardInfo,System.String[])
  id: AddDecal(DiskCardGame.CardInfo,System.String[])
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: AddDecal(CardInfo, String[])
  nameWithType: CardExtensions.AddDecal(CardInfo, String[])
  fullName: InscryptionAPI.Card.CardExtensions.AddDecal(DiskCardGame.CardInfo, System.String[])
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: AddDecal
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 77
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nAdds any number of decals to the the card. Duplicate decals are ignored.\n"
  example: []
  syntax:
    content: public static CardInfo AddDecal(this CardInfo info, params string[] decals)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: decals
      type: System.String[]
      description: The paths to the .png files containing the decals (relative to the Plugins directory)
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddDecal(info As CardInfo, ParamArray decals As String()) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.AddDecal*
  nameWithType.vb: CardExtensions.AddDecal(CardInfo, String())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionAPI.Card.CardExtensions.AddDecal(DiskCardGame.CardInfo, System.String())
  name.vb: AddDecal(CardInfo, String())
- uid: InscryptionAPI.Card.CardExtensions.AddMetaCategories(DiskCardGame.CardInfo,DiskCardGame.CardMetaCategory[])
  commentId: M:InscryptionAPI.Card.CardExtensions.AddMetaCategories(DiskCardGame.CardInfo,DiskCardGame.CardMetaCategory[])
  id: AddMetaCategories(DiskCardGame.CardInfo,DiskCardGame.CardMetaCategory[])
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: AddMetaCategories(CardInfo, CardMetaCategory[])
  nameWithType: CardExtensions.AddMetaCategories(CardInfo, CardMetaCategory[])
  fullName: InscryptionAPI.Card.CardExtensions.AddMetaCategories(DiskCardGame.CardInfo, DiskCardGame.CardMetaCategory[])
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: AddMetaCategories
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 91
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nAdds any number of metacategories to the the card. Duplicate metacategories are ignored.\n"
  example: []
  syntax:
    content: public static CardInfo AddMetaCategories(this CardInfo info, params CardMetaCategory[] categories)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: categories
      type: DiskCardGame.CardMetaCategory[]
      description: The categories to add
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddMetaCategories(info As CardInfo, ParamArray categories As CardMetaCategory()) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.AddMetaCategories*
  nameWithType.vb: CardExtensions.AddMetaCategories(CardInfo, CardMetaCategory())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionAPI.Card.CardExtensions.AddMetaCategories(DiskCardGame.CardInfo, DiskCardGame.CardMetaCategory())
  name.vb: AddMetaCategories(CardInfo, CardMetaCategory())
- uid: InscryptionAPI.Card.CardExtensions.AddSpecialAbilities(DiskCardGame.CardInfo,DiskCardGame.SpecialTriggeredAbility[])
  commentId: M:InscryptionAPI.Card.CardExtensions.AddSpecialAbilities(DiskCardGame.CardInfo,DiskCardGame.SpecialTriggeredAbility[])
  id: AddSpecialAbilities(DiskCardGame.CardInfo,DiskCardGame.SpecialTriggeredAbility[])
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: AddSpecialAbilities(CardInfo, SpecialTriggeredAbility[])
  nameWithType: CardExtensions.AddSpecialAbilities(CardInfo, SpecialTriggeredAbility[])
  fullName: InscryptionAPI.Card.CardExtensions.AddSpecialAbilities(DiskCardGame.CardInfo, DiskCardGame.SpecialTriggeredAbility[])
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: AddSpecialAbilities
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 106
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nAdds any number of special abilities to the the card. Duplicate special abilities are ignored.\n"
  example: []
  syntax:
    content: public static CardInfo AddSpecialAbilities(this CardInfo info, params SpecialTriggeredAbility[] abilities)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: abilities
      type: DiskCardGame.SpecialTriggeredAbility[]
      description: The abilities to add
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddSpecialAbilities(info As CardInfo, ParamArray abilities As SpecialTriggeredAbility()) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.AddSpecialAbilities*
  nameWithType.vb: CardExtensions.AddSpecialAbilities(CardInfo, SpecialTriggeredAbility())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionAPI.Card.CardExtensions.AddSpecialAbilities(DiskCardGame.CardInfo, DiskCardGame.SpecialTriggeredAbility())
  name.vb: AddSpecialAbilities(CardInfo, SpecialTriggeredAbility())
- uid: InscryptionAPI.Card.CardExtensions.AddTraits(DiskCardGame.CardInfo,DiskCardGame.Trait[])
  commentId: M:InscryptionAPI.Card.CardExtensions.AddTraits(DiskCardGame.CardInfo,DiskCardGame.Trait[])
  id: AddTraits(DiskCardGame.CardInfo,DiskCardGame.Trait[])
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: AddTraits(CardInfo, Trait[])
  nameWithType: CardExtensions.AddTraits(CardInfo, Trait[])
  fullName: InscryptionAPI.Card.CardExtensions.AddTraits(DiskCardGame.CardInfo, DiskCardGame.Trait[])
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: AddTraits
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 121
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nAdds any number of traits to the the card. Duplicate traits are ignored.\n"
  example: []
  syntax:
    content: public static CardInfo AddTraits(this CardInfo info, params Trait[] traits)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: traits
      type: DiskCardGame.Trait[]
      description: The traits to add
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddTraits(info As CardInfo, ParamArray traits As Trait()) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.AddTraits*
  nameWithType.vb: CardExtensions.AddTraits(CardInfo, Trait())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionAPI.Card.CardExtensions.AddTraits(DiskCardGame.CardInfo, DiskCardGame.Trait())
  name.vb: AddTraits(CardInfo, Trait())
- uid: InscryptionAPI.Card.CardExtensions.AddTribes(DiskCardGame.CardInfo,DiskCardGame.Tribe[])
  commentId: M:InscryptionAPI.Card.CardExtensions.AddTribes(DiskCardGame.CardInfo,DiskCardGame.Tribe[])
  id: AddTribes(DiskCardGame.CardInfo,DiskCardGame.Tribe[])
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: AddTribes(CardInfo, Tribe[])
  nameWithType: CardExtensions.AddTribes(CardInfo, Tribe[])
  fullName: InscryptionAPI.Card.CardExtensions.AddTribes(DiskCardGame.CardInfo, DiskCardGame.Tribe[])
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: AddTribes
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 136
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nAdds any number of tribes to the the card. Duplicate tribes are ignored.\n"
  example: []
  syntax:
    content: public static CardInfo AddTribes(this CardInfo info, params Tribe[] tribes)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: tribes
      type: DiskCardGame.Tribe[]
      description: The tribes to add
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddTribes(info As CardInfo, ParamArray tribes As Tribe()) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.AddTribes*
  nameWithType.vb: CardExtensions.AddTribes(CardInfo, Tribe())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionAPI.Card.CardExtensions.AddTribes(DiskCardGame.CardInfo, DiskCardGame.Tribe())
  name.vb: AddTribes(CardInfo, Tribe())
- uid: InscryptionAPI.Card.CardExtensions.SetBasic(DiskCardGame.CardInfo,System.String,System.Int32,System.Int32,System.String)
  commentId: M:InscryptionAPI.Card.CardExtensions.SetBasic(DiskCardGame.CardInfo,System.String,System.Int32,System.Int32,System.String)
  id: SetBasic(DiskCardGame.CardInfo,System.String,System.Int32,System.Int32,System.String)
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: SetBasic(CardInfo, String, Int32, Int32, String)
  nameWithType: CardExtensions.SetBasic(CardInfo, String, Int32, Int32, String)
  fullName: InscryptionAPI.Card.CardExtensions.SetBasic(DiskCardGame.CardInfo, System.String, System.Int32, System.Int32, System.String)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SetBasic
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 158
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nSets a number of basic properties of the card\n"
  example: []
  syntax:
    content: public static CardInfo SetBasic(this CardInfo info, string displayedName, int attack, int health, string description = null)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: displayedName
      type: System.String
      description: Displayed name of the card
    - id: attack
      type: System.Int32
      description: Attack of the card
    - id: health
      type: System.Int32
      description: Health of the card
    - id: description
      type: System.String
      description: The description that plays when the card is seen for the first time.
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetBasic(info As CardInfo, displayedName As String, attack As Integer, health As Integer, description As String = Nothing) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.SetBasic*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Card.CardExtensions.IsBaseGameCard(DiskCardGame.CardInfo)
  commentId: M:InscryptionAPI.Card.CardExtensions.IsBaseGameCard(DiskCardGame.CardInfo)
  id: IsBaseGameCard(DiskCardGame.CardInfo)
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: IsBaseGameCard(CardInfo)
  nameWithType: CardExtensions.IsBaseGameCard(CardInfo)
  fullName: InscryptionAPI.Card.CardExtensions.IsBaseGameCard(DiskCardGame.CardInfo)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: IsBaseGameCard
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 184
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nIndicates if this is a base game card or not\n"
  example: []
  syntax:
    content: public static bool IsBaseGameCard(this CardInfo info)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    return:
      type: System.Boolean
      description: True of this card came from the base game; false otherwise
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsBaseGameCard(info As CardInfo) As Boolean
  overload: InscryptionAPI.Card.CardExtensions.IsBaseGameCard*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Card.CardExtensions.SetBaseAttackAndHealth(DiskCardGame.CardInfo,System.Nullable{System.Int32},System.Nullable{System.Int32})
  commentId: M:InscryptionAPI.Card.CardExtensions.SetBaseAttackAndHealth(DiskCardGame.CardInfo,System.Nullable{System.Int32},System.Nullable{System.Int32})
  id: SetBaseAttackAndHealth(DiskCardGame.CardInfo,System.Nullable{System.Int32},System.Nullable{System.Int32})
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: SetBaseAttackAndHealth(CardInfo, Nullable<Int32>, Nullable<Int32>)
  nameWithType: CardExtensions.SetBaseAttackAndHealth(CardInfo, Nullable<Int32>, Nullable<Int32>)
  fullName: InscryptionAPI.Card.CardExtensions.SetBaseAttackAndHealth(DiskCardGame.CardInfo, System.Nullable<System.Int32>, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SetBaseAttackAndHealth
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 199
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nSets the base attack and health of the card.\n"
  example: []
  syntax:
    content: public static CardInfo SetBaseAttackAndHealth(this CardInfo info, int? baseAttack = 0, int? baseHealth = 0)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: baseAttack
      type: System.Nullable{System.Int32}
      description: The base attack for the card
    - id: baseHealth
      type: System.Nullable{System.Int32}
      description: The base health for the card
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetBaseAttackAndHealth(info As CardInfo, baseAttack As Integer? = 0, baseHealth As Integer? = 0) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.SetBaseAttackAndHealth*
  nameWithType.vb: CardExtensions.SetBaseAttackAndHealth(CardInfo, Nullable(Of Int32), Nullable(Of Int32))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetBaseAttackAndHealth(DiskCardGame.CardInfo, System.Nullable(Of System.Int32), System.Nullable(Of System.Int32))
  name.vb: SetBaseAttackAndHealth(CardInfo, Nullable(Of Int32), Nullable(Of Int32))
- uid: InscryptionAPI.Card.CardExtensions.SetDisplayedName(DiskCardGame.CardInfo,System.String)
  commentId: M:InscryptionAPI.Card.CardExtensions.SetDisplayedName(DiskCardGame.CardInfo,System.String)
  id: SetDisplayedName(DiskCardGame.CardInfo,System.String)
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: SetDisplayedName(CardInfo, String)
  nameWithType: CardExtensions.SetDisplayedName(CardInfo, String)
  fullName: InscryptionAPI.Card.CardExtensions.SetDisplayedName(DiskCardGame.CardInfo, System.String)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SetDisplayedName
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 216
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nSets the displayed name of the card.\n"
  example: []
  syntax:
    content: public static CardInfo SetDisplayedName(this CardInfo info, string displayedName)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: displayedName
      type: System.String
      description: The displayed name for the card
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetDisplayedName(info As CardInfo, displayedName As String) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.SetDisplayedName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Card.CardExtensions.SetName(DiskCardGame.CardInfo,System.String,System.String)
  commentId: M:InscryptionAPI.Card.CardExtensions.SetName(DiskCardGame.CardInfo,System.String,System.String)
  id: SetName(DiskCardGame.CardInfo,System.String,System.String)
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: SetName(CardInfo, String, String)
  nameWithType: CardExtensions.SetName(CardInfo, String, String)
  fullName: InscryptionAPI.Card.CardExtensions.SetName(DiskCardGame.CardInfo, System.String, System.String)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SetName
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 229
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nSets the name of the card.\n"
  example: []
  syntax:
    content: public static CardInfo SetName(this CardInfo info, string name, string modPrefix = null)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: name
      type: System.String
      description: The name for the card
    - id: modPrefix
      type: System.String
      description: The string that will be prefixed to the card name if it doesn&apos;t already exist.
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetName(info As CardInfo, name As String, modPrefix As String = Nothing) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.SetName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Card.CardExtensions.SetNames(DiskCardGame.CardInfo,System.String,System.String,System.String)
  commentId: M:InscryptionAPI.Card.CardExtensions.SetNames(DiskCardGame.CardInfo,System.String,System.String,System.String)
  id: SetNames(DiskCardGame.CardInfo,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: SetNames(CardInfo, String, String, String)
  nameWithType: CardExtensions.SetNames(CardInfo, String, String, String)
  fullName: InscryptionAPI.Card.CardExtensions.SetNames(DiskCardGame.CardInfo, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SetNames
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 243
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nSets the card name and displayed name of the card.\n"
  example: []
  syntax:
    content: public static CardInfo SetNames(this CardInfo info, string name, string displayedName, string modPrefix = null)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: name
      type: System.String
      description: The name for the card
    - id: displayedName
      type: System.String
      description: The displayed name for the card
    - id: modPrefix
      type: System.String
      description: The string that will be prefixed to the card name if it doesn&apos;t already exist.
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetNames(info As CardInfo, name As String, displayedName As String, modPrefix As String = Nothing) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.SetNames*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Card.CardExtensions.SetSpecialAbilities(DiskCardGame.CardInfo,DiskCardGame.SpecialTriggeredAbility[])
  commentId: M:InscryptionAPI.Card.CardExtensions.SetSpecialAbilities(DiskCardGame.CardInfo,DiskCardGame.SpecialTriggeredAbility[])
  id: SetSpecialAbilities(DiskCardGame.CardInfo,DiskCardGame.SpecialTriggeredAbility[])
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: SetSpecialAbilities(CardInfo, SpecialTriggeredAbility[])
  nameWithType: CardExtensions.SetSpecialAbilities(CardInfo, SpecialTriggeredAbility[])
  fullName: InscryptionAPI.Card.CardExtensions.SetSpecialAbilities(DiskCardGame.CardInfo, DiskCardGame.SpecialTriggeredAbility[])
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SetSpecialAbilities
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 255
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nSets any number of special abilities to the the card.\n"
  example: []
  syntax:
    content: public static CardInfo SetSpecialAbilities(this CardInfo info, params SpecialTriggeredAbility[] abilities)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: abilities
      type: DiskCardGame.SpecialTriggeredAbility[]
      description: The abilities to add
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetSpecialAbilities(info As CardInfo, ParamArray abilities As SpecialTriggeredAbility()) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.SetSpecialAbilities*
  nameWithType.vb: CardExtensions.SetSpecialAbilities(CardInfo, SpecialTriggeredAbility())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetSpecialAbilities(DiskCardGame.CardInfo, DiskCardGame.SpecialTriggeredAbility())
  name.vb: SetSpecialAbilities(CardInfo, SpecialTriggeredAbility())
- uid: InscryptionAPI.Card.CardExtensions.SetStatIcon(DiskCardGame.CardInfo,DiskCardGame.SpecialStatIcon)
  commentId: M:InscryptionAPI.Card.CardExtensions.SetStatIcon(DiskCardGame.CardInfo,DiskCardGame.SpecialStatIcon)
  id: SetStatIcon(DiskCardGame.CardInfo,DiskCardGame.SpecialStatIcon)
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: SetStatIcon(CardInfo, SpecialStatIcon)
  nameWithType: CardExtensions.SetStatIcon(CardInfo, SpecialStatIcon)
  fullName: InscryptionAPI.Card.CardExtensions.SetStatIcon(DiskCardGame.CardInfo, DiskCardGame.SpecialStatIcon)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SetStatIcon
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 267
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nSets the stat icon to the card.\n"
  example: []
  syntax:
    content: public static CardInfo SetStatIcon(this CardInfo info, SpecialStatIcon statIcon)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: statIcon
      type: DiskCardGame.SpecialStatIcon
      description: The stat icon to set
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetStatIcon(info As CardInfo, statIcon As SpecialStatIcon) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.SetStatIcon*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Card.CardExtensions.SetTraits(DiskCardGame.CardInfo,DiskCardGame.Trait[])
  commentId: M:InscryptionAPI.Card.CardExtensions.SetTraits(DiskCardGame.CardInfo,DiskCardGame.Trait[])
  id: SetTraits(DiskCardGame.CardInfo,DiskCardGame.Trait[])
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: SetTraits(CardInfo, Trait[])
  nameWithType: CardExtensions.SetTraits(CardInfo, Trait[])
  fullName: InscryptionAPI.Card.CardExtensions.SetTraits(DiskCardGame.CardInfo, DiskCardGame.Trait[])
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SetTraits
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 280
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nSets any number of traits to the the card.\n"
  example: []
  syntax:
    content: public static CardInfo SetTraits(this CardInfo info, params Trait[] traits)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: traits
      type: DiskCardGame.Trait[]
      description: The traits to add
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetTraits(info As CardInfo, ParamArray traits As Trait()) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.SetTraits*
  nameWithType.vb: CardExtensions.SetTraits(CardInfo, Trait())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetTraits(DiskCardGame.CardInfo, DiskCardGame.Trait())
  name.vb: SetTraits(CardInfo, Trait())
- uid: InscryptionAPI.Card.CardExtensions.SetTribes(DiskCardGame.CardInfo,DiskCardGame.Tribe[])
  commentId: M:InscryptionAPI.Card.CardExtensions.SetTribes(DiskCardGame.CardInfo,DiskCardGame.Tribe[])
  id: SetTribes(DiskCardGame.CardInfo,DiskCardGame.Tribe[])
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: SetTribes(CardInfo, Tribe[])
  nameWithType: CardExtensions.SetTribes(CardInfo, Tribe[])
  fullName: InscryptionAPI.Card.CardExtensions.SetTribes(DiskCardGame.CardInfo, DiskCardGame.Tribe[])
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SetTribes
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 293
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nSet any number of tribes to the the card.\n"
  example: []
  syntax:
    content: public static CardInfo SetTribes(this CardInfo info, params Tribe[] tribes)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: tribes
      type: DiskCardGame.Tribe[]
      description: The tribes to add
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetTribes(info As CardInfo, ParamArray tribes As Tribe()) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.SetTribes*
  nameWithType.vb: CardExtensions.SetTribes(CardInfo, Tribe())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetTribes(DiskCardGame.CardInfo, DiskCardGame.Tribe())
  name.vb: SetTribes(CardInfo, Tribe())
- uid: InscryptionAPI.Card.CardExtensions.SetDefaultPart1Card(DiskCardGame.CardInfo)
  commentId: M:InscryptionAPI.Card.CardExtensions.SetDefaultPart1Card(DiskCardGame.CardInfo)
  id: SetDefaultPart1Card(DiskCardGame.CardInfo)
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: SetDefaultPart1Card(CardInfo)
  nameWithType: CardExtensions.SetDefaultPart1Card(CardInfo)
  fullName: InscryptionAPI.Card.CardExtensions.SetDefaultPart1Card(DiskCardGame.CardInfo)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SetDefaultPart1Card
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 306
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nSets the card to behave as a &quot;normal&quot; card in Part 1. The CardTemple is Nature and it will appear in choice nodes and trader nodes.\n"
  example: []
  syntax:
    content: public static CardInfo SetDefaultPart1Card(this CardInfo info)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetDefaultPart1Card(info As CardInfo) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.SetDefaultPart1Card*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Card.CardExtensions.SetDefaultPart3Card(DiskCardGame.CardInfo)
  commentId: M:InscryptionAPI.Card.CardExtensions.SetDefaultPart3Card(DiskCardGame.CardInfo)
  id: SetDefaultPart3Card(DiskCardGame.CardInfo)
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: SetDefaultPart3Card(CardInfo)
  nameWithType: CardExtensions.SetDefaultPart3Card(CardInfo)
  fullName: InscryptionAPI.Card.CardExtensions.SetDefaultPart3Card(DiskCardGame.CardInfo)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SetDefaultPart3Card
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 322
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nSets the card to behave as a &quot;normal&quot; card in Part 3. The CardTemple is Tech and it will appear in choice nodes and as a potential random card from GiftBot.\n"
  example: []
  syntax:
    content: public static CardInfo SetDefaultPart3Card(this CardInfo info)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetDefaultPart3Card(info As CardInfo) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.SetDefaultPart3Card*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Card.CardExtensions.SetGBCPlayable(DiskCardGame.CardInfo,CardTemple)
  commentId: M:InscryptionAPI.Card.CardExtensions.SetGBCPlayable(DiskCardGame.CardInfo,CardTemple)
  id: SetGBCPlayable(DiskCardGame.CardInfo,CardTemple)
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: SetGBCPlayable(CardInfo, CardTemple)
  nameWithType: CardExtensions.SetGBCPlayable(CardInfo, CardTemple)
  fullName: InscryptionAPI.Card.CardExtensions.SetGBCPlayable(DiskCardGame.CardInfo, CardTemple)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SetGBCPlayable
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 339
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nMakes the card fully playable in GBC mode and able to appear in card packs.\n"
  example: []
  syntax:
    content: public static CardInfo SetGBCPlayable(this CardInfo info, CardTemple temple)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: temple
      type: CardTemple
      description: The temple that the card will exist under
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetGBCPlayable(info As CardInfo, temple As CardTemple) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.SetGBCPlayable*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Card.CardExtensions.SetRare(DiskCardGame.CardInfo)
  commentId: M:InscryptionAPI.Card.CardExtensions.SetRare(DiskCardGame.CardInfo)
  id: SetRare(DiskCardGame.CardInfo)
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: SetRare(CardInfo)
  nameWithType: CardExtensions.SetRare(CardInfo)
  fullName: InscryptionAPI.Card.CardExtensions.SetRare(DiskCardGame.CardInfo)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SetRare
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 352
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nSets the card so it shows up for rare card choices and applies the rare background.\n"
  example: []
  syntax:
    content: public static CardInfo SetRare(this CardInfo info)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetRare(info As CardInfo) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.SetRare*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Card.CardExtensions.SetTerrain(DiskCardGame.CardInfo)
  commentId: M:InscryptionAPI.Card.CardExtensions.SetTerrain(DiskCardGame.CardInfo)
  id: SetTerrain(DiskCardGame.CardInfo)
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: SetTerrain(CardInfo)
  nameWithType: CardExtensions.SetTerrain(CardInfo)
  fullName: InscryptionAPI.Card.CardExtensions.SetTerrain(DiskCardGame.CardInfo)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SetTerrain
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 371
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nAdds the terrain trait and background to this card.\n"
  example: []
  syntax:
    content: public static CardInfo SetTerrain(this CardInfo info)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetTerrain(info As CardInfo) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.SetTerrain*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Card.CardExtensions.SetEvolve(DiskCardGame.CardInfo,DiskCardGame.CardInfo,System.Int32,IEnumerable{DiskCardGame.CardModificationInfo})
  commentId: M:InscryptionAPI.Card.CardExtensions.SetEvolve(DiskCardGame.CardInfo,DiskCardGame.CardInfo,System.Int32,IEnumerable{DiskCardGame.CardModificationInfo})
  id: SetEvolve(DiskCardGame.CardInfo,DiskCardGame.CardInfo,System.Int32,IEnumerable{DiskCardGame.CardModificationInfo})
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: SetEvolve(CardInfo, CardInfo, Int32, IEnumerable<CardModificationInfo>)
  nameWithType: CardExtensions.SetEvolve(CardInfo, CardInfo, Int32, IEnumerable<CardModificationInfo>)
  fullName: InscryptionAPI.Card.CardExtensions.SetEvolve(DiskCardGame.CardInfo, DiskCardGame.CardInfo, System.Int32, IEnumerable<DiskCardGame.CardModificationInfo>)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SetEvolve
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 390
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nSets the evolve parameters of the card. These parameters are used to make the Evolve ability function correctly.\n"
  example: []
  syntax:
    content: public static CardInfo SetEvolve(this CardInfo info, CardInfo evolveCard, int numberOfTurns, IEnumerable<CardModificationInfo> mods = null)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: evolveCard
      type: DiskCardGame.CardInfo
      description: The card that will be generated after the set number of turns.
    - id: numberOfTurns
      type: System.Int32
      description: The number of turns before the card evolves
    - id: mods
      type: IEnumerable{DiskCardGame.CardModificationInfo}
      description: A set of card mods to be applied to the evolved card
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetEvolve(info As CardInfo, evolveCard As CardInfo, numberOfTurns As Integer, mods As IEnumerable(Of CardModificationInfo) = Nothing) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.SetEvolve*
  nameWithType.vb: CardExtensions.SetEvolve(CardInfo, CardInfo, Int32, IEnumerable(Of CardModificationInfo))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetEvolve(DiskCardGame.CardInfo, DiskCardGame.CardInfo, System.Int32, IEnumerable(Of DiskCardGame.CardModificationInfo))
  name.vb: SetEvolve(CardInfo, CardInfo, Int32, IEnumerable(Of CardModificationInfo))
- uid: InscryptionAPI.Card.CardExtensions.SetEvolve(DiskCardGame.CardInfo,System.String,System.Int32,IEnumerable{DiskCardGame.CardModificationInfo})
  commentId: M:InscryptionAPI.Card.CardExtensions.SetEvolve(DiskCardGame.CardInfo,System.String,System.Int32,IEnumerable{DiskCardGame.CardModificationInfo})
  id: SetEvolve(DiskCardGame.CardInfo,System.String,System.Int32,IEnumerable{DiskCardGame.CardModificationInfo})
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: SetEvolve(CardInfo, String, Int32, IEnumerable<CardModificationInfo>)
  nameWithType: CardExtensions.SetEvolve(CardInfo, String, Int32, IEnumerable<CardModificationInfo>)
  fullName: InscryptionAPI.Card.CardExtensions.SetEvolve(DiskCardGame.CardInfo, System.String, System.Int32, IEnumerable<DiskCardGame.CardModificationInfo>)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SetEvolve
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 417
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nSets the evolve parameters of the card. These parameters are used to make the Evolve ability function correctly.\nThis function uses delayed loading to attach the evolution to the card, so if the evolve card doesn&apos;t exist yet, this function will still work.\n"
  example: []
  syntax:
    content: public static CardInfo SetEvolve(this CardInfo info, string evolveInto, int numberOfTurns, IEnumerable<CardModificationInfo> mods = null)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: evolveInto
      type: System.String
      description: The name of card that will be generated after the set number of turns.
    - id: numberOfTurns
      type: System.Int32
      description: The number of turns before the card evolves
    - id: mods
      type: IEnumerable{DiskCardGame.CardModificationInfo}
      description: A set of card mods to be applied to the evolved card
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetEvolve(info As CardInfo, evolveInto As String, numberOfTurns As Integer, mods As IEnumerable(Of CardModificationInfo) = Nothing) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.SetEvolve*
  nameWithType.vb: CardExtensions.SetEvolve(CardInfo, String, Int32, IEnumerable(Of CardModificationInfo))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetEvolve(DiskCardGame.CardInfo, System.String, System.Int32, IEnumerable(Of DiskCardGame.CardModificationInfo))
  name.vb: SetEvolve(CardInfo, String, Int32, IEnumerable(Of CardModificationInfo))
- uid: InscryptionAPI.Card.CardExtensions.SetIceCube(DiskCardGame.CardInfo,DiskCardGame.CardInfo,IEnumerable{DiskCardGame.CardModificationInfo})
  commentId: M:InscryptionAPI.Card.CardExtensions.SetIceCube(DiskCardGame.CardInfo,DiskCardGame.CardInfo,IEnumerable{DiskCardGame.CardModificationInfo})
  id: SetIceCube(DiskCardGame.CardInfo,DiskCardGame.CardInfo,IEnumerable{DiskCardGame.CardModificationInfo})
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: SetIceCube(CardInfo, CardInfo, IEnumerable<CardModificationInfo>)
  nameWithType: CardExtensions.SetIceCube(CardInfo, CardInfo, IEnumerable<CardModificationInfo>)
  fullName: InscryptionAPI.Card.CardExtensions.SetIceCube(DiskCardGame.CardInfo, DiskCardGame.CardInfo, IEnumerable<DiskCardGame.CardModificationInfo>)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SetIceCube
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 451
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nSets the ice cube parameters of the card. These parameters are used to make the IceCube ability function correctly.\n"
  example: []
  syntax:
    content: public static CardInfo SetIceCube(this CardInfo info, CardInfo iceCube, IEnumerable<CardModificationInfo> mods = null)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: iceCube
      type: DiskCardGame.CardInfo
      description: The card that will be generated when this card dies.
    - id: mods
      type: IEnumerable{DiskCardGame.CardModificationInfo}
      description: A set of card mods to be applied to the ice cube contents
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetIceCube(info As CardInfo, iceCube As CardInfo, mods As IEnumerable(Of CardModificationInfo) = Nothing) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.SetIceCube*
  nameWithType.vb: CardExtensions.SetIceCube(CardInfo, CardInfo, IEnumerable(Of CardModificationInfo))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetIceCube(DiskCardGame.CardInfo, DiskCardGame.CardInfo, IEnumerable(Of DiskCardGame.CardModificationInfo))
  name.vb: SetIceCube(CardInfo, CardInfo, IEnumerable(Of CardModificationInfo))
- uid: InscryptionAPI.Card.CardExtensions.SetIceCube(DiskCardGame.CardInfo,System.String,IEnumerable{DiskCardGame.CardModificationInfo})
  commentId: M:InscryptionAPI.Card.CardExtensions.SetIceCube(DiskCardGame.CardInfo,System.String,IEnumerable{DiskCardGame.CardModificationInfo})
  id: SetIceCube(DiskCardGame.CardInfo,System.String,IEnumerable{DiskCardGame.CardModificationInfo})
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: SetIceCube(CardInfo, String, IEnumerable<CardModificationInfo>)
  nameWithType: CardExtensions.SetIceCube(CardInfo, String, IEnumerable<CardModificationInfo>)
  fullName: InscryptionAPI.Card.CardExtensions.SetIceCube(DiskCardGame.CardInfo, System.String, IEnumerable<DiskCardGame.CardModificationInfo>)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SetIceCube
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 475
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nSets the ice cube parameters of the card. These parameters are used to make the IceCube ability function correctly.\nThis function uses delayed loading to attach the ice cube to the card, so if the ice cube card doesn&apos;t exist yet, this function will still work.\n"
  example: []
  syntax:
    content: public static CardInfo SetIceCube(this CardInfo info, string iceCubeName, IEnumerable<CardModificationInfo> mods = null)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: iceCubeName
      type: System.String
      description: The name of the card that will be generated when this card dies.
    - id: mods
      type: IEnumerable{DiskCardGame.CardModificationInfo}
      description: A set of card mods to be applied to the ice cube contents
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetIceCube(info As CardInfo, iceCubeName As String, mods As IEnumerable(Of CardModificationInfo) = Nothing) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.SetIceCube*
  nameWithType.vb: CardExtensions.SetIceCube(CardInfo, String, IEnumerable(Of CardModificationInfo))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetIceCube(DiskCardGame.CardInfo, System.String, IEnumerable(Of DiskCardGame.CardModificationInfo))
  name.vb: SetIceCube(CardInfo, String, IEnumerable(Of CardModificationInfo))
- uid: InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo,System.String,System.String,IEnumerable{DiskCardGame.CardModificationInfo})
  commentId: M:InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo,System.String,System.String,IEnumerable{DiskCardGame.CardModificationInfo})
  id: SetTail(DiskCardGame.CardInfo,System.String,System.String,IEnumerable{DiskCardGame.CardModificationInfo})
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: SetTail(CardInfo, String, String, IEnumerable<CardModificationInfo>)
  nameWithType: CardExtensions.SetTail(CardInfo, String, String, IEnumerable<CardModificationInfo>)
  fullName: InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo, System.String, System.String, IEnumerable<DiskCardGame.CardModificationInfo>)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SetTail
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 512
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nSets the tail parameters of the card. These parameters are used to make the TailOnHit ability function correctly.\nThis function uses delayed loading to attach the tail to the card, so if the tail card doesn&apos;t exist yet, this function will still work.\n"
  example: []
  syntax:
    content: public static CardInfo SetTail(this CardInfo info, string tailName, string pathToLostTailArt = null, IEnumerable<CardModificationInfo> mods = null)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: tailName
      type: System.String
      description: The name of the card that will be generated as the &quot;tail&quot; when the first hit is dodged.
    - id: pathToLostTailArt
      type: System.String
      description: The path to the .png file containing the lost tail artwork (relative to the Plugins directory)
    - id: mods
      type: IEnumerable{DiskCardGame.CardModificationInfo}
      description: A set of card mods to be applied to the tail
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetTail(info As CardInfo, tailName As String, pathToLostTailArt As String = Nothing, mods As IEnumerable(Of CardModificationInfo) = Nothing) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.SetTail*
  nameWithType.vb: CardExtensions.SetTail(CardInfo, String, String, IEnumerable(Of CardModificationInfo))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo, System.String, System.String, IEnumerable(Of DiskCardGame.CardModificationInfo))
  name.vb: SetTail(CardInfo, String, String, IEnumerable(Of CardModificationInfo))
- uid: InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo,DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode},IEnumerable{DiskCardGame.CardModificationInfo})
  commentId: M:InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo,DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode},IEnumerable{DiskCardGame.CardModificationInfo})
  id: SetTail(DiskCardGame.CardInfo,DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode},IEnumerable{DiskCardGame.CardModificationInfo})
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: SetTail(CardInfo, CardInfo, Texture2D, Nullable<FilterMode>, IEnumerable<CardModificationInfo>)
  nameWithType: CardExtensions.SetTail(CardInfo, CardInfo, Texture2D, Nullable<FilterMode>, IEnumerable<CardModificationInfo>)
  fullName: InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo, DiskCardGame.CardInfo, UnityEngine.Texture2D, System.Nullable<UnityEngine.FilterMode>, IEnumerable<DiskCardGame.CardModificationInfo>)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SetTail
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 527
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nSets the tail parameters of the card. These parameters are used to make the TailOnHit ability function correctly.\n"
  example: []
  syntax:
    content: public static CardInfo SetTail(this CardInfo info, CardInfo tail, Texture2D tailLostPortrait, FilterMode? filterMode = null, IEnumerable<CardModificationInfo> mods = null)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: tail
      type: DiskCardGame.CardInfo
      description: The card that will be generated as the &quot;tail&quot; when the first hit is dodged.
    - id: tailLostPortrait
      type: UnityEngine.Texture2D
      description: The texture containing the card portrait
    - id: filterMode
      type: System.Nullable{UnityEngine.FilterMode}
      description: The filter mode for the texture, or null if no change
    - id: mods
      type: IEnumerable{DiskCardGame.CardModificationInfo}
      description: A set of card mods to be applied to the tail
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetTail(info As CardInfo, tail As CardInfo, tailLostPortrait As Texture2D, filterMode As FilterMode? = Nothing, mods As IEnumerable(Of CardModificationInfo) = Nothing) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.SetTail*
  nameWithType.vb: CardExtensions.SetTail(CardInfo, CardInfo, Texture2D, Nullable(Of FilterMode), IEnumerable(Of CardModificationInfo))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo, DiskCardGame.CardInfo, UnityEngine.Texture2D, System.Nullable(Of UnityEngine.FilterMode), IEnumerable(Of DiskCardGame.CardModificationInfo))
  name.vb: SetTail(CardInfo, CardInfo, Texture2D, Nullable(Of FilterMode), IEnumerable(Of CardModificationInfo))
- uid: InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo,DiskCardGame.CardInfo,UnityEngine.Sprite,IEnumerable{DiskCardGame.CardModificationInfo})
  commentId: M:InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo,DiskCardGame.CardInfo,UnityEngine.Sprite,IEnumerable{DiskCardGame.CardModificationInfo})
  id: SetTail(DiskCardGame.CardInfo,DiskCardGame.CardInfo,UnityEngine.Sprite,IEnumerable{DiskCardGame.CardModificationInfo})
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: SetTail(CardInfo, CardInfo, Sprite, IEnumerable<CardModificationInfo>)
  nameWithType: CardExtensions.SetTail(CardInfo, CardInfo, Sprite, IEnumerable<CardModificationInfo>)
  fullName: InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo, DiskCardGame.CardInfo, UnityEngine.Sprite, IEnumerable<DiskCardGame.CardModificationInfo>)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SetTail
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 543
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nSets the tail parameters of the card. These parameters are used to make the TailOnHit ability function correctly.\n"
  example: []
  syntax:
    content: public static CardInfo SetTail(this CardInfo info, CardInfo tail, Sprite tailLostPortrait, IEnumerable<CardModificationInfo> mods = null)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: tail
      type: DiskCardGame.CardInfo
      description: The card that will be generated as the &quot;tail&quot; when the first hit is dodged.
    - id: tailLostPortrait
      type: UnityEngine.Sprite
      description: The sprite containing the card portrait
    - id: mods
      type: IEnumerable{DiskCardGame.CardModificationInfo}
      description: A set of card mods to be applied to the tail
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetTail(info As CardInfo, tail As CardInfo, tailLostPortrait As Sprite, mods As IEnumerable(Of CardModificationInfo) = Nothing) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.SetTail*
  nameWithType.vb: CardExtensions.SetTail(CardInfo, CardInfo, Sprite, IEnumerable(Of CardModificationInfo))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo, DiskCardGame.CardInfo, UnityEngine.Sprite, IEnumerable(Of DiskCardGame.CardModificationInfo))
  name.vb: SetTail(CardInfo, CardInfo, Sprite, IEnumerable(Of CardModificationInfo))
- uid: InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo,System.String,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode},IEnumerable{DiskCardGame.CardModificationInfo})
  commentId: M:InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo,System.String,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode},IEnumerable{DiskCardGame.CardModificationInfo})
  id: SetTail(DiskCardGame.CardInfo,System.String,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode},IEnumerable{DiskCardGame.CardModificationInfo})
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: SetTail(CardInfo, String, Texture2D, Nullable<FilterMode>, IEnumerable<CardModificationInfo>)
  nameWithType: CardExtensions.SetTail(CardInfo, String, Texture2D, Nullable<FilterMode>, IEnumerable<CardModificationInfo>)
  fullName: InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo, System.String, UnityEngine.Texture2D, System.Nullable<UnityEngine.FilterMode>, IEnumerable<DiskCardGame.CardModificationInfo>)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SetTail
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 572
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nSets the tail parameters of the card. These parameters are used to make the TailOnHit ability function correctly.\nThis function uses delayed loading to attach the tail to the card, so if the tail card doesn&apos;t exist yet, this function will still work.\n"
  example: []
  syntax:
    content: public static CardInfo SetTail(this CardInfo info, string tailName, Texture2D tailLostPortrait, FilterMode? filterMode = null, IEnumerable<CardModificationInfo> mods = null)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: tailName
      type: System.String
      description: The name of the card that will be generated as the &quot;tail&quot; when the first hit is dodged.
    - id: tailLostPortrait
      type: UnityEngine.Texture2D
      description: The texture containing the card portrait
    - id: filterMode
      type: System.Nullable{UnityEngine.FilterMode}
      description: The filter mode for the texture, or null if no change
    - id: mods
      type: IEnumerable{DiskCardGame.CardModificationInfo}
      description: A set of card mods to be applied to the tail
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetTail(info As CardInfo, tailName As String, tailLostPortrait As Texture2D, filterMode As FilterMode? = Nothing, mods As IEnumerable(Of CardModificationInfo) = Nothing) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.SetTail*
  nameWithType.vb: CardExtensions.SetTail(CardInfo, String, Texture2D, Nullable(Of FilterMode), IEnumerable(Of CardModificationInfo))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetTail(DiskCardGame.CardInfo, System.String, UnityEngine.Texture2D, System.Nullable(Of UnityEngine.FilterMode), IEnumerable(Of DiskCardGame.CardModificationInfo))
  name.vb: SetTail(CardInfo, String, Texture2D, Nullable(Of FilterMode), IEnumerable(Of CardModificationInfo))
- uid: InscryptionAPI.Card.CardExtensions.SetCost(DiskCardGame.CardInfo,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},List{DiskCardGame.GemType})
  commentId: M:InscryptionAPI.Card.CardExtensions.SetCost(DiskCardGame.CardInfo,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},List{DiskCardGame.GemType})
  id: SetCost(DiskCardGame.CardInfo,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},List{DiskCardGame.GemType})
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: SetCost(CardInfo, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, List<GemType>)
  nameWithType: CardExtensions.SetCost(CardInfo, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, List<GemType>)
  fullName: InscryptionAPI.Card.CardExtensions.SetCost(DiskCardGame.CardInfo, System.Nullable<System.Int32>, System.Nullable<System.Int32>, System.Nullable<System.Int32>, List<DiskCardGame.GemType>)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SetCost
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 614
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nSets the cost of the card. Any and all costs can be set this way.\n"
  example: []
  syntax:
    content: public static CardInfo SetCost(this CardInfo info, int? bloodCost = 0, int? bonesCost = 0, int? energyCost = 0, List<GemType> gemsCost = null)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: bloodCost
      type: System.Nullable{System.Int32}
      description: The cost in blood (sacrifices)
    - id: bonesCost
      type: System.Nullable{System.Int32}
      description: The cost in bones
    - id: energyCost
      type: System.Nullable{System.Int32}
      description: The cost in energy
    - id: gemsCost
      type: List{DiskCardGame.GemType}
      description: The cost in gems
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetCost(info As CardInfo, bloodCost As Integer? = 0, bonesCost As Integer? = 0, energyCost As Integer? = 0, gemsCost As List(Of GemType) = Nothing) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.SetCost*
  nameWithType.vb: CardExtensions.SetCost(CardInfo, Nullable(Of Int32), Nullable(Of Int32), Nullable(Of Int32), List(Of GemType))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetCost(DiskCardGame.CardInfo, System.Nullable(Of System.Int32), System.Nullable(Of System.Int32), System.Nullable(Of System.Int32), List(Of DiskCardGame.GemType))
  name.vb: SetCost(CardInfo, Nullable(Of Int32), Nullable(Of Int32), Nullable(Of Int32), List(Of GemType))
- uid: InscryptionAPI.Card.CardExtensions.SetBloodCost(DiskCardGame.CardInfo,System.Nullable{System.Int32})
  commentId: M:InscryptionAPI.Card.CardExtensions.SetBloodCost(DiskCardGame.CardInfo,System.Nullable{System.Int32})
  id: SetBloodCost(DiskCardGame.CardInfo,System.Nullable{System.Int32})
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: SetBloodCost(CardInfo, Nullable<Int32>)
  nameWithType: CardExtensions.SetBloodCost(CardInfo, Nullable<Int32>)
  fullName: InscryptionAPI.Card.CardExtensions.SetBloodCost(DiskCardGame.CardInfo, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SetBloodCost
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 628
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nSets the blood cost of the card.\n"
  example: []
  syntax:
    content: public static CardInfo SetBloodCost(this CardInfo info, int? bloodCost = 0)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: bloodCost
      type: System.Nullable{System.Int32}
      description: The cost in blood (sacrifices)
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetBloodCost(info As CardInfo, bloodCost As Integer? = 0) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.SetBloodCost*
  nameWithType.vb: CardExtensions.SetBloodCost(CardInfo, Nullable(Of Int32))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetBloodCost(DiskCardGame.CardInfo, System.Nullable(Of System.Int32))
  name.vb: SetBloodCost(CardInfo, Nullable(Of Int32))
- uid: InscryptionAPI.Card.CardExtensions.SetBonesCost(DiskCardGame.CardInfo,System.Nullable{System.Int32})
  commentId: M:InscryptionAPI.Card.CardExtensions.SetBonesCost(DiskCardGame.CardInfo,System.Nullable{System.Int32})
  id: SetBonesCost(DiskCardGame.CardInfo,System.Nullable{System.Int32})
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: SetBonesCost(CardInfo, Nullable<Int32>)
  nameWithType: CardExtensions.SetBonesCost(CardInfo, Nullable<Int32>)
  fullName: InscryptionAPI.Card.CardExtensions.SetBonesCost(DiskCardGame.CardInfo, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SetBonesCost
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 641
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nSets the bones cost of the card.\n"
  example: []
  syntax:
    content: public static CardInfo SetBonesCost(this CardInfo info, int? bonesCost = 0)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: bonesCost
      type: System.Nullable{System.Int32}
      description: The cost in bones
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetBonesCost(info As CardInfo, bonesCost As Integer? = 0) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.SetBonesCost*
  nameWithType.vb: CardExtensions.SetBonesCost(CardInfo, Nullable(Of Int32))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetBonesCost(DiskCardGame.CardInfo, System.Nullable(Of System.Int32))
  name.vb: SetBonesCost(CardInfo, Nullable(Of Int32))
- uid: InscryptionAPI.Card.CardExtensions.SetEnergyCost(DiskCardGame.CardInfo,System.Nullable{System.Int32})
  commentId: M:InscryptionAPI.Card.CardExtensions.SetEnergyCost(DiskCardGame.CardInfo,System.Nullable{System.Int32})
  id: SetEnergyCost(DiskCardGame.CardInfo,System.Nullable{System.Int32})
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: SetEnergyCost(CardInfo, Nullable<Int32>)
  nameWithType: CardExtensions.SetEnergyCost(CardInfo, Nullable<Int32>)
  fullName: InscryptionAPI.Card.CardExtensions.SetEnergyCost(DiskCardGame.CardInfo, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SetEnergyCost
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 654
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nSets the energy cost of the card.\n"
  example: []
  syntax:
    content: public static CardInfo SetEnergyCost(this CardInfo info, int? energyCost = 0)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: energyCost
      type: System.Nullable{System.Int32}
      description: The cost in energy
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetEnergyCost(info As CardInfo, energyCost As Integer? = 0) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.SetEnergyCost*
  nameWithType.vb: CardExtensions.SetEnergyCost(CardInfo, Nullable(Of Int32))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetEnergyCost(DiskCardGame.CardInfo, System.Nullable(Of System.Int32))
  name.vb: SetEnergyCost(CardInfo, Nullable(Of Int32))
- uid: InscryptionAPI.Card.CardExtensions.SetGemsCost(DiskCardGame.CardInfo,List{DiskCardGame.GemType})
  commentId: M:InscryptionAPI.Card.CardExtensions.SetGemsCost(DiskCardGame.CardInfo,List{DiskCardGame.GemType})
  id: SetGemsCost(DiskCardGame.CardInfo,List{DiskCardGame.GemType})
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: SetGemsCost(CardInfo, List<GemType>)
  nameWithType: CardExtensions.SetGemsCost(CardInfo, List<GemType>)
  fullName: InscryptionAPI.Card.CardExtensions.SetGemsCost(DiskCardGame.CardInfo, List<DiskCardGame.GemType>)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SetGemsCost
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 667
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nSets the gems cost of the card.\n"
  example: []
  syntax:
    content: public static CardInfo SetGemsCost(this CardInfo info, List<GemType> gemsCost = null)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: gemsCost
      type: List{DiskCardGame.GemType}
      description: The cost in gems
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetGemsCost(info As CardInfo, gemsCost As List(Of GemType) = Nothing) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.SetGemsCost*
  nameWithType.vb: CardExtensions.SetGemsCost(CardInfo, List(Of GemType))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetGemsCost(DiskCardGame.CardInfo, List(Of DiskCardGame.GemType))
  name.vb: SetGemsCost(CardInfo, List(Of GemType))
- uid: InscryptionAPI.Card.CardExtensions.SetPortrait(DiskCardGame.CardInfo,System.String)
  commentId: M:InscryptionAPI.Card.CardExtensions.SetPortrait(DiskCardGame.CardInfo,System.String)
  id: SetPortrait(DiskCardGame.CardInfo,System.String)
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: SetPortrait(CardInfo, String)
  nameWithType: CardExtensions.SetPortrait(CardInfo, String)
  fullName: InscryptionAPI.Card.CardExtensions.SetPortrait(DiskCardGame.CardInfo, System.String)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SetPortrait
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 687
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nSets the default card portrait for the card\n"
  example: []
  syntax:
    content: public static CardInfo SetPortrait(this CardInfo info, string pathToArt)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: pathToArt
      type: System.String
      description: The path to the .png file containing the artwork (relative to the Plugins directory)
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetPortrait(info As CardInfo, pathToArt As String) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.SetPortrait*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Card.CardExtensions.SetPortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  commentId: M:InscryptionAPI.Card.CardExtensions.SetPortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  id: SetPortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: SetPortrait(CardInfo, Texture2D, Nullable<FilterMode>)
  nameWithType: CardExtensions.SetPortrait(CardInfo, Texture2D, Nullable<FilterMode>)
  fullName: InscryptionAPI.Card.CardExtensions.SetPortrait(DiskCardGame.CardInfo, UnityEngine.Texture2D, System.Nullable<UnityEngine.FilterMode>)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SetPortrait
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 706
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nSets the default card portrait for the card\n"
  example: []
  syntax:
    content: public static CardInfo SetPortrait(this CardInfo info, Texture2D portrait, FilterMode? filterMode = null)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: portrait
      type: UnityEngine.Texture2D
      description: The texture containing the card portrait
    - id: filterMode
      type: System.Nullable{UnityEngine.FilterMode}
      description: The filter mode for the texture, or null if no change
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetPortrait(info As CardInfo, portrait As Texture2D, filterMode As FilterMode? = Nothing) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.SetPortrait*
  nameWithType.vb: CardExtensions.SetPortrait(CardInfo, Texture2D, Nullable(Of FilterMode))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetPortrait(DiskCardGame.CardInfo, UnityEngine.Texture2D, System.Nullable(Of UnityEngine.FilterMode))
  name.vb: SetPortrait(CardInfo, Texture2D, Nullable(Of FilterMode))
- uid: InscryptionAPI.Card.CardExtensions.SetPortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  commentId: M:InscryptionAPI.Card.CardExtensions.SetPortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  id: SetPortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: SetPortrait(CardInfo, Texture2D, Texture2D, Nullable<FilterMode>)
  nameWithType: CardExtensions.SetPortrait(CardInfo, Texture2D, Texture2D, Nullable<FilterMode>)
  fullName: InscryptionAPI.Card.CardExtensions.SetPortrait(DiskCardGame.CardInfo, UnityEngine.Texture2D, UnityEngine.Texture2D, System.Nullable<UnityEngine.FilterMode>)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SetPortrait
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 718
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nSets the cards portrait and emission at the same time.\n"
  example: []
  syntax:
    content: public static CardInfo SetPortrait(this CardInfo info, Texture2D portrait, Texture2D emission, FilterMode? filterMode = null)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
    - id: portrait
      type: UnityEngine.Texture2D
      description: The texture containing the card portrait
    - id: emission
      type: UnityEngine.Texture2D
      description: The texture containing the emission
    - id: filterMode
      type: System.Nullable{UnityEngine.FilterMode}
      description: The filter mode for the texture, or null if no change
    return:
      type: DiskCardGame.CardInfo
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetPortrait(info As CardInfo, portrait As Texture2D, emission As Texture2D, filterMode As FilterMode? = Nothing) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.SetPortrait*
  nameWithType.vb: CardExtensions.SetPortrait(CardInfo, Texture2D, Texture2D, Nullable(Of FilterMode))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetPortrait(DiskCardGame.CardInfo, UnityEngine.Texture2D, UnityEngine.Texture2D, System.Nullable(Of UnityEngine.FilterMode))
  name.vb: SetPortrait(CardInfo, Texture2D, Texture2D, Nullable(Of FilterMode))
- uid: InscryptionAPI.Card.CardExtensions.SetPortrait(DiskCardGame.CardInfo,UnityEngine.Sprite)
  commentId: M:InscryptionAPI.Card.CardExtensions.SetPortrait(DiskCardGame.CardInfo,UnityEngine.Sprite)
  id: SetPortrait(DiskCardGame.CardInfo,UnityEngine.Sprite)
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: SetPortrait(CardInfo, Sprite)
  nameWithType: CardExtensions.SetPortrait(CardInfo, Sprite)
  fullName: InscryptionAPI.Card.CardExtensions.SetPortrait(DiskCardGame.CardInfo, UnityEngine.Sprite)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SetPortrait
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 731
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nSets the default card portrait for the card\n"
  example: []
  syntax:
    content: public static CardInfo SetPortrait(this CardInfo info, Sprite sprite)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: sprite
      type: UnityEngine.Sprite
      description: The sprite containing the card portrait
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetPortrait(info As CardInfo, sprite As Sprite) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.SetPortrait*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Card.CardExtensions.SetPortraitAndEmission(DiskCardGame.CardInfo,System.String,System.String)
  commentId: M:InscryptionAPI.Card.CardExtensions.SetPortraitAndEmission(DiskCardGame.CardInfo,System.String,System.String)
  id: SetPortraitAndEmission(DiskCardGame.CardInfo,System.String,System.String)
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: SetPortraitAndEmission(CardInfo, String, String)
  nameWithType: CardExtensions.SetPortraitAndEmission(CardInfo, String, String)
  fullName: InscryptionAPI.Card.CardExtensions.SetPortraitAndEmission(DiskCardGame.CardInfo, System.String, System.String)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SetPortraitAndEmission
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 748
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nSets the cards portrait and emission at the same time.\n"
  example: []
  syntax:
    content: public static CardInfo SetPortraitAndEmission(this CardInfo info, string pathToArt, string pathToEmission)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: pathToArt
      type: System.String
      description: The path to the .png file containing the portrait artwork (relative to the Plugins directory)
    - id: pathToEmission
      type: System.String
      description: The path to the .png file containing the emission artwork (relative to the Plugins directory)
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetPortraitAndEmission(info As CardInfo, pathToArt As String, pathToEmission As String) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.SetPortraitAndEmission*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Card.CardExtensions.SetPortraitAndEmission(DiskCardGame.CardInfo,UnityEngine.Texture2D,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  commentId: M:InscryptionAPI.Card.CardExtensions.SetPortraitAndEmission(DiskCardGame.CardInfo,UnityEngine.Texture2D,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  id: SetPortraitAndEmission(DiskCardGame.CardInfo,UnityEngine.Texture2D,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: SetPortraitAndEmission(CardInfo, Texture2D, Texture2D, Nullable<FilterMode>)
  nameWithType: CardExtensions.SetPortraitAndEmission(CardInfo, Texture2D, Texture2D, Nullable<FilterMode>)
  fullName: InscryptionAPI.Card.CardExtensions.SetPortraitAndEmission(DiskCardGame.CardInfo, UnityEngine.Texture2D, UnityEngine.Texture2D, System.Nullable<UnityEngine.FilterMode>)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SetPortraitAndEmission
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 763
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nSets the cards portrait and emission at the same time.\n"
  example: []
  syntax:
    content: public static CardInfo SetPortraitAndEmission(this CardInfo info, Texture2D portrait, Texture2D emission, FilterMode? filterMode = null)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: portrait
      type: UnityEngine.Texture2D
      description: The texture containing the card portrait
    - id: emission
      type: UnityEngine.Texture2D
      description: The texture containing the emission
    - id: filterMode
      type: System.Nullable{UnityEngine.FilterMode}
      description: The filter mode for the texture, or null if no change
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetPortraitAndEmission(info As CardInfo, portrait As Texture2D, emission As Texture2D, filterMode As FilterMode? = Nothing) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.SetPortraitAndEmission*
  nameWithType.vb: CardExtensions.SetPortraitAndEmission(CardInfo, Texture2D, Texture2D, Nullable(Of FilterMode))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetPortraitAndEmission(DiskCardGame.CardInfo, UnityEngine.Texture2D, UnityEngine.Texture2D, System.Nullable(Of UnityEngine.FilterMode))
  name.vb: SetPortraitAndEmission(CardInfo, Texture2D, Texture2D, Nullable(Of FilterMode))
- uid: InscryptionAPI.Card.CardExtensions.SetPortraitAndEmission(DiskCardGame.CardInfo,UnityEngine.Sprite,UnityEngine.Sprite)
  commentId: M:InscryptionAPI.Card.CardExtensions.SetPortraitAndEmission(DiskCardGame.CardInfo,UnityEngine.Sprite,UnityEngine.Sprite)
  id: SetPortraitAndEmission(DiskCardGame.CardInfo,UnityEngine.Sprite,UnityEngine.Sprite)
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: SetPortraitAndEmission(CardInfo, Sprite, Sprite)
  nameWithType: CardExtensions.SetPortraitAndEmission(CardInfo, Sprite, Sprite)
  fullName: InscryptionAPI.Card.CardExtensions.SetPortraitAndEmission(DiskCardGame.CardInfo, UnityEngine.Sprite, UnityEngine.Sprite)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SetPortraitAndEmission
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 777
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nSets the cards portrait and emission at the same time.\n"
  example: []
  syntax:
    content: public static CardInfo SetPortraitAndEmission(this CardInfo info, Sprite portrait, Sprite emission)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: portrait
      type: UnityEngine.Sprite
      description: The sprite containing the card portrait
    - id: emission
      type: UnityEngine.Sprite
      description: The sprite containing the emission
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetPortraitAndEmission(info As CardInfo, portrait As Sprite, emission As Sprite) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.SetPortraitAndEmission*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Card.CardExtensions.SetAltPortrait(DiskCardGame.CardInfo,System.String)
  commentId: M:InscryptionAPI.Card.CardExtensions.SetAltPortrait(DiskCardGame.CardInfo,System.String)
  id: SetAltPortrait(DiskCardGame.CardInfo,System.String)
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: SetAltPortrait(CardInfo, String)
  nameWithType: CardExtensions.SetAltPortrait(CardInfo, String)
  fullName: InscryptionAPI.Card.CardExtensions.SetAltPortrait(DiskCardGame.CardInfo, System.String)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SetAltPortrait
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 794
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nSets the card&apos;s alternate portrait. This portrait is only used when asked for by an ability or an appearance behavior.\n"
  example: []
  syntax:
    content: public static CardInfo SetAltPortrait(this CardInfo info, string pathToArt)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: pathToArt
      type: System.String
      description: The path to the .png file containing the portrait artwork (relative to the Plugins directory)
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetAltPortrait(info As CardInfo, pathToArt As String) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.SetAltPortrait*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Card.CardExtensions.SetAltPortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  commentId: M:InscryptionAPI.Card.CardExtensions.SetAltPortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  id: SetAltPortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: SetAltPortrait(CardInfo, Texture2D, Nullable<FilterMode>)
  nameWithType: CardExtensions.SetAltPortrait(CardInfo, Texture2D, Nullable<FilterMode>)
  fullName: InscryptionAPI.Card.CardExtensions.SetAltPortrait(DiskCardGame.CardInfo, UnityEngine.Texture2D, System.Nullable<UnityEngine.FilterMode>)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SetAltPortrait
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 806
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nSets the card&apos;s alternate portrait. This portrait is only used when asked for by an ability or an appearance behavior.\n"
  example: []
  syntax:
    content: public static CardInfo SetAltPortrait(this CardInfo info, Texture2D portrait, FilterMode? filterMode = null)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: portrait
      type: UnityEngine.Texture2D
      description: The texture containing the card portrait
    - id: filterMode
      type: System.Nullable{UnityEngine.FilterMode}
      description: The filter mode for the texture, or null if no change
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetAltPortrait(info As CardInfo, portrait As Texture2D, filterMode As FilterMode? = Nothing) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.SetAltPortrait*
  nameWithType.vb: CardExtensions.SetAltPortrait(CardInfo, Texture2D, Nullable(Of FilterMode))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetAltPortrait(DiskCardGame.CardInfo, UnityEngine.Texture2D, System.Nullable(Of UnityEngine.FilterMode))
  name.vb: SetAltPortrait(CardInfo, Texture2D, Nullable(Of FilterMode))
- uid: InscryptionAPI.Card.CardExtensions.SetAltPortrait(DiskCardGame.CardInfo,UnityEngine.Sprite)
  commentId: M:InscryptionAPI.Card.CardExtensions.SetAltPortrait(DiskCardGame.CardInfo,UnityEngine.Sprite)
  id: SetAltPortrait(DiskCardGame.CardInfo,UnityEngine.Sprite)
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: SetAltPortrait(CardInfo, Sprite)
  nameWithType: CardExtensions.SetAltPortrait(CardInfo, Sprite)
  fullName: InscryptionAPI.Card.CardExtensions.SetAltPortrait(DiskCardGame.CardInfo, UnityEngine.Sprite)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SetAltPortrait
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 817
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nSets the card&apos;s alternate portrait. This portrait is only used when asked for by an ability or an appearance behavior.\n"
  example: []
  syntax:
    content: public static CardInfo SetAltPortrait(this CardInfo info, Sprite portrait)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: portrait
      type: UnityEngine.Sprite
      description: The sprite containing the card portrait
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetAltPortrait(info As CardInfo, portrait As Sprite) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.SetAltPortrait*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Card.CardExtensions.SetEmissivePortrait(DiskCardGame.CardInfo,System.String)
  commentId: M:InscryptionAPI.Card.CardExtensions.SetEmissivePortrait(DiskCardGame.CardInfo,System.String)
  id: SetEmissivePortrait(DiskCardGame.CardInfo,System.String)
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: SetEmissivePortrait(CardInfo, String)
  nameWithType: CardExtensions.SetEmissivePortrait(CardInfo, String)
  fullName: InscryptionAPI.Card.CardExtensions.SetEmissivePortrait(DiskCardGame.CardInfo, System.String)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SetEmissivePortrait
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 838
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nSets the emissive portrait for the card. This can only be done after the default portrait has been set (SetPortrait)\n"
  example: []
  syntax:
    content: public static CardInfo SetEmissivePortrait(this CardInfo info, string pathToArt)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: pathToArt
      type: System.String
      description: The path to the .png file containing the artwork (relative to the Plugins directory)
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetEmissivePortrait(info As CardInfo, pathToArt As String) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.SetEmissivePortrait*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Card.CardExtensions.SetEmissivePortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  commentId: M:InscryptionAPI.Card.CardExtensions.SetEmissivePortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  id: SetEmissivePortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: SetEmissivePortrait(CardInfo, Texture2D, Nullable<FilterMode>)
  nameWithType: CardExtensions.SetEmissivePortrait(CardInfo, Texture2D, Nullable<FilterMode>)
  fullName: InscryptionAPI.Card.CardExtensions.SetEmissivePortrait(DiskCardGame.CardInfo, UnityEngine.Texture2D, System.Nullable<UnityEngine.FilterMode>)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SetEmissivePortrait
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 857
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nSets the emissive portrait for the card. This can only be done after the default portrait has been set (SetPortrait)\n"
  example: []
  syntax:
    content: public static CardInfo SetEmissivePortrait(this CardInfo info, Texture2D portrait, FilterMode? filterMode = null)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: portrait
      type: UnityEngine.Texture2D
      description: The texture containing the emission
    - id: filterMode
      type: System.Nullable{UnityEngine.FilterMode}
      description: The filter mode for the texture, or null if no change
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetEmissivePortrait(info As CardInfo, portrait As Texture2D, filterMode As FilterMode? = Nothing) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.SetEmissivePortrait*
  nameWithType.vb: CardExtensions.SetEmissivePortrait(CardInfo, Texture2D, Nullable(Of FilterMode))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetEmissivePortrait(DiskCardGame.CardInfo, UnityEngine.Texture2D, System.Nullable(Of UnityEngine.FilterMode))
  name.vb: SetEmissivePortrait(CardInfo, Texture2D, Nullable(Of FilterMode))
- uid: InscryptionAPI.Card.CardExtensions.SetEmissivePortrait(DiskCardGame.CardInfo,UnityEngine.Sprite)
  commentId: M:InscryptionAPI.Card.CardExtensions.SetEmissivePortrait(DiskCardGame.CardInfo,UnityEngine.Sprite)
  id: SetEmissivePortrait(DiskCardGame.CardInfo,UnityEngine.Sprite)
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: SetEmissivePortrait(CardInfo, Sprite)
  nameWithType: CardExtensions.SetEmissivePortrait(CardInfo, Sprite)
  fullName: InscryptionAPI.Card.CardExtensions.SetEmissivePortrait(DiskCardGame.CardInfo, UnityEngine.Sprite)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SetEmissivePortrait
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 868
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nSets the emissive portrait for the card. This can only be done after the default portrait has been set (SetPortrait)\n"
  example: []
  syntax:
    content: public static CardInfo SetEmissivePortrait(this CardInfo info, Sprite sprite)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: sprite
      type: UnityEngine.Sprite
      description: The sprite containing the emission
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetEmissivePortrait(info As CardInfo, sprite As Sprite) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.SetEmissivePortrait*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Card.CardExtensions.SetEmissiveAltPortrait(DiskCardGame.CardInfo,System.String)
  commentId: M:InscryptionAPI.Card.CardExtensions.SetEmissiveAltPortrait(DiskCardGame.CardInfo,System.String)
  id: SetEmissiveAltPortrait(DiskCardGame.CardInfo,System.String)
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: SetEmissiveAltPortrait(CardInfo, String)
  nameWithType: CardExtensions.SetEmissiveAltPortrait(CardInfo, String)
  fullName: InscryptionAPI.Card.CardExtensions.SetEmissiveAltPortrait(DiskCardGame.CardInfo, System.String)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SetEmissiveAltPortrait
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 884
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nSets the emissive alternate portrait for the card. This can only be done after the default portrait has been set (SetPortrait)\n"
  example: []
  syntax:
    content: public static CardInfo SetEmissiveAltPortrait(this CardInfo info, string pathToArt)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: pathToArt
      type: System.String
      description: The path to the .png file containing the artwork (relative to the Plugins directory)
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetEmissiveAltPortrait(info As CardInfo, pathToArt As String) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.SetEmissiveAltPortrait*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Card.CardExtensions.SetEmissiveAltPortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  commentId: M:InscryptionAPI.Card.CardExtensions.SetEmissiveAltPortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  id: SetEmissiveAltPortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: SetEmissiveAltPortrait(CardInfo, Texture2D, Nullable<FilterMode>)
  nameWithType: CardExtensions.SetEmissiveAltPortrait(CardInfo, Texture2D, Nullable<FilterMode>)
  fullName: InscryptionAPI.Card.CardExtensions.SetEmissiveAltPortrait(DiskCardGame.CardInfo, UnityEngine.Texture2D, System.Nullable<UnityEngine.FilterMode>)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SetEmissiveAltPortrait
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 896
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nSets the emissive alternate portrait for the card. This can only be done after the default portrait has been set (SetPortrait)\n"
  example: []
  syntax:
    content: public static CardInfo SetEmissiveAltPortrait(this CardInfo info, Texture2D portrait, FilterMode? filterMode = null)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: portrait
      type: UnityEngine.Texture2D
      description: The texture containing the emission
    - id: filterMode
      type: System.Nullable{UnityEngine.FilterMode}
      description: The filter mode for the texture, or null if no change
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetEmissiveAltPortrait(info As CardInfo, portrait As Texture2D, filterMode As FilterMode? = Nothing) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.SetEmissiveAltPortrait*
  nameWithType.vb: CardExtensions.SetEmissiveAltPortrait(CardInfo, Texture2D, Nullable(Of FilterMode))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetEmissiveAltPortrait(DiskCardGame.CardInfo, UnityEngine.Texture2D, System.Nullable(Of UnityEngine.FilterMode))
  name.vb: SetEmissiveAltPortrait(CardInfo, Texture2D, Nullable(Of FilterMode))
- uid: InscryptionAPI.Card.CardExtensions.SetEmissiveAltPortrait(DiskCardGame.CardInfo,UnityEngine.Sprite)
  commentId: M:InscryptionAPI.Card.CardExtensions.SetEmissiveAltPortrait(DiskCardGame.CardInfo,UnityEngine.Sprite)
  id: SetEmissiveAltPortrait(DiskCardGame.CardInfo,UnityEngine.Sprite)
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: SetEmissiveAltPortrait(CardInfo, Sprite)
  nameWithType: CardExtensions.SetEmissiveAltPortrait(CardInfo, Sprite)
  fullName: InscryptionAPI.Card.CardExtensions.SetEmissiveAltPortrait(DiskCardGame.CardInfo, UnityEngine.Sprite)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SetEmissiveAltPortrait
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 907
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nSets the emissive alternate portrait for the card. This can only be done after the default portrait has been set (SetPortrait)\n"
  example: []
  syntax:
    content: public static CardInfo SetEmissiveAltPortrait(this CardInfo info, Sprite portrait)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: portrait
      type: UnityEngine.Sprite
      description: The sprite containing the emission
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetEmissiveAltPortrait(info As CardInfo, portrait As Sprite) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.SetEmissiveAltPortrait*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Card.CardExtensions.SetPixelPortrait(DiskCardGame.CardInfo,System.String)
  commentId: M:InscryptionAPI.Card.CardExtensions.SetPixelPortrait(DiskCardGame.CardInfo,System.String)
  id: SetPixelPortrait(DiskCardGame.CardInfo,System.String)
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: SetPixelPortrait(CardInfo, String)
  nameWithType: CardExtensions.SetPixelPortrait(CardInfo, String)
  fullName: InscryptionAPI.Card.CardExtensions.SetPixelPortrait(DiskCardGame.CardInfo, System.String)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SetPixelPortrait
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 927
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nSets the card&apos;s pixel portrait. This portrait is used when the card is displayed in GBC mode (Act 2).\n"
  example: []
  syntax:
    content: public static CardInfo SetPixelPortrait(this CardInfo info, string pathToArt)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: pathToArt
      type: System.String
      description: The path to the .png file containing the portrait artwork (relative to the Plugins directory)
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetPixelPortrait(info As CardInfo, pathToArt As String) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.SetPixelPortrait*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Card.CardExtensions.SetPixelPortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  commentId: M:InscryptionAPI.Card.CardExtensions.SetPixelPortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  id: SetPixelPortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: SetPixelPortrait(CardInfo, Texture2D, Nullable<FilterMode>)
  nameWithType: CardExtensions.SetPixelPortrait(CardInfo, Texture2D, Nullable<FilterMode>)
  fullName: InscryptionAPI.Card.CardExtensions.SetPixelPortrait(DiskCardGame.CardInfo, UnityEngine.Texture2D, System.Nullable<UnityEngine.FilterMode>)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SetPixelPortrait
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 939
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nSets the card&apos;s pixel portrait. This portrait is used when the card is displayed in GBC mode (Act 2).\n"
  example: []
  syntax:
    content: public static CardInfo SetPixelPortrait(this CardInfo info, Texture2D portrait, FilterMode? filterMode = null)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: portrait
      type: UnityEngine.Texture2D
      description: The texture containing the card portrait
    - id: filterMode
      type: System.Nullable{UnityEngine.FilterMode}
      description: The filter mode for the texture, or null if no change
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetPixelPortrait(info As CardInfo, portrait As Texture2D, filterMode As FilterMode? = Nothing) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.SetPixelPortrait*
  nameWithType.vb: CardExtensions.SetPixelPortrait(CardInfo, Texture2D, Nullable(Of FilterMode))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetPixelPortrait(DiskCardGame.CardInfo, UnityEngine.Texture2D, System.Nullable(Of UnityEngine.FilterMode))
  name.vb: SetPixelPortrait(CardInfo, Texture2D, Nullable(Of FilterMode))
- uid: InscryptionAPI.Card.CardExtensions.SetPixelPortrait(DiskCardGame.CardInfo,UnityEngine.Sprite)
  commentId: M:InscryptionAPI.Card.CardExtensions.SetPixelPortrait(DiskCardGame.CardInfo,UnityEngine.Sprite)
  id: SetPixelPortrait(DiskCardGame.CardInfo,UnityEngine.Sprite)
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: SetPixelPortrait(CardInfo, Sprite)
  nameWithType: CardExtensions.SetPixelPortrait(CardInfo, Sprite)
  fullName: InscryptionAPI.Card.CardExtensions.SetPixelPortrait(DiskCardGame.CardInfo, UnityEngine.Sprite)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SetPixelPortrait
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 954
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nSets the card&apos;s pixel portrait. This portrait is used when the card is displayed in GBC mode (Act 2).\n"
  example: []
  syntax:
    content: public static CardInfo SetPixelPortrait(this CardInfo info, Sprite portrait)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: portrait
      type: UnityEngine.Sprite
      description: The sprite containing the card portrait
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetPixelPortrait(info As CardInfo, portrait As Sprite) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.SetPixelPortrait*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.CardInfo,System.String)
  commentId: M:InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.CardInfo,System.String)
  id: SetLostTailPortrait(DiskCardGame.CardInfo,System.String)
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: SetLostTailPortrait(CardInfo, String)
  nameWithType: CardExtensions.SetLostTailPortrait(CardInfo, String)
  fullName: InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.CardInfo, System.String)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SetLostTailPortrait
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 974
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nSets the card&apos;s lost tail portrait. This portrait is used when the card has the TailOnHit ability and has dodged a hit.\n"
  example: []
  syntax:
    content: public static CardInfo SetLostTailPortrait(this CardInfo info, string pathToArt)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: pathToArt
      type: System.String
      description: The path to the .png file containing the portrait artwork (relative to the Plugins directory)
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetLostTailPortrait(info As CardInfo, pathToArt As String) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.SetLostTailPortrait*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  commentId: M:InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  id: SetLostTailPortrait(DiskCardGame.CardInfo,UnityEngine.Texture2D,System.Nullable{UnityEngine.FilterMode})
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: SetLostTailPortrait(CardInfo, Texture2D, Nullable<FilterMode>)
  nameWithType: CardExtensions.SetLostTailPortrait(CardInfo, Texture2D, Nullable<FilterMode>)
  fullName: InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.CardInfo, UnityEngine.Texture2D, System.Nullable<UnityEngine.FilterMode>)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SetLostTailPortrait
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 991
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nSets the card&apos;s lost tail portrait. This portrait is used when the card has the TailOnHit ability and has dodged a hit.\n"
  example: []
  syntax:
    content: public static CardInfo SetLostTailPortrait(this CardInfo info, Texture2D portrait, FilterMode? filterMode = null)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: portrait
      type: UnityEngine.Texture2D
      description: The texture containing the card portrait
    - id: filterMode
      type: System.Nullable{UnityEngine.FilterMode}
      description: The filter mode for the texture, or null if no change
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetLostTailPortrait(info As CardInfo, portrait As Texture2D, filterMode As FilterMode? = Nothing) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.SetLostTailPortrait*
  nameWithType.vb: CardExtensions.SetLostTailPortrait(CardInfo, Texture2D, Nullable(Of FilterMode))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.CardInfo, UnityEngine.Texture2D, System.Nullable(Of UnityEngine.FilterMode))
  name.vb: SetLostTailPortrait(CardInfo, Texture2D, Nullable(Of FilterMode))
- uid: InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.TailParams,System.String,DiskCardGame.CardInfo)
  commentId: M:InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.TailParams,System.String,DiskCardGame.CardInfo)
  id: SetLostTailPortrait(DiskCardGame.TailParams,System.String,DiskCardGame.CardInfo)
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: SetLostTailPortrait(TailParams, String, CardInfo)
  nameWithType: CardExtensions.SetLostTailPortrait(TailParams, String, CardInfo)
  fullName: InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.TailParams, System.String, DiskCardGame.CardInfo)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SetLostTailPortrait
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 1008
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nSets the card&apos;s lost tail portrait. This portrait is used when the card has the TailOnHit ability and has dodged a hit.\n"
  example: []
  syntax:
    content: public static TailParams SetLostTailPortrait(this TailParams info, string pathToArt, CardInfo owner)
    parameters:
    - id: info
      type: DiskCardGame.TailParams
      description: Tail to access
    - id: pathToArt
      type: System.String
      description: The path to the .png file containing the portrait artwork (relative to the Plugins directory)
    - id: owner
      type: DiskCardGame.CardInfo
      description: The card that the tail parameters belongs to.
    return:
      type: DiskCardGame.TailParams
      description: The same TailParams so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetLostTailPortrait(info As TailParams, pathToArt As String, owner As CardInfo) As TailParams
  overload: InscryptionAPI.Card.CardExtensions.SetLostTailPortrait*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.TailParams,UnityEngine.Texture2D,DiskCardGame.CardInfo,System.Nullable{UnityEngine.FilterMode})
  commentId: M:InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.TailParams,UnityEngine.Texture2D,DiskCardGame.CardInfo,System.Nullable{UnityEngine.FilterMode})
  id: SetLostTailPortrait(DiskCardGame.TailParams,UnityEngine.Texture2D,DiskCardGame.CardInfo,System.Nullable{UnityEngine.FilterMode})
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: SetLostTailPortrait(TailParams, Texture2D, CardInfo, Nullable<FilterMode>)
  nameWithType: CardExtensions.SetLostTailPortrait(TailParams, Texture2D, CardInfo, Nullable<FilterMode>)
  fullName: InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.TailParams, UnityEngine.Texture2D, DiskCardGame.CardInfo, System.Nullable<UnityEngine.FilterMode>)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SetLostTailPortrait
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 1022
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nSets the card&apos;s lost tail portrait. This portrait is used when the card has the TailOnHit ability and has dodged a hit.\n"
  example: []
  syntax:
    content: public static TailParams SetLostTailPortrait(this TailParams info, Texture2D portrait, CardInfo owner, FilterMode? filterMode = null)
    parameters:
    - id: info
      type: DiskCardGame.TailParams
      description: Tail to access
    - id: portrait
      type: UnityEngine.Texture2D
      description: The texture containing the card portrait
    - id: owner
      type: DiskCardGame.CardInfo
      description: The card that the tail parameters belongs to.
    - id: filterMode
      type: System.Nullable{UnityEngine.FilterMode}
      description: The filter mode for the texture, or null if no change
    return:
      type: DiskCardGame.TailParams
      description: The same TailParams so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetLostTailPortrait(info As TailParams, portrait As Texture2D, owner As CardInfo, filterMode As FilterMode? = Nothing) As TailParams
  overload: InscryptionAPI.Card.CardExtensions.SetLostTailPortrait*
  nameWithType.vb: CardExtensions.SetLostTailPortrait(TailParams, Texture2D, CardInfo, Nullable(Of FilterMode))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.TailParams, UnityEngine.Texture2D, DiskCardGame.CardInfo, System.Nullable(Of UnityEngine.FilterMode))
  name.vb: SetLostTailPortrait(TailParams, Texture2D, CardInfo, Nullable(Of FilterMode))
- uid: InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.TailParams,UnityEngine.Sprite,DiskCardGame.CardInfo)
  commentId: M:InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.TailParams,UnityEngine.Sprite,DiskCardGame.CardInfo)
  id: SetLostTailPortrait(DiskCardGame.TailParams,UnityEngine.Sprite,DiskCardGame.CardInfo)
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: SetLostTailPortrait(TailParams, Sprite, CardInfo)
  nameWithType: CardExtensions.SetLostTailPortrait(TailParams, Sprite, CardInfo)
  fullName: InscryptionAPI.Card.CardExtensions.SetLostTailPortrait(DiskCardGame.TailParams, UnityEngine.Sprite, DiskCardGame.CardInfo)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SetLostTailPortrait
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 1038
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nSets the card&apos;s lost tail portrait. This portrait is used when the card has the TailOnHit ability and has dodged a hit.\n"
  example: []
  syntax:
    content: public static TailParams SetLostTailPortrait(this TailParams info, Sprite portrait, CardInfo owner)
    parameters:
    - id: info
      type: DiskCardGame.TailParams
      description: Tail to access
    - id: portrait
      type: UnityEngine.Sprite
      description: The sprite containing the card portrait
    - id: owner
      type: DiskCardGame.CardInfo
      description: The card that the tail parameters belongs to.
    return:
      type: DiskCardGame.TailParams
      description: The same TailParams so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetLostTailPortrait(info As TailParams, portrait As Sprite, owner As CardInfo) As TailParams
  overload: InscryptionAPI.Card.CardExtensions.SetLostTailPortrait*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Card.CardExtensions.GetCardInfo(System.String)
  commentId: M:InscryptionAPI.Card.CardExtensions.GetCardInfo(System.String)
  id: GetCardInfo(System.String)
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: GetCardInfo(String)
  nameWithType: CardExtensions.GetCardInfo(String)
  fullName: InscryptionAPI.Card.CardExtensions.GetCardInfo(System.String)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: GetCardInfo
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 1063
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nGet the CardInfo object based off the card name. A much more robust way that&apos;s the same as `CardLoader.GetCardByName()`.\n"
  example: []
  syntax:
    content: public static CardInfo GetCardInfo(this string cardName)
    parameters:
    - id: cardName
      type: System.String
      description: The name of the card.
    return:
      type: DiskCardGame.CardInfo
      description: The CardInfo object.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCardInfo(cardName As String) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.GetCardInfo*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Card.CardExtensions.CreateBlueprint(System.String)
  commentId: M:InscryptionAPI.Card.CardExtensions.CreateBlueprint(System.String)
  id: CreateBlueprint(System.String)
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: CreateBlueprint(String)
  nameWithType: CardExtensions.CreateBlueprint(String)
  fullName: InscryptionAPI.Card.CardExtensions.CreateBlueprint(System.String)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: CreateBlueprint
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 1073
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nCreate a basic EncounterBlueprintData.CardBlueprint based off the card name.\n"
  example: []
  syntax:
    content: public static EncounterBlueprintData.CardBlueprint CreateBlueprint(this string cardName)
    parameters:
    - id: cardName
      type: System.String
      description: The name of the card.
    return:
      type: DiskCardGame.EncounterBlueprintData.CardBlueprint
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateBlueprint(cardName As String) As EncounterBlueprintData.CardBlueprint
  overload: InscryptionAPI.Card.CardExtensions.CreateBlueprint*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Card.CardExtensions.CreateBlueprint(DiskCardGame.CardInfo)
  commentId: M:InscryptionAPI.Card.CardExtensions.CreateBlueprint(DiskCardGame.CardInfo)
  id: CreateBlueprint(DiskCardGame.CardInfo)
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: CreateBlueprint(CardInfo)
  nameWithType: CardExtensions.CreateBlueprint(CardInfo)
  fullName: InscryptionAPI.Card.CardExtensions.CreateBlueprint(DiskCardGame.CardInfo)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: CreateBlueprint
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 1083
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nCreate a basic EncounterBlueprintData.CardBlueprint based off the CardInfo object.\n"
  example: []
  syntax:
    content: public static EncounterBlueprintData.CardBlueprint CreateBlueprint(this CardInfo cardInfo)
    parameters:
    - id: cardInfo
      type: DiskCardGame.CardInfo
      description: CardInfo to create the blueprint with.
    return:
      type: DiskCardGame.EncounterBlueprintData.CardBlueprint
      description: The CardBlueprint object that can be used when creating EncounterData.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateBlueprint(cardInfo As CardInfo) As EncounterBlueprintData.CardBlueprint
  overload: InscryptionAPI.Card.CardExtensions.CreateBlueprint*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Card.CardExtensions.DoesNotHaveAbility(DiskCardGame.CardInfo,DiskCardGame.Ability)
  commentId: M:InscryptionAPI.Card.CardExtensions.DoesNotHaveAbility(DiskCardGame.CardInfo,DiskCardGame.Ability)
  id: DoesNotHaveAbility(DiskCardGame.CardInfo,DiskCardGame.Ability)
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: DoesNotHaveAbility(CardInfo, Ability)
  nameWithType: CardExtensions.DoesNotHaveAbility(CardInfo, Ability)
  fullName: InscryptionAPI.Card.CardExtensions.DoesNotHaveAbility(DiskCardGame.CardInfo, DiskCardGame.Ability)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: DoesNotHaveAbility
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 1097
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nCheck the CardInfo not having a specific Ability.\n"
  example: []
  syntax:
    content: public static bool DoesNotHaveAbility(this CardInfo cardInfo, Ability ability)
    parameters:
    - id: cardInfo
      type: DiskCardGame.CardInfo
      description: CardInfo to access
    - id: ability
      type: DiskCardGame.Ability
      description: The ability to check for
    return:
      type: System.Boolean
      description: true if the ability does not exist
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DoesNotHaveAbility(cardInfo As CardInfo, ability As Ability) As Boolean
  overload: InscryptionAPI.Card.CardExtensions.DoesNotHaveAbility*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Card.CardExtensions.DoesNotHaveSpecialAbility(DiskCardGame.CardInfo,DiskCardGame.SpecialTriggeredAbility)
  commentId: M:InscryptionAPI.Card.CardExtensions.DoesNotHaveSpecialAbility(DiskCardGame.CardInfo,DiskCardGame.SpecialTriggeredAbility)
  id: DoesNotHaveSpecialAbility(DiskCardGame.CardInfo,DiskCardGame.SpecialTriggeredAbility)
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: DoesNotHaveSpecialAbility(CardInfo, SpecialTriggeredAbility)
  nameWithType: CardExtensions.DoesNotHaveSpecialAbility(CardInfo, SpecialTriggeredAbility)
  fullName: InscryptionAPI.Card.CardExtensions.DoesNotHaveSpecialAbility(DiskCardGame.CardInfo, DiskCardGame.SpecialTriggeredAbility)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: DoesNotHaveSpecialAbility
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 1108
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nCheck the CardInfo not having a specific Ability.\n"
  example: []
  syntax:
    content: public static bool DoesNotHaveSpecialAbility(this CardInfo cardInfo, SpecialTriggeredAbility ability)
    parameters:
    - id: cardInfo
      type: DiskCardGame.CardInfo
      description: CardInfo to access
    - id: ability
      type: DiskCardGame.SpecialTriggeredAbility
      description: The specialTriggeredAbility to check for
    return:
      type: System.Boolean
      description: true if the specialTriggeredAbility does not exist
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DoesNotHaveSpecialAbility(cardInfo As CardInfo, ability As SpecialTriggeredAbility) As Boolean
  overload: InscryptionAPI.Card.CardExtensions.DoesNotHaveSpecialAbility*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Card.CardExtensions.DoesNotHaveAbility(DiskCardGame.PlayableCard,DiskCardGame.Ability)
  commentId: M:InscryptionAPI.Card.CardExtensions.DoesNotHaveAbility(DiskCardGame.PlayableCard,DiskCardGame.Ability)
  id: DoesNotHaveAbility(DiskCardGame.PlayableCard,DiskCardGame.Ability)
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: DoesNotHaveAbility(PlayableCard, Ability)
  nameWithType: CardExtensions.DoesNotHaveAbility(PlayableCard, Ability)
  fullName: InscryptionAPI.Card.CardExtensions.DoesNotHaveAbility(DiskCardGame.PlayableCard, DiskCardGame.Ability)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: DoesNotHaveAbility
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 1119
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nCheck the PlayableCard not having a specific Ability.\n"
  example: []
  syntax:
    content: public static bool DoesNotHaveAbility(this PlayableCard playableCard, Ability ability)
    parameters:
    - id: playableCard
      type: DiskCardGame.PlayableCard
      description: PlayableCard to access
    - id: ability
      type: DiskCardGame.Ability
      description: The ability to check for
    return:
      type: System.Boolean
      description: true if the ability does not exist
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DoesNotHaveAbility(playableCard As PlayableCard, ability As Ability) As Boolean
  overload: InscryptionAPI.Card.CardExtensions.DoesNotHaveAbility*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Card.CardExtensions.DoesNotHaveSpecialAbility(DiskCardGame.PlayableCard,DiskCardGame.SpecialTriggeredAbility)
  commentId: M:InscryptionAPI.Card.CardExtensions.DoesNotHaveSpecialAbility(DiskCardGame.PlayableCard,DiskCardGame.SpecialTriggeredAbility)
  id: DoesNotHaveSpecialAbility(DiskCardGame.PlayableCard,DiskCardGame.SpecialTriggeredAbility)
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: DoesNotHaveSpecialAbility(PlayableCard, SpecialTriggeredAbility)
  nameWithType: CardExtensions.DoesNotHaveSpecialAbility(PlayableCard, SpecialTriggeredAbility)
  fullName: InscryptionAPI.Card.CardExtensions.DoesNotHaveSpecialAbility(DiskCardGame.PlayableCard, DiskCardGame.SpecialTriggeredAbility)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: DoesNotHaveSpecialAbility
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 1132
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nCheck the PlayableCard not having a specific SpecialTriggeredAbility.\n\nA condensed version of `playableCard.Info.SpecialAbilities.Contains(ability)`.\n"
  example: []
  syntax:
    content: public static bool DoesNotHaveSpecialAbility(this PlayableCard playableCard, SpecialTriggeredAbility ability)
    parameters:
    - id: playableCard
      type: DiskCardGame.PlayableCard
      description: PlayableCard to access
    - id: ability
      type: DiskCardGame.SpecialTriggeredAbility
      description: The specialTriggeredAbility to check for
    return:
      type: System.Boolean
      description: true if the specialTriggeredAbility does not exist
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DoesNotHaveSpecialAbility(playableCard As PlayableCard, ability As SpecialTriggeredAbility) As Boolean
  overload: InscryptionAPI.Card.CardExtensions.DoesNotHaveSpecialAbility*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Card.CardExtensions.HasSpecialAbility(DiskCardGame.PlayableCard,DiskCardGame.SpecialTriggeredAbility)
  commentId: M:InscryptionAPI.Card.CardExtensions.HasSpecialAbility(DiskCardGame.PlayableCard,DiskCardGame.SpecialTriggeredAbility)
  id: HasSpecialAbility(DiskCardGame.PlayableCard,DiskCardGame.SpecialTriggeredAbility)
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: HasSpecialAbility(PlayableCard, SpecialTriggeredAbility)
  nameWithType: CardExtensions.HasSpecialAbility(PlayableCard, SpecialTriggeredAbility)
  fullName: InscryptionAPI.Card.CardExtensions.HasSpecialAbility(DiskCardGame.PlayableCard, DiskCardGame.SpecialTriggeredAbility)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: HasSpecialAbility
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 1145
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nCheck the PlayableCard having a specific SpecialTriggeredAbility.\n\nA condensed version of `playableCard.Info.SpecialAbilities.Contains(ability)`.\n"
  example: []
  syntax:
    content: public static bool HasSpecialAbility(this PlayableCard playableCard, SpecialTriggeredAbility ability)
    parameters:
    - id: playableCard
      type: DiskCardGame.PlayableCard
      description: PlayableCard to access
    - id: ability
      type: DiskCardGame.SpecialTriggeredAbility
      description: The specialTriggeredAbility to check for
    return:
      type: System.Boolean
      description: true if the specialTriggeredAbility does exist
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function HasSpecialAbility(playableCard As PlayableCard, ability As SpecialTriggeredAbility) As Boolean
  overload: InscryptionAPI.Card.CardExtensions.HasSpecialAbility*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Card.CardExtensions.SetExtendedProperty(DiskCardGame.CardInfo,System.String,System.Object)
  commentId: M:InscryptionAPI.Card.CardExtensions.SetExtendedProperty(DiskCardGame.CardInfo,System.String,System.Object)
  id: SetExtendedProperty(DiskCardGame.CardInfo,System.String,System.Object)
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: SetExtendedProperty(CardInfo, String, Object)
  nameWithType: CardExtensions.SetExtendedProperty(CardInfo, String, Object)
  fullName: InscryptionAPI.Card.CardExtensions.SetExtendedProperty(DiskCardGame.CardInfo, System.String, System.Object)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SetExtendedProperty
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 1161
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nAdds a custom property value to the card.\n"
  example: []
  syntax:
    content: public static CardInfo SetExtendedProperty(this CardInfo info, string propertyName, object value)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: propertyName
      type: System.String
      description: The name of the property to set
    - id: value
      type: System.Object
      description: The value of the property
    return:
      type: DiskCardGame.CardInfo
      description: The same card info so a chain can continue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetExtendedProperty(info As CardInfo, propertyName As String, value As Object) As CardInfo
  overload: InscryptionAPI.Card.CardExtensions.SetExtendedProperty*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Card.CardExtensions.GetExtendedProperty(DiskCardGame.CardInfo,System.String)
  commentId: M:InscryptionAPI.Card.CardExtensions.GetExtendedProperty(DiskCardGame.CardInfo,System.String)
  id: GetExtendedProperty(DiskCardGame.CardInfo,System.String)
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: GetExtendedProperty(CardInfo, String)
  nameWithType: CardExtensions.GetExtendedProperty(CardInfo, String)
  fullName: InscryptionAPI.Card.CardExtensions.GetExtendedProperty(DiskCardGame.CardInfo, System.String)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: GetExtendedProperty
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 1173
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nGets a custom property value from the card\n"
  example: []
  syntax:
    content: public static string GetExtendedProperty(this CardInfo info, string propertyName)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: propertyName
      type: System.String
      description: The name of the property to get the value of
    return:
      type: System.String
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetExtendedProperty(info As CardInfo, propertyName As String) As String
  overload: InscryptionAPI.Card.CardExtensions.GetExtendedProperty*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsInt(DiskCardGame.CardInfo,System.String)
  commentId: M:InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsInt(DiskCardGame.CardInfo,System.String)
  id: GetExtendedPropertyAsInt(DiskCardGame.CardInfo,System.String)
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: GetExtendedPropertyAsInt(CardInfo, String)
  nameWithType: CardExtensions.GetExtendedPropertyAsInt(CardInfo, String)
  fullName: InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsInt(DiskCardGame.CardInfo, System.String)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: GetExtendedPropertyAsInt
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 1185
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nGets a custom property as an int (can by null)\n"
  example: []
  syntax:
    content: public static int? GetExtendedPropertyAsInt(this CardInfo info, string propertyName)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: propertyName
      type: System.String
      description: Property name to get value of
    return:
      type: System.Nullable{System.Int32}
      description: Returns the value of the property as an int or null if it didn&apos;t exist or couldn&apos;t be parsed as int
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetExtendedPropertyAsInt(info As CardInfo, propertyName As String) As Integer?
  overload: InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsInt*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsFloat(DiskCardGame.CardInfo,System.String)
  commentId: M:InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsFloat(DiskCardGame.CardInfo,System.String)
  id: GetExtendedPropertyAsFloat(DiskCardGame.CardInfo,System.String)
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: GetExtendedPropertyAsFloat(CardInfo, String)
  nameWithType: CardExtensions.GetExtendedPropertyAsFloat(CardInfo, String)
  fullName: InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsFloat(DiskCardGame.CardInfo, System.String)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: GetExtendedPropertyAsFloat
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 1197
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nGets a custom property as a float (can by null)\n"
  example: []
  syntax:
    content: public static float? GetExtendedPropertyAsFloat(this CardInfo info, string propertyName)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: propertyName
      type: System.String
      description: Property name to get value of
    return:
      type: System.Nullable{System.Single}
      description: Returns the value of the property as a float or null if it didn&apos;t exist or couldn&apos;t be parsed as float
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetExtendedPropertyAsFloat(info As CardInfo, propertyName As String) As Single?
  overload: InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsFloat*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsBool(DiskCardGame.CardInfo,System.String)
  commentId: M:InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsBool(DiskCardGame.CardInfo,System.String)
  id: GetExtendedPropertyAsBool(DiskCardGame.CardInfo,System.String)
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: GetExtendedPropertyAsBool(CardInfo, String)
  nameWithType: CardExtensions.GetExtendedPropertyAsBool(CardInfo, String)
  fullName: InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsBool(DiskCardGame.CardInfo, System.String)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: GetExtendedPropertyAsBool
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 1209
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nGets a custom property as a boolean (can be null)\n"
  example: []
  syntax:
    content: public static bool? GetExtendedPropertyAsBool(this CardInfo info, string propertyName)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    - id: propertyName
      type: System.String
      description: Property name to get value of
    return:
      type: System.Nullable{System.Boolean}
      description: Returns the value of the property as a boolean or null if it didn&apos;t exist or couldn&apos;t be parsed as boolean
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetExtendedPropertyAsBool(info As CardInfo, propertyName As String) As Boolean?
  overload: InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsBool*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Card.CardExtensions.GetModTag(DiskCardGame.CardInfo)
  commentId: M:InscryptionAPI.Card.CardExtensions.GetModTag(DiskCardGame.CardInfo)
  id: GetModTag(DiskCardGame.CardInfo)
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: GetModTag(CardInfo)
  nameWithType: CardExtensions.GetModTag(CardInfo)
  fullName: InscryptionAPI.Card.CardExtensions.GetModTag(DiskCardGame.CardInfo)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: GetModTag
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 1236
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nGets the GUID of the mod that created this card\n"
  example: []
  syntax:
    content: public static string GetModTag(this CardInfo info)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    return:
      type: System.String
      description: The ID of the mod that created this card, or null if it wasn&apos;t found
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetModTag(info As CardInfo) As String
  overload: InscryptionAPI.Card.CardExtensions.GetModTag*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Card.CardExtensions.GetModPrefix(DiskCardGame.CardInfo)
  commentId: M:InscryptionAPI.Card.CardExtensions.GetModPrefix(DiskCardGame.CardInfo)
  id: GetModPrefix(DiskCardGame.CardInfo)
  isExtensionMethod: true
  parent: InscryptionAPI.Card.CardExtensions
  langs:
  - csharp
  - vb
  name: GetModPrefix(CardInfo)
  nameWithType: CardExtensions.GetModPrefix(CardInfo)
  fullName: InscryptionAPI.Card.CardExtensions.GetModPrefix(DiskCardGame.CardInfo)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/CardExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: GetModPrefix
    path: ../InscryptionAPI/Card/CardExtensions.cs
    startLine: 1258
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  summary: "\nGets the card name prefix for this card\n"
  example: []
  syntax:
    content: public static string GetModPrefix(this CardInfo info)
    parameters:
    - id: info
      type: DiskCardGame.CardInfo
      description: Card to access
    return:
      type: System.String
      description: The mod prefix for this card, or null if it wasn&apos;t found
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetModPrefix(info As CardInfo) As String
  overload: InscryptionAPI.Card.CardExtensions.GetModPrefix*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: InscryptionAPI.Card
  commentId: N:InscryptionAPI.Card
  name: InscryptionAPI.Card
  nameWithType: InscryptionAPI.Card
  fullName: InscryptionAPI.Card
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: InscryptionAPI.Card.CardExtensions.CardByName*
  commentId: Overload:InscryptionAPI.Card.CardExtensions.CardByName
  name: CardByName
  nameWithType: CardExtensions.CardByName
  fullName: InscryptionAPI.Card.CardExtensions.CardByName
- uid: IEnumerable{DiskCardGame.CardInfo}
  commentId: '!:IEnumerable{DiskCardGame.CardInfo}'
  definition: IEnumerable`1
  name: IEnumerable<CardInfo>
  nameWithType: IEnumerable<CardInfo>
  fullName: IEnumerable<DiskCardGame.CardInfo>
  nameWithType.vb: IEnumerable(Of CardInfo)
  fullName.vb: IEnumerable(Of DiskCardGame.CardInfo)
  name.vb: IEnumerable(Of CardInfo)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DiskCardGame.CardInfo
    name: CardInfo
    nameWithType: CardInfo
    fullName: DiskCardGame.CardInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DiskCardGame.CardInfo
    name: CardInfo
    nameWithType: CardInfo
    fullName: DiskCardGame.CardInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: DiskCardGame.CardInfo
  commentId: T:DiskCardGame.CardInfo
  parent: DiskCardGame
  isExternal: true
  name: CardInfo
  nameWithType: CardInfo
  fullName: DiskCardGame.CardInfo
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: DiskCardGame
  commentId: N:DiskCardGame
  isExternal: true
  name: DiskCardGame
  nameWithType: DiskCardGame
  fullName: DiskCardGame
- uid: InscryptionAPI.Card.CardExtensions.AddAbilities*
  commentId: Overload:InscryptionAPI.Card.CardExtensions.AddAbilities
  name: AddAbilities
  nameWithType: CardExtensions.AddAbilities
  fullName: InscryptionAPI.Card.CardExtensions.AddAbilities
- uid: DiskCardGame.Ability[]
  isExternal: true
  name: Ability[]
  nameWithType: Ability[]
  fullName: DiskCardGame.Ability[]
  nameWithType.vb: Ability()
  fullName.vb: DiskCardGame.Ability()
  name.vb: Ability()
  spec.csharp:
  - uid: DiskCardGame.Ability
    name: Ability
    nameWithType: Ability
    fullName: DiskCardGame.Ability
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: DiskCardGame.Ability
    name: Ability
    nameWithType: Ability
    fullName: DiskCardGame.Ability
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: InscryptionAPI.Card.CardExtensions.AddAppearances*
  commentId: Overload:InscryptionAPI.Card.CardExtensions.AddAppearances
  name: AddAppearances
  nameWithType: CardExtensions.AddAppearances
  fullName: InscryptionAPI.Card.CardExtensions.AddAppearances
- uid: DiskCardGame.CardAppearanceBehaviour.Appearance[]
  isExternal: true
  name: CardAppearanceBehaviour.Appearance[]
  nameWithType: CardAppearanceBehaviour.Appearance[]
  fullName: DiskCardGame.CardAppearanceBehaviour.Appearance[]
  nameWithType.vb: CardAppearanceBehaviour.Appearance()
  fullName.vb: DiskCardGame.CardAppearanceBehaviour.Appearance()
  name.vb: CardAppearanceBehaviour.Appearance()
  spec.csharp:
  - uid: DiskCardGame.CardAppearanceBehaviour.Appearance
    name: CardAppearanceBehaviour.Appearance
    nameWithType: CardAppearanceBehaviour.Appearance
    fullName: DiskCardGame.CardAppearanceBehaviour.Appearance
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: DiskCardGame.CardAppearanceBehaviour.Appearance
    name: CardAppearanceBehaviour.Appearance
    nameWithType: CardAppearanceBehaviour.Appearance
    fullName: DiskCardGame.CardAppearanceBehaviour.Appearance
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: InscryptionAPI.Card.CardExtensions.AddDecal*
  commentId: Overload:InscryptionAPI.Card.CardExtensions.AddDecal
  name: AddDecal
  nameWithType: CardExtensions.AddDecal
  fullName: InscryptionAPI.Card.CardExtensions.AddDecal
- uid: UnityEngine.Texture[]
  isExternal: true
  name: Texture[]
  nameWithType: Texture[]
  fullName: UnityEngine.Texture[]
  nameWithType.vb: Texture()
  fullName.vb: UnityEngine.Texture()
  name.vb: Texture()
  spec.csharp:
  - uid: UnityEngine.Texture
    name: Texture
    nameWithType: Texture
    fullName: UnityEngine.Texture
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: UnityEngine.Texture
    name: Texture
    nameWithType: Texture
    fullName: UnityEngine.Texture
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: InscryptionAPI.Card.CardExtensions.AddMetaCategories*
  commentId: Overload:InscryptionAPI.Card.CardExtensions.AddMetaCategories
  name: AddMetaCategories
  nameWithType: CardExtensions.AddMetaCategories
  fullName: InscryptionAPI.Card.CardExtensions.AddMetaCategories
- uid: DiskCardGame.CardMetaCategory[]
  isExternal: true
  name: CardMetaCategory[]
  nameWithType: CardMetaCategory[]
  fullName: DiskCardGame.CardMetaCategory[]
  nameWithType.vb: CardMetaCategory()
  fullName.vb: DiskCardGame.CardMetaCategory()
  name.vb: CardMetaCategory()
  spec.csharp:
  - uid: DiskCardGame.CardMetaCategory
    name: CardMetaCategory
    nameWithType: CardMetaCategory
    fullName: DiskCardGame.CardMetaCategory
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: DiskCardGame.CardMetaCategory
    name: CardMetaCategory
    nameWithType: CardMetaCategory
    fullName: DiskCardGame.CardMetaCategory
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: InscryptionAPI.Card.CardExtensions.AddSpecialAbilities*
  commentId: Overload:InscryptionAPI.Card.CardExtensions.AddSpecialAbilities
  name: AddSpecialAbilities
  nameWithType: CardExtensions.AddSpecialAbilities
  fullName: InscryptionAPI.Card.CardExtensions.AddSpecialAbilities
- uid: DiskCardGame.SpecialTriggeredAbility[]
  isExternal: true
  name: SpecialTriggeredAbility[]
  nameWithType: SpecialTriggeredAbility[]
  fullName: DiskCardGame.SpecialTriggeredAbility[]
  nameWithType.vb: SpecialTriggeredAbility()
  fullName.vb: DiskCardGame.SpecialTriggeredAbility()
  name.vb: SpecialTriggeredAbility()
  spec.csharp:
  - uid: DiskCardGame.SpecialTriggeredAbility
    name: SpecialTriggeredAbility
    nameWithType: SpecialTriggeredAbility
    fullName: DiskCardGame.SpecialTriggeredAbility
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: DiskCardGame.SpecialTriggeredAbility
    name: SpecialTriggeredAbility
    nameWithType: SpecialTriggeredAbility
    fullName: DiskCardGame.SpecialTriggeredAbility
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: InscryptionAPI.Card.CardExtensions.AddTraits*
  commentId: Overload:InscryptionAPI.Card.CardExtensions.AddTraits
  name: AddTraits
  nameWithType: CardExtensions.AddTraits
  fullName: InscryptionAPI.Card.CardExtensions.AddTraits
- uid: DiskCardGame.Trait[]
  isExternal: true
  name: Trait[]
  nameWithType: Trait[]
  fullName: DiskCardGame.Trait[]
  nameWithType.vb: Trait()
  fullName.vb: DiskCardGame.Trait()
  name.vb: Trait()
  spec.csharp:
  - uid: DiskCardGame.Trait
    name: Trait
    nameWithType: Trait
    fullName: DiskCardGame.Trait
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: DiskCardGame.Trait
    name: Trait
    nameWithType: Trait
    fullName: DiskCardGame.Trait
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: InscryptionAPI.Card.CardExtensions.AddTribes*
  commentId: Overload:InscryptionAPI.Card.CardExtensions.AddTribes
  name: AddTribes
  nameWithType: CardExtensions.AddTribes
  fullName: InscryptionAPI.Card.CardExtensions.AddTribes
- uid: DiskCardGame.Tribe[]
  isExternal: true
  name: Tribe[]
  nameWithType: Tribe[]
  fullName: DiskCardGame.Tribe[]
  nameWithType.vb: Tribe()
  fullName.vb: DiskCardGame.Tribe()
  name.vb: Tribe()
  spec.csharp:
  - uid: DiskCardGame.Tribe
    name: Tribe
    nameWithType: Tribe
    fullName: DiskCardGame.Tribe
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: DiskCardGame.Tribe
    name: Tribe
    nameWithType: Tribe
    fullName: DiskCardGame.Tribe
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: InscryptionAPI.Card.CardExtensions.SetBasic*
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetBasic
  name: SetBasic
  nameWithType: CardExtensions.SetBasic
  fullName: InscryptionAPI.Card.CardExtensions.SetBasic
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: InscryptionAPI.Card.CardExtensions.IsBaseGameCard*
  commentId: Overload:InscryptionAPI.Card.CardExtensions.IsBaseGameCard
  name: IsBaseGameCard
  nameWithType: CardExtensions.IsBaseGameCard
  fullName: InscryptionAPI.Card.CardExtensions.IsBaseGameCard
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: InscryptionAPI.Card.CardExtensions.SetBaseAttackAndHealth*
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetBaseAttackAndHealth
  name: SetBaseAttackAndHealth
  nameWithType: CardExtensions.SetBaseAttackAndHealth
  fullName: InscryptionAPI.Card.CardExtensions.SetBaseAttackAndHealth
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: InscryptionAPI.Card.CardExtensions.SetDisplayedName*
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetDisplayedName
  name: SetDisplayedName
  nameWithType: CardExtensions.SetDisplayedName
  fullName: InscryptionAPI.Card.CardExtensions.SetDisplayedName
- uid: InscryptionAPI.Card.CardExtensions.SetName*
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetName
  name: SetName
  nameWithType: CardExtensions.SetName
  fullName: InscryptionAPI.Card.CardExtensions.SetName
- uid: InscryptionAPI.Card.CardExtensions.SetNames*
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetNames
  name: SetNames
  nameWithType: CardExtensions.SetNames
  fullName: InscryptionAPI.Card.CardExtensions.SetNames
- uid: InscryptionAPI.Card.CardExtensions.SetSpecialAbilities*
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetSpecialAbilities
  name: SetSpecialAbilities
  nameWithType: CardExtensions.SetSpecialAbilities
  fullName: InscryptionAPI.Card.CardExtensions.SetSpecialAbilities
- uid: InscryptionAPI.Card.CardExtensions.SetStatIcon*
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetStatIcon
  name: SetStatIcon
  nameWithType: CardExtensions.SetStatIcon
  fullName: InscryptionAPI.Card.CardExtensions.SetStatIcon
- uid: DiskCardGame.SpecialStatIcon
  commentId: T:DiskCardGame.SpecialStatIcon
  parent: DiskCardGame
  isExternal: true
  name: SpecialStatIcon
  nameWithType: SpecialStatIcon
  fullName: DiskCardGame.SpecialStatIcon
- uid: InscryptionAPI.Card.CardExtensions.SetTraits*
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetTraits
  name: SetTraits
  nameWithType: CardExtensions.SetTraits
  fullName: InscryptionAPI.Card.CardExtensions.SetTraits
- uid: InscryptionAPI.Card.CardExtensions.SetTribes*
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetTribes
  name: SetTribes
  nameWithType: CardExtensions.SetTribes
  fullName: InscryptionAPI.Card.CardExtensions.SetTribes
- uid: InscryptionAPI.Card.CardExtensions.SetDefaultPart1Card*
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetDefaultPart1Card
  name: SetDefaultPart1Card
  nameWithType: CardExtensions.SetDefaultPart1Card
  fullName: InscryptionAPI.Card.CardExtensions.SetDefaultPart1Card
- uid: InscryptionAPI.Card.CardExtensions.SetDefaultPart3Card*
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetDefaultPart3Card
  name: SetDefaultPart3Card
  nameWithType: CardExtensions.SetDefaultPart3Card
  fullName: InscryptionAPI.Card.CardExtensions.SetDefaultPart3Card
- uid: InscryptionAPI.Card.CardExtensions.SetGBCPlayable*
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetGBCPlayable
  name: SetGBCPlayable
  nameWithType: CardExtensions.SetGBCPlayable
  fullName: InscryptionAPI.Card.CardExtensions.SetGBCPlayable
- uid: CardTemple
  commentId: T:CardTemple
  isExternal: true
  name: CardTemple
  nameWithType: CardTemple
  fullName: CardTemple
- uid: InscryptionAPI.Card.CardExtensions.SetRare*
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetRare
  name: SetRare
  nameWithType: CardExtensions.SetRare
  fullName: InscryptionAPI.Card.CardExtensions.SetRare
- uid: InscryptionAPI.Card.CardExtensions.SetTerrain*
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetTerrain
  name: SetTerrain
  nameWithType: CardExtensions.SetTerrain
  fullName: InscryptionAPI.Card.CardExtensions.SetTerrain
- uid: InscryptionAPI.Card.CardExtensions.SetEvolve*
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetEvolve
  name: SetEvolve
  nameWithType: CardExtensions.SetEvolve
  fullName: InscryptionAPI.Card.CardExtensions.SetEvolve
- uid: IEnumerable{DiskCardGame.CardModificationInfo}
  commentId: '!:IEnumerable{DiskCardGame.CardModificationInfo}'
  definition: IEnumerable`1
  name: IEnumerable<CardModificationInfo>
  nameWithType: IEnumerable<CardModificationInfo>
  fullName: IEnumerable<DiskCardGame.CardModificationInfo>
  nameWithType.vb: IEnumerable(Of CardModificationInfo)
  fullName.vb: IEnumerable(Of DiskCardGame.CardModificationInfo)
  name.vb: IEnumerable(Of CardModificationInfo)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DiskCardGame.CardModificationInfo
    name: CardModificationInfo
    nameWithType: CardModificationInfo
    fullName: DiskCardGame.CardModificationInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DiskCardGame.CardModificationInfo
    name: CardModificationInfo
    nameWithType: CardModificationInfo
    fullName: DiskCardGame.CardModificationInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InscryptionAPI.Card.CardExtensions.SetIceCube*
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetIceCube
  name: SetIceCube
  nameWithType: CardExtensions.SetIceCube
  fullName: InscryptionAPI.Card.CardExtensions.SetIceCube
- uid: InscryptionAPI.Card.CardExtensions.SetTail*
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetTail
  name: SetTail
  nameWithType: CardExtensions.SetTail
  fullName: InscryptionAPI.Card.CardExtensions.SetTail
- uid: UnityEngine.Texture2D
  commentId: T:UnityEngine.Texture2D
  parent: UnityEngine
  isExternal: true
  name: Texture2D
  nameWithType: Texture2D
  fullName: UnityEngine.Texture2D
- uid: System.Nullable{UnityEngine.FilterMode}
  commentId: T:System.Nullable{UnityEngine.FilterMode}
  parent: System
  definition: System.Nullable`1
  name: Nullable<FilterMode>
  nameWithType: Nullable<FilterMode>
  fullName: System.Nullable<UnityEngine.FilterMode>
  nameWithType.vb: Nullable(Of FilterMode)
  fullName.vb: System.Nullable(Of UnityEngine.FilterMode)
  name.vb: Nullable(Of FilterMode)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: UnityEngine.FilterMode
    name: FilterMode
    nameWithType: FilterMode
    fullName: UnityEngine.FilterMode
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: UnityEngine.FilterMode
    name: FilterMode
    nameWithType: FilterMode
    fullName: UnityEngine.FilterMode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: UnityEngine.Sprite
  commentId: T:UnityEngine.Sprite
  parent: UnityEngine
  isExternal: true
  name: Sprite
  nameWithType: Sprite
  fullName: UnityEngine.Sprite
- uid: InscryptionAPI.Card.CardExtensions.SetCost*
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetCost
  name: SetCost
  nameWithType: CardExtensions.SetCost
  fullName: InscryptionAPI.Card.CardExtensions.SetCost
- uid: List{DiskCardGame.GemType}
  commentId: '!:List{DiskCardGame.GemType}'
  definition: List`1
  name: List<GemType>
  nameWithType: List<GemType>
  fullName: List<DiskCardGame.GemType>
  nameWithType.vb: List(Of GemType)
  fullName.vb: List(Of DiskCardGame.GemType)
  name.vb: List(Of GemType)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DiskCardGame.GemType
    name: GemType
    nameWithType: GemType
    fullName: DiskCardGame.GemType
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DiskCardGame.GemType
    name: GemType
    nameWithType: GemType
    fullName: DiskCardGame.GemType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: InscryptionAPI.Card.CardExtensions.SetBloodCost*
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetBloodCost
  name: SetBloodCost
  nameWithType: CardExtensions.SetBloodCost
  fullName: InscryptionAPI.Card.CardExtensions.SetBloodCost
- uid: InscryptionAPI.Card.CardExtensions.SetBonesCost*
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetBonesCost
  name: SetBonesCost
  nameWithType: CardExtensions.SetBonesCost
  fullName: InscryptionAPI.Card.CardExtensions.SetBonesCost
- uid: InscryptionAPI.Card.CardExtensions.SetEnergyCost*
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetEnergyCost
  name: SetEnergyCost
  nameWithType: CardExtensions.SetEnergyCost
  fullName: InscryptionAPI.Card.CardExtensions.SetEnergyCost
- uid: InscryptionAPI.Card.CardExtensions.SetGemsCost*
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetGemsCost
  name: SetGemsCost
  nameWithType: CardExtensions.SetGemsCost
  fullName: InscryptionAPI.Card.CardExtensions.SetGemsCost
- uid: InscryptionAPI.Card.CardExtensions.SetPortrait*
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetPortrait
  name: SetPortrait
  nameWithType: CardExtensions.SetPortrait
  fullName: InscryptionAPI.Card.CardExtensions.SetPortrait
- uid: InscryptionAPI.Card.CardExtensions.SetPortraitAndEmission*
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetPortraitAndEmission
  name: SetPortraitAndEmission
  nameWithType: CardExtensions.SetPortraitAndEmission
  fullName: InscryptionAPI.Card.CardExtensions.SetPortraitAndEmission
- uid: InscryptionAPI.Card.CardExtensions.SetAltPortrait*
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetAltPortrait
  name: SetAltPortrait
  nameWithType: CardExtensions.SetAltPortrait
  fullName: InscryptionAPI.Card.CardExtensions.SetAltPortrait
- uid: InscryptionAPI.Card.CardExtensions.SetEmissivePortrait*
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetEmissivePortrait
  name: SetEmissivePortrait
  nameWithType: CardExtensions.SetEmissivePortrait
  fullName: InscryptionAPI.Card.CardExtensions.SetEmissivePortrait
- uid: InscryptionAPI.Card.CardExtensions.SetEmissiveAltPortrait*
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetEmissiveAltPortrait
  name: SetEmissiveAltPortrait
  nameWithType: CardExtensions.SetEmissiveAltPortrait
  fullName: InscryptionAPI.Card.CardExtensions.SetEmissiveAltPortrait
- uid: InscryptionAPI.Card.CardExtensions.SetPixelPortrait*
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetPixelPortrait
  name: SetPixelPortrait
  nameWithType: CardExtensions.SetPixelPortrait
  fullName: InscryptionAPI.Card.CardExtensions.SetPixelPortrait
- uid: InscryptionAPI.Card.CardExtensions.SetLostTailPortrait*
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetLostTailPortrait
  name: SetLostTailPortrait
  nameWithType: CardExtensions.SetLostTailPortrait
  fullName: InscryptionAPI.Card.CardExtensions.SetLostTailPortrait
- uid: DiskCardGame.TailParams
  commentId: T:DiskCardGame.TailParams
  parent: DiskCardGame
  isExternal: true
  name: TailParams
  nameWithType: TailParams
  fullName: DiskCardGame.TailParams
- uid: InscryptionAPI.Card.CardExtensions.GetCardInfo*
  commentId: Overload:InscryptionAPI.Card.CardExtensions.GetCardInfo
  name: GetCardInfo
  nameWithType: CardExtensions.GetCardInfo
  fullName: InscryptionAPI.Card.CardExtensions.GetCardInfo
- uid: InscryptionAPI.Card.CardExtensions.CreateBlueprint*
  commentId: Overload:InscryptionAPI.Card.CardExtensions.CreateBlueprint
  name: CreateBlueprint
  nameWithType: CardExtensions.CreateBlueprint
  fullName: InscryptionAPI.Card.CardExtensions.CreateBlueprint
- uid: DiskCardGame.EncounterBlueprintData.CardBlueprint
  commentId: T:DiskCardGame.EncounterBlueprintData.CardBlueprint
  parent: DiskCardGame
  isExternal: true
  name: EncounterBlueprintData.CardBlueprint
  nameWithType: EncounterBlueprintData.CardBlueprint
  fullName: DiskCardGame.EncounterBlueprintData.CardBlueprint
- uid: InscryptionAPI.Card.CardExtensions.DoesNotHaveAbility*
  commentId: Overload:InscryptionAPI.Card.CardExtensions.DoesNotHaveAbility
  name: DoesNotHaveAbility
  nameWithType: CardExtensions.DoesNotHaveAbility
  fullName: InscryptionAPI.Card.CardExtensions.DoesNotHaveAbility
- uid: DiskCardGame.Ability
  commentId: T:DiskCardGame.Ability
  parent: DiskCardGame
  isExternal: true
  name: Ability
  nameWithType: Ability
  fullName: DiskCardGame.Ability
- uid: InscryptionAPI.Card.CardExtensions.DoesNotHaveSpecialAbility*
  commentId: Overload:InscryptionAPI.Card.CardExtensions.DoesNotHaveSpecialAbility
  name: DoesNotHaveSpecialAbility
  nameWithType: CardExtensions.DoesNotHaveSpecialAbility
  fullName: InscryptionAPI.Card.CardExtensions.DoesNotHaveSpecialAbility
- uid: DiskCardGame.SpecialTriggeredAbility
  commentId: T:DiskCardGame.SpecialTriggeredAbility
  parent: DiskCardGame
  isExternal: true
  name: SpecialTriggeredAbility
  nameWithType: SpecialTriggeredAbility
  fullName: DiskCardGame.SpecialTriggeredAbility
- uid: DiskCardGame.PlayableCard
  commentId: T:DiskCardGame.PlayableCard
  parent: DiskCardGame
  isExternal: true
  name: PlayableCard
  nameWithType: PlayableCard
  fullName: DiskCardGame.PlayableCard
- uid: InscryptionAPI.Card.CardExtensions.HasSpecialAbility*
  commentId: Overload:InscryptionAPI.Card.CardExtensions.HasSpecialAbility
  name: HasSpecialAbility
  nameWithType: CardExtensions.HasSpecialAbility
  fullName: InscryptionAPI.Card.CardExtensions.HasSpecialAbility
- uid: InscryptionAPI.Card.CardExtensions.SetExtendedProperty*
  commentId: Overload:InscryptionAPI.Card.CardExtensions.SetExtendedProperty
  name: SetExtendedProperty
  nameWithType: CardExtensions.SetExtendedProperty
  fullName: InscryptionAPI.Card.CardExtensions.SetExtendedProperty
- uid: InscryptionAPI.Card.CardExtensions.GetExtendedProperty*
  commentId: Overload:InscryptionAPI.Card.CardExtensions.GetExtendedProperty
  name: GetExtendedProperty
  nameWithType: CardExtensions.GetExtendedProperty
  fullName: InscryptionAPI.Card.CardExtensions.GetExtendedProperty
- uid: InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsInt*
  commentId: Overload:InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsInt
  name: GetExtendedPropertyAsInt
  nameWithType: CardExtensions.GetExtendedPropertyAsInt
  fullName: InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsInt
- uid: InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsFloat*
  commentId: Overload:InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsFloat
  name: GetExtendedPropertyAsFloat
  nameWithType: CardExtensions.GetExtendedPropertyAsFloat
  fullName: InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsFloat
- uid: System.Nullable{System.Single}
  commentId: T:System.Nullable{System.Single}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Single>
  nameWithType: Nullable<Single>
  fullName: System.Nullable<System.Single>
  nameWithType.vb: Nullable(Of Single)
  fullName.vb: System.Nullable(Of System.Single)
  name.vb: Nullable(Of Single)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsBool*
  commentId: Overload:InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsBool
  name: GetExtendedPropertyAsBool
  nameWithType: CardExtensions.GetExtendedPropertyAsBool
  fullName: InscryptionAPI.Card.CardExtensions.GetExtendedPropertyAsBool
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InscryptionAPI.Card.CardExtensions.GetModTag*
  commentId: Overload:InscryptionAPI.Card.CardExtensions.GetModTag
  name: GetModTag
  nameWithType: CardExtensions.GetModTag
  fullName: InscryptionAPI.Card.CardExtensions.GetModTag
- uid: InscryptionAPI.Card.CardExtensions.GetModPrefix*
  commentId: Overload:InscryptionAPI.Card.CardExtensions.GetModPrefix
  name: GetModPrefix
  nameWithType: CardExtensions.GetModPrefix
  fullName: InscryptionAPI.Card.CardExtensions.GetModPrefix
