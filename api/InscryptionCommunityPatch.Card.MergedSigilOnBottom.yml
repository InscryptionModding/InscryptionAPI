### YamlMime:ManagedReference
items:
- uid: InscryptionCommunityPatch.Card.MergedSigilOnBottom
  commentId: T:InscryptionCommunityPatch.Card.MergedSigilOnBottom
  id: MergedSigilOnBottom
  parent: InscryptionCommunityPatch.Card
  children:
  - InscryptionCommunityPatch.Card.MergedSigilOnBottom.DontPlaceCardModIcons_IfShowOnBottom(DiskCardGame.CardAbilityIcons,List{DiskCardGame.AbilityIconInteractable},UnityEngine.Material)
  - InscryptionCommunityPatch.Card.MergedSigilOnBottom.MoveMergeIconsToDefaultGroup_IfShowOnBottom(List{DiskCardGame.Ability},List{DiskCardGame.Ability})
  - InscryptionCommunityPatch.Card.MergedSigilOnBottom.RepositionAndRetextureMergedIcons_IfShowOnBottom(UnityEngine.Texture@,DiskCardGame.CardInfo@,DiskCardGame.AbilityInfo@,DiskCardGame.AbilityIconInteractable@)
  langs:
  - csharp
  - vb
  name: MergedSigilOnBottom
  nameWithType: MergedSigilOnBottom
  fullName: InscryptionCommunityPatch.Card.MergedSigilOnBottom
  type: Class
  source:
    remote:
      path: InscryptionCommunityPatch/Card/MergedSigilOnBottom.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: MergedSigilOnBottom
    path: ../InscryptionCommunityPatch/Card/MergedSigilOnBottom.cs
    startLine: 6
  assemblies:
  - InscryptionCommunityPatch
  namespace: InscryptionCommunityPatch.Card
  syntax:
    content: >-
      [HarmonyPatch]

      public class MergedSigilOnBottom
    content.vb: >-
      <HarmonyPatch>

      Public Class MergedSigilOnBottom
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: HarmonyLib.HarmonyPatch
    ctor: HarmonyLib.HarmonyPatch.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: InscryptionCommunityPatch.Card.MergedSigilOnBottom.DontPlaceCardModIcons_IfShowOnBottom(DiskCardGame.CardAbilityIcons,List{DiskCardGame.AbilityIconInteractable},UnityEngine.Material)
  commentId: M:InscryptionCommunityPatch.Card.MergedSigilOnBottom.DontPlaceCardModIcons_IfShowOnBottom(DiskCardGame.CardAbilityIcons,List{DiskCardGame.AbilityIconInteractable},UnityEngine.Material)
  id: DontPlaceCardModIcons_IfShowOnBottom(DiskCardGame.CardAbilityIcons,List{DiskCardGame.AbilityIconInteractable},UnityEngine.Material)
  parent: InscryptionCommunityPatch.Card.MergedSigilOnBottom
  langs:
  - csharp
  - vb
  name: DontPlaceCardModIcons_IfShowOnBottom(CardAbilityIcons, List<AbilityIconInteractable>, Material)
  nameWithType: MergedSigilOnBottom.DontPlaceCardModIcons_IfShowOnBottom(CardAbilityIcons, List<AbilityIconInteractable>, Material)
  fullName: InscryptionCommunityPatch.Card.MergedSigilOnBottom.DontPlaceCardModIcons_IfShowOnBottom(DiskCardGame.CardAbilityIcons, List<DiskCardGame.AbilityIconInteractable>, UnityEngine.Material)
  type: Method
  source:
    remote:
      path: InscryptionCommunityPatch/Card/MergedSigilOnBottom.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: DontPlaceCardModIcons_IfShowOnBottom
    path: ../InscryptionCommunityPatch/Card/MergedSigilOnBottom.cs
    startLine: 18
  assemblies:
  - InscryptionCommunityPatch
  namespace: InscryptionCommunityPatch.Card
  syntax:
    content: >-
      [HarmonyPatch(typeof(CardAbilityIcons), "ApplyAbilitiesToIcons")]

      [HarmonyPrefix]

      public static bool DontPlaceCardModIcons_IfShowOnBottom(CardAbilityIcons __instance, List<AbilityIconInteractable> icons, Material iconMat)
    parameters:
    - id: __instance
      type: DiskCardGame.CardAbilityIcons
    - id: icons
      type: List{DiskCardGame.AbilityIconInteractable}
    - id: iconMat
      type: UnityEngine.Material
    return:
      type: System.Boolean
    content.vb: >-
      <HarmonyPatch(GetType(CardAbilityIcons), "ApplyAbilitiesToIcons")>

      <HarmonyPrefix>

      Public Shared Function DontPlaceCardModIcons_IfShowOnBottom(__instance As CardAbilityIcons, icons As List(Of AbilityIconInteractable), iconMat As Material) As Boolean
  overload: InscryptionCommunityPatch.Card.MergedSigilOnBottom.DontPlaceCardModIcons_IfShowOnBottom*
  attributes:
  - type: HarmonyLib.HarmonyPatch
    ctor: HarmonyLib.HarmonyPatch.#ctor(System.Type,System.String)
    arguments:
    - type: System.Type
      value: DiskCardGame.CardAbilityIcons
    - type: System.String
      value: ApplyAbilitiesToIcons
  - type: HarmonyLib.HarmonyPrefix
    ctor: HarmonyLib.HarmonyPrefix.#ctor
    arguments: []
  nameWithType.vb: MergedSigilOnBottom.DontPlaceCardModIcons_IfShowOnBottom(CardAbilityIcons, List(Of AbilityIconInteractable), Material)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionCommunityPatch.Card.MergedSigilOnBottom.DontPlaceCardModIcons_IfShowOnBottom(DiskCardGame.CardAbilityIcons, List(Of DiskCardGame.AbilityIconInteractable), UnityEngine.Material)
  name.vb: DontPlaceCardModIcons_IfShowOnBottom(CardAbilityIcons, List(Of AbilityIconInteractable), Material)
- uid: InscryptionCommunityPatch.Card.MergedSigilOnBottom.MoveMergeIconsToDefaultGroup_IfShowOnBottom(List{DiskCardGame.Ability},List{DiskCardGame.Ability})
  commentId: M:InscryptionCommunityPatch.Card.MergedSigilOnBottom.MoveMergeIconsToDefaultGroup_IfShowOnBottom(List{DiskCardGame.Ability},List{DiskCardGame.Ability})
  id: MoveMergeIconsToDefaultGroup_IfShowOnBottom(List{DiskCardGame.Ability},List{DiskCardGame.Ability})
  parent: InscryptionCommunityPatch.Card.MergedSigilOnBottom
  langs:
  - csharp
  - vb
  name: MoveMergeIconsToDefaultGroup_IfShowOnBottom(List<Ability>, List<Ability>)
  nameWithType: MergedSigilOnBottom.MoveMergeIconsToDefaultGroup_IfShowOnBottom(List<Ability>, List<Ability>)
  fullName: InscryptionCommunityPatch.Card.MergedSigilOnBottom.MoveMergeIconsToDefaultGroup_IfShowOnBottom(List<DiskCardGame.Ability>, List<DiskCardGame.Ability>)
  type: Method
  source:
    remote:
      path: InscryptionCommunityPatch/Card/MergedSigilOnBottom.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: MoveMergeIconsToDefaultGroup_IfShowOnBottom
    path: ../InscryptionCommunityPatch/Card/MergedSigilOnBottom.cs
    startLine: 34
  assemblies:
  - InscryptionCommunityPatch
  namespace: InscryptionCommunityPatch.Card
  syntax:
    content: >-
      [HarmonyPatch(typeof(CardAbilityIcons), "PositionModIcons")]

      [HarmonyPrefix]

      public static void MoveMergeIconsToDefaultGroup_IfShowOnBottom(List<Ability> defaultAbilities, List<Ability> mergeAbilities)
    parameters:
    - id: defaultAbilities
      type: List{DiskCardGame.Ability}
    - id: mergeAbilities
      type: List{DiskCardGame.Ability}
    content.vb: >-
      <HarmonyPatch(GetType(CardAbilityIcons), "PositionModIcons")>

      <HarmonyPrefix>

      Public Shared Sub MoveMergeIconsToDefaultGroup_IfShowOnBottom(defaultAbilities As List(Of Ability), mergeAbilities As List(Of Ability))
  overload: InscryptionCommunityPatch.Card.MergedSigilOnBottom.MoveMergeIconsToDefaultGroup_IfShowOnBottom*
  attributes:
  - type: HarmonyLib.HarmonyPatch
    ctor: HarmonyLib.HarmonyPatch.#ctor(System.Type,System.String)
    arguments:
    - type: System.Type
      value: DiskCardGame.CardAbilityIcons
    - type: System.String
      value: PositionModIcons
  - type: HarmonyLib.HarmonyPrefix
    ctor: HarmonyLib.HarmonyPrefix.#ctor
    arguments: []
  nameWithType.vb: MergedSigilOnBottom.MoveMergeIconsToDefaultGroup_IfShowOnBottom(List(Of Ability), List(Of Ability))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionCommunityPatch.Card.MergedSigilOnBottom.MoveMergeIconsToDefaultGroup_IfShowOnBottom(List(Of DiskCardGame.Ability), List(Of DiskCardGame.Ability))
  name.vb: MoveMergeIconsToDefaultGroup_IfShowOnBottom(List(Of Ability), List(Of Ability))
- uid: InscryptionCommunityPatch.Card.MergedSigilOnBottom.RepositionAndRetextureMergedIcons_IfShowOnBottom(UnityEngine.Texture@,DiskCardGame.CardInfo@,DiskCardGame.AbilityInfo@,DiskCardGame.AbilityIconInteractable@)
  commentId: M:InscryptionCommunityPatch.Card.MergedSigilOnBottom.RepositionAndRetextureMergedIcons_IfShowOnBottom(UnityEngine.Texture@,DiskCardGame.CardInfo@,DiskCardGame.AbilityInfo@,DiskCardGame.AbilityIconInteractable@)
  id: RepositionAndRetextureMergedIcons_IfShowOnBottom(UnityEngine.Texture@,DiskCardGame.CardInfo@,DiskCardGame.AbilityInfo@,DiskCardGame.AbilityIconInteractable@)
  parent: InscryptionCommunityPatch.Card.MergedSigilOnBottom
  langs:
  - csharp
  - vb
  name: RepositionAndRetextureMergedIcons_IfShowOnBottom(ref Texture, ref CardInfo, ref AbilityInfo, ref AbilityIconInteractable)
  nameWithType: MergedSigilOnBottom.RepositionAndRetextureMergedIcons_IfShowOnBottom(ref Texture, ref CardInfo, ref AbilityInfo, ref AbilityIconInteractable)
  fullName: InscryptionCommunityPatch.Card.MergedSigilOnBottom.RepositionAndRetextureMergedIcons_IfShowOnBottom(ref UnityEngine.Texture, ref DiskCardGame.CardInfo, ref DiskCardGame.AbilityInfo, ref DiskCardGame.AbilityIconInteractable)
  type: Method
  source:
    remote:
      path: InscryptionCommunityPatch/Card/MergedSigilOnBottom.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: RepositionAndRetextureMergedIcons_IfShowOnBottom
    path: ../InscryptionCommunityPatch/Card/MergedSigilOnBottom.cs
    startLine: 52
  assemblies:
  - InscryptionCommunityPatch
  namespace: InscryptionCommunityPatch.Card
  syntax:
    content: >-
      [HarmonyPatch(typeof(AbilityIconInteractable), "LoadIcon")]

      [HarmonyPostfix]

      public static void RepositionAndRetextureMergedIcons_IfShowOnBottom(ref Texture __result, ref CardInfo info, ref AbilityInfo ability, ref AbilityIconInteractable __instance)
    parameters:
    - id: __result
      type: UnityEngine.Texture
    - id: info
      type: DiskCardGame.CardInfo
    - id: ability
      type: DiskCardGame.AbilityInfo
    - id: __instance
      type: DiskCardGame.AbilityIconInteractable
    content.vb: >-
      <HarmonyPatch(GetType(AbilityIconInteractable), "LoadIcon")>

      <HarmonyPostfix>

      Public Shared Sub RepositionAndRetextureMergedIcons_IfShowOnBottom(ByRef __result As Texture, ByRef info As CardInfo, ByRef ability As AbilityInfo, ByRef __instance As AbilityIconInteractable)
  overload: InscryptionCommunityPatch.Card.MergedSigilOnBottom.RepositionAndRetextureMergedIcons_IfShowOnBottom*
  attributes:
  - type: HarmonyLib.HarmonyPatch
    ctor: HarmonyLib.HarmonyPatch.#ctor(System.Type,System.String)
    arguments:
    - type: System.Type
      value: DiskCardGame.AbilityIconInteractable
    - type: System.String
      value: LoadIcon
  - type: HarmonyLib.HarmonyPostfix
    ctor: HarmonyLib.HarmonyPostfix.#ctor
    arguments: []
  nameWithType.vb: MergedSigilOnBottom.RepositionAndRetextureMergedIcons_IfShowOnBottom(ByRef Texture, ByRef CardInfo, ByRef AbilityInfo, ByRef AbilityIconInteractable)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionCommunityPatch.Card.MergedSigilOnBottom.RepositionAndRetextureMergedIcons_IfShowOnBottom(ByRef UnityEngine.Texture, ByRef DiskCardGame.CardInfo, ByRef DiskCardGame.AbilityInfo, ByRef DiskCardGame.AbilityIconInteractable)
  name.vb: RepositionAndRetextureMergedIcons_IfShowOnBottom(ByRef Texture, ByRef CardInfo, ByRef AbilityInfo, ByRef AbilityIconInteractable)
references:
- uid: InscryptionCommunityPatch.Card
  commentId: N:InscryptionCommunityPatch.Card
  name: InscryptionCommunityPatch.Card
  nameWithType: InscryptionCommunityPatch.Card
  fullName: InscryptionCommunityPatch.Card
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: InscryptionCommunityPatch.Card.MergedSigilOnBottom.DontPlaceCardModIcons_IfShowOnBottom*
  commentId: Overload:InscryptionCommunityPatch.Card.MergedSigilOnBottom.DontPlaceCardModIcons_IfShowOnBottom
  name: DontPlaceCardModIcons_IfShowOnBottom
  nameWithType: MergedSigilOnBottom.DontPlaceCardModIcons_IfShowOnBottom
  fullName: InscryptionCommunityPatch.Card.MergedSigilOnBottom.DontPlaceCardModIcons_IfShowOnBottom
- uid: DiskCardGame.CardAbilityIcons
  commentId: T:DiskCardGame.CardAbilityIcons
  parent: DiskCardGame
  isExternal: true
  name: CardAbilityIcons
  nameWithType: CardAbilityIcons
  fullName: DiskCardGame.CardAbilityIcons
- uid: List{DiskCardGame.AbilityIconInteractable}
  commentId: '!:List{DiskCardGame.AbilityIconInteractable}'
  definition: List`1
  name: List<AbilityIconInteractable>
  nameWithType: List<AbilityIconInteractable>
  fullName: List<DiskCardGame.AbilityIconInteractable>
  nameWithType.vb: List(Of AbilityIconInteractable)
  fullName.vb: List(Of DiskCardGame.AbilityIconInteractable)
  name.vb: List(Of AbilityIconInteractable)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DiskCardGame.AbilityIconInteractable
    name: AbilityIconInteractable
    nameWithType: AbilityIconInteractable
    fullName: DiskCardGame.AbilityIconInteractable
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DiskCardGame.AbilityIconInteractable
    name: AbilityIconInteractable
    nameWithType: AbilityIconInteractable
    fullName: DiskCardGame.AbilityIconInteractable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Material
  commentId: T:UnityEngine.Material
  parent: UnityEngine
  isExternal: true
  name: Material
  nameWithType: Material
  fullName: UnityEngine.Material
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: DiskCardGame
  commentId: N:DiskCardGame
  isExternal: true
  name: DiskCardGame
  nameWithType: DiskCardGame
  fullName: DiskCardGame
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: InscryptionCommunityPatch.Card.MergedSigilOnBottom.MoveMergeIconsToDefaultGroup_IfShowOnBottom*
  commentId: Overload:InscryptionCommunityPatch.Card.MergedSigilOnBottom.MoveMergeIconsToDefaultGroup_IfShowOnBottom
  name: MoveMergeIconsToDefaultGroup_IfShowOnBottom
  nameWithType: MergedSigilOnBottom.MoveMergeIconsToDefaultGroup_IfShowOnBottom
  fullName: InscryptionCommunityPatch.Card.MergedSigilOnBottom.MoveMergeIconsToDefaultGroup_IfShowOnBottom
- uid: List{DiskCardGame.Ability}
  commentId: '!:List{DiskCardGame.Ability}'
  definition: List`1
  name: List<Ability>
  nameWithType: List<Ability>
  fullName: List<DiskCardGame.Ability>
  nameWithType.vb: List(Of Ability)
  fullName.vb: List(Of DiskCardGame.Ability)
  name.vb: List(Of Ability)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DiskCardGame.Ability
    name: Ability
    nameWithType: Ability
    fullName: DiskCardGame.Ability
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DiskCardGame.Ability
    name: Ability
    nameWithType: Ability
    fullName: DiskCardGame.Ability
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InscryptionCommunityPatch.Card.MergedSigilOnBottom.RepositionAndRetextureMergedIcons_IfShowOnBottom*
  commentId: Overload:InscryptionCommunityPatch.Card.MergedSigilOnBottom.RepositionAndRetextureMergedIcons_IfShowOnBottom
  name: RepositionAndRetextureMergedIcons_IfShowOnBottom
  nameWithType: MergedSigilOnBottom.RepositionAndRetextureMergedIcons_IfShowOnBottom
  fullName: InscryptionCommunityPatch.Card.MergedSigilOnBottom.RepositionAndRetextureMergedIcons_IfShowOnBottom
- uid: UnityEngine.Texture
  commentId: T:UnityEngine.Texture
  parent: UnityEngine
  isExternal: true
  name: Texture
  nameWithType: Texture
  fullName: UnityEngine.Texture
- uid: DiskCardGame.CardInfo
  commentId: T:DiskCardGame.CardInfo
  parent: DiskCardGame
  isExternal: true
  name: CardInfo
  nameWithType: CardInfo
  fullName: DiskCardGame.CardInfo
- uid: DiskCardGame.AbilityInfo
  commentId: T:DiskCardGame.AbilityInfo
  parent: DiskCardGame
  isExternal: true
  name: AbilityInfo
  nameWithType: AbilityInfo
  fullName: DiskCardGame.AbilityInfo
- uid: DiskCardGame.AbilityIconInteractable
  commentId: T:DiskCardGame.AbilityIconInteractable
  parent: DiskCardGame
  isExternal: true
  name: AbilityIconInteractable
  nameWithType: AbilityIconInteractable
  fullName: DiskCardGame.AbilityIconInteractable
