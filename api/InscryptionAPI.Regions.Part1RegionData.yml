### YamlMime:ManagedReference
items:
- uid: InscryptionAPI.Regions.Part1RegionData
  commentId: T:InscryptionAPI.Regions.Part1RegionData
  id: Part1RegionData
  parent: InscryptionAPI.Regions
  children:
  - InscryptionAPI.Regions.Part1RegionData.#ctor(DiskCardGame.RegionData,System.Int32)
  - InscryptionAPI.Regions.Part1RegionData.Region
  - InscryptionAPI.Regions.Part1RegionData.Tier
  langs:
  - csharp
  - vb
  name: Part1RegionData
  nameWithType: Part1RegionData
  fullName: InscryptionAPI.Regions.Part1RegionData
  type: Class
  source:
    remote:
      path: InscryptionAPI/Regions/Part1RegionData.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: Part1RegionData
    path: ../InscryptionAPI/Regions/Part1RegionData.cs
    startLine: 4
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Regions
  syntax:
    content: public class Part1RegionData
    content.vb: Public Class Part1RegionData
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: InscryptionAPI.Regions.Part1RegionData.Tier
  commentId: P:InscryptionAPI.Regions.Part1RegionData.Tier
  id: Tier
  parent: InscryptionAPI.Regions.Part1RegionData
  langs:
  - csharp
  - vb
  name: Tier
  nameWithType: Part1RegionData.Tier
  fullName: InscryptionAPI.Regions.Part1RegionData.Tier
  type: Property
  source:
    remote:
      path: InscryptionAPI/Regions/Part1RegionData.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: Tier
    path: ../InscryptionAPI/Regions/Part1RegionData.cs
    startLine: 9
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Regions
  syntax:
    content: public int Tier { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Tier As Integer
  overload: InscryptionAPI.Regions.Part1RegionData.Tier*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: InscryptionAPI.Regions.Part1RegionData.Region
  commentId: P:InscryptionAPI.Regions.Part1RegionData.Region
  id: Region
  parent: InscryptionAPI.Regions.Part1RegionData
  langs:
  - csharp
  - vb
  name: Region
  nameWithType: Part1RegionData.Region
  fullName: InscryptionAPI.Regions.Part1RegionData.Region
  type: Property
  source:
    remote:
      path: InscryptionAPI/Regions/Part1RegionData.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: Region
    path: ../InscryptionAPI/Regions/Part1RegionData.cs
    startLine: 10
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Regions
  syntax:
    content: public RegionData Region { get; }
    parameters: []
    return:
      type: DiskCardGame.RegionData
    content.vb: Public ReadOnly Property Region As RegionData
  overload: InscryptionAPI.Regions.Part1RegionData.Region*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: InscryptionAPI.Regions.Part1RegionData.#ctor(DiskCardGame.RegionData,System.Int32)
  commentId: M:InscryptionAPI.Regions.Part1RegionData.#ctor(DiskCardGame.RegionData,System.Int32)
  id: '#ctor(DiskCardGame.RegionData,System.Int32)'
  parent: InscryptionAPI.Regions.Part1RegionData
  langs:
  - csharp
  - vb
  name: Part1RegionData(RegionData, Int32)
  nameWithType: Part1RegionData.Part1RegionData(RegionData, Int32)
  fullName: InscryptionAPI.Regions.Part1RegionData.Part1RegionData(DiskCardGame.RegionData, System.Int32)
  type: Constructor
  source:
    remote:
      path: InscryptionAPI/Regions/Part1RegionData.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: .ctor
    path: ../InscryptionAPI/Regions/Part1RegionData.cs
    startLine: 12
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Regions
  syntax:
    content: public Part1RegionData(RegionData region, int tier)
    parameters:
    - id: region
      type: DiskCardGame.RegionData
    - id: tier
      type: System.Int32
    content.vb: Public Sub New(region As RegionData, tier As Integer)
  overload: InscryptionAPI.Regions.Part1RegionData.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: InscryptionAPI.Regions
  commentId: N:InscryptionAPI.Regions
  name: InscryptionAPI.Regions
  nameWithType: InscryptionAPI.Regions
  fullName: InscryptionAPI.Regions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: InscryptionAPI.Regions.Part1RegionData.Tier*
  commentId: Overload:InscryptionAPI.Regions.Part1RegionData.Tier
  name: Tier
  nameWithType: Part1RegionData.Tier
  fullName: InscryptionAPI.Regions.Part1RegionData.Tier
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: InscryptionAPI.Regions.Part1RegionData.Region*
  commentId: Overload:InscryptionAPI.Regions.Part1RegionData.Region
  name: Region
  nameWithType: Part1RegionData.Region
  fullName: InscryptionAPI.Regions.Part1RegionData.Region
- uid: DiskCardGame.RegionData
  commentId: T:DiskCardGame.RegionData
  parent: DiskCardGame
  isExternal: true
  name: RegionData
  nameWithType: RegionData
  fullName: DiskCardGame.RegionData
- uid: DiskCardGame
  commentId: N:DiskCardGame
  isExternal: true
  name: DiskCardGame
  nameWithType: DiskCardGame
  fullName: DiskCardGame
- uid: InscryptionAPI.Regions.Part1RegionData.#ctor*
  commentId: Overload:InscryptionAPI.Regions.Part1RegionData.#ctor
  name: Part1RegionData
  nameWithType: Part1RegionData.Part1RegionData
  fullName: InscryptionAPI.Regions.Part1RegionData.Part1RegionData
