### YamlMime:ManagedReference
items:
- uid: InscryptionAPI.Encounters.NodeManager.NodeInfo
  commentId: T:InscryptionAPI.Encounters.NodeManager.NodeInfo
  id: NodeManager.NodeInfo
  parent: InscryptionAPI.Encounters
  children:
  - InscryptionAPI.Encounters.NodeManager.NodeInfo.animatedMapNode
  - InscryptionAPI.Encounters.NodeManager.NodeInfo.BuildNode
  - InscryptionAPI.Encounters.NodeManager.NodeInfo.guid
  - InscryptionAPI.Encounters.NodeManager.NodeInfo.nodeDataType
  - InscryptionAPI.Encounters.NodeManager.NodeInfo.nodePosition
  - InscryptionAPI.Encounters.NodeManager.NodeInfo.sequencerType
  langs:
  - csharp
  - vb
  name: NodeManager.NodeInfo
  nameWithType: NodeManager.NodeInfo
  fullName: InscryptionAPI.Encounters.NodeManager.NodeInfo
  type: Class
  source:
    remote:
      path: InscryptionAPI/Encounters/NodeManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: NodeInfo
    path: ../InscryptionAPI/Encounters/NodeManager.cs
    startLine: 49
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Encounters
  syntax:
    content: public class NodeInfo
    content.vb: Public Class NodeInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: InscryptionAPI.Encounters.NodeManager.NodeInfo.animatedMapNode
  commentId: P:InscryptionAPI.Encounters.NodeManager.NodeInfo.animatedMapNode
  id: animatedMapNode
  parent: InscryptionAPI.Encounters.NodeManager.NodeInfo
  langs:
  - csharp
  - vb
  name: animatedMapNode
  nameWithType: NodeManager.NodeInfo.animatedMapNode
  fullName: InscryptionAPI.Encounters.NodeManager.NodeInfo.animatedMapNode
  type: Property
  source:
    remote:
      path: InscryptionAPI/Encounters/NodeManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: animatedMapNode
    path: ../InscryptionAPI/Encounters/NodeManager.cs
    startLine: 51
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Encounters
  syntax:
    content: public Texture2D[] animatedMapNode { get; set; }
    parameters: []
    return:
      type: UnityEngine.Texture2D[]
    content.vb: Public Property animatedMapNode As Texture2D()
  overload: InscryptionAPI.Encounters.NodeManager.NodeInfo.animatedMapNode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: InscryptionAPI.Encounters.NodeManager.NodeInfo.nodePosition
  commentId: P:InscryptionAPI.Encounters.NodeManager.NodeInfo.nodePosition
  id: nodePosition
  parent: InscryptionAPI.Encounters.NodeManager.NodeInfo
  langs:
  - csharp
  - vb
  name: nodePosition
  nameWithType: NodeManager.NodeInfo.nodePosition
  fullName: InscryptionAPI.Encounters.NodeManager.NodeInfo.nodePosition
  type: Property
  source:
    remote:
      path: InscryptionAPI/Encounters/NodeManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: nodePosition
    path: ../InscryptionAPI/Encounters/NodeManager.cs
    startLine: 52
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Encounters
  syntax:
    content: public NodeManager.NodePosition nodePosition { get; set; }
    parameters: []
    return:
      type: InscryptionAPI.Encounters.NodeManager.NodePosition
    content.vb: Public Property nodePosition As NodeManager.NodePosition
  overload: InscryptionAPI.Encounters.NodeManager.NodeInfo.nodePosition*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: InscryptionAPI.Encounters.NodeManager.NodeInfo.sequencerType
  commentId: P:InscryptionAPI.Encounters.NodeManager.NodeInfo.sequencerType
  id: sequencerType
  parent: InscryptionAPI.Encounters.NodeManager.NodeInfo
  langs:
  - csharp
  - vb
  name: sequencerType
  nameWithType: NodeManager.NodeInfo.sequencerType
  fullName: InscryptionAPI.Encounters.NodeManager.NodeInfo.sequencerType
  type: Property
  source:
    remote:
      path: InscryptionAPI/Encounters/NodeManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: sequencerType
    path: ../InscryptionAPI/Encounters/NodeManager.cs
    startLine: 53
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Encounters
  syntax:
    content: public Type sequencerType { get; set; }
    parameters: []
    return:
      type: Type
    content.vb: Public Property sequencerType As Type
  overload: InscryptionAPI.Encounters.NodeManager.NodeInfo.sequencerType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: InscryptionAPI.Encounters.NodeManager.NodeInfo.nodeDataType
  commentId: P:InscryptionAPI.Encounters.NodeManager.NodeInfo.nodeDataType
  id: nodeDataType
  parent: InscryptionAPI.Encounters.NodeManager.NodeInfo
  langs:
  - csharp
  - vb
  name: nodeDataType
  nameWithType: NodeManager.NodeInfo.nodeDataType
  fullName: InscryptionAPI.Encounters.NodeManager.NodeInfo.nodeDataType
  type: Property
  source:
    remote:
      path: InscryptionAPI/Encounters/NodeManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: nodeDataType
    path: ../InscryptionAPI/Encounters/NodeManager.cs
    startLine: 54
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Encounters
  syntax:
    content: public Type nodeDataType { get; set; }
    parameters: []
    return:
      type: Type
    content.vb: Public Property nodeDataType As Type
  overload: InscryptionAPI.Encounters.NodeManager.NodeInfo.nodeDataType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: InscryptionAPI.Encounters.NodeManager.NodeInfo.guid
  commentId: P:InscryptionAPI.Encounters.NodeManager.NodeInfo.guid
  id: guid
  parent: InscryptionAPI.Encounters.NodeManager.NodeInfo
  langs:
  - csharp
  - vb
  name: guid
  nameWithType: NodeManager.NodeInfo.guid
  fullName: InscryptionAPI.Encounters.NodeManager.NodeInfo.guid
  type: Property
  source:
    remote:
      path: InscryptionAPI/Encounters/NodeManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: guid
    path: ../InscryptionAPI/Encounters/NodeManager.cs
    startLine: 55
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Encounters
  syntax:
    content: public string guid { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property guid As String
  overload: InscryptionAPI.Encounters.NodeManager.NodeInfo.guid*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: InscryptionAPI.Encounters.NodeManager.NodeInfo.BuildNode
  commentId: M:InscryptionAPI.Encounters.NodeManager.NodeInfo.BuildNode
  id: BuildNode
  parent: InscryptionAPI.Encounters.NodeManager.NodeInfo
  langs:
  - csharp
  - vb
  name: BuildNode()
  nameWithType: NodeManager.NodeInfo.BuildNode()
  fullName: InscryptionAPI.Encounters.NodeManager.NodeInfo.BuildNode()
  type: Method
  source:
    remote:
      path: InscryptionAPI/Encounters/NodeManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: BuildNode
    path: ../InscryptionAPI/Encounters/NodeManager.cs
    startLine: 57
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Encounters
  syntax:
    content: public CustomNodeData BuildNode()
    return:
      type: InscryptionAPI.Encounters.CustomNodeData
    content.vb: Public Function BuildNode As CustomNodeData
  overload: InscryptionAPI.Encounters.NodeManager.NodeInfo.BuildNode*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: InscryptionAPI.Encounters
  commentId: N:InscryptionAPI.Encounters
  name: InscryptionAPI.Encounters
  nameWithType: InscryptionAPI.Encounters
  fullName: InscryptionAPI.Encounters
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: InscryptionAPI.Encounters.NodeManager.NodeInfo.animatedMapNode*
  commentId: Overload:InscryptionAPI.Encounters.NodeManager.NodeInfo.animatedMapNode
  name: animatedMapNode
  nameWithType: NodeManager.NodeInfo.animatedMapNode
  fullName: InscryptionAPI.Encounters.NodeManager.NodeInfo.animatedMapNode
- uid: UnityEngine.Texture2D[]
  isExternal: true
  name: Texture2D[]
  nameWithType: Texture2D[]
  fullName: UnityEngine.Texture2D[]
  nameWithType.vb: Texture2D()
  fullName.vb: UnityEngine.Texture2D()
  name.vb: Texture2D()
  spec.csharp:
  - uid: UnityEngine.Texture2D
    name: Texture2D
    nameWithType: Texture2D
    fullName: UnityEngine.Texture2D
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: UnityEngine.Texture2D
    name: Texture2D
    nameWithType: Texture2D
    fullName: UnityEngine.Texture2D
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: InscryptionAPI.Encounters.NodeManager.NodeInfo.nodePosition*
  commentId: Overload:InscryptionAPI.Encounters.NodeManager.NodeInfo.nodePosition
  name: nodePosition
  nameWithType: NodeManager.NodeInfo.nodePosition
  fullName: InscryptionAPI.Encounters.NodeManager.NodeInfo.nodePosition
- uid: InscryptionAPI.Encounters.NodeManager.NodePosition
  commentId: T:InscryptionAPI.Encounters.NodeManager.NodePosition
  parent: InscryptionAPI.Encounters
  name: NodeManager.NodePosition
  nameWithType: NodeManager.NodePosition
  fullName: InscryptionAPI.Encounters.NodeManager.NodePosition
- uid: InscryptionAPI.Encounters.NodeManager.NodeInfo.sequencerType*
  commentId: Overload:InscryptionAPI.Encounters.NodeManager.NodeInfo.sequencerType
  name: sequencerType
  nameWithType: NodeManager.NodeInfo.sequencerType
  fullName: InscryptionAPI.Encounters.NodeManager.NodeInfo.sequencerType
- uid: Type
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: Type
- uid: InscryptionAPI.Encounters.NodeManager.NodeInfo.nodeDataType*
  commentId: Overload:InscryptionAPI.Encounters.NodeManager.NodeInfo.nodeDataType
  name: nodeDataType
  nameWithType: NodeManager.NodeInfo.nodeDataType
  fullName: InscryptionAPI.Encounters.NodeManager.NodeInfo.nodeDataType
- uid: InscryptionAPI.Encounters.NodeManager.NodeInfo.guid*
  commentId: Overload:InscryptionAPI.Encounters.NodeManager.NodeInfo.guid
  name: guid
  nameWithType: NodeManager.NodeInfo.guid
  fullName: InscryptionAPI.Encounters.NodeManager.NodeInfo.guid
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: InscryptionAPI.Encounters.NodeManager.NodeInfo.BuildNode*
  commentId: Overload:InscryptionAPI.Encounters.NodeManager.NodeInfo.BuildNode
  name: BuildNode
  nameWithType: NodeManager.NodeInfo.BuildNode
  fullName: InscryptionAPI.Encounters.NodeManager.NodeInfo.BuildNode
- uid: InscryptionAPI.Encounters.CustomNodeData
  commentId: T:InscryptionAPI.Encounters.CustomNodeData
  parent: InscryptionAPI.Encounters
  name: CustomNodeData
  nameWithType: CustomNodeData
  fullName: InscryptionAPI.Encounters.CustomNodeData
