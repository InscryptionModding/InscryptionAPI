### YamlMime:ManagedReference
items:
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone
  commentId: T:InscryptionCommunityPatch.ResourceManagers.EnergyDrone
  id: EnergyDrone
  parent: InscryptionCommunityPatch.ResourceManagers
  children:
  - InscryptionCommunityPatch.ResourceManagers.EnergyDrone.CurrentSceneCanHaveEnergyDrone
  - InscryptionCommunityPatch.ResourceManagers.EnergyDrone.Part1ResourcesManager_CleanUp(DiskCardGame.Part1ResourcesManager)
  - InscryptionCommunityPatch.ResourceManagers.EnergyDrone.PoolHasEnergy
  - InscryptionCommunityPatch.ResourceManagers.EnergyDrone.PoolHasGems
  - InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourceDrone_SetOnBoard(DiskCardGame.ResourceDrone,System.Boolean)
  - InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_SetGemOnImmediate(DiskCardGame.GemType,System.Boolean,DiskCardGame.ResourcesManager)
  - InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_Setup(DiskCardGame.ResourcesManager)
  - InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowAddEnergy(System.Collections.IEnumerator,System.Int32,DiskCardGame.ResourcesManager)
  - InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowAddGem(System.Collections.IEnumerator,DiskCardGame.GemType,DiskCardGame.ResourcesManager)
  - InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowAddMaxEnergy(System.Collections.IEnumerator,DiskCardGame.ResourcesManager)
  - InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowLoseGem(System.Collections.IEnumerator,DiskCardGame.GemType,DiskCardGame.ResourcesManager)
  - InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowSpendEnergy(System.Collections.IEnumerator,System.Int32,DiskCardGame.ResourcesManager)
  - InscryptionCommunityPatch.ResourceManagers.EnergyDrone.SceneCanHaveEnergyDrone(System.String)
  - InscryptionCommunityPatch.ResourceManagers.EnergyDrone.TurnManager_UpkeepPhase(System.Collections.IEnumerator,System.Boolean)
  - InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ZoneConfigs
  langs:
  - csharp
  - vb
  name: EnergyDrone
  nameWithType: EnergyDrone
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone
  type: Class
  source:
    remote:
      path: InscryptionCommunityPatch/ResourceManagers/ActOneEnergyDrone.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: EnergyDrone
    path: ../InscryptionCommunityPatch/ResourceManagers/ActOneEnergyDrone.cs
    startLine: 9
  assemblies:
  - InscryptionCommunityPatch
  namespace: InscryptionCommunityPatch.ResourceManagers
  syntax:
    content: >-
      [HarmonyPatch]

      public static class EnergyDrone
    content.vb: >-
      <HarmonyPatch>

      Public Module EnergyDrone
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: HarmonyLib.HarmonyPatch
    ctor: HarmonyLib.HarmonyPatch.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.SceneCanHaveEnergyDrone(System.String)
  commentId: M:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.SceneCanHaveEnergyDrone(System.String)
  id: SceneCanHaveEnergyDrone(System.String)
  parent: InscryptionCommunityPatch.ResourceManagers.EnergyDrone
  langs:
  - csharp
  - vb
  name: SceneCanHaveEnergyDrone(String)
  nameWithType: EnergyDrone.SceneCanHaveEnergyDrone(String)
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.SceneCanHaveEnergyDrone(System.String)
  type: Method
  source:
    remote:
      path: InscryptionCommunityPatch/ResourceManagers/ActOneEnergyDrone.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SceneCanHaveEnergyDrone
    path: ../InscryptionCommunityPatch/ResourceManagers/ActOneEnergyDrone.cs
    startLine: 55
  assemblies:
  - InscryptionCommunityPatch
  namespace: InscryptionCommunityPatch.ResourceManagers
  syntax:
    content: public static bool SceneCanHaveEnergyDrone(string sceneName)
    parameters:
    - id: sceneName
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function SceneCanHaveEnergyDrone(sceneName As String) As Boolean
  overload: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.SceneCanHaveEnergyDrone*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.CurrentSceneCanHaveEnergyDrone
  commentId: P:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.CurrentSceneCanHaveEnergyDrone
  id: CurrentSceneCanHaveEnergyDrone
  parent: InscryptionCommunityPatch.ResourceManagers.EnergyDrone
  langs:
  - csharp
  - vb
  name: CurrentSceneCanHaveEnergyDrone
  nameWithType: EnergyDrone.CurrentSceneCanHaveEnergyDrone
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.CurrentSceneCanHaveEnergyDrone
  type: Property
  source:
    remote:
      path: InscryptionCommunityPatch/ResourceManagers/ActOneEnergyDrone.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: CurrentSceneCanHaveEnergyDrone
    path: ../InscryptionCommunityPatch/ResourceManagers/ActOneEnergyDrone.cs
    startLine: 71
  assemblies:
  - InscryptionCommunityPatch
  namespace: InscryptionCommunityPatch.ResourceManagers
  syntax:
    content: public static bool CurrentSceneCanHaveEnergyDrone { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property CurrentSceneCanHaveEnergyDrone As Boolean
  overload: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.CurrentSceneCanHaveEnergyDrone*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ZoneConfigs
  commentId: F:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ZoneConfigs
  id: ZoneConfigs
  parent: InscryptionCommunityPatch.ResourceManagers.EnergyDrone
  langs:
  - csharp
  - vb
  name: ZoneConfigs
  nameWithType: EnergyDrone.ZoneConfigs
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ZoneConfigs
  type: Field
  source:
    remote:
      path: InscryptionCommunityPatch/ResourceManagers/ActOneEnergyDrone.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: ZoneConfigs
    path: ../InscryptionCommunityPatch/ResourceManagers/ActOneEnergyDrone.cs
    startLine: 83
  assemblies:
  - InscryptionCommunityPatch
  namespace: InscryptionCommunityPatch.ResourceManagers
  syntax:
    content: public static Dictionary<CardTemple, EnergyDrone.EnergyConfigInfo> ZoneConfigs
    return:
      type: Dictionary{CardTemple,InscryptionCommunityPatch.ResourceManagers.EnergyDrone.EnergyConfigInfo}
    content.vb: Public Shared ZoneConfigs As Dictionary(Of CardTemple, EnergyDrone.EnergyConfigInfo)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.PoolHasEnergy
  commentId: P:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.PoolHasEnergy
  id: PoolHasEnergy
  parent: InscryptionCommunityPatch.ResourceManagers.EnergyDrone
  langs:
  - csharp
  - vb
  name: PoolHasEnergy
  nameWithType: EnergyDrone.PoolHasEnergy
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.PoolHasEnergy
  type: Property
  source:
    remote:
      path: InscryptionCommunityPatch/ResourceManagers/ActOneEnergyDrone.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: PoolHasEnergy
    path: ../InscryptionCommunityPatch/ResourceManagers/ActOneEnergyDrone.cs
    startLine: 108
  assemblies:
  - InscryptionCommunityPatch
  namespace: InscryptionCommunityPatch.ResourceManagers
  syntax:
    content: public static bool PoolHasEnergy { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property PoolHasEnergy As Boolean
  overload: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.PoolHasEnergy*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.PoolHasGems
  commentId: P:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.PoolHasGems
  id: PoolHasGems
  parent: InscryptionCommunityPatch.ResourceManagers.EnergyDrone
  langs:
  - csharp
  - vb
  name: PoolHasGems
  nameWithType: EnergyDrone.PoolHasGems
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.PoolHasGems
  type: Property
  source:
    remote:
      path: InscryptionCommunityPatch/ResourceManagers/ActOneEnergyDrone.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: PoolHasGems
    path: ../InscryptionCommunityPatch/ResourceManagers/ActOneEnergyDrone.cs
    startLine: 110
  assemblies:
  - InscryptionCommunityPatch
  namespace: InscryptionCommunityPatch.ResourceManagers
  syntax:
    content: public static bool PoolHasGems { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property PoolHasGems As Boolean
  overload: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.PoolHasGems*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourceDrone_SetOnBoard(DiskCardGame.ResourceDrone,System.Boolean)
  commentId: M:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourceDrone_SetOnBoard(DiskCardGame.ResourceDrone,System.Boolean)
  id: ResourceDrone_SetOnBoard(DiskCardGame.ResourceDrone,System.Boolean)
  parent: InscryptionCommunityPatch.ResourceManagers.EnergyDrone
  langs:
  - csharp
  - vb
  name: ResourceDrone_SetOnBoard(ResourceDrone, Boolean)
  nameWithType: EnergyDrone.ResourceDrone_SetOnBoard(ResourceDrone, Boolean)
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourceDrone_SetOnBoard(DiskCardGame.ResourceDrone, System.Boolean)
  type: Method
  source:
    remote:
      path: InscryptionCommunityPatch/ResourceManagers/ActOneEnergyDrone.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: ResourceDrone_SetOnBoard
    path: ../InscryptionCommunityPatch/ResourceManagers/ActOneEnergyDrone.cs
    startLine: 167
  assemblies:
  - InscryptionCommunityPatch
  namespace: InscryptionCommunityPatch.ResourceManagers
  syntax:
    content: >-
      [HarmonyPatch(typeof(ResourceDrone), "SetOnBoard")]

      [HarmonyPostfix]

      public static void ResourceDrone_SetOnBoard(ResourceDrone __instance, bool onBoard)
    parameters:
    - id: __instance
      type: DiskCardGame.ResourceDrone
    - id: onBoard
      type: System.Boolean
    content.vb: >-
      <HarmonyPatch(GetType(ResourceDrone), "SetOnBoard")>

      <HarmonyPostfix>

      Public Shared Sub ResourceDrone_SetOnBoard(__instance As ResourceDrone, onBoard As Boolean)
  overload: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourceDrone_SetOnBoard*
  attributes:
  - type: HarmonyLib.HarmonyPatch
    ctor: HarmonyLib.HarmonyPatch.#ctor(System.Type,System.String)
    arguments:
    - type: System.Type
      value: DiskCardGame.ResourceDrone
    - type: System.String
      value: SetOnBoard
  - type: HarmonyLib.HarmonyPostfix
    ctor: HarmonyLib.HarmonyPostfix.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.Part1ResourcesManager_CleanUp(DiskCardGame.Part1ResourcesManager)
  commentId: M:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.Part1ResourcesManager_CleanUp(DiskCardGame.Part1ResourcesManager)
  id: Part1ResourcesManager_CleanUp(DiskCardGame.Part1ResourcesManager)
  parent: InscryptionCommunityPatch.ResourceManagers.EnergyDrone
  langs:
  - csharp
  - vb
  name: Part1ResourcesManager_CleanUp(Part1ResourcesManager)
  nameWithType: EnergyDrone.Part1ResourcesManager_CleanUp(Part1ResourcesManager)
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.Part1ResourcesManager_CleanUp(DiskCardGame.Part1ResourcesManager)
  type: Method
  source:
    remote:
      path: InscryptionCommunityPatch/ResourceManagers/ActOneEnergyDrone.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: Part1ResourcesManager_CleanUp
    path: ../InscryptionCommunityPatch/ResourceManagers/ActOneEnergyDrone.cs
    startLine: 187
  assemblies:
  - InscryptionCommunityPatch
  namespace: InscryptionCommunityPatch.ResourceManagers
  syntax:
    content: >-
      [HarmonyPatch(typeof(Part1ResourcesManager), "CleanUp")]

      [HarmonyPrefix]

      public static void Part1ResourcesManager_CleanUp(Part1ResourcesManager __instance)
    parameters:
    - id: __instance
      type: DiskCardGame.Part1ResourcesManager
    content.vb: >-
      <HarmonyPatch(GetType(Part1ResourcesManager), "CleanUp")>

      <HarmonyPrefix>

      Public Shared Sub Part1ResourcesManager_CleanUp(__instance As Part1ResourcesManager)
  overload: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.Part1ResourcesManager_CleanUp*
  attributes:
  - type: HarmonyLib.HarmonyPatch
    ctor: HarmonyLib.HarmonyPatch.#ctor(System.Type,System.String)
    arguments:
    - type: System.Type
      value: DiskCardGame.Part1ResourcesManager
    - type: System.String
      value: CleanUp
  - type: HarmonyLib.HarmonyPrefix
    ctor: HarmonyLib.HarmonyPrefix.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_Setup(DiskCardGame.ResourcesManager)
  commentId: M:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_Setup(DiskCardGame.ResourcesManager)
  id: ResourcesManager_Setup(DiskCardGame.ResourcesManager)
  parent: InscryptionCommunityPatch.ResourceManagers.EnergyDrone
  langs:
  - csharp
  - vb
  name: ResourcesManager_Setup(ResourcesManager)
  nameWithType: EnergyDrone.ResourcesManager_Setup(ResourcesManager)
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_Setup(DiskCardGame.ResourcesManager)
  type: Method
  source:
    remote:
      path: InscryptionCommunityPatch/ResourceManagers/ActOneEnergyDrone.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: ResourcesManager_Setup
    path: ../InscryptionCommunityPatch/ResourceManagers/ActOneEnergyDrone.cs
    startLine: 214
  assemblies:
  - InscryptionCommunityPatch
  namespace: InscryptionCommunityPatch.ResourceManagers
  syntax:
    content: >-
      [HarmonyPatch(typeof(ResourcesManager), "Setup")]

      [HarmonyPrefix]

      public static void ResourcesManager_Setup(ResourcesManager __instance)
    parameters:
    - id: __instance
      type: DiskCardGame.ResourcesManager
    content.vb: >-
      <HarmonyPatch(GetType(ResourcesManager), "Setup")>

      <HarmonyPrefix>

      Public Shared Sub ResourcesManager_Setup(__instance As ResourcesManager)
  overload: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_Setup*
  attributes:
  - type: HarmonyLib.HarmonyPatch
    ctor: HarmonyLib.HarmonyPatch.#ctor(System.Type,System.String)
    arguments:
    - type: System.Type
      value: DiskCardGame.ResourcesManager
    - type: System.String
      value: Setup
  - type: HarmonyLib.HarmonyPrefix
    ctor: HarmonyLib.HarmonyPrefix.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowAddMaxEnergy(System.Collections.IEnumerator,DiskCardGame.ResourcesManager)
  commentId: M:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowAddMaxEnergy(System.Collections.IEnumerator,DiskCardGame.ResourcesManager)
  id: ResourcesManager_ShowAddMaxEnergy(System.Collections.IEnumerator,DiskCardGame.ResourcesManager)
  parent: InscryptionCommunityPatch.ResourceManagers.EnergyDrone
  langs:
  - csharp
  - vb
  name: ResourcesManager_ShowAddMaxEnergy(IEnumerator, ResourcesManager)
  nameWithType: EnergyDrone.ResourcesManager_ShowAddMaxEnergy(IEnumerator, ResourcesManager)
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowAddMaxEnergy(System.Collections.IEnumerator, DiskCardGame.ResourcesManager)
  type: Method
  source:
    remote:
      path: InscryptionCommunityPatch/ResourceManagers/ActOneEnergyDrone.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: ResourcesManager_ShowAddMaxEnergy
    path: ../InscryptionCommunityPatch/ResourceManagers/ActOneEnergyDrone.cs
    startLine: 229
  assemblies:
  - InscryptionCommunityPatch
  namespace: InscryptionCommunityPatch.ResourceManagers
  syntax:
    content: >-
      [HarmonyPatch(typeof(ResourcesManager), "ShowAddMaxEnergy")]

      [HarmonyPostfix]

      public static IEnumerator ResourcesManager_ShowAddMaxEnergy(IEnumerator result, ResourcesManager __instance)
    parameters:
    - id: result
      type: System.Collections.IEnumerator
    - id: __instance
      type: DiskCardGame.ResourcesManager
    return:
      type: System.Collections.IEnumerator
    content.vb: >-
      <HarmonyPatch(GetType(ResourcesManager), "ShowAddMaxEnergy")>

      <HarmonyPostfix>

      Public Shared Function ResourcesManager_ShowAddMaxEnergy(result As IEnumerator, __instance As ResourcesManager) As IEnumerator
  overload: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowAddMaxEnergy*
  attributes:
  - type: HarmonyLib.HarmonyPatch
    ctor: HarmonyLib.HarmonyPatch.#ctor(System.Type,System.String)
    arguments:
    - type: System.Type
      value: DiskCardGame.ResourcesManager
    - type: System.String
      value: ShowAddMaxEnergy
  - type: HarmonyLib.HarmonyPostfix
    ctor: HarmonyLib.HarmonyPostfix.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowAddEnergy(System.Collections.IEnumerator,System.Int32,DiskCardGame.ResourcesManager)
  commentId: M:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowAddEnergy(System.Collections.IEnumerator,System.Int32,DiskCardGame.ResourcesManager)
  id: ResourcesManager_ShowAddEnergy(System.Collections.IEnumerator,System.Int32,DiskCardGame.ResourcesManager)
  parent: InscryptionCommunityPatch.ResourceManagers.EnergyDrone
  langs:
  - csharp
  - vb
  name: ResourcesManager_ShowAddEnergy(IEnumerator, Int32, ResourcesManager)
  nameWithType: EnergyDrone.ResourcesManager_ShowAddEnergy(IEnumerator, Int32, ResourcesManager)
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowAddEnergy(System.Collections.IEnumerator, System.Int32, DiskCardGame.ResourcesManager)
  type: Method
  source:
    remote:
      path: InscryptionCommunityPatch/ResourceManagers/ActOneEnergyDrone.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: ResourcesManager_ShowAddEnergy
    path: ../InscryptionCommunityPatch/ResourceManagers/ActOneEnergyDrone.cs
    startLine: 242
  assemblies:
  - InscryptionCommunityPatch
  namespace: InscryptionCommunityPatch.ResourceManagers
  syntax:
    content: >-
      [HarmonyPatch(typeof(ResourcesManager), "ShowAddEnergy")]

      [HarmonyPostfix]

      public static IEnumerator ResourcesManager_ShowAddEnergy(IEnumerator result, int amount, ResourcesManager __instance)
    parameters:
    - id: result
      type: System.Collections.IEnumerator
    - id: amount
      type: System.Int32
    - id: __instance
      type: DiskCardGame.ResourcesManager
    return:
      type: System.Collections.IEnumerator
    content.vb: >-
      <HarmonyPatch(GetType(ResourcesManager), "ShowAddEnergy")>

      <HarmonyPostfix>

      Public Shared Function ResourcesManager_ShowAddEnergy(result As IEnumerator, amount As Integer, __instance As ResourcesManager) As IEnumerator
  overload: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowAddEnergy*
  attributes:
  - type: HarmonyLib.HarmonyPatch
    ctor: HarmonyLib.HarmonyPatch.#ctor(System.Type,System.String)
    arguments:
    - type: System.Type
      value: DiskCardGame.ResourcesManager
    - type: System.String
      value: ShowAddEnergy
  - type: HarmonyLib.HarmonyPostfix
    ctor: HarmonyLib.HarmonyPostfix.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowSpendEnergy(System.Collections.IEnumerator,System.Int32,DiskCardGame.ResourcesManager)
  commentId: M:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowSpendEnergy(System.Collections.IEnumerator,System.Int32,DiskCardGame.ResourcesManager)
  id: ResourcesManager_ShowSpendEnergy(System.Collections.IEnumerator,System.Int32,DiskCardGame.ResourcesManager)
  parent: InscryptionCommunityPatch.ResourceManagers.EnergyDrone
  langs:
  - csharp
  - vb
  name: ResourcesManager_ShowSpendEnergy(IEnumerator, Int32, ResourcesManager)
  nameWithType: EnergyDrone.ResourcesManager_ShowSpendEnergy(IEnumerator, Int32, ResourcesManager)
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowSpendEnergy(System.Collections.IEnumerator, System.Int32, DiskCardGame.ResourcesManager)
  type: Method
  source:
    remote:
      path: InscryptionCommunityPatch/ResourceManagers/ActOneEnergyDrone.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: ResourcesManager_ShowSpendEnergy
    path: ../InscryptionCommunityPatch/ResourceManagers/ActOneEnergyDrone.cs
    startLine: 260
  assemblies:
  - InscryptionCommunityPatch
  namespace: InscryptionCommunityPatch.ResourceManagers
  syntax:
    content: >-
      [HarmonyPatch(typeof(ResourcesManager), "ShowSpendEnergy")]

      [HarmonyPostfix]

      public static IEnumerator ResourcesManager_ShowSpendEnergy(IEnumerator result, int amount, ResourcesManager __instance)
    parameters:
    - id: result
      type: System.Collections.IEnumerator
    - id: amount
      type: System.Int32
    - id: __instance
      type: DiskCardGame.ResourcesManager
    return:
      type: System.Collections.IEnumerator
    content.vb: >-
      <HarmonyPatch(GetType(ResourcesManager), "ShowSpendEnergy")>

      <HarmonyPostfix>

      Public Shared Function ResourcesManager_ShowSpendEnergy(result As IEnumerator, amount As Integer, __instance As ResourcesManager) As IEnumerator
  overload: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowSpendEnergy*
  attributes:
  - type: HarmonyLib.HarmonyPatch
    ctor: HarmonyLib.HarmonyPatch.#ctor(System.Type,System.String)
    arguments:
    - type: System.Type
      value: DiskCardGame.ResourcesManager
    - type: System.String
      value: ShowSpendEnergy
  - type: HarmonyLib.HarmonyPostfix
    ctor: HarmonyLib.HarmonyPostfix.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowAddGem(System.Collections.IEnumerator,DiskCardGame.GemType,DiskCardGame.ResourcesManager)
  commentId: M:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowAddGem(System.Collections.IEnumerator,DiskCardGame.GemType,DiskCardGame.ResourcesManager)
  id: ResourcesManager_ShowAddGem(System.Collections.IEnumerator,DiskCardGame.GemType,DiskCardGame.ResourcesManager)
  parent: InscryptionCommunityPatch.ResourceManagers.EnergyDrone
  langs:
  - csharp
  - vb
  name: ResourcesManager_ShowAddGem(IEnumerator, GemType, ResourcesManager)
  nameWithType: EnergyDrone.ResourcesManager_ShowAddGem(IEnumerator, GemType, ResourcesManager)
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowAddGem(System.Collections.IEnumerator, DiskCardGame.GemType, DiskCardGame.ResourcesManager)
  type: Method
  source:
    remote:
      path: InscryptionCommunityPatch/ResourceManagers/ActOneEnergyDrone.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: ResourcesManager_ShowAddGem
    path: ../InscryptionCommunityPatch/ResourceManagers/ActOneEnergyDrone.cs
    startLine: 282
  assemblies:
  - InscryptionCommunityPatch
  namespace: InscryptionCommunityPatch.ResourceManagers
  syntax:
    content: >-
      [HarmonyPatch(typeof(ResourcesManager), "ShowAddGem")]

      [HarmonyPostfix]

      public static IEnumerator ResourcesManager_ShowAddGem(IEnumerator result, GemType gem, ResourcesManager __instance)
    parameters:
    - id: result
      type: System.Collections.IEnumerator
    - id: gem
      type: DiskCardGame.GemType
    - id: __instance
      type: DiskCardGame.ResourcesManager
    return:
      type: System.Collections.IEnumerator
    content.vb: >-
      <HarmonyPatch(GetType(ResourcesManager), "ShowAddGem")>

      <HarmonyPostfix>

      Public Shared Function ResourcesManager_ShowAddGem(result As IEnumerator, gem As GemType, __instance As ResourcesManager) As IEnumerator
  overload: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowAddGem*
  attributes:
  - type: HarmonyLib.HarmonyPatch
    ctor: HarmonyLib.HarmonyPatch.#ctor(System.Type,System.String)
    arguments:
    - type: System.Type
      value: DiskCardGame.ResourcesManager
    - type: System.String
      value: ShowAddGem
  - type: HarmonyLib.HarmonyPostfix
    ctor: HarmonyLib.HarmonyPostfix.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowLoseGem(System.Collections.IEnumerator,DiskCardGame.GemType,DiskCardGame.ResourcesManager)
  commentId: M:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowLoseGem(System.Collections.IEnumerator,DiskCardGame.GemType,DiskCardGame.ResourcesManager)
  id: ResourcesManager_ShowLoseGem(System.Collections.IEnumerator,DiskCardGame.GemType,DiskCardGame.ResourcesManager)
  parent: InscryptionCommunityPatch.ResourceManagers.EnergyDrone
  langs:
  - csharp
  - vb
  name: ResourcesManager_ShowLoseGem(IEnumerator, GemType, ResourcesManager)
  nameWithType: EnergyDrone.ResourcesManager_ShowLoseGem(IEnumerator, GemType, ResourcesManager)
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowLoseGem(System.Collections.IEnumerator, DiskCardGame.GemType, DiskCardGame.ResourcesManager)
  type: Method
  source:
    remote:
      path: InscryptionCommunityPatch/ResourceManagers/ActOneEnergyDrone.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: ResourcesManager_ShowLoseGem
    path: ../InscryptionCommunityPatch/ResourceManagers/ActOneEnergyDrone.cs
    startLine: 295
  assemblies:
  - InscryptionCommunityPatch
  namespace: InscryptionCommunityPatch.ResourceManagers
  syntax:
    content: >-
      [HarmonyPatch(typeof(ResourcesManager), "ShowLoseGem")]

      [HarmonyPostfix]

      public static IEnumerator ResourcesManager_ShowLoseGem(IEnumerator result, GemType gem, ResourcesManager __instance)
    parameters:
    - id: result
      type: System.Collections.IEnumerator
    - id: gem
      type: DiskCardGame.GemType
    - id: __instance
      type: DiskCardGame.ResourcesManager
    return:
      type: System.Collections.IEnumerator
    content.vb: >-
      <HarmonyPatch(GetType(ResourcesManager), "ShowLoseGem")>

      <HarmonyPostfix>

      Public Shared Function ResourcesManager_ShowLoseGem(result As IEnumerator, gem As GemType, __instance As ResourcesManager) As IEnumerator
  overload: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowLoseGem*
  attributes:
  - type: HarmonyLib.HarmonyPatch
    ctor: HarmonyLib.HarmonyPatch.#ctor(System.Type,System.String)
    arguments:
    - type: System.Type
      value: DiskCardGame.ResourcesManager
    - type: System.String
      value: ShowLoseGem
  - type: HarmonyLib.HarmonyPostfix
    ctor: HarmonyLib.HarmonyPostfix.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_SetGemOnImmediate(DiskCardGame.GemType,System.Boolean,DiskCardGame.ResourcesManager)
  commentId: M:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_SetGemOnImmediate(DiskCardGame.GemType,System.Boolean,DiskCardGame.ResourcesManager)
  id: ResourcesManager_SetGemOnImmediate(DiskCardGame.GemType,System.Boolean,DiskCardGame.ResourcesManager)
  parent: InscryptionCommunityPatch.ResourceManagers.EnergyDrone
  langs:
  - csharp
  - vb
  name: ResourcesManager_SetGemOnImmediate(GemType, Boolean, ResourcesManager)
  nameWithType: EnergyDrone.ResourcesManager_SetGemOnImmediate(GemType, Boolean, ResourcesManager)
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_SetGemOnImmediate(DiskCardGame.GemType, System.Boolean, DiskCardGame.ResourcesManager)
  type: Method
  source:
    remote:
      path: InscryptionCommunityPatch/ResourceManagers/ActOneEnergyDrone.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: ResourcesManager_SetGemOnImmediate
    path: ../InscryptionCommunityPatch/ResourceManagers/ActOneEnergyDrone.cs
    startLine: 308
  assemblies:
  - InscryptionCommunityPatch
  namespace: InscryptionCommunityPatch.ResourceManagers
  syntax:
    content: >-
      [HarmonyPatch(typeof(ResourcesManager), "SetGemOnImmediate")]

      [HarmonyPostfix]

      public static void ResourcesManager_SetGemOnImmediate(GemType gem, bool on, ResourcesManager __instance)
    parameters:
    - id: gem
      type: DiskCardGame.GemType
    - id: on
      type: System.Boolean
    - id: __instance
      type: DiskCardGame.ResourcesManager
    content.vb: >-
      <HarmonyPatch(GetType(ResourcesManager), "SetGemOnImmediate")>

      <HarmonyPostfix>

      Public Shared Sub ResourcesManager_SetGemOnImmediate(gem As GemType, on As Boolean, __instance As ResourcesManager)
  overload: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_SetGemOnImmediate*
  attributes:
  - type: HarmonyLib.HarmonyPatch
    ctor: HarmonyLib.HarmonyPatch.#ctor(System.Type,System.String)
    arguments:
    - type: System.Type
      value: DiskCardGame.ResourcesManager
    - type: System.String
      value: SetGemOnImmediate
  - type: HarmonyLib.HarmonyPostfix
    ctor: HarmonyLib.HarmonyPostfix.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.TurnManager_UpkeepPhase(System.Collections.IEnumerator,System.Boolean)
  commentId: M:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.TurnManager_UpkeepPhase(System.Collections.IEnumerator,System.Boolean)
  id: TurnManager_UpkeepPhase(System.Collections.IEnumerator,System.Boolean)
  parent: InscryptionCommunityPatch.ResourceManagers.EnergyDrone
  langs:
  - csharp
  - vb
  name: TurnManager_UpkeepPhase(IEnumerator, Boolean)
  nameWithType: EnergyDrone.TurnManager_UpkeepPhase(IEnumerator, Boolean)
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.TurnManager_UpkeepPhase(System.Collections.IEnumerator, System.Boolean)
  type: Method
  source:
    remote:
      path: InscryptionCommunityPatch/ResourceManagers/ActOneEnergyDrone.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: TurnManager_UpkeepPhase
    path: ../InscryptionCommunityPatch/ResourceManagers/ActOneEnergyDrone.cs
    startLine: 316
  assemblies:
  - InscryptionCommunityPatch
  namespace: InscryptionCommunityPatch.ResourceManagers
  syntax:
    content: >-
      [HarmonyPatch(typeof(TurnManager), "DoUpkeepPhase")]

      [HarmonyPostfix]

      public static IEnumerator TurnManager_UpkeepPhase(IEnumerator sequence, bool playerUpkeep)
    parameters:
    - id: sequence
      type: System.Collections.IEnumerator
    - id: playerUpkeep
      type: System.Boolean
    return:
      type: System.Collections.IEnumerator
    content.vb: >-
      <HarmonyPatch(GetType(TurnManager), "DoUpkeepPhase")>

      <HarmonyPostfix>

      Public Shared Function TurnManager_UpkeepPhase(sequence As IEnumerator, playerUpkeep As Boolean) As IEnumerator
  overload: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.TurnManager_UpkeepPhase*
  attributes:
  - type: HarmonyLib.HarmonyPatch
    ctor: HarmonyLib.HarmonyPatch.#ctor(System.Type,System.String)
    arguments:
    - type: System.Type
      value: DiskCardGame.TurnManager
    - type: System.String
      value: DoUpkeepPhase
  - type: HarmonyLib.HarmonyPostfix
    ctor: HarmonyLib.HarmonyPostfix.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: InscryptionCommunityPatch.ResourceManagers
  commentId: N:InscryptionCommunityPatch.ResourceManagers
  name: InscryptionCommunityPatch.ResourceManagers
  nameWithType: InscryptionCommunityPatch.ResourceManagers
  fullName: InscryptionCommunityPatch.ResourceManagers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.SceneCanHaveEnergyDrone*
  commentId: Overload:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.SceneCanHaveEnergyDrone
  name: SceneCanHaveEnergyDrone
  nameWithType: EnergyDrone.SceneCanHaveEnergyDrone
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.SceneCanHaveEnergyDrone
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.CurrentSceneCanHaveEnergyDrone*
  commentId: Overload:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.CurrentSceneCanHaveEnergyDrone
  name: CurrentSceneCanHaveEnergyDrone
  nameWithType: EnergyDrone.CurrentSceneCanHaveEnergyDrone
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.CurrentSceneCanHaveEnergyDrone
- uid: Dictionary{CardTemple,InscryptionCommunityPatch.ResourceManagers.EnergyDrone.EnergyConfigInfo}
  commentId: '!:Dictionary{CardTemple,InscryptionCommunityPatch.ResourceManagers.EnergyDrone.EnergyConfigInfo}'
  definition: Dictionary`2
  name: Dictionary<CardTemple, EnergyDrone.EnergyConfigInfo>
  nameWithType: Dictionary<CardTemple, EnergyDrone.EnergyConfigInfo>
  fullName: Dictionary<CardTemple, InscryptionCommunityPatch.ResourceManagers.EnergyDrone.EnergyConfigInfo>
  nameWithType.vb: Dictionary(Of CardTemple, EnergyDrone.EnergyConfigInfo)
  fullName.vb: Dictionary(Of CardTemple, InscryptionCommunityPatch.ResourceManagers.EnergyDrone.EnergyConfigInfo)
  name.vb: Dictionary(Of CardTemple, EnergyDrone.EnergyConfigInfo)
  spec.csharp:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CardTemple
    name: CardTemple
    nameWithType: CardTemple
    fullName: CardTemple
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.EnergyConfigInfo
    name: EnergyDrone.EnergyConfigInfo
    nameWithType: EnergyDrone.EnergyConfigInfo
    fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.EnergyConfigInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CardTemple
    name: CardTemple
    nameWithType: CardTemple
    fullName: CardTemple
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.EnergyConfigInfo
    name: EnergyDrone.EnergyConfigInfo
    nameWithType: EnergyDrone.EnergyConfigInfo
    fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.EnergyConfigInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: Dictionary`2
  isExternal: true
  name: Dictionary<, >
  nameWithType: Dictionary<, >
  fullName: Dictionary<, >
  nameWithType.vb: Dictionary(Of , )
  fullName.vb: Dictionary(Of , )
  name.vb: Dictionary(Of , )
  spec.csharp:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.PoolHasEnergy*
  commentId: Overload:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.PoolHasEnergy
  name: PoolHasEnergy
  nameWithType: EnergyDrone.PoolHasEnergy
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.PoolHasEnergy
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.PoolHasGems*
  commentId: Overload:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.PoolHasGems
  name: PoolHasGems
  nameWithType: EnergyDrone.PoolHasGems
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.PoolHasGems
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourceDrone_SetOnBoard*
  commentId: Overload:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourceDrone_SetOnBoard
  name: ResourceDrone_SetOnBoard
  nameWithType: EnergyDrone.ResourceDrone_SetOnBoard
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourceDrone_SetOnBoard
- uid: DiskCardGame.ResourceDrone
  commentId: T:DiskCardGame.ResourceDrone
  parent: DiskCardGame
  isExternal: true
  name: ResourceDrone
  nameWithType: ResourceDrone
  fullName: DiskCardGame.ResourceDrone
- uid: DiskCardGame
  commentId: N:DiskCardGame
  isExternal: true
  name: DiskCardGame
  nameWithType: DiskCardGame
  fullName: DiskCardGame
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.Part1ResourcesManager_CleanUp*
  commentId: Overload:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.Part1ResourcesManager_CleanUp
  name: Part1ResourcesManager_CleanUp
  nameWithType: EnergyDrone.Part1ResourcesManager_CleanUp
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.Part1ResourcesManager_CleanUp
- uid: DiskCardGame.Part1ResourcesManager
  commentId: T:DiskCardGame.Part1ResourcesManager
  parent: DiskCardGame
  isExternal: true
  name: Part1ResourcesManager
  nameWithType: Part1ResourcesManager
  fullName: DiskCardGame.Part1ResourcesManager
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_Setup*
  commentId: Overload:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_Setup
  name: ResourcesManager_Setup
  nameWithType: EnergyDrone.ResourcesManager_Setup
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_Setup
- uid: DiskCardGame.ResourcesManager
  commentId: T:DiskCardGame.ResourcesManager
  parent: DiskCardGame
  isExternal: true
  name: ResourcesManager
  nameWithType: ResourcesManager
  fullName: DiskCardGame.ResourcesManager
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowAddMaxEnergy*
  commentId: Overload:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowAddMaxEnergy
  name: ResourcesManager_ShowAddMaxEnergy
  nameWithType: EnergyDrone.ResourcesManager_ShowAddMaxEnergy
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowAddMaxEnergy
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowAddEnergy*
  commentId: Overload:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowAddEnergy
  name: ResourcesManager_ShowAddEnergy
  nameWithType: EnergyDrone.ResourcesManager_ShowAddEnergy
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowAddEnergy
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowSpendEnergy*
  commentId: Overload:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowSpendEnergy
  name: ResourcesManager_ShowSpendEnergy
  nameWithType: EnergyDrone.ResourcesManager_ShowSpendEnergy
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowSpendEnergy
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowAddGem*
  commentId: Overload:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowAddGem
  name: ResourcesManager_ShowAddGem
  nameWithType: EnergyDrone.ResourcesManager_ShowAddGem
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowAddGem
- uid: DiskCardGame.GemType
  commentId: T:DiskCardGame.GemType
  parent: DiskCardGame
  isExternal: true
  name: GemType
  nameWithType: GemType
  fullName: DiskCardGame.GemType
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowLoseGem*
  commentId: Overload:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowLoseGem
  name: ResourcesManager_ShowLoseGem
  nameWithType: EnergyDrone.ResourcesManager_ShowLoseGem
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_ShowLoseGem
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_SetGemOnImmediate*
  commentId: Overload:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_SetGemOnImmediate
  name: ResourcesManager_SetGemOnImmediate
  nameWithType: EnergyDrone.ResourcesManager_SetGemOnImmediate
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.ResourcesManager_SetGemOnImmediate
- uid: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.TurnManager_UpkeepPhase*
  commentId: Overload:InscryptionCommunityPatch.ResourceManagers.EnergyDrone.TurnManager_UpkeepPhase
  name: TurnManager_UpkeepPhase
  nameWithType: EnergyDrone.TurnManager_UpkeepPhase
  fullName: InscryptionCommunityPatch.ResourceManagers.EnergyDrone.TurnManager_UpkeepPhase
