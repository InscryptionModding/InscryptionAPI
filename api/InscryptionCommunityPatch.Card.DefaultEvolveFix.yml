### YamlMime:ManagedReference
items:
- uid: InscryptionCommunityPatch.Card.DefaultEvolveFix
  commentId: T:InscryptionCommunityPatch.Card.DefaultEvolveFix
  id: DefaultEvolveFix
  parent: InscryptionCommunityPatch.Card
  children:
  - InscryptionCommunityPatch.Card.DefaultEvolveFix.FixDefaultEvolveParamsIL(MonoMod.Cil.ILContext)
  langs:
  - csharp
  - vb
  name: DefaultEvolveFix
  nameWithType: DefaultEvolveFix
  fullName: InscryptionCommunityPatch.Card.DefaultEvolveFix
  type: Class
  source:
    remote:
      path: InscryptionCommunityPatch/Card/DefaultEvolveFix.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: DefaultEvolveFix
    path: ../InscryptionCommunityPatch/Card/DefaultEvolveFix.cs
    startLine: 7
  assemblies:
  - InscryptionCommunityPatch
  namespace: InscryptionCommunityPatch.Card
  syntax:
    content: >-
      [HarmonyPatch]

      public class DefaultEvolveFix
    content.vb: >-
      <HarmonyPatch>

      Public Class DefaultEvolveFix
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: HarmonyLib.HarmonyPatch
    ctor: HarmonyLib.HarmonyPatch.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: InscryptionCommunityPatch.Card.DefaultEvolveFix.FixDefaultEvolveParamsIL(MonoMod.Cil.ILContext)
  commentId: M:InscryptionCommunityPatch.Card.DefaultEvolveFix.FixDefaultEvolveParamsIL(MonoMod.Cil.ILContext)
  id: FixDefaultEvolveParamsIL(MonoMod.Cil.ILContext)
  parent: InscryptionCommunityPatch.Card.DefaultEvolveFix
  langs:
  - csharp
  - vb
  name: FixDefaultEvolveParamsIL(ILContext)
  nameWithType: DefaultEvolveFix.FixDefaultEvolveParamsIL(ILContext)
  fullName: InscryptionCommunityPatch.Card.DefaultEvolveFix.FixDefaultEvolveParamsIL(MonoMod.Cil.ILContext)
  type: Method
  source:
    remote:
      path: InscryptionCommunityPatch/Card/DefaultEvolveFix.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: FixDefaultEvolveParamsIL
    path: ../InscryptionCommunityPatch/Card/DefaultEvolveFix.cs
    startLine: 10
  assemblies:
  - InscryptionCommunityPatch
  namespace: InscryptionCommunityPatch.Card
  syntax:
    content: >-
      [HarmonyILManipulator]

      [HarmonyPatch(typeof(EvolveParams), "GetDefaultEvolution")]

      public static void FixDefaultEvolveParamsIL(ILContext il)
    parameters:
    - id: il
      type: MonoMod.Cil.ILContext
    content.vb: >-
      <HarmonyILManipulator>

      <HarmonyPatch(GetType(EvolveParams), "GetDefaultEvolution")>

      Public Shared Sub FixDefaultEvolveParamsIL(il As ILContext)
  overload: InscryptionCommunityPatch.Card.DefaultEvolveFix.FixDefaultEvolveParamsIL*
  attributes:
  - type: HarmonyLib.HarmonyILManipulator
    ctor: HarmonyLib.HarmonyILManipulator.#ctor
    arguments: []
  - type: HarmonyLib.HarmonyPatch
    ctor: HarmonyLib.HarmonyPatch.#ctor(System.Type,System.String)
    arguments:
    - type: System.Type
      value: DiskCardGame.EvolveParams
    - type: System.String
      value: GetDefaultEvolution
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: InscryptionCommunityPatch.Card
  commentId: N:InscryptionCommunityPatch.Card
  name: InscryptionCommunityPatch.Card
  nameWithType: InscryptionCommunityPatch.Card
  fullName: InscryptionCommunityPatch.Card
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: InscryptionCommunityPatch.Card.DefaultEvolveFix.FixDefaultEvolveParamsIL*
  commentId: Overload:InscryptionCommunityPatch.Card.DefaultEvolveFix.FixDefaultEvolveParamsIL
  name: FixDefaultEvolveParamsIL
  nameWithType: DefaultEvolveFix.FixDefaultEvolveParamsIL
  fullName: InscryptionCommunityPatch.Card.DefaultEvolveFix.FixDefaultEvolveParamsIL
- uid: MonoMod.Cil.ILContext
  commentId: T:MonoMod.Cil.ILContext
  parent: MonoMod.Cil
  isExternal: true
  name: ILContext
  nameWithType: ILContext
  fullName: MonoMod.Cil.ILContext
- uid: MonoMod.Cil
  commentId: N:MonoMod.Cil
  isExternal: true
  name: MonoMod.Cil
  nameWithType: MonoMod.Cil
  fullName: MonoMod.Cil
