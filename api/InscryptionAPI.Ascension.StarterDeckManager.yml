### YamlMime:ManagedReference
items:
- uid: InscryptionAPI.Ascension.StarterDeckManager
  commentId: T:InscryptionAPI.Ascension.StarterDeckManager
  id: StarterDeckManager
  parent: InscryptionAPI.Ascension
  children:
  - InscryptionAPI.Ascension.StarterDeckManager.Add(System.String,DiskCardGame.StarterDeckInfo,System.Int32)
  - InscryptionAPI.Ascension.StarterDeckManager.AllDeckInfos
  - InscryptionAPI.Ascension.StarterDeckManager.AllDecks
  - InscryptionAPI.Ascension.StarterDeckManager.BaseGameDecks
  - InscryptionAPI.Ascension.StarterDeckManager.CustomStarterLevel(System.Boolean@,System.String,System.Int32)
  - InscryptionAPI.Ascension.StarterDeckManager.ModifyDeckList
  - InscryptionAPI.Ascension.StarterDeckManager.New(System.String,System.String,System.String,System.String[],System.Int32)
  - InscryptionAPI.Ascension.StarterDeckManager.New(System.String,System.String,UnityEngine.Texture2D,System.String[],System.Int32)
  - InscryptionAPI.Ascension.StarterDeckManager.SyncDeckList
  langs:
  - csharp
  - vb
  name: StarterDeckManager
  nameWithType: StarterDeckManager
  fullName: InscryptionAPI.Ascension.StarterDeckManager
  type: Class
  source:
    remote:
      path: InscryptionAPI/Ascension/StarterDeckManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: StarterDeckManager
    path: ../InscryptionAPI/Ascension/StarterDeckManager.cs
    startLine: 8
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Ascension
  syntax:
    content: >-
      [HarmonyPatch]

      public static class StarterDeckManager
    content.vb: >-
      <HarmonyPatch>

      Public Module StarterDeckManager
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: HarmonyLib.HarmonyPatch
    ctor: HarmonyLib.HarmonyPatch.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: InscryptionAPI.Ascension.StarterDeckManager.BaseGameDecks
  commentId: F:InscryptionAPI.Ascension.StarterDeckManager.BaseGameDecks
  id: BaseGameDecks
  parent: InscryptionAPI.Ascension.StarterDeckManager
  langs:
  - csharp
  - vb
  name: BaseGameDecks
  nameWithType: StarterDeckManager.BaseGameDecks
  fullName: InscryptionAPI.Ascension.StarterDeckManager.BaseGameDecks
  type: Field
  source:
    remote:
      path: InscryptionAPI/Ascension/StarterDeckManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: BaseGameDecks
    path: ../InscryptionAPI/Ascension/StarterDeckManager.cs
    startLine: 19
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Ascension
  syntax:
    content: public static readonly ReadOnlyCollection<StarterDeckManager.FullStarterDeck> BaseGameDecks
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck}
    content.vb: Public Shared ReadOnly BaseGameDecks As ReadOnlyCollection(Of StarterDeckManager.FullStarterDeck)
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: InscryptionAPI.Ascension.StarterDeckManager.AllDecks
  commentId: F:InscryptionAPI.Ascension.StarterDeckManager.AllDecks
  id: AllDecks
  parent: InscryptionAPI.Ascension.StarterDeckManager
  langs:
  - csharp
  - vb
  name: AllDecks
  nameWithType: StarterDeckManager.AllDecks
  fullName: InscryptionAPI.Ascension.StarterDeckManager.AllDecks
  type: Field
  source:
    remote:
      path: InscryptionAPI/Ascension/StarterDeckManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: AllDecks
    path: ../InscryptionAPI/Ascension/StarterDeckManager.cs
    startLine: 23
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Ascension
  syntax:
    content: public static List<StarterDeckManager.FullStarterDeck> AllDecks
    return:
      type: List{InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck}
    content.vb: Public Shared AllDecks As List(Of StarterDeckManager.FullStarterDeck)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Ascension.StarterDeckManager.AllDeckInfos
  commentId: F:InscryptionAPI.Ascension.StarterDeckManager.AllDeckInfos
  id: AllDeckInfos
  parent: InscryptionAPI.Ascension.StarterDeckManager
  langs:
  - csharp
  - vb
  name: AllDeckInfos
  nameWithType: StarterDeckManager.AllDeckInfos
  fullName: InscryptionAPI.Ascension.StarterDeckManager.AllDeckInfos
  type: Field
  source:
    remote:
      path: InscryptionAPI/Ascension/StarterDeckManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: AllDeckInfos
    path: ../InscryptionAPI/Ascension/StarterDeckManager.cs
    startLine: 24
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Ascension
  syntax:
    content: public static List<StarterDeckInfo> AllDeckInfos
    return:
      type: List{DiskCardGame.StarterDeckInfo}
    content.vb: Public Shared AllDeckInfos As List(Of StarterDeckInfo)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Ascension.StarterDeckManager.ModifyDeckList
  commentId: E:InscryptionAPI.Ascension.StarterDeckManager.ModifyDeckList
  id: ModifyDeckList
  parent: InscryptionAPI.Ascension.StarterDeckManager
  langs:
  - csharp
  - vb
  name: ModifyDeckList
  nameWithType: StarterDeckManager.ModifyDeckList
  fullName: InscryptionAPI.Ascension.StarterDeckManager.ModifyDeckList
  type: Event
  source:
    remote:
      path: InscryptionAPI/Ascension/StarterDeckManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: ModifyDeckList
    path: ../InscryptionAPI/Ascension/StarterDeckManager.cs
    startLine: 58
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Ascension
  syntax:
    content: public static event Func<List<StarterDeckManager.FullStarterDeck>, List<StarterDeckManager.FullStarterDeck>> ModifyDeckList
    return:
      type: Func{List{InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck},List{InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck}}
    content.vb: Public Shared Event ModifyDeckList As Func(Of List(Of StarterDeckManager.FullStarterDeck), List(Of StarterDeckManager.FullStarterDeck))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Ascension.StarterDeckManager.SyncDeckList
  commentId: M:InscryptionAPI.Ascension.StarterDeckManager.SyncDeckList
  id: SyncDeckList
  parent: InscryptionAPI.Ascension.StarterDeckManager
  langs:
  - csharp
  - vb
  name: SyncDeckList()
  nameWithType: StarterDeckManager.SyncDeckList()
  fullName: InscryptionAPI.Ascension.StarterDeckManager.SyncDeckList()
  type: Method
  source:
    remote:
      path: InscryptionAPI/Ascension/StarterDeckManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SyncDeckList
    path: ../InscryptionAPI/Ascension/StarterDeckManager.cs
    startLine: 60
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Ascension
  syntax:
    content: public static void SyncDeckList()
    content.vb: Public Shared Sub SyncDeckList
  overload: InscryptionAPI.Ascension.StarterDeckManager.SyncDeckList*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Ascension.StarterDeckManager.Add(System.String,DiskCardGame.StarterDeckInfo,System.Int32)
  commentId: M:InscryptionAPI.Ascension.StarterDeckManager.Add(System.String,DiskCardGame.StarterDeckInfo,System.Int32)
  id: Add(System.String,DiskCardGame.StarterDeckInfo,System.Int32)
  parent: InscryptionAPI.Ascension.StarterDeckManager
  langs:
  - csharp
  - vb
  name: Add(String, StarterDeckInfo, Int32)
  nameWithType: StarterDeckManager.Add(String, StarterDeckInfo, Int32)
  fullName: InscryptionAPI.Ascension.StarterDeckManager.Add(System.String, DiskCardGame.StarterDeckInfo, System.Int32)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Ascension/StarterDeckManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: Add
    path: ../InscryptionAPI/Ascension/StarterDeckManager.cs
    startLine: 86
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Ascension
  syntax:
    content: public static StarterDeckManager.FullStarterDeck Add(string pluginGuid, StarterDeckInfo info, int unlockLevel = 0)
    parameters:
    - id: pluginGuid
      type: System.String
    - id: info
      type: DiskCardGame.StarterDeckInfo
    - id: unlockLevel
      type: System.Int32
    return:
      type: InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck
    content.vb: Public Shared Function Add(pluginGuid As String, info As StarterDeckInfo, unlockLevel As Integer = 0) As StarterDeckManager.FullStarterDeck
  overload: InscryptionAPI.Ascension.StarterDeckManager.Add*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Ascension.StarterDeckManager.New(System.String,System.String,UnityEngine.Texture2D,System.String[],System.Int32)
  commentId: M:InscryptionAPI.Ascension.StarterDeckManager.New(System.String,System.String,UnityEngine.Texture2D,System.String[],System.Int32)
  id: New(System.String,System.String,UnityEngine.Texture2D,System.String[],System.Int32)
  parent: InscryptionAPI.Ascension.StarterDeckManager
  langs:
  - csharp
  - vb
  name: New(String, String, Texture2D, String[], Int32)
  nameWithType: StarterDeckManager.New(String, String, Texture2D, String[], Int32)
  fullName: InscryptionAPI.Ascension.StarterDeckManager.New(System.String, System.String, UnityEngine.Texture2D, System.String[], System.Int32)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Ascension/StarterDeckManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: New
    path: ../InscryptionAPI/Ascension/StarterDeckManager.cs
    startLine: 101
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Ascension
  syntax:
    content: public static StarterDeckManager.FullStarterDeck New(string pluginGuid, string title, Texture2D iconTexture, string[] cardNames, int unlockLevel = 0)
    parameters:
    - id: pluginGuid
      type: System.String
    - id: title
      type: System.String
    - id: iconTexture
      type: UnityEngine.Texture2D
    - id: cardNames
      type: System.String[]
    - id: unlockLevel
      type: System.Int32
    return:
      type: InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck
    content.vb: Public Shared Function New(pluginGuid As String, title As String, iconTexture As Texture2D, cardNames As String(), unlockLevel As Integer = 0) As StarterDeckManager.FullStarterDeck
  overload: InscryptionAPI.Ascension.StarterDeckManager.New*
  nameWithType.vb: StarterDeckManager.New(String, String, Texture2D, String(), Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionAPI.Ascension.StarterDeckManager.New(System.String, System.String, UnityEngine.Texture2D, System.String(), System.Int32)
  name.vb: New(String, String, Texture2D, String(), Int32)
- uid: InscryptionAPI.Ascension.StarterDeckManager.New(System.String,System.String,System.String,System.String[],System.Int32)
  commentId: M:InscryptionAPI.Ascension.StarterDeckManager.New(System.String,System.String,System.String,System.String[],System.Int32)
  id: New(System.String,System.String,System.String,System.String[],System.Int32)
  parent: InscryptionAPI.Ascension.StarterDeckManager
  langs:
  - csharp
  - vb
  name: New(String, String, String, String[], Int32)
  nameWithType: StarterDeckManager.New(String, String, String, String[], Int32)
  fullName: InscryptionAPI.Ascension.StarterDeckManager.New(System.String, System.String, System.String, System.String[], System.Int32)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Ascension/StarterDeckManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: New
    path: ../InscryptionAPI/Ascension/StarterDeckManager.cs
    startLine: 118
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Ascension
  syntax:
    content: public static StarterDeckManager.FullStarterDeck New(string pluginGuid, string title, string pathToIconTexture, string[] cardNames, int unlockLevel = 0)
    parameters:
    - id: pluginGuid
      type: System.String
    - id: title
      type: System.String
    - id: pathToIconTexture
      type: System.String
    - id: cardNames
      type: System.String[]
    - id: unlockLevel
      type: System.Int32
    return:
      type: InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck
    content.vb: Public Shared Function New(pluginGuid As String, title As String, pathToIconTexture As String, cardNames As String(), unlockLevel As Integer = 0) As StarterDeckManager.FullStarterDeck
  overload: InscryptionAPI.Ascension.StarterDeckManager.New*
  nameWithType.vb: StarterDeckManager.New(String, String, String, String(), Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionAPI.Ascension.StarterDeckManager.New(System.String, System.String, System.String, System.String(), System.Int32)
  name.vb: New(String, String, String, String(), Int32)
- uid: InscryptionAPI.Ascension.StarterDeckManager.CustomStarterLevel(System.Boolean@,System.String,System.Int32)
  commentId: M:InscryptionAPI.Ascension.StarterDeckManager.CustomStarterLevel(System.Boolean@,System.String,System.Int32)
  id: CustomStarterLevel(System.Boolean@,System.String,System.Int32)
  parent: InscryptionAPI.Ascension.StarterDeckManager
  langs:
  - csharp
  - vb
  name: CustomStarterLevel(ref Boolean, String, Int32)
  nameWithType: StarterDeckManager.CustomStarterLevel(ref Boolean, String, Int32)
  fullName: InscryptionAPI.Ascension.StarterDeckManager.CustomStarterLevel(ref System.Boolean, System.String, System.Int32)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Ascension/StarterDeckManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: CustomStarterLevel
    path: ../InscryptionAPI/Ascension/StarterDeckManager.cs
    startLine: 124
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Ascension
  syntax:
    content: >-
      [HarmonyPatch(typeof(AscensionUnlockSchedule), "StarterDeckIsUnlockedForLevel")]

      [HarmonyPrefix]

      public static bool CustomStarterLevel(ref bool __result, string id, int level)
    parameters:
    - id: __result
      type: System.Boolean
    - id: id
      type: System.String
    - id: level
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: >-
      <HarmonyPatch(GetType(AscensionUnlockSchedule), "StarterDeckIsUnlockedForLevel")>

      <HarmonyPrefix>

      Public Shared Function CustomStarterLevel(ByRef __result As Boolean, id As String, level As Integer) As Boolean
  overload: InscryptionAPI.Ascension.StarterDeckManager.CustomStarterLevel*
  attributes:
  - type: HarmonyLib.HarmonyPatch
    ctor: HarmonyLib.HarmonyPatch.#ctor(System.Type,System.String)
    arguments:
    - type: System.Type
      value: DiskCardGame.AscensionUnlockSchedule
    - type: System.String
      value: StarterDeckIsUnlockedForLevel
  - type: HarmonyLib.HarmonyPrefix
    ctor: HarmonyLib.HarmonyPrefix.#ctor
    arguments: []
  nameWithType.vb: StarterDeckManager.CustomStarterLevel(ByRef Boolean, String, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionAPI.Ascension.StarterDeckManager.CustomStarterLevel(ByRef System.Boolean, System.String, System.Int32)
  name.vb: CustomStarterLevel(ByRef Boolean, String, Int32)
references:
- uid: InscryptionAPI.Ascension
  commentId: N:InscryptionAPI.Ascension
  name: InscryptionAPI.Ascension
  nameWithType: InscryptionAPI.Ascension
  fullName: InscryptionAPI.Ascension
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.ObjectModel.ReadOnlyCollection{InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck}
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection{InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<StarterDeckManager.FullStarterDeck>
  nameWithType: ReadOnlyCollection<StarterDeckManager.FullStarterDeck>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck>
  nameWithType.vb: ReadOnlyCollection(Of StarterDeckManager.FullStarterDeck)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck)
  name.vb: ReadOnlyCollection(Of StarterDeckManager.FullStarterDeck)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck
    name: StarterDeckManager.FullStarterDeck
    nameWithType: StarterDeckManager.FullStarterDeck
    fullName: InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck
    name: StarterDeckManager.FullStarterDeck
    nameWithType: StarterDeckManager.FullStarterDeck
    fullName: InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: ReadOnlyCollection<T>
  nameWithType: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  nameWithType.vb: ReadOnlyCollection(Of T)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)
  name.vb: ReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: List{InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck}
  commentId: '!:List{InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck}'
  definition: List`1
  name: List<StarterDeckManager.FullStarterDeck>
  nameWithType: List<StarterDeckManager.FullStarterDeck>
  fullName: List<InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck>
  nameWithType.vb: List(Of StarterDeckManager.FullStarterDeck)
  fullName.vb: List(Of InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck)
  name.vb: List(Of StarterDeckManager.FullStarterDeck)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck
    name: StarterDeckManager.FullStarterDeck
    nameWithType: StarterDeckManager.FullStarterDeck
    fullName: InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck
    name: StarterDeckManager.FullStarterDeck
    nameWithType: StarterDeckManager.FullStarterDeck
    fullName: InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: List{DiskCardGame.StarterDeckInfo}
  commentId: '!:List{DiskCardGame.StarterDeckInfo}'
  definition: List`1
  name: List<StarterDeckInfo>
  nameWithType: List<StarterDeckInfo>
  fullName: List<DiskCardGame.StarterDeckInfo>
  nameWithType.vb: List(Of StarterDeckInfo)
  fullName.vb: List(Of DiskCardGame.StarterDeckInfo)
  name.vb: List(Of StarterDeckInfo)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DiskCardGame.StarterDeckInfo
    name: StarterDeckInfo
    nameWithType: StarterDeckInfo
    fullName: DiskCardGame.StarterDeckInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DiskCardGame.StarterDeckInfo
    name: StarterDeckInfo
    nameWithType: StarterDeckInfo
    fullName: DiskCardGame.StarterDeckInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Func{List{InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck},List{InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck}}
  commentId: '!:Func{List{InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck},List{InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck}}'
  definition: Func`2
  name: Func<List<StarterDeckManager.FullStarterDeck>, List<StarterDeckManager.FullStarterDeck>>
  nameWithType: Func<List<StarterDeckManager.FullStarterDeck>, List<StarterDeckManager.FullStarterDeck>>
  fullName: Func<List<InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck>, List<InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck>>
  nameWithType.vb: Func(Of List(Of StarterDeckManager.FullStarterDeck), List(Of StarterDeckManager.FullStarterDeck))
  fullName.vb: Func(Of List(Of InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck), List(Of InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck))
  name.vb: Func(Of List(Of StarterDeckManager.FullStarterDeck), List(Of StarterDeckManager.FullStarterDeck))
  spec.csharp:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck
    name: StarterDeckManager.FullStarterDeck
    nameWithType: StarterDeckManager.FullStarterDeck
    fullName: InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck
    name: StarterDeckManager.FullStarterDeck
    nameWithType: StarterDeckManager.FullStarterDeck
    fullName: InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck
    name: StarterDeckManager.FullStarterDeck
    nameWithType: StarterDeckManager.FullStarterDeck
    fullName: InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck
    name: StarterDeckManager.FullStarterDeck
    nameWithType: StarterDeckManager.FullStarterDeck
    fullName: InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Func`2
  isExternal: true
  name: Func<, >
  nameWithType: Func<, >
  fullName: Func<, >
  nameWithType.vb: Func(Of , )
  fullName.vb: Func(Of , )
  name.vb: Func(Of , )
  spec.csharp:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: InscryptionAPI.Ascension.StarterDeckManager.SyncDeckList*
  commentId: Overload:InscryptionAPI.Ascension.StarterDeckManager.SyncDeckList
  name: SyncDeckList
  nameWithType: StarterDeckManager.SyncDeckList
  fullName: InscryptionAPI.Ascension.StarterDeckManager.SyncDeckList
- uid: InscryptionAPI.Ascension.StarterDeckManager.Add*
  commentId: Overload:InscryptionAPI.Ascension.StarterDeckManager.Add
  name: Add
  nameWithType: StarterDeckManager.Add
  fullName: InscryptionAPI.Ascension.StarterDeckManager.Add
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: DiskCardGame.StarterDeckInfo
  commentId: T:DiskCardGame.StarterDeckInfo
  parent: DiskCardGame
  isExternal: true
  name: StarterDeckInfo
  nameWithType: StarterDeckInfo
  fullName: DiskCardGame.StarterDeckInfo
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck
  commentId: T:InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck
  parent: InscryptionAPI.Ascension
  name: StarterDeckManager.FullStarterDeck
  nameWithType: StarterDeckManager.FullStarterDeck
  fullName: InscryptionAPI.Ascension.StarterDeckManager.FullStarterDeck
- uid: DiskCardGame
  commentId: N:DiskCardGame
  isExternal: true
  name: DiskCardGame
  nameWithType: DiskCardGame
  fullName: DiskCardGame
- uid: InscryptionAPI.Ascension.StarterDeckManager.New*
  commentId: Overload:InscryptionAPI.Ascension.StarterDeckManager.New
  name: New
  nameWithType: StarterDeckManager.New
  fullName: InscryptionAPI.Ascension.StarterDeckManager.New
- uid: UnityEngine.Texture2D
  commentId: T:UnityEngine.Texture2D
  parent: UnityEngine
  isExternal: true
  name: Texture2D
  nameWithType: Texture2D
  fullName: UnityEngine.Texture2D
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: InscryptionAPI.Ascension.StarterDeckManager.CustomStarterLevel*
  commentId: Overload:InscryptionAPI.Ascension.StarterDeckManager.CustomStarterLevel
  name: CustomStarterLevel
  nameWithType: StarterDeckManager.CustomStarterLevel
  fullName: InscryptionAPI.Ascension.StarterDeckManager.CustomStarterLevel
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
