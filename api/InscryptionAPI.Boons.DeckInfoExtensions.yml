### YamlMime:ManagedReference
items:
- uid: InscryptionAPI.Boons.DeckInfoExtensions
  commentId: T:InscryptionAPI.Boons.DeckInfoExtensions
  id: DeckInfoExtensions
  parent: InscryptionAPI.Boons
  children:
  - InscryptionAPI.Boons.DeckInfoExtensions.RemoveAllBoonsOfType(DiskCardGame.DeckInfo,DiskCardGame.BoonData.Type)
  - InscryptionAPI.Boons.DeckInfoExtensions.RemoveBoon(DiskCardGame.DeckInfo,DiskCardGame.BoonData.Type)
  langs:
  - csharp
  - vb
  name: DeckInfoExtensions
  nameWithType: DeckInfoExtensions
  fullName: InscryptionAPI.Boons.DeckInfoExtensions
  type: Class
  source:
    remote:
      path: InscryptionAPI/Boons/DeckInfoExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: DeckInfoExtensions
    path: ../InscryptionAPI/Boons/DeckInfoExtensions.cs
    startLine: 4
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public static class DeckInfoExtensions
    content.vb: Public Module DeckInfoExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: InscryptionAPI.Boons.DeckInfoExtensions.RemoveBoon(DiskCardGame.DeckInfo,DiskCardGame.BoonData.Type)
  commentId: M:InscryptionAPI.Boons.DeckInfoExtensions.RemoveBoon(DiskCardGame.DeckInfo,DiskCardGame.BoonData.Type)
  id: RemoveBoon(DiskCardGame.DeckInfo,DiskCardGame.BoonData.Type)
  isExtensionMethod: true
  parent: InscryptionAPI.Boons.DeckInfoExtensions
  langs:
  - csharp
  - vb
  name: RemoveBoon(DeckInfo, BoonData.Type)
  nameWithType: DeckInfoExtensions.RemoveBoon(DeckInfo, BoonData.Type)
  fullName: InscryptionAPI.Boons.DeckInfoExtensions.RemoveBoon(DiskCardGame.DeckInfo, DiskCardGame.BoonData.Type)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/DeckInfoExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: RemoveBoon
    path: ../InscryptionAPI/Boons/DeckInfoExtensions.cs
    startLine: 6
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public static void RemoveBoon(this DeckInfo self, BoonData.Type type)
    parameters:
    - id: self
      type: DiskCardGame.DeckInfo
    - id: type
      type: DiskCardGame.BoonData.Type
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub RemoveBoon(self As DeckInfo, type As BoonData.Type)
  overload: InscryptionAPI.Boons.DeckInfoExtensions.RemoveBoon*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Boons.DeckInfoExtensions.RemoveAllBoonsOfType(DiskCardGame.DeckInfo,DiskCardGame.BoonData.Type)
  commentId: M:InscryptionAPI.Boons.DeckInfoExtensions.RemoveAllBoonsOfType(DiskCardGame.DeckInfo,DiskCardGame.BoonData.Type)
  id: RemoveAllBoonsOfType(DiskCardGame.DeckInfo,DiskCardGame.BoonData.Type)
  isExtensionMethod: true
  parent: InscryptionAPI.Boons.DeckInfoExtensions
  langs:
  - csharp
  - vb
  name: RemoveAllBoonsOfType(DeckInfo, BoonData.Type)
  nameWithType: DeckInfoExtensions.RemoveAllBoonsOfType(DeckInfo, BoonData.Type)
  fullName: InscryptionAPI.Boons.DeckInfoExtensions.RemoveAllBoonsOfType(DiskCardGame.DeckInfo, DiskCardGame.BoonData.Type)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/DeckInfoExtensions.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: RemoveAllBoonsOfType
    path: ../InscryptionAPI/Boons/DeckInfoExtensions.cs
    startLine: 26
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public static void RemoveAllBoonsOfType(this DeckInfo self, BoonData.Type type)
    parameters:
    - id: self
      type: DiskCardGame.DeckInfo
    - id: type
      type: DiskCardGame.BoonData.Type
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub RemoveAllBoonsOfType(self As DeckInfo, type As BoonData.Type)
  overload: InscryptionAPI.Boons.DeckInfoExtensions.RemoveAllBoonsOfType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: InscryptionAPI.Boons
  commentId: N:InscryptionAPI.Boons
  name: InscryptionAPI.Boons
  nameWithType: InscryptionAPI.Boons
  fullName: InscryptionAPI.Boons
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: InscryptionAPI.Boons.DeckInfoExtensions.RemoveBoon*
  commentId: Overload:InscryptionAPI.Boons.DeckInfoExtensions.RemoveBoon
  name: RemoveBoon
  nameWithType: DeckInfoExtensions.RemoveBoon
  fullName: InscryptionAPI.Boons.DeckInfoExtensions.RemoveBoon
- uid: DiskCardGame.DeckInfo
  commentId: T:DiskCardGame.DeckInfo
  parent: DiskCardGame
  isExternal: true
  name: DeckInfo
  nameWithType: DeckInfo
  fullName: DiskCardGame.DeckInfo
- uid: DiskCardGame.BoonData.Type
  commentId: T:DiskCardGame.BoonData.Type
  parent: DiskCardGame
  isExternal: true
  name: BoonData.Type
  nameWithType: BoonData.Type
  fullName: DiskCardGame.BoonData.Type
- uid: DiskCardGame
  commentId: N:DiskCardGame
  isExternal: true
  name: DiskCardGame
  nameWithType: DiskCardGame
  fullName: DiskCardGame
- uid: InscryptionAPI.Boons.DeckInfoExtensions.RemoveAllBoonsOfType*
  commentId: Overload:InscryptionAPI.Boons.DeckInfoExtensions.RemoveAllBoonsOfType
  name: RemoveAllBoonsOfType
  nameWithType: DeckInfoExtensions.RemoveAllBoonsOfType
  fullName: InscryptionAPI.Boons.DeckInfoExtensions.RemoveAllBoonsOfType
