### YamlMime:ManagedReference
items:
- uid: InscryptionAPI.Encounters.TurnExtensions
  commentId: T:InscryptionAPI.Encounters.TurnExtensions
  id: TurnExtensions
  parent: InscryptionAPI.Encounters
  children:
  - InscryptionAPI.Encounters.TurnExtensions.AddCardBlueprint``1(InscryptionAPI.Encounters.TurnBuilder{``0},System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.String)
  - InscryptionAPI.Encounters.TurnExtensions.Build``1(InscryptionAPI.Encounters.TurnBuilder{``0})
  langs:
  - csharp
  - vb
  name: TurnExtensions
  nameWithType: TurnExtensions
  fullName: InscryptionAPI.Encounters.TurnExtensions
  type: Class
  source:
    remote:
      path: InscryptionAPI/Encounters/TurnBuilder.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: TurnExtensions
    path: ../InscryptionAPI/Encounters/TurnBuilder.cs
    startLine: 25
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Encounters
  syntax:
    content: public static class TurnExtensions
    content.vb: Public Module TurnExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: InscryptionAPI.Encounters.TurnExtensions.AddCardBlueprint``1(InscryptionAPI.Encounters.TurnBuilder{``0},System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.String)
  commentId: M:InscryptionAPI.Encounters.TurnExtensions.AddCardBlueprint``1(InscryptionAPI.Encounters.TurnBuilder{``0},System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.String)
  id: AddCardBlueprint``1(InscryptionAPI.Encounters.TurnBuilder{``0},System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.String)
  isExtensionMethod: true
  parent: InscryptionAPI.Encounters.TurnExtensions
  langs:
  - csharp
  - vb
  name: AddCardBlueprint<T>(TurnBuilder<T>, String, Int32, Int32, Int32, Boolean, Int32, String)
  nameWithType: TurnExtensions.AddCardBlueprint<T>(TurnBuilder<T>, String, Int32, Int32, Int32, Boolean, Int32, String)
  fullName: InscryptionAPI.Encounters.TurnExtensions.AddCardBlueprint<T>(InscryptionAPI.Encounters.TurnBuilder<T>, System.String, System.Int32, System.Int32, System.Int32, System.Boolean, System.Int32, System.String)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Encounters/TurnBuilder.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: AddCardBlueprint
    path: ../InscryptionAPI/Encounters/TurnBuilder.cs
    startLine: 37
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Encounters
  summary: "\nAdds a card blueprint to this turn.\n"
  example: []
  syntax:
    content: >-
      public static TurnBuilder<T> AddCardBlueprint<T>(this TurnBuilder<T> turnBuilder, string card, int randomReplaceChance = 0, int minDifficulty = 1, int maxDifficulty = 20, bool difficultyReplace = false, int difficultyReplaceReq = 0, string replacement = null)
          where T : EncounterBlueprintData
    parameters:
    - id: turnBuilder
      type: InscryptionAPI.Encounters.TurnBuilder{{T}}
    - id: card
      type: System.String
      description: The default card. Can be null for no card.
    - id: randomReplaceChance
      type: System.Int32
      description: The integer probability of this card getting replaced by a card from the encounter&apos;s <code>randomReplacementCards</code>
    - id: minDifficulty
      type: System.Int32
      description: The minimum difficulty for this card to appear.
    - id: maxDifficulty
      type: System.Int32
      description: The maximum difficulty for this card to appear.
    - id: difficultyReplace
      type: System.Boolean
      description: Whether to replace this card when a certain difficulty threshold is met.
    - id: difficultyReplaceReq
      type: System.Int32
      description: The difficulty threshold for the <code>replacement</code> card to be used instead.
    - id: replacement
      type: System.String
      description: The replacement card for the difficulty replacement.
    typeParameters:
    - id: T
    return:
      type: InscryptionAPI.Encounters.TurnBuilder{{T}}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddCardBlueprint(Of T As EncounterBlueprintData)(turnBuilder As TurnBuilder(Of T), card As String, randomReplaceChance As Integer = 0, minDifficulty As Integer = 1, maxDifficulty As Integer = 20, difficultyReplace As Boolean = False, difficultyReplaceReq As Integer = 0, replacement As String = Nothing) As TurnBuilder(Of T)
  overload: InscryptionAPI.Encounters.TurnExtensions.AddCardBlueprint*
  nameWithType.vb: TurnExtensions.AddCardBlueprint(Of T)(TurnBuilder(Of T), String, Int32, Int32, Int32, Boolean, Int32, String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionAPI.Encounters.TurnExtensions.AddCardBlueprint(Of T)(InscryptionAPI.Encounters.TurnBuilder(Of T), System.String, System.Int32, System.Int32, System.Int32, System.Boolean, System.Int32, System.String)
  name.vb: AddCardBlueprint(Of T)(TurnBuilder(Of T), String, Int32, Int32, Int32, Boolean, Int32, String)
- uid: InscryptionAPI.Encounters.TurnExtensions.Build``1(InscryptionAPI.Encounters.TurnBuilder{``0})
  commentId: M:InscryptionAPI.Encounters.TurnExtensions.Build``1(InscryptionAPI.Encounters.TurnBuilder{``0})
  id: Build``1(InscryptionAPI.Encounters.TurnBuilder{``0})
  isExtensionMethod: true
  parent: InscryptionAPI.Encounters.TurnExtensions
  langs:
  - csharp
  - vb
  name: Build<T>(TurnBuilder<T>)
  nameWithType: TurnExtensions.Build<T>(TurnBuilder<T>)
  fullName: InscryptionAPI.Encounters.TurnExtensions.Build<T>(InscryptionAPI.Encounters.TurnBuilder<T>)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Encounters/TurnBuilder.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: Build
    path: ../InscryptionAPI/Encounters/TurnBuilder.cs
    startLine: 55
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Encounters
  syntax:
    content: >-
      public static T Build<T>(this TurnBuilder<T> turnBuilder)
          where T : EncounterBlueprintData
    parameters:
    - id: turnBuilder
      type: InscryptionAPI.Encounters.TurnBuilder{{T}}
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Build(Of T As EncounterBlueprintData)(turnBuilder As TurnBuilder(Of T)) As T
  overload: InscryptionAPI.Encounters.TurnExtensions.Build*
  nameWithType.vb: TurnExtensions.Build(Of T)(TurnBuilder(Of T))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionAPI.Encounters.TurnExtensions.Build(Of T)(InscryptionAPI.Encounters.TurnBuilder(Of T))
  name.vb: Build(Of T)(TurnBuilder(Of T))
references:
- uid: InscryptionAPI.Encounters
  commentId: N:InscryptionAPI.Encounters
  name: InscryptionAPI.Encounters
  nameWithType: InscryptionAPI.Encounters
  fullName: InscryptionAPI.Encounters
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: InscryptionAPI.Encounters.TurnExtensions.AddCardBlueprint*
  commentId: Overload:InscryptionAPI.Encounters.TurnExtensions.AddCardBlueprint
  name: AddCardBlueprint
  nameWithType: TurnExtensions.AddCardBlueprint
  fullName: InscryptionAPI.Encounters.TurnExtensions.AddCardBlueprint
- uid: InscryptionAPI.Encounters.TurnBuilder{{T}}
  commentId: T:InscryptionAPI.Encounters.TurnBuilder{``0}
  parent: InscryptionAPI.Encounters
  definition: InscryptionAPI.Encounters.TurnBuilder`1
  name: TurnBuilder<T>
  nameWithType: TurnBuilder<T>
  fullName: InscryptionAPI.Encounters.TurnBuilder<T>
  nameWithType.vb: TurnBuilder(Of T)
  fullName.vb: InscryptionAPI.Encounters.TurnBuilder(Of T)
  name.vb: TurnBuilder(Of T)
  spec.csharp:
  - uid: InscryptionAPI.Encounters.TurnBuilder`1
    name: TurnBuilder
    nameWithType: TurnBuilder
    fullName: InscryptionAPI.Encounters.TurnBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: InscryptionAPI.Encounters.TurnBuilder`1
    name: TurnBuilder
    nameWithType: TurnBuilder
    fullName: InscryptionAPI.Encounters.TurnBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: InscryptionAPI.Encounters.TurnBuilder`1
  commentId: T:InscryptionAPI.Encounters.TurnBuilder`1
  name: TurnBuilder<T>
  nameWithType: TurnBuilder<T>
  fullName: InscryptionAPI.Encounters.TurnBuilder<T>
  nameWithType.vb: TurnBuilder(Of T)
  fullName.vb: InscryptionAPI.Encounters.TurnBuilder(Of T)
  name.vb: TurnBuilder(Of T)
  spec.csharp:
  - uid: InscryptionAPI.Encounters.TurnBuilder`1
    name: TurnBuilder
    nameWithType: TurnBuilder
    fullName: InscryptionAPI.Encounters.TurnBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: InscryptionAPI.Encounters.TurnBuilder`1
    name: TurnBuilder
    nameWithType: TurnBuilder
    fullName: InscryptionAPI.Encounters.TurnBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: InscryptionAPI.Encounters.TurnExtensions.Build*
  commentId: Overload:InscryptionAPI.Encounters.TurnExtensions.Build
  name: Build
  nameWithType: TurnExtensions.Build
  fullName: InscryptionAPI.Encounters.TurnExtensions.Build
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
