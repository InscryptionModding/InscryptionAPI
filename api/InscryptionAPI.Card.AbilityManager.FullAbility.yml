### YamlMime:ManagedReference
items:
- uid: InscryptionAPI.Card.AbilityManager.FullAbility
  commentId: T:InscryptionAPI.Card.AbilityManager.FullAbility
  id: AbilityManager.FullAbility
  parent: InscryptionAPI.Card
  children:
  - InscryptionAPI.Card.AbilityManager.FullAbility.#ctor(DiskCardGame.Ability,DiskCardGame.AbilityInfo,Type,UnityEngine.Texture)
  - InscryptionAPI.Card.AbilityManager.FullAbility.AbilityBehavior
  - InscryptionAPI.Card.AbilityManager.FullAbility.Clone
  - InscryptionAPI.Card.AbilityManager.FullAbility.CustomFlippedTexture
  - InscryptionAPI.Card.AbilityManager.FullAbility.Id
  - InscryptionAPI.Card.AbilityManager.FullAbility.Info
  - InscryptionAPI.Card.AbilityManager.FullAbility.Texture
  langs:
  - csharp
  - vb
  name: AbilityManager.FullAbility
  nameWithType: AbilityManager.FullAbility
  fullName: InscryptionAPI.Card.AbilityManager.FullAbility
  type: Class
  source:
    remote:
      path: InscryptionAPI/Card/AbilityManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: FullAbility
    path: ../InscryptionAPI/Card/AbilityManager.cs
    startLine: 15
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  syntax:
    content: public class FullAbility
    content.vb: Public Class FullAbility
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - InscryptionAPI.Card.AbilityManager.FullAbility.InscryptionAPI.Card.AbilityExtensions.SetIcon(UnityEngine.Texture2D)
  - InscryptionAPI.Card.AbilityManager.FullAbility.InscryptionAPI.Card.AbilityExtensions.SetCustomFlippedTexture(UnityEngine.Texture2D)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: InscryptionAPI.Card.AbilityManager.FullAbility.Id
  commentId: F:InscryptionAPI.Card.AbilityManager.FullAbility.Id
  id: Id
  parent: InscryptionAPI.Card.AbilityManager.FullAbility
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: AbilityManager.FullAbility.Id
  fullName: InscryptionAPI.Card.AbilityManager.FullAbility.Id
  type: Field
  source:
    remote:
      path: InscryptionAPI/Card/AbilityManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: Id
    path: ../InscryptionAPI/Card/AbilityManager.cs
    startLine: 17
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  syntax:
    content: public readonly Ability Id
    return:
      type: DiskCardGame.Ability
    content.vb: Public ReadOnly Id As Ability
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: InscryptionAPI.Card.AbilityManager.FullAbility.Info
  commentId: F:InscryptionAPI.Card.AbilityManager.FullAbility.Info
  id: Info
  parent: InscryptionAPI.Card.AbilityManager.FullAbility
  langs:
  - csharp
  - vb
  name: Info
  nameWithType: AbilityManager.FullAbility.Info
  fullName: InscryptionAPI.Card.AbilityManager.FullAbility.Info
  type: Field
  source:
    remote:
      path: InscryptionAPI/Card/AbilityManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: Info
    path: ../InscryptionAPI/Card/AbilityManager.cs
    startLine: 18
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  syntax:
    content: public readonly AbilityInfo Info
    return:
      type: DiskCardGame.AbilityInfo
    content.vb: Public ReadOnly Info As AbilityInfo
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: InscryptionAPI.Card.AbilityManager.FullAbility.AbilityBehavior
  commentId: F:InscryptionAPI.Card.AbilityManager.FullAbility.AbilityBehavior
  id: AbilityBehavior
  parent: InscryptionAPI.Card.AbilityManager.FullAbility
  langs:
  - csharp
  - vb
  name: AbilityBehavior
  nameWithType: AbilityManager.FullAbility.AbilityBehavior
  fullName: InscryptionAPI.Card.AbilityManager.FullAbility.AbilityBehavior
  type: Field
  source:
    remote:
      path: InscryptionAPI/Card/AbilityManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: AbilityBehavior
    path: ../InscryptionAPI/Card/AbilityManager.cs
    startLine: 19
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  syntax:
    content: public readonly Type AbilityBehavior
    return:
      type: Type
    content.vb: Public ReadOnly AbilityBehavior As Type
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: InscryptionAPI.Card.AbilityManager.FullAbility.Texture
  commentId: P:InscryptionAPI.Card.AbilityManager.FullAbility.Texture
  id: Texture
  parent: InscryptionAPI.Card.AbilityManager.FullAbility
  langs:
  - csharp
  - vb
  name: Texture
  nameWithType: AbilityManager.FullAbility.Texture
  fullName: InscryptionAPI.Card.AbilityManager.FullAbility.Texture
  type: Property
  source:
    remote:
      path: InscryptionAPI/Card/AbilityManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: Texture
    path: ../InscryptionAPI/Card/AbilityManager.cs
    startLine: 20
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  syntax:
    content: public Texture Texture { get; }
    parameters: []
    return:
      type: UnityEngine.Texture
    content.vb: Public ReadOnly Property Texture As Texture
  overload: InscryptionAPI.Card.AbilityManager.FullAbility.Texture*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: InscryptionAPI.Card.AbilityManager.FullAbility.CustomFlippedTexture
  commentId: P:InscryptionAPI.Card.AbilityManager.FullAbility.CustomFlippedTexture
  id: CustomFlippedTexture
  parent: InscryptionAPI.Card.AbilityManager.FullAbility
  langs:
  - csharp
  - vb
  name: CustomFlippedTexture
  nameWithType: AbilityManager.FullAbility.CustomFlippedTexture
  fullName: InscryptionAPI.Card.AbilityManager.FullAbility.CustomFlippedTexture
  type: Property
  source:
    remote:
      path: InscryptionAPI/Card/AbilityManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: CustomFlippedTexture
    path: ../InscryptionAPI/Card/AbilityManager.cs
    startLine: 21
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  syntax:
    content: public Texture CustomFlippedTexture { get; }
    parameters: []
    return:
      type: UnityEngine.Texture
    content.vb: Public ReadOnly Property CustomFlippedTexture As Texture
  overload: InscryptionAPI.Card.AbilityManager.FullAbility.CustomFlippedTexture*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: InscryptionAPI.Card.AbilityManager.FullAbility.#ctor(DiskCardGame.Ability,DiskCardGame.AbilityInfo,Type,UnityEngine.Texture)
  commentId: M:InscryptionAPI.Card.AbilityManager.FullAbility.#ctor(DiskCardGame.Ability,DiskCardGame.AbilityInfo,Type,UnityEngine.Texture)
  id: '#ctor(DiskCardGame.Ability,DiskCardGame.AbilityInfo,Type,UnityEngine.Texture)'
  parent: InscryptionAPI.Card.AbilityManager.FullAbility
  langs:
  - csharp
  - vb
  name: FullAbility(Ability, AbilityInfo, Type, Texture)
  nameWithType: AbilityManager.FullAbility.FullAbility(Ability, AbilityInfo, Type, Texture)
  fullName: InscryptionAPI.Card.AbilityManager.FullAbility.FullAbility(DiskCardGame.Ability, DiskCardGame.AbilityInfo, Type, UnityEngine.Texture)
  type: Constructor
  source:
    remote:
      path: InscryptionAPI/Card/AbilityManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: .ctor
    path: ../InscryptionAPI/Card/AbilityManager.cs
    startLine: 23
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  syntax:
    content: public FullAbility(Ability id, AbilityInfo info, Type behaviour, Texture texture)
    parameters:
    - id: id
      type: DiskCardGame.Ability
    - id: info
      type: DiskCardGame.AbilityInfo
    - id: behaviour
      type: Type
    - id: texture
      type: UnityEngine.Texture
    content.vb: Public Sub New(id As Ability, info As AbilityInfo, behaviour As Type, texture As Texture)
  overload: InscryptionAPI.Card.AbilityManager.FullAbility.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: InscryptionAPI.Card.AbilityManager.FullAbility.Clone
  commentId: M:InscryptionAPI.Card.AbilityManager.FullAbility.Clone
  id: Clone
  parent: InscryptionAPI.Card.AbilityManager.FullAbility
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: AbilityManager.FullAbility.Clone()
  fullName: InscryptionAPI.Card.AbilityManager.FullAbility.Clone()
  type: Method
  source:
    remote:
      path: InscryptionAPI/Card/AbilityManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: Clone
    path: ../InscryptionAPI/Card/AbilityManager.cs
    startLine: 33
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Card
  syntax:
    content: public AbilityManager.FullAbility Clone()
    return:
      type: InscryptionAPI.Card.AbilityManager.FullAbility
    content.vb: Public Function Clone As AbilityManager.FullAbility
  overload: InscryptionAPI.Card.AbilityManager.FullAbility.Clone*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: InscryptionAPI.Card
  commentId: N:InscryptionAPI.Card
  name: InscryptionAPI.Card
  nameWithType: InscryptionAPI.Card
  fullName: InscryptionAPI.Card
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InscryptionAPI.Card.AbilityManager.FullAbility.InscryptionAPI.Card.AbilityExtensions.SetIcon(UnityEngine.Texture2D)
  commentId: M:InscryptionAPI.Card.AbilityExtensions.SetIcon(InscryptionAPI.Card.AbilityManager.FullAbility,UnityEngine.Texture2D)
  parent: InscryptionAPI.Card.AbilityExtensions
  definition: InscryptionAPI.Card.AbilityExtensions.SetIcon(InscryptionAPI.Card.AbilityManager.FullAbility,UnityEngine.Texture2D)
  name: SetIcon(Texture2D)
  nameWithType: AbilityExtensions.SetIcon(Texture2D)
  fullName: InscryptionAPI.Card.AbilityExtensions.SetIcon(UnityEngine.Texture2D)
  spec.csharp:
  - uid: InscryptionAPI.Card.AbilityExtensions.SetIcon(UnityEngine.Texture2D)
    name: SetIcon
    nameWithType: AbilityExtensions.SetIcon
    fullName: InscryptionAPI.Card.AbilityExtensions.SetIcon
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Texture2D
    name: Texture2D
    nameWithType: Texture2D
    fullName: UnityEngine.Texture2D
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InscryptionAPI.Card.AbilityExtensions.SetIcon(UnityEngine.Texture2D)
    name: SetIcon
    nameWithType: AbilityExtensions.SetIcon
    fullName: InscryptionAPI.Card.AbilityExtensions.SetIcon
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Texture2D
    name: Texture2D
    nameWithType: Texture2D
    fullName: UnityEngine.Texture2D
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InscryptionAPI.Card.AbilityManager.FullAbility.InscryptionAPI.Card.AbilityExtensions.SetCustomFlippedTexture(UnityEngine.Texture2D)
  commentId: M:InscryptionAPI.Card.AbilityExtensions.SetCustomFlippedTexture(InscryptionAPI.Card.AbilityManager.FullAbility,UnityEngine.Texture2D)
  parent: InscryptionAPI.Card.AbilityExtensions
  definition: InscryptionAPI.Card.AbilityExtensions.SetCustomFlippedTexture(InscryptionAPI.Card.AbilityManager.FullAbility,UnityEngine.Texture2D)
  name: SetCustomFlippedTexture(Texture2D)
  nameWithType: AbilityExtensions.SetCustomFlippedTexture(Texture2D)
  fullName: InscryptionAPI.Card.AbilityExtensions.SetCustomFlippedTexture(UnityEngine.Texture2D)
  spec.csharp:
  - uid: InscryptionAPI.Card.AbilityExtensions.SetCustomFlippedTexture(UnityEngine.Texture2D)
    name: SetCustomFlippedTexture
    nameWithType: AbilityExtensions.SetCustomFlippedTexture
    fullName: InscryptionAPI.Card.AbilityExtensions.SetCustomFlippedTexture
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Texture2D
    name: Texture2D
    nameWithType: Texture2D
    fullName: UnityEngine.Texture2D
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InscryptionAPI.Card.AbilityExtensions.SetCustomFlippedTexture(UnityEngine.Texture2D)
    name: SetCustomFlippedTexture
    nameWithType: AbilityExtensions.SetCustomFlippedTexture
    fullName: InscryptionAPI.Card.AbilityExtensions.SetCustomFlippedTexture
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Texture2D
    name: Texture2D
    nameWithType: Texture2D
    fullName: UnityEngine.Texture2D
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: InscryptionAPI.Card.AbilityExtensions.SetIcon(InscryptionAPI.Card.AbilityManager.FullAbility,UnityEngine.Texture2D)
  commentId: M:InscryptionAPI.Card.AbilityExtensions.SetIcon(InscryptionAPI.Card.AbilityManager.FullAbility,UnityEngine.Texture2D)
  isExternal: true
  name: SetIcon(AbilityManager.FullAbility, Texture2D)
  nameWithType: AbilityExtensions.SetIcon(AbilityManager.FullAbility, Texture2D)
  fullName: InscryptionAPI.Card.AbilityExtensions.SetIcon(InscryptionAPI.Card.AbilityManager.FullAbility, UnityEngine.Texture2D)
  spec.csharp:
  - uid: InscryptionAPI.Card.AbilityExtensions.SetIcon(InscryptionAPI.Card.AbilityManager.FullAbility,UnityEngine.Texture2D)
    name: SetIcon
    nameWithType: AbilityExtensions.SetIcon
    fullName: InscryptionAPI.Card.AbilityExtensions.SetIcon
  - name: (
    nameWithType: (
    fullName: (
  - uid: InscryptionAPI.Card.AbilityManager.FullAbility
    name: AbilityManager.FullAbility
    nameWithType: AbilityManager.FullAbility
    fullName: InscryptionAPI.Card.AbilityManager.FullAbility
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Texture2D
    name: Texture2D
    nameWithType: Texture2D
    fullName: UnityEngine.Texture2D
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InscryptionAPI.Card.AbilityExtensions.SetIcon(InscryptionAPI.Card.AbilityManager.FullAbility,UnityEngine.Texture2D)
    name: SetIcon
    nameWithType: AbilityExtensions.SetIcon
    fullName: InscryptionAPI.Card.AbilityExtensions.SetIcon
  - name: (
    nameWithType: (
    fullName: (
  - uid: InscryptionAPI.Card.AbilityManager.FullAbility
    name: AbilityManager.FullAbility
    nameWithType: AbilityManager.FullAbility
    fullName: InscryptionAPI.Card.AbilityManager.FullAbility
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Texture2D
    name: Texture2D
    nameWithType: Texture2D
    fullName: UnityEngine.Texture2D
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InscryptionAPI.Card.AbilityExtensions
  commentId: T:InscryptionAPI.Card.AbilityExtensions
  parent: InscryptionAPI.Card
  name: AbilityExtensions
  nameWithType: AbilityExtensions
  fullName: InscryptionAPI.Card.AbilityExtensions
- uid: InscryptionAPI.Card.AbilityExtensions.SetCustomFlippedTexture(InscryptionAPI.Card.AbilityManager.FullAbility,UnityEngine.Texture2D)
  commentId: M:InscryptionAPI.Card.AbilityExtensions.SetCustomFlippedTexture(InscryptionAPI.Card.AbilityManager.FullAbility,UnityEngine.Texture2D)
  isExternal: true
  name: SetCustomFlippedTexture(AbilityManager.FullAbility, Texture2D)
  nameWithType: AbilityExtensions.SetCustomFlippedTexture(AbilityManager.FullAbility, Texture2D)
  fullName: InscryptionAPI.Card.AbilityExtensions.SetCustomFlippedTexture(InscryptionAPI.Card.AbilityManager.FullAbility, UnityEngine.Texture2D)
  spec.csharp:
  - uid: InscryptionAPI.Card.AbilityExtensions.SetCustomFlippedTexture(InscryptionAPI.Card.AbilityManager.FullAbility,UnityEngine.Texture2D)
    name: SetCustomFlippedTexture
    nameWithType: AbilityExtensions.SetCustomFlippedTexture
    fullName: InscryptionAPI.Card.AbilityExtensions.SetCustomFlippedTexture
  - name: (
    nameWithType: (
    fullName: (
  - uid: InscryptionAPI.Card.AbilityManager.FullAbility
    name: AbilityManager.FullAbility
    nameWithType: AbilityManager.FullAbility
    fullName: InscryptionAPI.Card.AbilityManager.FullAbility
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Texture2D
    name: Texture2D
    nameWithType: Texture2D
    fullName: UnityEngine.Texture2D
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InscryptionAPI.Card.AbilityExtensions.SetCustomFlippedTexture(InscryptionAPI.Card.AbilityManager.FullAbility,UnityEngine.Texture2D)
    name: SetCustomFlippedTexture
    nameWithType: AbilityExtensions.SetCustomFlippedTexture
    fullName: InscryptionAPI.Card.AbilityExtensions.SetCustomFlippedTexture
  - name: (
    nameWithType: (
    fullName: (
  - uid: InscryptionAPI.Card.AbilityManager.FullAbility
    name: AbilityManager.FullAbility
    nameWithType: AbilityManager.FullAbility
    fullName: InscryptionAPI.Card.AbilityManager.FullAbility
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Texture2D
    name: Texture2D
    nameWithType: Texture2D
    fullName: UnityEngine.Texture2D
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DiskCardGame.Ability
  commentId: T:DiskCardGame.Ability
  parent: DiskCardGame
  isExternal: true
  name: Ability
  nameWithType: Ability
  fullName: DiskCardGame.Ability
- uid: DiskCardGame
  commentId: N:DiskCardGame
  isExternal: true
  name: DiskCardGame
  nameWithType: DiskCardGame
  fullName: DiskCardGame
- uid: DiskCardGame.AbilityInfo
  commentId: T:DiskCardGame.AbilityInfo
  parent: DiskCardGame
  isExternal: true
  name: AbilityInfo
  nameWithType: AbilityInfo
  fullName: DiskCardGame.AbilityInfo
- uid: Type
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: Type
- uid: InscryptionAPI.Card.AbilityManager.FullAbility.Texture*
  commentId: Overload:InscryptionAPI.Card.AbilityManager.FullAbility.Texture
  name: Texture
  nameWithType: AbilityManager.FullAbility.Texture
  fullName: InscryptionAPI.Card.AbilityManager.FullAbility.Texture
- uid: UnityEngine.Texture
  commentId: T:UnityEngine.Texture
  parent: UnityEngine
  isExternal: true
  name: Texture
  nameWithType: Texture
  fullName: UnityEngine.Texture
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: InscryptionAPI.Card.AbilityManager.FullAbility.CustomFlippedTexture*
  commentId: Overload:InscryptionAPI.Card.AbilityManager.FullAbility.CustomFlippedTexture
  name: CustomFlippedTexture
  nameWithType: AbilityManager.FullAbility.CustomFlippedTexture
  fullName: InscryptionAPI.Card.AbilityManager.FullAbility.CustomFlippedTexture
- uid: InscryptionAPI.Card.AbilityManager.FullAbility.#ctor*
  commentId: Overload:InscryptionAPI.Card.AbilityManager.FullAbility.#ctor
  name: FullAbility
  nameWithType: AbilityManager.FullAbility.FullAbility
  fullName: InscryptionAPI.Card.AbilityManager.FullAbility.FullAbility
- uid: InscryptionAPI.Card.AbilityManager.FullAbility.Clone*
  commentId: Overload:InscryptionAPI.Card.AbilityManager.FullAbility.Clone
  name: Clone
  nameWithType: AbilityManager.FullAbility.Clone
  fullName: InscryptionAPI.Card.AbilityManager.FullAbility.Clone
- uid: InscryptionAPI.Card.AbilityManager.FullAbility
  commentId: T:InscryptionAPI.Card.AbilityManager.FullAbility
  parent: InscryptionAPI.Card
  name: AbilityManager.FullAbility
  nameWithType: AbilityManager.FullAbility
  fullName: InscryptionAPI.Card.AbilityManager.FullAbility
