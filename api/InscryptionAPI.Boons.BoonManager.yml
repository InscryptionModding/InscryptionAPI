### YamlMime:ManagedReference
items:
- uid: InscryptionAPI.Boons.BoonManager
  commentId: T:InscryptionAPI.Boons.BoonManager
  id: BoonManager
  parent: InscryptionAPI.Boons
  children:
  - InscryptionAPI.Boons.BoonManager.ActivatePreCombatBoons(System.Collections.IEnumerator,DiskCardGame.BoonsHandler)
  - InscryptionAPI.Boons.BoonManager.AddBoon(DiskCardGame.BoonData.Type)
  - InscryptionAPI.Boons.BoonManager.AllBoonsCopy
  - InscryptionAPI.Boons.BoonManager.BaseGameBoons
  - InscryptionAPI.Boons.BoonManager.ClearBoons
  - InscryptionAPI.Boons.BoonManager.ConstructPageData(List{DiskCardGame.RuleBookPageInfo}@,DiskCardGame.RuleBookInfo,DiskCardGame.AbilityMetaCategory)
  - InscryptionAPI.Boons.BoonManager.get_Boons(List{DiskCardGame.BoonData}@,DiskCardGame.DeckInfo)
  - InscryptionAPI.Boons.BoonManager.LoadBoons(DiskCardGame.DeckInfo)
  - InscryptionAPI.Boons.BoonManager.New(System.String,System.String,Type,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean)
  - InscryptionAPI.Boons.BoonManager.New(System.String,System.String,Type,System.String,UnityEngine.Texture,UnityEngine.Texture,System.Boolean,System.Boolean,System.Boolean)
  - InscryptionAPI.Boons.BoonManager.New``1(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean)
  - InscryptionAPI.Boons.BoonManager.New``1(System.String,System.String,System.String,UnityEngine.Texture,UnityEngine.Texture,System.Boolean,System.Boolean,System.Boolean)
  - InscryptionAPI.Boons.BoonManager.NewBoons
  - InscryptionAPI.Boons.BoonManager.Postfix(System.Collections.IEnumerator)
  - InscryptionAPI.Boons.BoonManager.SyncCardList
  langs:
  - csharp
  - vb
  name: BoonManager
  nameWithType: BoonManager
  fullName: InscryptionAPI.Boons.BoonManager
  type: Class
  source:
    remote:
      path: InscryptionAPI/Boons/BoonManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: BoonManager
    path: ../InscryptionAPI/Boons/BoonManager.cs
    startLine: 10
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: >-
      [HarmonyPatch]

      public static class BoonManager
    content.vb: >-
      <HarmonyPatch>

      Public Module BoonManager
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: HarmonyLib.HarmonyPatch
    ctor: HarmonyLib.HarmonyPatch.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: InscryptionAPI.Boons.BoonManager.BaseGameBoons
  commentId: F:InscryptionAPI.Boons.BoonManager.BaseGameBoons
  id: BaseGameBoons
  parent: InscryptionAPI.Boons.BoonManager
  langs:
  - csharp
  - vb
  name: BaseGameBoons
  nameWithType: BoonManager.BaseGameBoons
  fullName: InscryptionAPI.Boons.BoonManager.BaseGameBoons
  type: Field
  source:
    remote:
      path: InscryptionAPI/Boons/BoonManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: BaseGameBoons
    path: ../InscryptionAPI/Boons/BoonManager.cs
    startLine: 13
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public static readonly ReadOnlyCollection<BoonData> BaseGameBoons
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{DiskCardGame.BoonData}
    content.vb: Public Shared ReadOnly BaseGameBoons As ReadOnlyCollection(Of BoonData)
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: InscryptionAPI.Boons.BoonManager.NewBoons
  commentId: F:InscryptionAPI.Boons.BoonManager.NewBoons
  id: NewBoons
  parent: InscryptionAPI.Boons.BoonManager
  langs:
  - csharp
  - vb
  name: NewBoons
  nameWithType: BoonManager.NewBoons
  fullName: InscryptionAPI.Boons.BoonManager.NewBoons
  type: Field
  source:
    remote:
      path: InscryptionAPI/Boons/BoonManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: NewBoons
    path: ../InscryptionAPI/Boons/BoonManager.cs
    startLine: 14
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public static readonly ObservableCollection<BoonManager.FullBoon> NewBoons
    return:
      type: System.Collections.ObjectModel.ObservableCollection{InscryptionAPI.Boons.BoonManager.FullBoon}
    content.vb: Public Shared ReadOnly NewBoons As ObservableCollection(Of BoonManager.FullBoon)
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: InscryptionAPI.Boons.BoonManager.AllBoonsCopy
  commentId: P:InscryptionAPI.Boons.BoonManager.AllBoonsCopy
  id: AllBoonsCopy
  parent: InscryptionAPI.Boons.BoonManager
  langs:
  - csharp
  - vb
  name: AllBoonsCopy
  nameWithType: BoonManager.AllBoonsCopy
  fullName: InscryptionAPI.Boons.BoonManager.AllBoonsCopy
  type: Property
  source:
    remote:
      path: InscryptionAPI/Boons/BoonManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: AllBoonsCopy
    path: ../InscryptionAPI/Boons/BoonManager.cs
    startLine: 15
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public static List<BoonData> AllBoonsCopy { get; }
    parameters: []
    return:
      type: List{DiskCardGame.BoonData}
    content.vb: Public Shared ReadOnly Property AllBoonsCopy As List(Of BoonData)
  overload: InscryptionAPI.Boons.BoonManager.AllBoonsCopy*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: InscryptionAPI.Boons.BoonManager.New(System.String,System.String,Type,System.String,UnityEngine.Texture,UnityEngine.Texture,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:InscryptionAPI.Boons.BoonManager.New(System.String,System.String,Type,System.String,UnityEngine.Texture,UnityEngine.Texture,System.Boolean,System.Boolean,System.Boolean)
  id: New(System.String,System.String,Type,System.String,UnityEngine.Texture,UnityEngine.Texture,System.Boolean,System.Boolean,System.Boolean)
  parent: InscryptionAPI.Boons.BoonManager
  langs:
  - csharp
  - vb
  name: New(String, String, Type, String, Texture, Texture, Boolean, Boolean, Boolean)
  nameWithType: BoonManager.New(String, String, Type, String, Texture, Texture, Boolean, Boolean, Boolean)
  fullName: InscryptionAPI.Boons.BoonManager.New(System.String, System.String, Type, System.String, UnityEngine.Texture, UnityEngine.Texture, System.Boolean, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: New
    path: ../InscryptionAPI/Boons/BoonManager.cs
    startLine: 17
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public static BoonData.Type New(string guid, string name, Type boonHandlerType, string rulebookDescription, Texture icon, Texture cardArt, bool stackable = true, bool appearInLeshyTrials = true, bool appearInRulebook = true)
    parameters:
    - id: guid
      type: System.String
    - id: name
      type: System.String
    - id: boonHandlerType
      type: Type
    - id: rulebookDescription
      type: System.String
    - id: icon
      type: UnityEngine.Texture
    - id: cardArt
      type: UnityEngine.Texture
    - id: stackable
      type: System.Boolean
    - id: appearInLeshyTrials
      type: System.Boolean
    - id: appearInRulebook
      type: System.Boolean
    return:
      type: DiskCardGame.BoonData.Type
    content.vb: Public Shared Function New(guid As String, name As String, boonHandlerType As Type, rulebookDescription As String, icon As Texture, cardArt As Texture, stackable As Boolean = True, appearInLeshyTrials As Boolean = True, appearInRulebook As Boolean = True) As BoonData.Type
  overload: InscryptionAPI.Boons.BoonManager.New*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Boons.BoonManager.New``1(System.String,System.String,System.String,UnityEngine.Texture,UnityEngine.Texture,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:InscryptionAPI.Boons.BoonManager.New``1(System.String,System.String,System.String,UnityEngine.Texture,UnityEngine.Texture,System.Boolean,System.Boolean,System.Boolean)
  id: New``1(System.String,System.String,System.String,UnityEngine.Texture,UnityEngine.Texture,System.Boolean,System.Boolean,System.Boolean)
  parent: InscryptionAPI.Boons.BoonManager
  langs:
  - csharp
  - vb
  name: New<T>(String, String, String, Texture, Texture, Boolean, Boolean, Boolean)
  nameWithType: BoonManager.New<T>(String, String, String, Texture, Texture, Boolean, Boolean, Boolean)
  fullName: InscryptionAPI.Boons.BoonManager.New<T>(System.String, System.String, System.String, UnityEngine.Texture, UnityEngine.Texture, System.Boolean, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: New
    path: ../InscryptionAPI/Boons/BoonManager.cs
    startLine: 37
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: >-
      public static BoonData.Type New<T>(string guid, string name, string rulebookDescription, Texture icon, Texture cardArt, bool stackable = true, bool appearInLeshyTrials = true, bool appearInRulebook = true)
          where T : BoonBehaviour
    parameters:
    - id: guid
      type: System.String
    - id: name
      type: System.String
    - id: rulebookDescription
      type: System.String
    - id: icon
      type: UnityEngine.Texture
    - id: cardArt
      type: UnityEngine.Texture
    - id: stackable
      type: System.Boolean
    - id: appearInLeshyTrials
      type: System.Boolean
    - id: appearInRulebook
      type: System.Boolean
    typeParameters:
    - id: T
    return:
      type: DiskCardGame.BoonData.Type
    content.vb: Public Shared Function New(Of T As BoonBehaviour)(guid As String, name As String, rulebookDescription As String, icon As Texture, cardArt As Texture, stackable As Boolean = True, appearInLeshyTrials As Boolean = True, appearInRulebook As Boolean = True) As BoonData.Type
  overload: InscryptionAPI.Boons.BoonManager.New*
  nameWithType.vb: BoonManager.New(Of T)(String, String, String, Texture, Texture, Boolean, Boolean, Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionAPI.Boons.BoonManager.New(Of T)(System.String, System.String, System.String, UnityEngine.Texture, UnityEngine.Texture, System.Boolean, System.Boolean, System.Boolean)
  name.vb: New(Of T)(String, String, String, Texture, Texture, Boolean, Boolean, Boolean)
- uid: InscryptionAPI.Boons.BoonManager.New(System.String,System.String,Type,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:InscryptionAPI.Boons.BoonManager.New(System.String,System.String,Type,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean)
  id: New(System.String,System.String,Type,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean)
  parent: InscryptionAPI.Boons.BoonManager
  langs:
  - csharp
  - vb
  name: New(String, String, Type, String, String, String, Boolean, Boolean, Boolean)
  nameWithType: BoonManager.New(String, String, Type, String, String, String, Boolean, Boolean, Boolean)
  fullName: InscryptionAPI.Boons.BoonManager.New(System.String, System.String, Type, System.String, System.String, System.String, System.Boolean, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: New
    path: ../InscryptionAPI/Boons/BoonManager.cs
    startLine: 43
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public static BoonData.Type New(string guid, string name, Type boonHandlerType, string rulebookDescription, string pathToIcon, string pathToCardArt, bool stackable = true, bool appearInLeshyTrials = true, bool appearInRulebook = true)
    parameters:
    - id: guid
      type: System.String
    - id: name
      type: System.String
    - id: boonHandlerType
      type: Type
    - id: rulebookDescription
      type: System.String
    - id: pathToIcon
      type: System.String
    - id: pathToCardArt
      type: System.String
    - id: stackable
      type: System.Boolean
    - id: appearInLeshyTrials
      type: System.Boolean
    - id: appearInRulebook
      type: System.Boolean
    return:
      type: DiskCardGame.BoonData.Type
    content.vb: Public Shared Function New(guid As String, name As String, boonHandlerType As Type, rulebookDescription As String, pathToIcon As String, pathToCardArt As String, stackable As Boolean = True, appearInLeshyTrials As Boolean = True, appearInRulebook As Boolean = True) As BoonData.Type
  overload: InscryptionAPI.Boons.BoonManager.New*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Boons.BoonManager.New``1(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:InscryptionAPI.Boons.BoonManager.New``1(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean)
  id: New``1(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean)
  parent: InscryptionAPI.Boons.BoonManager
  langs:
  - csharp
  - vb
  name: New<T>(String, String, String, String, String, Boolean, Boolean, Boolean)
  nameWithType: BoonManager.New<T>(String, String, String, String, String, Boolean, Boolean, Boolean)
  fullName: InscryptionAPI.Boons.BoonManager.New<T>(System.String, System.String, System.String, System.String, System.String, System.Boolean, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: New
    path: ../InscryptionAPI/Boons/BoonManager.cs
    startLine: 49
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: >-
      public static BoonData.Type New<T>(string guid, string name, string rulebookDescription, string pathToIcon, string pathToCardArt, bool stackable = true, bool appearInLeshyTrials = true, bool appearInRulebook = true)
          where T : BoonBehaviour
    parameters:
    - id: guid
      type: System.String
    - id: name
      type: System.String
    - id: rulebookDescription
      type: System.String
    - id: pathToIcon
      type: System.String
    - id: pathToCardArt
      type: System.String
    - id: stackable
      type: System.Boolean
    - id: appearInLeshyTrials
      type: System.Boolean
    - id: appearInRulebook
      type: System.Boolean
    typeParameters:
    - id: T
    return:
      type: DiskCardGame.BoonData.Type
    content.vb: Public Shared Function New(Of T As BoonBehaviour)(guid As String, name As String, rulebookDescription As String, pathToIcon As String, pathToCardArt As String, stackable As Boolean = True, appearInLeshyTrials As Boolean = True, appearInRulebook As Boolean = True) As BoonData.Type
  overload: InscryptionAPI.Boons.BoonManager.New*
  nameWithType.vb: BoonManager.New(Of T)(String, String, String, String, String, Boolean, Boolean, Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionAPI.Boons.BoonManager.New(Of T)(System.String, System.String, System.String, System.String, System.String, System.Boolean, System.Boolean, System.Boolean)
  name.vb: New(Of T)(String, String, String, String, String, Boolean, Boolean, Boolean)
- uid: InscryptionAPI.Boons.BoonManager.SyncCardList
  commentId: M:InscryptionAPI.Boons.BoonManager.SyncCardList
  id: SyncCardList
  parent: InscryptionAPI.Boons.BoonManager
  langs:
  - csharp
  - vb
  name: SyncCardList()
  nameWithType: BoonManager.SyncCardList()
  fullName: InscryptionAPI.Boons.BoonManager.SyncCardList()
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: SyncCardList
    path: ../InscryptionAPI/Boons/BoonManager.cs
    startLine: 55
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: public static void SyncCardList()
    content.vb: Public Shared Sub SyncCardList
  overload: InscryptionAPI.Boons.BoonManager.SyncCardList*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Boons.BoonManager.ActivatePreCombatBoons(System.Collections.IEnumerator,DiskCardGame.BoonsHandler)
  commentId: M:InscryptionAPI.Boons.BoonManager.ActivatePreCombatBoons(System.Collections.IEnumerator,DiskCardGame.BoonsHandler)
  id: ActivatePreCombatBoons(System.Collections.IEnumerator,DiskCardGame.BoonsHandler)
  parent: InscryptionAPI.Boons.BoonManager
  langs:
  - csharp
  - vb
  name: ActivatePreCombatBoons(IEnumerator, BoonsHandler)
  nameWithType: BoonManager.ActivatePreCombatBoons(IEnumerator, BoonsHandler)
  fullName: InscryptionAPI.Boons.BoonManager.ActivatePreCombatBoons(System.Collections.IEnumerator, DiskCardGame.BoonsHandler)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: ActivatePreCombatBoons
    path: ../InscryptionAPI/Boons/BoonManager.cs
    startLine: 76
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: >-
      [HarmonyPatch(typeof(BoonsHandler), "ActivatePreCombatBoons")]

      [HarmonyPostfix]

      public static IEnumerator ActivatePreCombatBoons(IEnumerator result, BoonsHandler __instance)
    parameters:
    - id: result
      type: System.Collections.IEnumerator
    - id: __instance
      type: DiskCardGame.BoonsHandler
    return:
      type: System.Collections.IEnumerator
    content.vb: >-
      <HarmonyPatch(GetType(BoonsHandler), "ActivatePreCombatBoons")>

      <HarmonyPostfix>

      Public Shared Function ActivatePreCombatBoons(result As IEnumerator, __instance As BoonsHandler) As IEnumerator
  overload: InscryptionAPI.Boons.BoonManager.ActivatePreCombatBoons*
  attributes:
  - type: HarmonyLib.HarmonyPatch
    ctor: HarmonyLib.HarmonyPatch.#ctor(System.Type,System.String)
    arguments:
    - type: System.Type
      value: DiskCardGame.BoonsHandler
    - type: System.String
      value: ActivatePreCombatBoons
  - type: HarmonyLib.HarmonyPostfix
    ctor: HarmonyLib.HarmonyPostfix.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Boons.BoonManager.Postfix(System.Collections.IEnumerator)
  commentId: M:InscryptionAPI.Boons.BoonManager.Postfix(System.Collections.IEnumerator)
  id: Postfix(System.Collections.IEnumerator)
  parent: InscryptionAPI.Boons.BoonManager
  langs:
  - csharp
  - vb
  name: Postfix(IEnumerator)
  nameWithType: BoonManager.Postfix(IEnumerator)
  fullName: InscryptionAPI.Boons.BoonManager.Postfix(System.Collections.IEnumerator)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: Postfix
    path: ../InscryptionAPI/Boons/BoonManager.cs
    startLine: 119
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: >-
      [HarmonyPatch(typeof(TurnManager), "CleanupPhase")]

      [HarmonyPostfix]

      public static IEnumerator Postfix(IEnumerator result)
    parameters:
    - id: result
      type: System.Collections.IEnumerator
    return:
      type: System.Collections.IEnumerator
    content.vb: >-
      <HarmonyPatch(GetType(TurnManager), "CleanupPhase")>

      <HarmonyPostfix>

      Public Shared Function Postfix(result As IEnumerator) As IEnumerator
  overload: InscryptionAPI.Boons.BoonManager.Postfix*
  attributes:
  - type: HarmonyLib.HarmonyPatch
    ctor: HarmonyLib.HarmonyPatch.#ctor(System.Type,System.String)
    arguments:
    - type: System.Type
      value: DiskCardGame.TurnManager
    - type: System.String
      value: CleanupPhase
  - type: HarmonyLib.HarmonyPostfix
    ctor: HarmonyLib.HarmonyPostfix.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Boons.BoonManager.AddBoon(DiskCardGame.BoonData.Type)
  commentId: M:InscryptionAPI.Boons.BoonManager.AddBoon(DiskCardGame.BoonData.Type)
  id: AddBoon(DiskCardGame.BoonData.Type)
  parent: InscryptionAPI.Boons.BoonManager
  langs:
  - csharp
  - vb
  name: AddBoon(BoonData.Type)
  nameWithType: BoonManager.AddBoon(BoonData.Type)
  fullName: InscryptionAPI.Boons.BoonManager.AddBoon(DiskCardGame.BoonData.Type)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: AddBoon
    path: ../InscryptionAPI/Boons/BoonManager.cs
    startLine: 142
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: >-
      [HarmonyPatch(typeof(DeckInfo), "AddBoon")]

      [HarmonyPostfix]

      public static void AddBoon(BoonData.Type boonType)
    parameters:
    - id: boonType
      type: DiskCardGame.BoonData.Type
    content.vb: >-
      <HarmonyPatch(GetType(DeckInfo), "AddBoon")>

      <HarmonyPostfix>

      Public Shared Sub AddBoon(boonType As BoonData.Type)
  overload: InscryptionAPI.Boons.BoonManager.AddBoon*
  attributes:
  - type: HarmonyLib.HarmonyPatch
    ctor: HarmonyLib.HarmonyPatch.#ctor(System.Type,System.String)
    arguments:
    - type: System.Type
      value: DiskCardGame.DeckInfo
    - type: System.String
      value: AddBoon
  - type: HarmonyLib.HarmonyPostfix
    ctor: HarmonyLib.HarmonyPostfix.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Boons.BoonManager.ClearBoons
  commentId: M:InscryptionAPI.Boons.BoonManager.ClearBoons
  id: ClearBoons
  parent: InscryptionAPI.Boons.BoonManager
  langs:
  - csharp
  - vb
  name: ClearBoons()
  nameWithType: BoonManager.ClearBoons()
  fullName: InscryptionAPI.Boons.BoonManager.ClearBoons()
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: ClearBoons
    path: ../InscryptionAPI/Boons/BoonManager.cs
    startLine: 165
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: >-
      [HarmonyPatch(typeof(DeckInfo), "ClearBoons")]

      [HarmonyPostfix]

      public static void ClearBoons()
    content.vb: >-
      <HarmonyPatch(GetType(DeckInfo), "ClearBoons")>

      <HarmonyPostfix>

      Public Shared Sub ClearBoons
  overload: InscryptionAPI.Boons.BoonManager.ClearBoons*
  attributes:
  - type: HarmonyLib.HarmonyPatch
    ctor: HarmonyLib.HarmonyPatch.#ctor(System.Type,System.String)
    arguments:
    - type: System.Type
      value: DiskCardGame.DeckInfo
    - type: System.String
      value: ClearBoons
  - type: HarmonyLib.HarmonyPostfix
    ctor: HarmonyLib.HarmonyPostfix.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Boons.BoonManager.get_Boons(List{DiskCardGame.BoonData}@,DiskCardGame.DeckInfo)
  commentId: M:InscryptionAPI.Boons.BoonManager.get_Boons(List{DiskCardGame.BoonData}@,DiskCardGame.DeckInfo)
  id: get_Boons(List{DiskCardGame.BoonData}@,DiskCardGame.DeckInfo)
  parent: InscryptionAPI.Boons.BoonManager
  langs:
  - csharp
  - vb
  name: get_Boons(ref List<BoonData>, DeckInfo)
  nameWithType: BoonManager.get_Boons(ref List<BoonData>, DeckInfo)
  fullName: InscryptionAPI.Boons.BoonManager.get_Boons(ref List<DiskCardGame.BoonData>, DiskCardGame.DeckInfo)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: get_Boons
    path: ../InscryptionAPI/Boons/BoonManager.cs
    startLine: 172
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: >-
      [HarmonyPatch(typeof(DeckInfo), "get_Boons")]

      [HarmonyPostfix]

      public static void get_Boons(ref List<BoonData> __result, DeckInfo __instance)
    parameters:
    - id: __result
      type: List{DiskCardGame.BoonData}
    - id: __instance
      type: DiskCardGame.DeckInfo
    content.vb: >-
      <HarmonyPatch(GetType(DeckInfo), "get_Boons")>

      <HarmonyPostfix>

      Public Shared Sub get_Boons(ByRef __result As List(Of BoonData), __instance As DeckInfo)
  overload: InscryptionAPI.Boons.BoonManager.get_Boons*
  attributes:
  - type: HarmonyLib.HarmonyPatch
    ctor: HarmonyLib.HarmonyPatch.#ctor(System.Type,System.String)
    arguments:
    - type: System.Type
      value: DiskCardGame.DeckInfo
    - type: System.String
      value: get_Boons
  - type: HarmonyLib.HarmonyPostfix
    ctor: HarmonyLib.HarmonyPostfix.#ctor
    arguments: []
  nameWithType.vb: BoonManager.get_Boons(ByRef List(Of BoonData), DeckInfo)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionAPI.Boons.BoonManager.get_Boons(ByRef List(Of DiskCardGame.BoonData), DiskCardGame.DeckInfo)
  name.vb: get_Boons(ByRef List(Of BoonData), DeckInfo)
- uid: InscryptionAPI.Boons.BoonManager.LoadBoons(DiskCardGame.DeckInfo)
  commentId: M:InscryptionAPI.Boons.BoonManager.LoadBoons(DiskCardGame.DeckInfo)
  id: LoadBoons(DiskCardGame.DeckInfo)
  parent: InscryptionAPI.Boons.BoonManager
  langs:
  - csharp
  - vb
  name: LoadBoons(DeckInfo)
  nameWithType: BoonManager.LoadBoons(DeckInfo)
  fullName: InscryptionAPI.Boons.BoonManager.LoadBoons(DiskCardGame.DeckInfo)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: LoadBoons
    path: ../InscryptionAPI/Boons/BoonManager.cs
    startLine: 183
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: >-
      [HarmonyPatch(typeof(DeckInfo), "LoadBoons")]

      [HarmonyPostfix]

      public static void LoadBoons(DeckInfo __instance)
    parameters:
    - id: __instance
      type: DiskCardGame.DeckInfo
    content.vb: >-
      <HarmonyPatch(GetType(DeckInfo), "LoadBoons")>

      <HarmonyPostfix>

      Public Shared Sub LoadBoons(__instance As DeckInfo)
  overload: InscryptionAPI.Boons.BoonManager.LoadBoons*
  attributes:
  - type: HarmonyLib.HarmonyPatch
    ctor: HarmonyLib.HarmonyPatch.#ctor(System.Type,System.String)
    arguments:
    - type: System.Type
      value: DiskCardGame.DeckInfo
    - type: System.String
      value: LoadBoons
  - type: HarmonyLib.HarmonyPostfix
    ctor: HarmonyLib.HarmonyPostfix.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Boons.BoonManager.ConstructPageData(List{DiskCardGame.RuleBookPageInfo}@,DiskCardGame.RuleBookInfo,DiskCardGame.AbilityMetaCategory)
  commentId: M:InscryptionAPI.Boons.BoonManager.ConstructPageData(List{DiskCardGame.RuleBookPageInfo}@,DiskCardGame.RuleBookInfo,DiskCardGame.AbilityMetaCategory)
  id: ConstructPageData(List{DiskCardGame.RuleBookPageInfo}@,DiskCardGame.RuleBookInfo,DiskCardGame.AbilityMetaCategory)
  parent: InscryptionAPI.Boons.BoonManager
  langs:
  - csharp
  - vb
  name: ConstructPageData(ref List<RuleBookPageInfo>, RuleBookInfo, AbilityMetaCategory)
  nameWithType: BoonManager.ConstructPageData(ref List<RuleBookPageInfo>, RuleBookInfo, AbilityMetaCategory)
  fullName: InscryptionAPI.Boons.BoonManager.ConstructPageData(ref List<DiskCardGame.RuleBookPageInfo>, DiskCardGame.RuleBookInfo, DiskCardGame.AbilityMetaCategory)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Boons/BoonManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: ConstructPageData
    path: ../InscryptionAPI/Boons/BoonManager.cs
    startLine: 190
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Boons
  syntax:
    content: >-
      [HarmonyPatch(typeof(RuleBookInfo), "ConstructPageData")]

      [HarmonyPostfix]

      public static void ConstructPageData(ref List<RuleBookPageInfo> __result, RuleBookInfo __instance, AbilityMetaCategory metaCategory)
    parameters:
    - id: __result
      type: List{DiskCardGame.RuleBookPageInfo}
    - id: __instance
      type: DiskCardGame.RuleBookInfo
    - id: metaCategory
      type: DiskCardGame.AbilityMetaCategory
    content.vb: >-
      <HarmonyPatch(GetType(RuleBookInfo), "ConstructPageData")>

      <HarmonyPostfix>

      Public Shared Sub ConstructPageData(ByRef __result As List(Of RuleBookPageInfo), __instance As RuleBookInfo, metaCategory As AbilityMetaCategory)
  overload: InscryptionAPI.Boons.BoonManager.ConstructPageData*
  attributes:
  - type: HarmonyLib.HarmonyPatch
    ctor: HarmonyLib.HarmonyPatch.#ctor(System.Type,System.String)
    arguments:
    - type: System.Type
      value: DiskCardGame.RuleBookInfo
    - type: System.String
      value: ConstructPageData
  - type: HarmonyLib.HarmonyPostfix
    ctor: HarmonyLib.HarmonyPostfix.#ctor
    arguments: []
  nameWithType.vb: BoonManager.ConstructPageData(ByRef List(Of RuleBookPageInfo), RuleBookInfo, AbilityMetaCategory)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionAPI.Boons.BoonManager.ConstructPageData(ByRef List(Of DiskCardGame.RuleBookPageInfo), DiskCardGame.RuleBookInfo, DiskCardGame.AbilityMetaCategory)
  name.vb: ConstructPageData(ByRef List(Of RuleBookPageInfo), RuleBookInfo, AbilityMetaCategory)
references:
- uid: InscryptionAPI.Boons
  commentId: N:InscryptionAPI.Boons
  name: InscryptionAPI.Boons
  nameWithType: InscryptionAPI.Boons
  fullName: InscryptionAPI.Boons
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.ObjectModel.ReadOnlyCollection{DiskCardGame.BoonData}
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection{DiskCardGame.BoonData}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<BoonData>
  nameWithType: ReadOnlyCollection<BoonData>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<DiskCardGame.BoonData>
  nameWithType.vb: ReadOnlyCollection(Of BoonData)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of DiskCardGame.BoonData)
  name.vb: ReadOnlyCollection(Of BoonData)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DiskCardGame.BoonData
    name: BoonData
    nameWithType: BoonData
    fullName: DiskCardGame.BoonData
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DiskCardGame.BoonData
    name: BoonData
    nameWithType: BoonData
    fullName: DiskCardGame.BoonData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: ReadOnlyCollection<T>
  nameWithType: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  nameWithType.vb: ReadOnlyCollection(Of T)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)
  name.vb: ReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: System.Collections.ObjectModel.ObservableCollection{InscryptionAPI.Boons.BoonManager.FullBoon}
  commentId: T:System.Collections.ObjectModel.ObservableCollection{InscryptionAPI.Boons.BoonManager.FullBoon}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ObservableCollection`1
  name: ObservableCollection<BoonManager.FullBoon>
  nameWithType: ObservableCollection<BoonManager.FullBoon>
  fullName: System.Collections.ObjectModel.ObservableCollection<InscryptionAPI.Boons.BoonManager.FullBoon>
  nameWithType.vb: ObservableCollection(Of BoonManager.FullBoon)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of InscryptionAPI.Boons.BoonManager.FullBoon)
  name.vb: ObservableCollection(Of BoonManager.FullBoon)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InscryptionAPI.Boons.BoonManager.FullBoon
    name: BoonManager.FullBoon
    nameWithType: BoonManager.FullBoon
    fullName: InscryptionAPI.Boons.BoonManager.FullBoon
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InscryptionAPI.Boons.BoonManager.FullBoon
    name: BoonManager.FullBoon
    nameWithType: BoonManager.FullBoon
    fullName: InscryptionAPI.Boons.BoonManager.FullBoon
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection`1
  commentId: T:System.Collections.ObjectModel.ObservableCollection`1
  isExternal: true
  name: ObservableCollection<T>
  nameWithType: ObservableCollection<T>
  fullName: System.Collections.ObjectModel.ObservableCollection<T>
  nameWithType.vb: ObservableCollection(Of T)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of T)
  name.vb: ObservableCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: InscryptionAPI.Boons.BoonManager.AllBoonsCopy*
  commentId: Overload:InscryptionAPI.Boons.BoonManager.AllBoonsCopy
  name: AllBoonsCopy
  nameWithType: BoonManager.AllBoonsCopy
  fullName: InscryptionAPI.Boons.BoonManager.AllBoonsCopy
- uid: List{DiskCardGame.BoonData}
  commentId: '!:List{DiskCardGame.BoonData}'
  definition: List`1
  name: List<BoonData>
  nameWithType: List<BoonData>
  fullName: List<DiskCardGame.BoonData>
  nameWithType.vb: List(Of BoonData)
  fullName.vb: List(Of DiskCardGame.BoonData)
  name.vb: List(Of BoonData)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DiskCardGame.BoonData
    name: BoonData
    nameWithType: BoonData
    fullName: DiskCardGame.BoonData
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DiskCardGame.BoonData
    name: BoonData
    nameWithType: BoonData
    fullName: DiskCardGame.BoonData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: InscryptionAPI.Boons.BoonManager.New*
  commentId: Overload:InscryptionAPI.Boons.BoonManager.New
  name: New
  nameWithType: BoonManager.New
  fullName: InscryptionAPI.Boons.BoonManager.New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Type
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: Type
- uid: UnityEngine.Texture
  commentId: T:UnityEngine.Texture
  parent: UnityEngine
  isExternal: true
  name: Texture
  nameWithType: Texture
  fullName: UnityEngine.Texture
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: DiskCardGame.BoonData.Type
  commentId: T:DiskCardGame.BoonData.Type
  parent: DiskCardGame
  isExternal: true
  name: BoonData.Type
  nameWithType: BoonData.Type
  fullName: DiskCardGame.BoonData.Type
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: DiskCardGame
  commentId: N:DiskCardGame
  isExternal: true
  name: DiskCardGame
  nameWithType: DiskCardGame
  fullName: DiskCardGame
- uid: InscryptionAPI.Boons.BoonManager.SyncCardList*
  commentId: Overload:InscryptionAPI.Boons.BoonManager.SyncCardList
  name: SyncCardList
  nameWithType: BoonManager.SyncCardList
  fullName: InscryptionAPI.Boons.BoonManager.SyncCardList
- uid: InscryptionAPI.Boons.BoonManager.ActivatePreCombatBoons*
  commentId: Overload:InscryptionAPI.Boons.BoonManager.ActivatePreCombatBoons
  name: ActivatePreCombatBoons
  nameWithType: BoonManager.ActivatePreCombatBoons
  fullName: InscryptionAPI.Boons.BoonManager.ActivatePreCombatBoons
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: DiskCardGame.BoonsHandler
  commentId: T:DiskCardGame.BoonsHandler
  parent: DiskCardGame
  isExternal: true
  name: BoonsHandler
  nameWithType: BoonsHandler
  fullName: DiskCardGame.BoonsHandler
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: InscryptionAPI.Boons.BoonManager.Postfix*
  commentId: Overload:InscryptionAPI.Boons.BoonManager.Postfix
  name: Postfix
  nameWithType: BoonManager.Postfix
  fullName: InscryptionAPI.Boons.BoonManager.Postfix
- uid: InscryptionAPI.Boons.BoonManager.AddBoon*
  commentId: Overload:InscryptionAPI.Boons.BoonManager.AddBoon
  name: AddBoon
  nameWithType: BoonManager.AddBoon
  fullName: InscryptionAPI.Boons.BoonManager.AddBoon
- uid: InscryptionAPI.Boons.BoonManager.ClearBoons*
  commentId: Overload:InscryptionAPI.Boons.BoonManager.ClearBoons
  name: ClearBoons
  nameWithType: BoonManager.ClearBoons
  fullName: InscryptionAPI.Boons.BoonManager.ClearBoons
- uid: InscryptionAPI.Boons.BoonManager.get_Boons*
  commentId: Overload:InscryptionAPI.Boons.BoonManager.get_Boons
  name: get_Boons
  nameWithType: BoonManager.get_Boons
  fullName: InscryptionAPI.Boons.BoonManager.get_Boons
- uid: DiskCardGame.DeckInfo
  commentId: T:DiskCardGame.DeckInfo
  parent: DiskCardGame
  isExternal: true
  name: DeckInfo
  nameWithType: DeckInfo
  fullName: DiskCardGame.DeckInfo
- uid: InscryptionAPI.Boons.BoonManager.LoadBoons*
  commentId: Overload:InscryptionAPI.Boons.BoonManager.LoadBoons
  name: LoadBoons
  nameWithType: BoonManager.LoadBoons
  fullName: InscryptionAPI.Boons.BoonManager.LoadBoons
- uid: InscryptionAPI.Boons.BoonManager.ConstructPageData*
  commentId: Overload:InscryptionAPI.Boons.BoonManager.ConstructPageData
  name: ConstructPageData
  nameWithType: BoonManager.ConstructPageData
  fullName: InscryptionAPI.Boons.BoonManager.ConstructPageData
- uid: List{DiskCardGame.RuleBookPageInfo}
  commentId: '!:List{DiskCardGame.RuleBookPageInfo}'
  definition: List`1
  name: List<RuleBookPageInfo>
  nameWithType: List<RuleBookPageInfo>
  fullName: List<DiskCardGame.RuleBookPageInfo>
  nameWithType.vb: List(Of RuleBookPageInfo)
  fullName.vb: List(Of DiskCardGame.RuleBookPageInfo)
  name.vb: List(Of RuleBookPageInfo)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DiskCardGame.RuleBookPageInfo
    name: RuleBookPageInfo
    nameWithType: RuleBookPageInfo
    fullName: DiskCardGame.RuleBookPageInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DiskCardGame.RuleBookPageInfo
    name: RuleBookPageInfo
    nameWithType: RuleBookPageInfo
    fullName: DiskCardGame.RuleBookPageInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DiskCardGame.RuleBookInfo
  commentId: T:DiskCardGame.RuleBookInfo
  parent: DiskCardGame
  isExternal: true
  name: RuleBookInfo
  nameWithType: RuleBookInfo
  fullName: DiskCardGame.RuleBookInfo
- uid: DiskCardGame.AbilityMetaCategory
  commentId: T:DiskCardGame.AbilityMetaCategory
  parent: DiskCardGame
  isExternal: true
  name: AbilityMetaCategory
  nameWithType: AbilityMetaCategory
  fullName: DiskCardGame.AbilityMetaCategory
