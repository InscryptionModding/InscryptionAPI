### YamlMime:ManagedReference
items:
- uid: APIPlugin.CustomCard
  commentId: T:APIPlugin.CustomCard
  id: CustomCard
  parent: APIPlugin
  children:
  - APIPlugin.CustomCard.#ctor(System.String,List{APIPlugin.AbilityIdentifier},List{APIPlugin.SpecialAbilityIdentifier},APIPlugin.EvolveIdentifier,APIPlugin.IceCubeIdentifier,APIPlugin.TailIdentifier)
  - APIPlugin.CustomCard.abilities
  - APIPlugin.CustomCard.abilityIds
  - APIPlugin.CustomCard.AdjustCard(DiskCardGame.CardInfo,List{DiskCardGame.CardInfo})
  - APIPlugin.CustomCard.altTex
  - APIPlugin.CustomCard.animatedPortrait
  - APIPlugin.CustomCard.appearanceBehaviour
  - APIPlugin.CustomCard.baseAttack
  - APIPlugin.CustomCard.baseHealth
  - APIPlugin.CustomCard.bonesCost
  - APIPlugin.CustomCard.cardComplexity
  - APIPlugin.CustomCard.cards
  - APIPlugin.CustomCard.cost
  - APIPlugin.CustomCard.decals
  - APIPlugin.CustomCard.defaultEvolutionName
  - APIPlugin.CustomCard.description
  - APIPlugin.CustomCard.displayedName
  - APIPlugin.CustomCard.emissions
  - APIPlugin.CustomCard.emissionTex
  - APIPlugin.CustomCard.energyCost
  - APIPlugin.CustomCard.evolveIds
  - APIPlugin.CustomCard.evolveParams
  - APIPlugin.CustomCard.flipPortraitForStrafe
  - APIPlugin.CustomCard.gemsCost
  - APIPlugin.CustomCard.hideAttackAndHealth
  - APIPlugin.CustomCard.iceCubeIds
  - APIPlugin.CustomCard.iceCubeParams
  - APIPlugin.CustomCard.metaCategories
  - APIPlugin.CustomCard.name
  - APIPlugin.CustomCard.onePerDeck
  - APIPlugin.CustomCard.pixelTex
  - APIPlugin.CustomCard.specialAbilities
  - APIPlugin.CustomCard.specialAbilityIds
  - APIPlugin.CustomCard.specialStatIcon
  - APIPlugin.CustomCard.tailIds
  - APIPlugin.CustomCard.tailParams
  - APIPlugin.CustomCard.temple
  - APIPlugin.CustomCard.tex
  - APIPlugin.CustomCard.titleGraphic
  - APIPlugin.CustomCard.traits
  - APIPlugin.CustomCard.tribes
  langs:
  - csharp
  - vb
  name: CustomCard
  nameWithType: CustomCard
  fullName: APIPlugin.CustomCard
  type: Class
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomCard.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: CustomCard
    path: ../InscryptionAPI/Compatibility/CustomCard.cs
    startLine: 6
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public class CustomCard
    content.vb: Public Class CustomCard
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: APIPlugin.CustomCard.cards
  commentId: F:APIPlugin.CustomCard.cards
  id: cards
  parent: APIPlugin.CustomCard
  langs:
  - csharp
  - vb
  name: cards
  nameWithType: CustomCard.cards
  fullName: APIPlugin.CustomCard.cards
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomCard.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: cards
    path: ../InscryptionAPI/Compatibility/CustomCard.cs
    startLine: 9
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public static List<CustomCard> cards
    return:
      type: List{APIPlugin.CustomCard}
    content.vb: Public Shared cards As List(Of CustomCard)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: APIPlugin.CustomCard.abilityIds
  commentId: F:APIPlugin.CustomCard.abilityIds
  id: abilityIds
  parent: APIPlugin.CustomCard
  langs:
  - csharp
  - vb
  name: abilityIds
  nameWithType: CustomCard.abilityIds
  fullName: APIPlugin.CustomCard.abilityIds
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomCard.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: abilityIds
    path: ../InscryptionAPI/Compatibility/CustomCard.cs
    startLine: 11
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public static Dictionary<int, List<AbilityIdentifier>> abilityIds
    return:
      type: Dictionary{System.Int32,List{APIPlugin.AbilityIdentifier}}
    content.vb: Public Shared abilityIds As Dictionary(Of Integer, List(Of AbilityIdentifier))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: APIPlugin.CustomCard.specialAbilityIds
  commentId: F:APIPlugin.CustomCard.specialAbilityIds
  id: specialAbilityIds
  parent: APIPlugin.CustomCard
  langs:
  - csharp
  - vb
  name: specialAbilityIds
  nameWithType: CustomCard.specialAbilityIds
  fullName: APIPlugin.CustomCard.specialAbilityIds
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomCard.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: specialAbilityIds
    path: ../InscryptionAPI/Compatibility/CustomCard.cs
    startLine: 12
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public static Dictionary<int, List<SpecialAbilityIdentifier>> specialAbilityIds
    return:
      type: Dictionary{System.Int32,List{APIPlugin.SpecialAbilityIdentifier}}
    content.vb: Public Shared specialAbilityIds As Dictionary(Of Integer, List(Of SpecialAbilityIdentifier))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: APIPlugin.CustomCard.evolveIds
  commentId: F:APIPlugin.CustomCard.evolveIds
  id: evolveIds
  parent: APIPlugin.CustomCard
  langs:
  - csharp
  - vb
  name: evolveIds
  nameWithType: CustomCard.evolveIds
  fullName: APIPlugin.CustomCard.evolveIds
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomCard.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: evolveIds
    path: ../InscryptionAPI/Compatibility/CustomCard.cs
    startLine: 13
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public static Dictionary<int, EvolveIdentifier> evolveIds
    return:
      type: Dictionary{System.Int32,APIPlugin.EvolveIdentifier}
    content.vb: Public Shared evolveIds As Dictionary(Of Integer, EvolveIdentifier)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: APIPlugin.CustomCard.iceCubeIds
  commentId: F:APIPlugin.CustomCard.iceCubeIds
  id: iceCubeIds
  parent: APIPlugin.CustomCard
  langs:
  - csharp
  - vb
  name: iceCubeIds
  nameWithType: CustomCard.iceCubeIds
  fullName: APIPlugin.CustomCard.iceCubeIds
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomCard.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: iceCubeIds
    path: ../InscryptionAPI/Compatibility/CustomCard.cs
    startLine: 14
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public static Dictionary<int, IceCubeIdentifier> iceCubeIds
    return:
      type: Dictionary{System.Int32,APIPlugin.IceCubeIdentifier}
    content.vb: Public Shared iceCubeIds As Dictionary(Of Integer, IceCubeIdentifier)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: APIPlugin.CustomCard.tailIds
  commentId: F:APIPlugin.CustomCard.tailIds
  id: tailIds
  parent: APIPlugin.CustomCard
  langs:
  - csharp
  - vb
  name: tailIds
  nameWithType: CustomCard.tailIds
  fullName: APIPlugin.CustomCard.tailIds
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomCard.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: tailIds
    path: ../InscryptionAPI/Compatibility/CustomCard.cs
    startLine: 15
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public static Dictionary<int, TailIdentifier> tailIds
    return:
      type: Dictionary{System.Int32,APIPlugin.TailIdentifier}
    content.vb: Public Shared tailIds As Dictionary(Of Integer, TailIdentifier)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: APIPlugin.CustomCard.emissions
  commentId: F:APIPlugin.CustomCard.emissions
  id: emissions
  parent: APIPlugin.CustomCard
  langs:
  - csharp
  - vb
  name: emissions
  nameWithType: CustomCard.emissions
  fullName: APIPlugin.CustomCard.emissions
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomCard.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: emissions
    path: ../InscryptionAPI/Compatibility/CustomCard.cs
    startLine: 16
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public static Dictionary<string, Sprite> emissions
    return:
      type: Dictionary{System.String,UnityEngine.Sprite}
    content.vb: Public Shared emissions As Dictionary(Of String, Sprite)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: APIPlugin.CustomCard.name
  commentId: F:APIPlugin.CustomCard.name
  id: name
  parent: APIPlugin.CustomCard
  langs:
  - csharp
  - vb
  name: name
  nameWithType: CustomCard.name
  fullName: APIPlugin.CustomCard.name
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomCard.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: name
    path: ../InscryptionAPI/Compatibility/CustomCard.cs
    startLine: 18
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public string name
    return:
      type: System.String
    content.vb: Public name As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomCard.metaCategories
  commentId: F:APIPlugin.CustomCard.metaCategories
  id: metaCategories
  parent: APIPlugin.CustomCard
  langs:
  - csharp
  - vb
  name: metaCategories
  nameWithType: CustomCard.metaCategories
  fullName: APIPlugin.CustomCard.metaCategories
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomCard.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: metaCategories
    path: ../InscryptionAPI/Compatibility/CustomCard.cs
    startLine: 19
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public List<CardMetaCategory> metaCategories
    return:
      type: List{DiskCardGame.CardMetaCategory}
    content.vb: Public metaCategories As List(Of CardMetaCategory)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomCard.cardComplexity
  commentId: F:APIPlugin.CustomCard.cardComplexity
  id: cardComplexity
  parent: APIPlugin.CustomCard
  langs:
  - csharp
  - vb
  name: cardComplexity
  nameWithType: CustomCard.cardComplexity
  fullName: APIPlugin.CustomCard.cardComplexity
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomCard.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: cardComplexity
    path: ../InscryptionAPI/Compatibility/CustomCard.cs
    startLine: 20
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public CardComplexity? cardComplexity
    return:
      type: System.Nullable{DiskCardGame.CardComplexity}
    content.vb: Public cardComplexity As CardComplexity?
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomCard.temple
  commentId: F:APIPlugin.CustomCard.temple
  id: temple
  parent: APIPlugin.CustomCard
  langs:
  - csharp
  - vb
  name: temple
  nameWithType: CustomCard.temple
  fullName: APIPlugin.CustomCard.temple
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomCard.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: temple
    path: ../InscryptionAPI/Compatibility/CustomCard.cs
    startLine: 21
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public CardTemple? temple
    return:
      type: System.Nullable{CardTemple}
    content.vb: Public temple As CardTemple?
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomCard.displayedName
  commentId: F:APIPlugin.CustomCard.displayedName
  id: displayedName
  parent: APIPlugin.CustomCard
  langs:
  - csharp
  - vb
  name: displayedName
  nameWithType: CustomCard.displayedName
  fullName: APIPlugin.CustomCard.displayedName
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomCard.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: displayedName
    path: ../InscryptionAPI/Compatibility/CustomCard.cs
    startLine: 22
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public string displayedName
    return:
      type: System.String
    content.vb: Public displayedName As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomCard.baseAttack
  commentId: F:APIPlugin.CustomCard.baseAttack
  id: baseAttack
  parent: APIPlugin.CustomCard
  langs:
  - csharp
  - vb
  name: baseAttack
  nameWithType: CustomCard.baseAttack
  fullName: APIPlugin.CustomCard.baseAttack
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomCard.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: baseAttack
    path: ../InscryptionAPI/Compatibility/CustomCard.cs
    startLine: 23
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public int? baseAttack
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public baseAttack As Integer?
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomCard.baseHealth
  commentId: F:APIPlugin.CustomCard.baseHealth
  id: baseHealth
  parent: APIPlugin.CustomCard
  langs:
  - csharp
  - vb
  name: baseHealth
  nameWithType: CustomCard.baseHealth
  fullName: APIPlugin.CustomCard.baseHealth
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomCard.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: baseHealth
    path: ../InscryptionAPI/Compatibility/CustomCard.cs
    startLine: 24
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public int? baseHealth
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public baseHealth As Integer?
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomCard.description
  commentId: F:APIPlugin.CustomCard.description
  id: description
  parent: APIPlugin.CustomCard
  langs:
  - csharp
  - vb
  name: description
  nameWithType: CustomCard.description
  fullName: APIPlugin.CustomCard.description
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomCard.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: description
    path: ../InscryptionAPI/Compatibility/CustomCard.cs
    startLine: 25
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public string description
    return:
      type: System.String
    content.vb: Public description As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomCard.hideAttackAndHealth
  commentId: F:APIPlugin.CustomCard.hideAttackAndHealth
  id: hideAttackAndHealth
  parent: APIPlugin.CustomCard
  langs:
  - csharp
  - vb
  name: hideAttackAndHealth
  nameWithType: CustomCard.hideAttackAndHealth
  fullName: APIPlugin.CustomCard.hideAttackAndHealth
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomCard.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: hideAttackAndHealth
    path: ../InscryptionAPI/Compatibility/CustomCard.cs
    startLine: 26
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public bool? hideAttackAndHealth
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public hideAttackAndHealth As Boolean?
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomCard.cost
  commentId: F:APIPlugin.CustomCard.cost
  id: cost
  parent: APIPlugin.CustomCard
  langs:
  - csharp
  - vb
  name: cost
  nameWithType: CustomCard.cost
  fullName: APIPlugin.CustomCard.cost
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomCard.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: cost
    path: ../InscryptionAPI/Compatibility/CustomCard.cs
    startLine: 27
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public int? cost
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public cost As Integer?
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomCard.bonesCost
  commentId: F:APIPlugin.CustomCard.bonesCost
  id: bonesCost
  parent: APIPlugin.CustomCard
  langs:
  - csharp
  - vb
  name: bonesCost
  nameWithType: CustomCard.bonesCost
  fullName: APIPlugin.CustomCard.bonesCost
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomCard.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: bonesCost
    path: ../InscryptionAPI/Compatibility/CustomCard.cs
    startLine: 28
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public int? bonesCost
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public bonesCost As Integer?
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomCard.energyCost
  commentId: F:APIPlugin.CustomCard.energyCost
  id: energyCost
  parent: APIPlugin.CustomCard
  langs:
  - csharp
  - vb
  name: energyCost
  nameWithType: CustomCard.energyCost
  fullName: APIPlugin.CustomCard.energyCost
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomCard.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: energyCost
    path: ../InscryptionAPI/Compatibility/CustomCard.cs
    startLine: 29
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public int? energyCost
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public energyCost As Integer?
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomCard.gemsCost
  commentId: F:APIPlugin.CustomCard.gemsCost
  id: gemsCost
  parent: APIPlugin.CustomCard
  langs:
  - csharp
  - vb
  name: gemsCost
  nameWithType: CustomCard.gemsCost
  fullName: APIPlugin.CustomCard.gemsCost
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomCard.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: gemsCost
    path: ../InscryptionAPI/Compatibility/CustomCard.cs
    startLine: 30
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public List<GemType> gemsCost
    return:
      type: List{DiskCardGame.GemType}
    content.vb: Public gemsCost As List(Of GemType)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomCard.specialStatIcon
  commentId: F:APIPlugin.CustomCard.specialStatIcon
  id: specialStatIcon
  parent: APIPlugin.CustomCard
  langs:
  - csharp
  - vb
  name: specialStatIcon
  nameWithType: CustomCard.specialStatIcon
  fullName: APIPlugin.CustomCard.specialStatIcon
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomCard.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: specialStatIcon
    path: ../InscryptionAPI/Compatibility/CustomCard.cs
    startLine: 31
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public SpecialStatIcon? specialStatIcon
    return:
      type: System.Nullable{DiskCardGame.SpecialStatIcon}
    content.vb: Public specialStatIcon As SpecialStatIcon?
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomCard.tribes
  commentId: F:APIPlugin.CustomCard.tribes
  id: tribes
  parent: APIPlugin.CustomCard
  langs:
  - csharp
  - vb
  name: tribes
  nameWithType: CustomCard.tribes
  fullName: APIPlugin.CustomCard.tribes
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomCard.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: tribes
    path: ../InscryptionAPI/Compatibility/CustomCard.cs
    startLine: 32
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public List<Tribe> tribes
    return:
      type: List{DiskCardGame.Tribe}
    content.vb: Public tribes As List(Of Tribe)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomCard.traits
  commentId: F:APIPlugin.CustomCard.traits
  id: traits
  parent: APIPlugin.CustomCard
  langs:
  - csharp
  - vb
  name: traits
  nameWithType: CustomCard.traits
  fullName: APIPlugin.CustomCard.traits
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomCard.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: traits
    path: ../InscryptionAPI/Compatibility/CustomCard.cs
    startLine: 33
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public List<Trait> traits
    return:
      type: List{DiskCardGame.Trait}
    content.vb: Public traits As List(Of Trait)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomCard.specialAbilities
  commentId: F:APIPlugin.CustomCard.specialAbilities
  id: specialAbilities
  parent: APIPlugin.CustomCard
  langs:
  - csharp
  - vb
  name: specialAbilities
  nameWithType: CustomCard.specialAbilities
  fullName: APIPlugin.CustomCard.specialAbilities
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomCard.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: specialAbilities
    path: ../InscryptionAPI/Compatibility/CustomCard.cs
    startLine: 34
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public List<SpecialTriggeredAbility> specialAbilities
    return:
      type: List{DiskCardGame.SpecialTriggeredAbility}
    content.vb: Public specialAbilities As List(Of SpecialTriggeredAbility)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomCard.abilities
  commentId: F:APIPlugin.CustomCard.abilities
  id: abilities
  parent: APIPlugin.CustomCard
  langs:
  - csharp
  - vb
  name: abilities
  nameWithType: CustomCard.abilities
  fullName: APIPlugin.CustomCard.abilities
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomCard.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: abilities
    path: ../InscryptionAPI/Compatibility/CustomCard.cs
    startLine: 35
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public List<Ability> abilities
    return:
      type: List{DiskCardGame.Ability}
    content.vb: Public abilities As List(Of Ability)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomCard.evolveParams
  commentId: F:APIPlugin.CustomCard.evolveParams
  id: evolveParams
  parent: APIPlugin.CustomCard
  langs:
  - csharp
  - vb
  name: evolveParams
  nameWithType: CustomCard.evolveParams
  fullName: APIPlugin.CustomCard.evolveParams
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomCard.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: evolveParams
    path: ../InscryptionAPI/Compatibility/CustomCard.cs
    startLine: 36
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public EvolveParams evolveParams
    return:
      type: DiskCardGame.EvolveParams
    content.vb: Public evolveParams As EvolveParams
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomCard.defaultEvolutionName
  commentId: F:APIPlugin.CustomCard.defaultEvolutionName
  id: defaultEvolutionName
  parent: APIPlugin.CustomCard
  langs:
  - csharp
  - vb
  name: defaultEvolutionName
  nameWithType: CustomCard.defaultEvolutionName
  fullName: APIPlugin.CustomCard.defaultEvolutionName
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomCard.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: defaultEvolutionName
    path: ../InscryptionAPI/Compatibility/CustomCard.cs
    startLine: 37
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public string defaultEvolutionName
    return:
      type: System.String
    content.vb: Public defaultEvolutionName As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomCard.tailParams
  commentId: F:APIPlugin.CustomCard.tailParams
  id: tailParams
  parent: APIPlugin.CustomCard
  langs:
  - csharp
  - vb
  name: tailParams
  nameWithType: CustomCard.tailParams
  fullName: APIPlugin.CustomCard.tailParams
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomCard.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: tailParams
    path: ../InscryptionAPI/Compatibility/CustomCard.cs
    startLine: 38
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public TailParams tailParams
    return:
      type: DiskCardGame.TailParams
    content.vb: Public tailParams As TailParams
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomCard.iceCubeParams
  commentId: F:APIPlugin.CustomCard.iceCubeParams
  id: iceCubeParams
  parent: APIPlugin.CustomCard
  langs:
  - csharp
  - vb
  name: iceCubeParams
  nameWithType: CustomCard.iceCubeParams
  fullName: APIPlugin.CustomCard.iceCubeParams
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomCard.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: iceCubeParams
    path: ../InscryptionAPI/Compatibility/CustomCard.cs
    startLine: 39
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public IceCubeParams iceCubeParams
    return:
      type: DiskCardGame.IceCubeParams
    content.vb: Public iceCubeParams As IceCubeParams
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomCard.flipPortraitForStrafe
  commentId: F:APIPlugin.CustomCard.flipPortraitForStrafe
  id: flipPortraitForStrafe
  parent: APIPlugin.CustomCard
  langs:
  - csharp
  - vb
  name: flipPortraitForStrafe
  nameWithType: CustomCard.flipPortraitForStrafe
  fullName: APIPlugin.CustomCard.flipPortraitForStrafe
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomCard.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: flipPortraitForStrafe
    path: ../InscryptionAPI/Compatibility/CustomCard.cs
    startLine: 40
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public bool? flipPortraitForStrafe
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public flipPortraitForStrafe As Boolean?
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomCard.onePerDeck
  commentId: F:APIPlugin.CustomCard.onePerDeck
  id: onePerDeck
  parent: APIPlugin.CustomCard
  langs:
  - csharp
  - vb
  name: onePerDeck
  nameWithType: CustomCard.onePerDeck
  fullName: APIPlugin.CustomCard.onePerDeck
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomCard.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: onePerDeck
    path: ../InscryptionAPI/Compatibility/CustomCard.cs
    startLine: 41
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public bool? onePerDeck
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public onePerDeck As Boolean?
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomCard.appearanceBehaviour
  commentId: F:APIPlugin.CustomCard.appearanceBehaviour
  id: appearanceBehaviour
  parent: APIPlugin.CustomCard
  langs:
  - csharp
  - vb
  name: appearanceBehaviour
  nameWithType: CustomCard.appearanceBehaviour
  fullName: APIPlugin.CustomCard.appearanceBehaviour
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomCard.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: appearanceBehaviour
    path: ../InscryptionAPI/Compatibility/CustomCard.cs
    startLine: 42
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public List<CardAppearanceBehaviour.Appearance> appearanceBehaviour
    return:
      type: List{DiskCardGame.CardAppearanceBehaviour.Appearance}
    content.vb: Public appearanceBehaviour As List(Of CardAppearanceBehaviour.Appearance)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomCard.tex
  commentId: F:APIPlugin.CustomCard.tex
  id: tex
  parent: APIPlugin.CustomCard
  langs:
  - csharp
  - vb
  name: tex
  nameWithType: CustomCard.tex
  fullName: APIPlugin.CustomCard.tex
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomCard.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: tex
    path: ../InscryptionAPI/Compatibility/CustomCard.cs
    startLine: 43
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public Texture2D tex
    return:
      type: UnityEngine.Texture2D
    content.vb: Public tex As Texture2D
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomCard.altTex
  commentId: F:APIPlugin.CustomCard.altTex
  id: altTex
  parent: APIPlugin.CustomCard
  langs:
  - csharp
  - vb
  name: altTex
  nameWithType: CustomCard.altTex
  fullName: APIPlugin.CustomCard.altTex
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomCard.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: altTex
    path: ../InscryptionAPI/Compatibility/CustomCard.cs
    startLine: 44
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public Texture2D altTex
    return:
      type: UnityEngine.Texture2D
    content.vb: Public altTex As Texture2D
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomCard.titleGraphic
  commentId: F:APIPlugin.CustomCard.titleGraphic
  id: titleGraphic
  parent: APIPlugin.CustomCard
  langs:
  - csharp
  - vb
  name: titleGraphic
  nameWithType: CustomCard.titleGraphic
  fullName: APIPlugin.CustomCard.titleGraphic
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomCard.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: titleGraphic
    path: ../InscryptionAPI/Compatibility/CustomCard.cs
    startLine: 45
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public Texture titleGraphic
    return:
      type: UnityEngine.Texture
    content.vb: Public titleGraphic As Texture
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomCard.pixelTex
  commentId: F:APIPlugin.CustomCard.pixelTex
  id: pixelTex
  parent: APIPlugin.CustomCard
  langs:
  - csharp
  - vb
  name: pixelTex
  nameWithType: CustomCard.pixelTex
  fullName: APIPlugin.CustomCard.pixelTex
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomCard.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: pixelTex
    path: ../InscryptionAPI/Compatibility/CustomCard.cs
    startLine: 46
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public Texture2D pixelTex
    return:
      type: UnityEngine.Texture2D
    content.vb: Public pixelTex As Texture2D
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomCard.emissionTex
  commentId: F:APIPlugin.CustomCard.emissionTex
  id: emissionTex
  parent: APIPlugin.CustomCard
  langs:
  - csharp
  - vb
  name: emissionTex
  nameWithType: CustomCard.emissionTex
  fullName: APIPlugin.CustomCard.emissionTex
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomCard.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: emissionTex
    path: ../InscryptionAPI/Compatibility/CustomCard.cs
    startLine: 47
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public Texture2D emissionTex
    return:
      type: UnityEngine.Texture2D
    content.vb: Public emissionTex As Texture2D
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomCard.animatedPortrait
  commentId: F:APIPlugin.CustomCard.animatedPortrait
  id: animatedPortrait
  parent: APIPlugin.CustomCard
  langs:
  - csharp
  - vb
  name: animatedPortrait
  nameWithType: CustomCard.animatedPortrait
  fullName: APIPlugin.CustomCard.animatedPortrait
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomCard.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: animatedPortrait
    path: ../InscryptionAPI/Compatibility/CustomCard.cs
    startLine: 48
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public GameObject animatedPortrait
    return:
      type: UnityEngine.GameObject
    content.vb: Public animatedPortrait As GameObject
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomCard.decals
  commentId: F:APIPlugin.CustomCard.decals
  id: decals
  parent: APIPlugin.CustomCard
  langs:
  - csharp
  - vb
  name: decals
  nameWithType: CustomCard.decals
  fullName: APIPlugin.CustomCard.decals
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomCard.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: decals
    path: ../InscryptionAPI/Compatibility/CustomCard.cs
    startLine: 49
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public List<Texture> decals
    return:
      type: List{UnityEngine.Texture}
    content.vb: Public decals As List(Of Texture)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.CustomCard.#ctor(System.String,List{APIPlugin.AbilityIdentifier},List{APIPlugin.SpecialAbilityIdentifier},APIPlugin.EvolveIdentifier,APIPlugin.IceCubeIdentifier,APIPlugin.TailIdentifier)
  commentId: M:APIPlugin.CustomCard.#ctor(System.String,List{APIPlugin.AbilityIdentifier},List{APIPlugin.SpecialAbilityIdentifier},APIPlugin.EvolveIdentifier,APIPlugin.IceCubeIdentifier,APIPlugin.TailIdentifier)
  id: '#ctor(System.String,List{APIPlugin.AbilityIdentifier},List{APIPlugin.SpecialAbilityIdentifier},APIPlugin.EvolveIdentifier,APIPlugin.IceCubeIdentifier,APIPlugin.TailIdentifier)'
  parent: APIPlugin.CustomCard
  langs:
  - csharp
  - vb
  name: CustomCard(String, List<AbilityIdentifier>, List<SpecialAbilityIdentifier>, EvolveIdentifier, IceCubeIdentifier, TailIdentifier)
  nameWithType: CustomCard.CustomCard(String, List<AbilityIdentifier>, List<SpecialAbilityIdentifier>, EvolveIdentifier, IceCubeIdentifier, TailIdentifier)
  fullName: APIPlugin.CustomCard.CustomCard(System.String, List<APIPlugin.AbilityIdentifier>, List<APIPlugin.SpecialAbilityIdentifier>, APIPlugin.EvolveIdentifier, APIPlugin.IceCubeIdentifier, APIPlugin.TailIdentifier)
  type: Constructor
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomCard.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: .ctor
    path: ../InscryptionAPI/Compatibility/CustomCard.cs
    startLine: 57
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public CustomCard(string name, List<AbilityIdentifier> abilityIdParam = null, List<SpecialAbilityIdentifier> specialAbilityIdParam = null, EvolveIdentifier evolveId = null, IceCubeIdentifier iceCubeId = null, TailIdentifier tailId = null)
    parameters:
    - id: name
      type: System.String
    - id: abilityIdParam
      type: List{APIPlugin.AbilityIdentifier}
    - id: specialAbilityIdParam
      type: List{APIPlugin.SpecialAbilityIdentifier}
    - id: evolveId
      type: APIPlugin.EvolveIdentifier
    - id: iceCubeId
      type: APIPlugin.IceCubeIdentifier
    - id: tailId
      type: APIPlugin.TailIdentifier
    content.vb: Public Sub New(name As String, abilityIdParam As List(Of AbilityIdentifier) = Nothing, specialAbilityIdParam As List(Of SpecialAbilityIdentifier) = Nothing, evolveId As EvolveIdentifier = Nothing, iceCubeId As IceCubeIdentifier = Nothing, tailId As TailIdentifier = Nothing)
  overload: APIPlugin.CustomCard.#ctor*
  nameWithType.vb: CustomCard.CustomCard(String, List(Of AbilityIdentifier), List(Of SpecialAbilityIdentifier), EvolveIdentifier, IceCubeIdentifier, TailIdentifier)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: APIPlugin.CustomCard.CustomCard(System.String, List(Of APIPlugin.AbilityIdentifier), List(Of APIPlugin.SpecialAbilityIdentifier), APIPlugin.EvolveIdentifier, APIPlugin.IceCubeIdentifier, APIPlugin.TailIdentifier)
  name.vb: CustomCard(String, List(Of AbilityIdentifier), List(Of SpecialAbilityIdentifier), EvolveIdentifier, IceCubeIdentifier, TailIdentifier)
- uid: APIPlugin.CustomCard.AdjustCard(DiskCardGame.CardInfo,List{DiskCardGame.CardInfo})
  commentId: M:APIPlugin.CustomCard.AdjustCard(DiskCardGame.CardInfo,List{DiskCardGame.CardInfo})
  id: AdjustCard(DiskCardGame.CardInfo,List{DiskCardGame.CardInfo})
  parent: APIPlugin.CustomCard
  langs:
  - csharp
  - vb
  name: AdjustCard(CardInfo, List<CardInfo>)
  nameWithType: CustomCard.AdjustCard(CardInfo, List<CardInfo>)
  fullName: APIPlugin.CustomCard.AdjustCard(DiskCardGame.CardInfo, List<DiskCardGame.CardInfo>)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Compatibility/CustomCard.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: AdjustCard
    path: ../InscryptionAPI/Compatibility/CustomCard.cs
    startLine: 83
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public CardInfo AdjustCard(CardInfo card, List<CardInfo> cardsToSearch)
    parameters:
    - id: card
      type: DiskCardGame.CardInfo
    - id: cardsToSearch
      type: List{DiskCardGame.CardInfo}
    return:
      type: DiskCardGame.CardInfo
    content.vb: Public Function AdjustCard(card As CardInfo, cardsToSearch As List(Of CardInfo)) As CardInfo
  overload: APIPlugin.CustomCard.AdjustCard*
  nameWithType.vb: CustomCard.AdjustCard(CardInfo, List(Of CardInfo))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: APIPlugin.CustomCard.AdjustCard(DiskCardGame.CardInfo, List(Of DiskCardGame.CardInfo))
  name.vb: AdjustCard(CardInfo, List(Of CardInfo))
references:
- uid: APIPlugin
  commentId: N:APIPlugin
  name: APIPlugin
  nameWithType: APIPlugin
  fullName: APIPlugin
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: List{APIPlugin.CustomCard}
  commentId: '!:List{APIPlugin.CustomCard}'
  definition: List`1
  name: List<CustomCard>
  nameWithType: List<CustomCard>
  fullName: List<APIPlugin.CustomCard>
  nameWithType.vb: List(Of CustomCard)
  fullName.vb: List(Of APIPlugin.CustomCard)
  name.vb: List(Of CustomCard)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: APIPlugin.CustomCard
    name: CustomCard
    nameWithType: CustomCard
    fullName: APIPlugin.CustomCard
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: APIPlugin.CustomCard
    name: CustomCard
    nameWithType: CustomCard
    fullName: APIPlugin.CustomCard
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Dictionary{System.Int32,List{APIPlugin.AbilityIdentifier}}
  commentId: '!:Dictionary{System.Int32,List{APIPlugin.AbilityIdentifier}}'
  definition: Dictionary`2
  name: Dictionary<Int32, List<AbilityIdentifier>>
  nameWithType: Dictionary<Int32, List<AbilityIdentifier>>
  fullName: Dictionary<System.Int32, List<APIPlugin.AbilityIdentifier>>
  nameWithType.vb: Dictionary(Of Int32, List(Of AbilityIdentifier))
  fullName.vb: Dictionary(Of System.Int32, List(Of APIPlugin.AbilityIdentifier))
  name.vb: Dictionary(Of Int32, List(Of AbilityIdentifier))
  spec.csharp:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: APIPlugin.AbilityIdentifier
    name: AbilityIdentifier
    nameWithType: AbilityIdentifier
    fullName: APIPlugin.AbilityIdentifier
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: APIPlugin.AbilityIdentifier
    name: AbilityIdentifier
    nameWithType: AbilityIdentifier
    fullName: APIPlugin.AbilityIdentifier
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Dictionary`2
  isExternal: true
  name: Dictionary<, >
  nameWithType: Dictionary<, >
  fullName: Dictionary<, >
  nameWithType.vb: Dictionary(Of , )
  fullName.vb: Dictionary(Of , )
  name.vb: Dictionary(Of , )
  spec.csharp:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Dictionary{System.Int32,List{APIPlugin.SpecialAbilityIdentifier}}
  commentId: '!:Dictionary{System.Int32,List{APIPlugin.SpecialAbilityIdentifier}}'
  definition: Dictionary`2
  name: Dictionary<Int32, List<SpecialAbilityIdentifier>>
  nameWithType: Dictionary<Int32, List<SpecialAbilityIdentifier>>
  fullName: Dictionary<System.Int32, List<APIPlugin.SpecialAbilityIdentifier>>
  nameWithType.vb: Dictionary(Of Int32, List(Of SpecialAbilityIdentifier))
  fullName.vb: Dictionary(Of System.Int32, List(Of APIPlugin.SpecialAbilityIdentifier))
  name.vb: Dictionary(Of Int32, List(Of SpecialAbilityIdentifier))
  spec.csharp:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: APIPlugin.SpecialAbilityIdentifier
    name: SpecialAbilityIdentifier
    nameWithType: SpecialAbilityIdentifier
    fullName: APIPlugin.SpecialAbilityIdentifier
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: APIPlugin.SpecialAbilityIdentifier
    name: SpecialAbilityIdentifier
    nameWithType: SpecialAbilityIdentifier
    fullName: APIPlugin.SpecialAbilityIdentifier
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Dictionary{System.Int32,APIPlugin.EvolveIdentifier}
  commentId: '!:Dictionary{System.Int32,APIPlugin.EvolveIdentifier}'
  definition: Dictionary`2
  name: Dictionary<Int32, EvolveIdentifier>
  nameWithType: Dictionary<Int32, EvolveIdentifier>
  fullName: Dictionary<System.Int32, APIPlugin.EvolveIdentifier>
  nameWithType.vb: Dictionary(Of Int32, EvolveIdentifier)
  fullName.vb: Dictionary(Of System.Int32, APIPlugin.EvolveIdentifier)
  name.vb: Dictionary(Of Int32, EvolveIdentifier)
  spec.csharp:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: APIPlugin.EvolveIdentifier
    name: EvolveIdentifier
    nameWithType: EvolveIdentifier
    fullName: APIPlugin.EvolveIdentifier
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: APIPlugin.EvolveIdentifier
    name: EvolveIdentifier
    nameWithType: EvolveIdentifier
    fullName: APIPlugin.EvolveIdentifier
  - name: )
    nameWithType: )
    fullName: )
- uid: Dictionary{System.Int32,APIPlugin.IceCubeIdentifier}
  commentId: '!:Dictionary{System.Int32,APIPlugin.IceCubeIdentifier}'
  definition: Dictionary`2
  name: Dictionary<Int32, IceCubeIdentifier>
  nameWithType: Dictionary<Int32, IceCubeIdentifier>
  fullName: Dictionary<System.Int32, APIPlugin.IceCubeIdentifier>
  nameWithType.vb: Dictionary(Of Int32, IceCubeIdentifier)
  fullName.vb: Dictionary(Of System.Int32, APIPlugin.IceCubeIdentifier)
  name.vb: Dictionary(Of Int32, IceCubeIdentifier)
  spec.csharp:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: APIPlugin.IceCubeIdentifier
    name: IceCubeIdentifier
    nameWithType: IceCubeIdentifier
    fullName: APIPlugin.IceCubeIdentifier
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: APIPlugin.IceCubeIdentifier
    name: IceCubeIdentifier
    nameWithType: IceCubeIdentifier
    fullName: APIPlugin.IceCubeIdentifier
  - name: )
    nameWithType: )
    fullName: )
- uid: Dictionary{System.Int32,APIPlugin.TailIdentifier}
  commentId: '!:Dictionary{System.Int32,APIPlugin.TailIdentifier}'
  definition: Dictionary`2
  name: Dictionary<Int32, TailIdentifier>
  nameWithType: Dictionary<Int32, TailIdentifier>
  fullName: Dictionary<System.Int32, APIPlugin.TailIdentifier>
  nameWithType.vb: Dictionary(Of Int32, TailIdentifier)
  fullName.vb: Dictionary(Of System.Int32, APIPlugin.TailIdentifier)
  name.vb: Dictionary(Of Int32, TailIdentifier)
  spec.csharp:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: APIPlugin.TailIdentifier
    name: TailIdentifier
    nameWithType: TailIdentifier
    fullName: APIPlugin.TailIdentifier
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: APIPlugin.TailIdentifier
    name: TailIdentifier
    nameWithType: TailIdentifier
    fullName: APIPlugin.TailIdentifier
  - name: )
    nameWithType: )
    fullName: )
- uid: Dictionary{System.String,UnityEngine.Sprite}
  commentId: '!:Dictionary{System.String,UnityEngine.Sprite}'
  definition: Dictionary`2
  name: Dictionary<String, Sprite>
  nameWithType: Dictionary<String, Sprite>
  fullName: Dictionary<System.String, UnityEngine.Sprite>
  nameWithType.vb: Dictionary(Of String, Sprite)
  fullName.vb: Dictionary(Of System.String, UnityEngine.Sprite)
  name.vb: Dictionary(Of String, Sprite)
  spec.csharp:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Sprite
    name: Sprite
    nameWithType: Sprite
    fullName: UnityEngine.Sprite
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Sprite
    name: Sprite
    nameWithType: Sprite
    fullName: UnityEngine.Sprite
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: List{DiskCardGame.CardMetaCategory}
  commentId: '!:List{DiskCardGame.CardMetaCategory}'
  definition: List`1
  name: List<CardMetaCategory>
  nameWithType: List<CardMetaCategory>
  fullName: List<DiskCardGame.CardMetaCategory>
  nameWithType.vb: List(Of CardMetaCategory)
  fullName.vb: List(Of DiskCardGame.CardMetaCategory)
  name.vb: List(Of CardMetaCategory)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DiskCardGame.CardMetaCategory
    name: CardMetaCategory
    nameWithType: CardMetaCategory
    fullName: DiskCardGame.CardMetaCategory
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DiskCardGame.CardMetaCategory
    name: CardMetaCategory
    nameWithType: CardMetaCategory
    fullName: DiskCardGame.CardMetaCategory
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{DiskCardGame.CardComplexity}
  commentId: T:System.Nullable{DiskCardGame.CardComplexity}
  parent: System
  definition: System.Nullable`1
  name: Nullable<CardComplexity>
  nameWithType: Nullable<CardComplexity>
  fullName: System.Nullable<DiskCardGame.CardComplexity>
  nameWithType.vb: Nullable(Of CardComplexity)
  fullName.vb: System.Nullable(Of DiskCardGame.CardComplexity)
  name.vb: Nullable(Of CardComplexity)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DiskCardGame.CardComplexity
    name: CardComplexity
    nameWithType: CardComplexity
    fullName: DiskCardGame.CardComplexity
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DiskCardGame.CardComplexity
    name: CardComplexity
    nameWithType: CardComplexity
    fullName: DiskCardGame.CardComplexity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{CardTemple}
  commentId: T:System.Nullable{CardTemple}
  parent: System
  definition: System.Nullable`1
  name: Nullable<CardTemple>
  nameWithType: Nullable<CardTemple>
  fullName: System.Nullable<CardTemple>
  nameWithType.vb: Nullable(Of CardTemple)
  fullName.vb: System.Nullable(Of CardTemple)
  name.vb: Nullable(Of CardTemple)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CardTemple
    name: CardTemple
    nameWithType: CardTemple
    fullName: CardTemple
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CardTemple
    name: CardTemple
    nameWithType: CardTemple
    fullName: CardTemple
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: List{DiskCardGame.GemType}
  commentId: '!:List{DiskCardGame.GemType}'
  definition: List`1
  name: List<GemType>
  nameWithType: List<GemType>
  fullName: List<DiskCardGame.GemType>
  nameWithType.vb: List(Of GemType)
  fullName.vb: List(Of DiskCardGame.GemType)
  name.vb: List(Of GemType)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DiskCardGame.GemType
    name: GemType
    nameWithType: GemType
    fullName: DiskCardGame.GemType
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DiskCardGame.GemType
    name: GemType
    nameWithType: GemType
    fullName: DiskCardGame.GemType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{DiskCardGame.SpecialStatIcon}
  commentId: T:System.Nullable{DiskCardGame.SpecialStatIcon}
  parent: System
  definition: System.Nullable`1
  name: Nullable<SpecialStatIcon>
  nameWithType: Nullable<SpecialStatIcon>
  fullName: System.Nullable<DiskCardGame.SpecialStatIcon>
  nameWithType.vb: Nullable(Of SpecialStatIcon)
  fullName.vb: System.Nullable(Of DiskCardGame.SpecialStatIcon)
  name.vb: Nullable(Of SpecialStatIcon)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DiskCardGame.SpecialStatIcon
    name: SpecialStatIcon
    nameWithType: SpecialStatIcon
    fullName: DiskCardGame.SpecialStatIcon
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DiskCardGame.SpecialStatIcon
    name: SpecialStatIcon
    nameWithType: SpecialStatIcon
    fullName: DiskCardGame.SpecialStatIcon
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: List{DiskCardGame.Tribe}
  commentId: '!:List{DiskCardGame.Tribe}'
  definition: List`1
  name: List<Tribe>
  nameWithType: List<Tribe>
  fullName: List<DiskCardGame.Tribe>
  nameWithType.vb: List(Of Tribe)
  fullName.vb: List(Of DiskCardGame.Tribe)
  name.vb: List(Of Tribe)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DiskCardGame.Tribe
    name: Tribe
    nameWithType: Tribe
    fullName: DiskCardGame.Tribe
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DiskCardGame.Tribe
    name: Tribe
    nameWithType: Tribe
    fullName: DiskCardGame.Tribe
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: List{DiskCardGame.Trait}
  commentId: '!:List{DiskCardGame.Trait}'
  definition: List`1
  name: List<Trait>
  nameWithType: List<Trait>
  fullName: List<DiskCardGame.Trait>
  nameWithType.vb: List(Of Trait)
  fullName.vb: List(Of DiskCardGame.Trait)
  name.vb: List(Of Trait)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DiskCardGame.Trait
    name: Trait
    nameWithType: Trait
    fullName: DiskCardGame.Trait
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DiskCardGame.Trait
    name: Trait
    nameWithType: Trait
    fullName: DiskCardGame.Trait
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: List{DiskCardGame.SpecialTriggeredAbility}
  commentId: '!:List{DiskCardGame.SpecialTriggeredAbility}'
  definition: List`1
  name: List<SpecialTriggeredAbility>
  nameWithType: List<SpecialTriggeredAbility>
  fullName: List<DiskCardGame.SpecialTriggeredAbility>
  nameWithType.vb: List(Of SpecialTriggeredAbility)
  fullName.vb: List(Of DiskCardGame.SpecialTriggeredAbility)
  name.vb: List(Of SpecialTriggeredAbility)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DiskCardGame.SpecialTriggeredAbility
    name: SpecialTriggeredAbility
    nameWithType: SpecialTriggeredAbility
    fullName: DiskCardGame.SpecialTriggeredAbility
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DiskCardGame.SpecialTriggeredAbility
    name: SpecialTriggeredAbility
    nameWithType: SpecialTriggeredAbility
    fullName: DiskCardGame.SpecialTriggeredAbility
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: List{DiskCardGame.Ability}
  commentId: '!:List{DiskCardGame.Ability}'
  definition: List`1
  name: List<Ability>
  nameWithType: List<Ability>
  fullName: List<DiskCardGame.Ability>
  nameWithType.vb: List(Of Ability)
  fullName.vb: List(Of DiskCardGame.Ability)
  name.vb: List(Of Ability)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DiskCardGame.Ability
    name: Ability
    nameWithType: Ability
    fullName: DiskCardGame.Ability
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DiskCardGame.Ability
    name: Ability
    nameWithType: Ability
    fullName: DiskCardGame.Ability
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DiskCardGame.EvolveParams
  commentId: T:DiskCardGame.EvolveParams
  parent: DiskCardGame
  isExternal: true
  name: EvolveParams
  nameWithType: EvolveParams
  fullName: DiskCardGame.EvolveParams
- uid: DiskCardGame
  commentId: N:DiskCardGame
  isExternal: true
  name: DiskCardGame
  nameWithType: DiskCardGame
  fullName: DiskCardGame
- uid: DiskCardGame.TailParams
  commentId: T:DiskCardGame.TailParams
  parent: DiskCardGame
  isExternal: true
  name: TailParams
  nameWithType: TailParams
  fullName: DiskCardGame.TailParams
- uid: DiskCardGame.IceCubeParams
  commentId: T:DiskCardGame.IceCubeParams
  parent: DiskCardGame
  isExternal: true
  name: IceCubeParams
  nameWithType: IceCubeParams
  fullName: DiskCardGame.IceCubeParams
- uid: List{DiskCardGame.CardAppearanceBehaviour.Appearance}
  commentId: '!:List{DiskCardGame.CardAppearanceBehaviour.Appearance}'
  definition: List`1
  name: List<CardAppearanceBehaviour.Appearance>
  nameWithType: List<CardAppearanceBehaviour.Appearance>
  fullName: List<DiskCardGame.CardAppearanceBehaviour.Appearance>
  nameWithType.vb: List(Of CardAppearanceBehaviour.Appearance)
  fullName.vb: List(Of DiskCardGame.CardAppearanceBehaviour.Appearance)
  name.vb: List(Of CardAppearanceBehaviour.Appearance)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DiskCardGame.CardAppearanceBehaviour.Appearance
    name: CardAppearanceBehaviour.Appearance
    nameWithType: CardAppearanceBehaviour.Appearance
    fullName: DiskCardGame.CardAppearanceBehaviour.Appearance
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DiskCardGame.CardAppearanceBehaviour.Appearance
    name: CardAppearanceBehaviour.Appearance
    nameWithType: CardAppearanceBehaviour.Appearance
    fullName: DiskCardGame.CardAppearanceBehaviour.Appearance
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Texture2D
  commentId: T:UnityEngine.Texture2D
  parent: UnityEngine
  isExternal: true
  name: Texture2D
  nameWithType: Texture2D
  fullName: UnityEngine.Texture2D
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: UnityEngine.Texture
  commentId: T:UnityEngine.Texture
  parent: UnityEngine
  isExternal: true
  name: Texture
  nameWithType: Texture
  fullName: UnityEngine.Texture
- uid: UnityEngine.GameObject
  commentId: T:UnityEngine.GameObject
  parent: UnityEngine
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
- uid: List{UnityEngine.Texture}
  commentId: '!:List{UnityEngine.Texture}'
  definition: List`1
  name: List<Texture>
  nameWithType: List<Texture>
  fullName: List<UnityEngine.Texture>
  nameWithType.vb: List(Of Texture)
  fullName.vb: List(Of UnityEngine.Texture)
  name.vb: List(Of Texture)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: UnityEngine.Texture
    name: Texture
    nameWithType: Texture
    fullName: UnityEngine.Texture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: UnityEngine.Texture
    name: Texture
    nameWithType: Texture
    fullName: UnityEngine.Texture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: APIPlugin.CustomCard.#ctor*
  commentId: Overload:APIPlugin.CustomCard.#ctor
  name: CustomCard
  nameWithType: CustomCard.CustomCard
  fullName: APIPlugin.CustomCard.CustomCard
- uid: List{APIPlugin.AbilityIdentifier}
  commentId: '!:List{APIPlugin.AbilityIdentifier}'
  definition: List`1
  name: List<AbilityIdentifier>
  nameWithType: List<AbilityIdentifier>
  fullName: List<APIPlugin.AbilityIdentifier>
  nameWithType.vb: List(Of AbilityIdentifier)
  fullName.vb: List(Of APIPlugin.AbilityIdentifier)
  name.vb: List(Of AbilityIdentifier)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: APIPlugin.AbilityIdentifier
    name: AbilityIdentifier
    nameWithType: AbilityIdentifier
    fullName: APIPlugin.AbilityIdentifier
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: APIPlugin.AbilityIdentifier
    name: AbilityIdentifier
    nameWithType: AbilityIdentifier
    fullName: APIPlugin.AbilityIdentifier
  - name: )
    nameWithType: )
    fullName: )
- uid: List{APIPlugin.SpecialAbilityIdentifier}
  commentId: '!:List{APIPlugin.SpecialAbilityIdentifier}'
  definition: List`1
  name: List<SpecialAbilityIdentifier>
  nameWithType: List<SpecialAbilityIdentifier>
  fullName: List<APIPlugin.SpecialAbilityIdentifier>
  nameWithType.vb: List(Of SpecialAbilityIdentifier)
  fullName.vb: List(Of APIPlugin.SpecialAbilityIdentifier)
  name.vb: List(Of SpecialAbilityIdentifier)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: APIPlugin.SpecialAbilityIdentifier
    name: SpecialAbilityIdentifier
    nameWithType: SpecialAbilityIdentifier
    fullName: APIPlugin.SpecialAbilityIdentifier
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: APIPlugin.SpecialAbilityIdentifier
    name: SpecialAbilityIdentifier
    nameWithType: SpecialAbilityIdentifier
    fullName: APIPlugin.SpecialAbilityIdentifier
  - name: )
    nameWithType: )
    fullName: )
- uid: APIPlugin.EvolveIdentifier
  commentId: T:APIPlugin.EvolveIdentifier
  parent: APIPlugin
  name: EvolveIdentifier
  nameWithType: EvolveIdentifier
  fullName: APIPlugin.EvolveIdentifier
- uid: APIPlugin.IceCubeIdentifier
  commentId: T:APIPlugin.IceCubeIdentifier
  parent: APIPlugin
  name: IceCubeIdentifier
  nameWithType: IceCubeIdentifier
  fullName: APIPlugin.IceCubeIdentifier
- uid: APIPlugin.TailIdentifier
  commentId: T:APIPlugin.TailIdentifier
  parent: APIPlugin
  name: TailIdentifier
  nameWithType: TailIdentifier
  fullName: APIPlugin.TailIdentifier
- uid: APIPlugin.CustomCard.AdjustCard*
  commentId: Overload:APIPlugin.CustomCard.AdjustCard
  name: AdjustCard
  nameWithType: CustomCard.AdjustCard
  fullName: APIPlugin.CustomCard.AdjustCard
- uid: DiskCardGame.CardInfo
  commentId: T:DiskCardGame.CardInfo
  parent: DiskCardGame
  isExternal: true
  name: CardInfo
  nameWithType: CardInfo
  fullName: DiskCardGame.CardInfo
- uid: List{DiskCardGame.CardInfo}
  commentId: '!:List{DiskCardGame.CardInfo}'
  definition: List`1
  name: List<CardInfo>
  nameWithType: List<CardInfo>
  fullName: List<DiskCardGame.CardInfo>
  nameWithType.vb: List(Of CardInfo)
  fullName.vb: List(Of DiskCardGame.CardInfo)
  name.vb: List(Of CardInfo)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DiskCardGame.CardInfo
    name: CardInfo
    nameWithType: CardInfo
    fullName: DiskCardGame.CardInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DiskCardGame.CardInfo
    name: CardInfo
    nameWithType: CardInfo
    fullName: DiskCardGame.CardInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
