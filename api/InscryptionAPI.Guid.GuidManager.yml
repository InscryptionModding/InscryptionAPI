### YamlMime:ManagedReference
items:
- uid: InscryptionAPI.Guid.GuidManager
  commentId: T:InscryptionAPI.Guid.GuidManager
  id: GuidManager
  parent: InscryptionAPI.Guid
  children:
  - InscryptionAPI.Guid.GuidManager.GetEnumType(System.Int32)
  - InscryptionAPI.Guid.GuidManager.GetEnumValue``1(System.String,System.String)
  - InscryptionAPI.Guid.GuidManager.GetFullyQualifiedName(System.String,System.String)
  - InscryptionAPI.Guid.GuidManager.GetValues``1
  - InscryptionAPI.Guid.GuidManager.MAX_DATA
  - InscryptionAPI.Guid.GuidManager.START_INDEX
  langs:
  - csharp
  - vb
  name: GuidManager
  nameWithType: GuidManager
  fullName: InscryptionAPI.Guid.GuidManager
  type: Class
  source:
    remote:
      path: InscryptionAPI/Guid/GuidManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: GuidManager
    path: ../InscryptionAPI/Guid/GuidManager.cs
    startLine: 4
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Guid
  syntax:
    content: public static class GuidManager
    content.vb: Public Module GuidManager
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: InscryptionAPI.Guid.GuidManager.GetFullyQualifiedName(System.String,System.String)
  commentId: M:InscryptionAPI.Guid.GuidManager.GetFullyQualifiedName(System.String,System.String)
  id: GetFullyQualifiedName(System.String,System.String)
  parent: InscryptionAPI.Guid.GuidManager
  langs:
  - csharp
  - vb
  name: GetFullyQualifiedName(String, String)
  nameWithType: GuidManager.GetFullyQualifiedName(String, String)
  fullName: InscryptionAPI.Guid.GuidManager.GetFullyQualifiedName(System.String, System.String)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Guid/GuidManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: GetFullyQualifiedName
    path: ../InscryptionAPI/Guid/GuidManager.cs
    startLine: 6
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Guid
  syntax:
    content: public static string GetFullyQualifiedName(string guid, string value)
    parameters:
    - id: guid
      type: System.String
    - id: value
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function GetFullyQualifiedName(guid As String, value As String) As String
  overload: InscryptionAPI.Guid.GuidManager.GetFullyQualifiedName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Guid.GuidManager.START_INDEX
  commentId: F:InscryptionAPI.Guid.GuidManager.START_INDEX
  id: START_INDEX
  parent: InscryptionAPI.Guid.GuidManager
  langs:
  - csharp
  - vb
  name: START_INDEX
  nameWithType: GuidManager.START_INDEX
  fullName: InscryptionAPI.Guid.GuidManager.START_INDEX
  type: Field
  source:
    remote:
      path: InscryptionAPI/Guid/GuidManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: START_INDEX
    path: ../InscryptionAPI/Guid/GuidManager.cs
    startLine: 15
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Guid
  syntax:
    content: public const int START_INDEX = 1000
    return:
      type: System.Int32
    content.vb: Public Const START_INDEX As Integer = 1000
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: InscryptionAPI.Guid.GuidManager.MAX_DATA
  commentId: F:InscryptionAPI.Guid.GuidManager.MAX_DATA
  id: MAX_DATA
  parent: InscryptionAPI.Guid.GuidManager
  langs:
  - csharp
  - vb
  name: MAX_DATA
  nameWithType: GuidManager.MAX_DATA
  fullName: InscryptionAPI.Guid.GuidManager.MAX_DATA
  type: Field
  source:
    remote:
      path: InscryptionAPI/Guid/GuidManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: MAX_DATA
    path: ../InscryptionAPI/Guid/GuidManager.cs
    startLine: 17
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Guid
  syntax:
    content: public const string MAX_DATA = "maximumStoredValueForEnum"
    return:
      type: System.String
    content.vb: Public Const MAX_DATA As String = "maximumStoredValueForEnum"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: InscryptionAPI.Guid.GuidManager.GetEnumType(System.Int32)
  commentId: M:InscryptionAPI.Guid.GuidManager.GetEnumType(System.Int32)
  id: GetEnumType(System.Int32)
  parent: InscryptionAPI.Guid.GuidManager
  langs:
  - csharp
  - vb
  name: GetEnumType(Int32)
  nameWithType: GuidManager.GetEnumType(Int32)
  fullName: InscryptionAPI.Guid.GuidManager.GetEnumType(System.Int32)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Guid/GuidManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: GetEnumType
    path: ../InscryptionAPI/Guid/GuidManager.cs
    startLine: 19
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Guid
  syntax:
    content: public static Type GetEnumType(int number)
    parameters:
    - id: number
      type: System.Int32
    return:
      type: Type
    content.vb: Public Shared Function GetEnumType(number As Integer) As Type
  overload: InscryptionAPI.Guid.GuidManager.GetEnumType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InscryptionAPI.Guid.GuidManager.GetValues``1
  commentId: M:InscryptionAPI.Guid.GuidManager.GetValues``1
  id: GetValues``1
  parent: InscryptionAPI.Guid.GuidManager
  langs:
  - csharp
  - vb
  name: GetValues<T>()
  nameWithType: GuidManager.GetValues<T>()
  fullName: InscryptionAPI.Guid.GuidManager.GetValues<T>()
  type: Method
  source:
    remote:
      path: InscryptionAPI/Guid/GuidManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: GetValues
    path: ../InscryptionAPI/Guid/GuidManager.cs
    startLine: 25
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Guid
  syntax:
    content: >-
      public static List<T> GetValues<T>()
          where T : struct, Enum
    typeParameters:
    - id: T
    return:
      type: List{{T}}
    content.vb: Public Shared Function GetValues(Of T As {Structure,  Enum}) As List(Of T)
  overload: InscryptionAPI.Guid.GuidManager.GetValues*
  nameWithType.vb: GuidManager.GetValues(Of T)()
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionAPI.Guid.GuidManager.GetValues(Of T)()
  name.vb: GetValues(Of T)()
- uid: InscryptionAPI.Guid.GuidManager.GetEnumValue``1(System.String,System.String)
  commentId: M:InscryptionAPI.Guid.GuidManager.GetEnumValue``1(System.String,System.String)
  id: GetEnumValue``1(System.String,System.String)
  parent: InscryptionAPI.Guid.GuidManager
  langs:
  - csharp
  - vb
  name: GetEnumValue<T>(String, String)
  nameWithType: GuidManager.GetEnumValue<T>(String, String)
  fullName: InscryptionAPI.Guid.GuidManager.GetEnumValue<T>(System.String, System.String)
  type: Method
  source:
    remote:
      path: InscryptionAPI/Guid/GuidManager.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: GetEnumValue
    path: ../InscryptionAPI/Guid/GuidManager.cs
    startLine: 45
  assemblies:
  - InscryptionAPI
  namespace: InscryptionAPI.Guid
  syntax:
    content: >-
      public static T GetEnumValue<T>(string guid, string value)
          where T : struct, Enum
    parameters:
    - id: guid
      type: System.String
    - id: value
      type: System.String
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function GetEnumValue(Of T As {Structure,  Enum})(guid As String, value As String) As T
  overload: InscryptionAPI.Guid.GuidManager.GetEnumValue*
  nameWithType.vb: GuidManager.GetEnumValue(Of T)(String, String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InscryptionAPI.Guid.GuidManager.GetEnumValue(Of T)(System.String, System.String)
  name.vb: GetEnumValue(Of T)(String, String)
references:
- uid: InscryptionAPI.Guid
  commentId: N:InscryptionAPI.Guid
  name: InscryptionAPI.Guid
  nameWithType: InscryptionAPI.Guid
  fullName: InscryptionAPI.Guid
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: InscryptionAPI.Guid.GuidManager.GetFullyQualifiedName*
  commentId: Overload:InscryptionAPI.Guid.GuidManager.GetFullyQualifiedName
  name: GetFullyQualifiedName
  nameWithType: GuidManager.GetFullyQualifiedName
  fullName: InscryptionAPI.Guid.GuidManager.GetFullyQualifiedName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: InscryptionAPI.Guid.GuidManager.GetEnumType*
  commentId: Overload:InscryptionAPI.Guid.GuidManager.GetEnumType
  name: GetEnumType
  nameWithType: GuidManager.GetEnumType
  fullName: InscryptionAPI.Guid.GuidManager.GetEnumType
- uid: Type
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: Type
- uid: InscryptionAPI.Guid.GuidManager.GetValues*
  commentId: Overload:InscryptionAPI.Guid.GuidManager.GetValues
  name: GetValues
  nameWithType: GuidManager.GetValues
  fullName: InscryptionAPI.Guid.GuidManager.GetValues
- uid: List{{T}}
  commentId: '!:List{``0}'
  definition: List`1
  name: List<T>
  nameWithType: List<T>
  fullName: List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: InscryptionAPI.Guid.GuidManager.GetEnumValue*
  commentId: Overload:InscryptionAPI.Guid.GuidManager.GetEnumValue
  name: GetEnumValue
  nameWithType: GuidManager.GetEnumValue
  fullName: InscryptionAPI.Guid.GuidManager.GetEnumValue
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
