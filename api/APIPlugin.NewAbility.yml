### YamlMime:ManagedReference
items:
- uid: APIPlugin.NewAbility
  commentId: T:APIPlugin.NewAbility
  id: NewAbility
  parent: APIPlugin
  children:
  - APIPlugin.NewAbility.#ctor(DiskCardGame.AbilityInfo,Type,UnityEngine.Texture,APIPlugin.AbilityIdentifier)
  - APIPlugin.NewAbility.ability
  - APIPlugin.NewAbility.abilityBehaviour
  - APIPlugin.NewAbility.id
  - APIPlugin.NewAbility.info
  - APIPlugin.NewAbility.tex
  langs:
  - csharp
  - vb
  name: NewAbility
  nameWithType: NewAbility
  fullName: APIPlugin.NewAbility
  type: Class
  source:
    remote:
      path: InscryptionAPI/Compatibility/NewAbility.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: NewAbility
    path: ../InscryptionAPI/Compatibility/NewAbility.cs
    startLine: 7
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public class NewAbility
    content.vb: Public Class NewAbility
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: APIPlugin.NewAbility.ability
  commentId: F:APIPlugin.NewAbility.ability
  id: ability
  parent: APIPlugin.NewAbility
  langs:
  - csharp
  - vb
  name: ability
  nameWithType: NewAbility.ability
  fullName: APIPlugin.NewAbility.ability
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/NewAbility.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: ability
    path: ../InscryptionAPI/Compatibility/NewAbility.cs
    startLine: 10
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public Ability ability
    return:
      type: DiskCardGame.Ability
    content.vb: Public ability As Ability
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.NewAbility.info
  commentId: F:APIPlugin.NewAbility.info
  id: info
  parent: APIPlugin.NewAbility
  langs:
  - csharp
  - vb
  name: info
  nameWithType: NewAbility.info
  fullName: APIPlugin.NewAbility.info
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/NewAbility.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: info
    path: ../InscryptionAPI/Compatibility/NewAbility.cs
    startLine: 11
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public AbilityInfo info
    return:
      type: DiskCardGame.AbilityInfo
    content.vb: Public info As AbilityInfo
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.NewAbility.abilityBehaviour
  commentId: F:APIPlugin.NewAbility.abilityBehaviour
  id: abilityBehaviour
  parent: APIPlugin.NewAbility
  langs:
  - csharp
  - vb
  name: abilityBehaviour
  nameWithType: NewAbility.abilityBehaviour
  fullName: APIPlugin.NewAbility.abilityBehaviour
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/NewAbility.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: abilityBehaviour
    path: ../InscryptionAPI/Compatibility/NewAbility.cs
    startLine: 12
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public Type abilityBehaviour
    return:
      type: Type
    content.vb: Public abilityBehaviour As Type
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.NewAbility.tex
  commentId: F:APIPlugin.NewAbility.tex
  id: tex
  parent: APIPlugin.NewAbility
  langs:
  - csharp
  - vb
  name: tex
  nameWithType: NewAbility.tex
  fullName: APIPlugin.NewAbility.tex
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/NewAbility.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: tex
    path: ../InscryptionAPI/Compatibility/NewAbility.cs
    startLine: 13
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public Texture tex
    return:
      type: UnityEngine.Texture
    content.vb: Public tex As Texture
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.NewAbility.id
  commentId: F:APIPlugin.NewAbility.id
  id: id
  parent: APIPlugin.NewAbility
  langs:
  - csharp
  - vb
  name: id
  nameWithType: NewAbility.id
  fullName: APIPlugin.NewAbility.id
  type: Field
  source:
    remote:
      path: InscryptionAPI/Compatibility/NewAbility.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: id
    path: ../InscryptionAPI/Compatibility/NewAbility.cs
    startLine: 14
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public AbilityIdentifier id
    return:
      type: APIPlugin.AbilityIdentifier
    content.vb: Public id As AbilityIdentifier
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: APIPlugin.NewAbility.#ctor(DiskCardGame.AbilityInfo,Type,UnityEngine.Texture,APIPlugin.AbilityIdentifier)
  commentId: M:APIPlugin.NewAbility.#ctor(DiskCardGame.AbilityInfo,Type,UnityEngine.Texture,APIPlugin.AbilityIdentifier)
  id: '#ctor(DiskCardGame.AbilityInfo,Type,UnityEngine.Texture,APIPlugin.AbilityIdentifier)'
  parent: APIPlugin.NewAbility
  langs:
  - csharp
  - vb
  name: NewAbility(AbilityInfo, Type, Texture, AbilityIdentifier)
  nameWithType: NewAbility.NewAbility(AbilityInfo, Type, Texture, AbilityIdentifier)
  fullName: APIPlugin.NewAbility.NewAbility(DiskCardGame.AbilityInfo, Type, UnityEngine.Texture, APIPlugin.AbilityIdentifier)
  type: Constructor
  source:
    remote:
      path: InscryptionAPI/Compatibility/NewAbility.cs
      branch: patch-7
      repo: https://github.com/xhayper/InscryptionAPI
    id: .ctor
    path: ../InscryptionAPI/Compatibility/NewAbility.cs
    startLine: 16
  assemblies:
  - InscryptionAPI
  namespace: APIPlugin
  syntax:
    content: public NewAbility(AbilityInfo info, Type abilityBehaviour, Texture tex, AbilityIdentifier id = null)
    parameters:
    - id: info
      type: DiskCardGame.AbilityInfo
    - id: abilityBehaviour
      type: Type
    - id: tex
      type: UnityEngine.Texture
    - id: id
      type: APIPlugin.AbilityIdentifier
    content.vb: Public Sub New(info As AbilityInfo, abilityBehaviour As Type, tex As Texture, id As AbilityIdentifier = Nothing)
  overload: APIPlugin.NewAbility.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: APIPlugin
  commentId: N:APIPlugin
  name: APIPlugin
  nameWithType: APIPlugin
  fullName: APIPlugin
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: DiskCardGame.Ability
  commentId: T:DiskCardGame.Ability
  parent: DiskCardGame
  isExternal: true
  name: Ability
  nameWithType: Ability
  fullName: DiskCardGame.Ability
- uid: DiskCardGame
  commentId: N:DiskCardGame
  isExternal: true
  name: DiskCardGame
  nameWithType: DiskCardGame
  fullName: DiskCardGame
- uid: DiskCardGame.AbilityInfo
  commentId: T:DiskCardGame.AbilityInfo
  parent: DiskCardGame
  isExternal: true
  name: AbilityInfo
  nameWithType: AbilityInfo
  fullName: DiskCardGame.AbilityInfo
- uid: Type
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: Type
- uid: UnityEngine.Texture
  commentId: T:UnityEngine.Texture
  parent: UnityEngine
  isExternal: true
  name: Texture
  nameWithType: Texture
  fullName: UnityEngine.Texture
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: APIPlugin.AbilityIdentifier
  commentId: T:APIPlugin.AbilityIdentifier
  parent: APIPlugin
  name: AbilityIdentifier
  nameWithType: AbilityIdentifier
  fullName: APIPlugin.AbilityIdentifier
- uid: APIPlugin.NewAbility.#ctor*
  commentId: Overload:APIPlugin.NewAbility.#ctor
  name: NewAbility
  nameWithType: NewAbility.NewAbility
  fullName: APIPlugin.NewAbility.NewAbility
